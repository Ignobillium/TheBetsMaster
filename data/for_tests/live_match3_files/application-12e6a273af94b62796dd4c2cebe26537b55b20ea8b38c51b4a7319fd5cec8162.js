/*
Unobtrusive JavaScript
https://github.com/rails/rails/blob/master/actionview/app/assets/javascripts
Released under the MIT license
 */

(function() {
  var context = this;

  (function() {
    (function() {
      this.Rails = {
        linkClickSelector: 'a[data-confirm], a[data-method], a[data-remote]:not([disabled]), a[data-disable-with], a[data-disable]',
        buttonClickSelector: {
          selector: 'button[data-remote]:not([form]), button[data-confirm]:not([form])',
          exclude: 'form button'
        },
        inputChangeSelector: 'select[data-remote], input[data-remote], textarea[data-remote]',
        formSubmitSelector: 'form',
        formInputClickSelector: 'form input[type=submit], form input[type=image], form button[type=submit], form button:not([type]), input[type=submit][form], input[type=image][form], button[type=submit][form], button[form]:not([type])',
        formDisableSelector: 'input[data-disable-with]:enabled, button[data-disable-with]:enabled, textarea[data-disable-with]:enabled, input[data-disable]:enabled, button[data-disable]:enabled, textarea[data-disable]:enabled',
        formEnableSelector: 'input[data-disable-with]:disabled, button[data-disable-with]:disabled, textarea[data-disable-with]:disabled, input[data-disable]:disabled, button[data-disable]:disabled, textarea[data-disable]:disabled',
        fileInputSelector: 'input[name][type=file]:not([disabled])',
        linkDisableSelector: 'a[data-disable-with], a[data-disable]',
        buttonDisableSelector: 'button[data-remote][data-disable-with], button[data-remote][data-disable]'
      };

    }).call(this);
  }).call(context);

  var Rails = context.Rails;

  (function() {
    (function() {
      var nonce;

      nonce = null;

      Rails.loadCSPNonce = function() {
        var ref;
        return nonce = (ref = document.querySelector("meta[name=csp-nonce]")) != null ? ref.content : void 0;
      };

      Rails.cspNonce = function() {
        return nonce != null ? nonce : Rails.loadCSPNonce();
      };

    }).call(this);
    (function() {
      var expando, m;

      m = Element.prototype.matches || Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector;

      Rails.matches = function(element, selector) {
        if (selector.exclude != null) {
          return m.call(element, selector.selector) && !m.call(element, selector.exclude);
        } else {
          return m.call(element, selector);
        }
      };

      expando = '_ujsData';

      Rails.getData = function(element, key) {
        var ref;
        return (ref = element[expando]) != null ? ref[key] : void 0;
      };

      Rails.setData = function(element, key, value) {
        if (element[expando] == null) {
          element[expando] = {};
        }
        return element[expando][key] = value;
      };

      Rails.$ = function(selector) {
        return Array.prototype.slice.call(document.querySelectorAll(selector));
      };

    }).call(this);
    (function() {
      var $, csrfParam, csrfToken;

      $ = Rails.$;

      csrfToken = Rails.csrfToken = function() {
        var meta;
        meta = document.querySelector('meta[name=csrf-token]');
        return meta && meta.content;
      };

      csrfParam = Rails.csrfParam = function() {
        var meta;
        meta = document.querySelector('meta[name=csrf-param]');
        return meta && meta.content;
      };

      Rails.CSRFProtection = function(xhr) {
        var token;
        token = csrfToken();
        if (token != null) {
          return xhr.setRequestHeader('X-CSRF-Token', token);
        }
      };

      Rails.refreshCSRFTokens = function() {
        var param, token;
        token = csrfToken();
        param = csrfParam();
        if ((token != null) && (param != null)) {
          return $('form input[name="' + param + '"]').forEach(function(input) {
            return input.value = token;
          });
        }
      };

    }).call(this);
    (function() {
      var CustomEvent, fire, matches, preventDefault;

      matches = Rails.matches;

      CustomEvent = window.CustomEvent;

      if (typeof CustomEvent !== 'function') {
        CustomEvent = function(event, params) {
          var evt;
          evt = document.createEvent('CustomEvent');
          evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);
          return evt;
        };
        CustomEvent.prototype = window.Event.prototype;
        preventDefault = CustomEvent.prototype.preventDefault;
        CustomEvent.prototype.preventDefault = function() {
          var result;
          result = preventDefault.call(this);
          if (this.cancelable && !this.defaultPrevented) {
            Object.defineProperty(this, 'defaultPrevented', {
              get: function() {
                return true;
              }
            });
          }
          return result;
        };
      }

      fire = Rails.fire = function(obj, name, data) {
        var event;
        event = new CustomEvent(name, {
          bubbles: true,
          cancelable: true,
          detail: data
        });
        obj.dispatchEvent(event);
        return !event.defaultPrevented;
      };

      Rails.stopEverything = function(e) {
        fire(e.target, 'ujs:everythingStopped');
        e.preventDefault();
        e.stopPropagation();
        return e.stopImmediatePropagation();
      };

      Rails.delegate = function(element, selector, eventType, handler) {
        return element.addEventListener(eventType, function(e) {
          var target;
          target = e.target;
          while (!(!(target instanceof Element) || matches(target, selector))) {
            target = target.parentNode;
          }
          if (target instanceof Element && handler.call(target, e) === false) {
            e.preventDefault();
            return e.stopPropagation();
          }
        });
      };

    }).call(this);
    (function() {
      var AcceptHeaders, CSRFProtection, createXHR, cspNonce, fire, prepareOptions, processResponse;

      cspNonce = Rails.cspNonce, CSRFProtection = Rails.CSRFProtection, fire = Rails.fire;

      AcceptHeaders = {
        '*': '*/*',
        text: 'text/plain',
        html: 'text/html',
        xml: 'application/xml, text/xml',
        json: 'application/json, text/javascript',
        script: 'text/javascript, application/javascript, application/ecmascript, application/x-ecmascript'
      };

      Rails.ajax = function(options) {
        var xhr;
        options = prepareOptions(options);
        xhr = createXHR(options, function() {
          var ref, response;
          response = processResponse((ref = xhr.response) != null ? ref : xhr.responseText, xhr.getResponseHeader('Content-Type'));
          if (Math.floor(xhr.status / 100) === 2) {
            if (typeof options.success === "function") {
              options.success(response, xhr.statusText, xhr);
            }
          } else {
            if (typeof options.error === "function") {
              options.error(response, xhr.statusText, xhr);
            }
          }
          return typeof options.complete === "function" ? options.complete(xhr, xhr.statusText) : void 0;
        });
        if ((options.beforeSend != null) && !options.beforeSend(xhr, options)) {
          return false;
        }
        if (xhr.readyState === XMLHttpRequest.OPENED) {
          return xhr.send(options.data);
        }
      };

      prepareOptions = function(options) {
        options.url = options.url || location.href;
        options.type = options.type.toUpperCase();
        if (options.type === 'GET' && options.data) {
          if (options.url.indexOf('?') < 0) {
            options.url += '?' + options.data;
          } else {
            options.url += '&' + options.data;
          }
        }
        if (AcceptHeaders[options.dataType] == null) {
          options.dataType = '*';
        }
        options.accept = AcceptHeaders[options.dataType];
        if (options.dataType !== '*') {
          options.accept += ', */*; q=0.01';
        }
        return options;
      };

      createXHR = function(options, done) {
        var xhr;
        xhr = new XMLHttpRequest();
        xhr.open(options.type, options.url, true);
        xhr.setRequestHeader('Accept', options.accept);
        if (typeof options.data === 'string') {
          xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
        }
        if (!options.crossDomain) {
          xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
        }
        CSRFProtection(xhr);
        xhr.withCredentials = !!options.withCredentials;
        xhr.onreadystatechange = function() {
          if (xhr.readyState === XMLHttpRequest.DONE) {
            return done(xhr);
          }
        };
        return xhr;
      };

      processResponse = function(response, type) {
        var parser, script;
        if (typeof response === 'string' && typeof type === 'string') {
          if (type.match(/\bjson\b/)) {
            try {
              response = JSON.parse(response);
            } catch (error) {}
          } else if (type.match(/\b(?:java|ecma)script\b/)) {
            script = document.createElement('script');
            script.setAttribute('nonce', cspNonce());
            script.text = response;
            document.head.appendChild(script).parentNode.removeChild(script);
          } else if (type.match(/\b(xml|html|svg)\b/)) {
            parser = new DOMParser();
            type = type.replace(/;.+/, '');
            try {
              response = parser.parseFromString(response, type);
            } catch (error) {}
          }
        }
        return response;
      };

      Rails.href = function(element) {
        return element.href;
      };

      Rails.isCrossDomain = function(url) {
        var e, originAnchor, urlAnchor;
        originAnchor = document.createElement('a');
        originAnchor.href = location.href;
        urlAnchor = document.createElement('a');
        try {
          urlAnchor.href = url;
          return !(((!urlAnchor.protocol || urlAnchor.protocol === ':') && !urlAnchor.host) || (originAnchor.protocol + '//' + originAnchor.host === urlAnchor.protocol + '//' + urlAnchor.host));
        } catch (error) {
          e = error;
          return true;
        }
      };

    }).call(this);
    (function() {
      var matches, toArray;

      matches = Rails.matches;

      toArray = function(e) {
        return Array.prototype.slice.call(e);
      };

      Rails.serializeElement = function(element, additionalParam) {
        var inputs, params;
        inputs = [element];
        if (matches(element, 'form')) {
          inputs = toArray(element.elements);
        }
        params = [];
        inputs.forEach(function(input) {
          if (!input.name || input.disabled) {
            return;
          }
          if (matches(input, 'select')) {
            return toArray(input.options).forEach(function(option) {
              if (option.selected) {
                return params.push({
                  name: input.name,
                  value: option.value
                });
              }
            });
          } else if (input.checked || ['radio', 'checkbox', 'submit'].indexOf(input.type) === -1) {
            return params.push({
              name: input.name,
              value: input.value
            });
          }
        });
        if (additionalParam) {
          params.push(additionalParam);
        }
        return params.map(function(param) {
          if (param.name != null) {
            return (encodeURIComponent(param.name)) + "=" + (encodeURIComponent(param.value));
          } else {
            return param;
          }
        }).join('&');
      };

      Rails.formElements = function(form, selector) {
        if (matches(form, 'form')) {
          return toArray(form.elements).filter(function(el) {
            return matches(el, selector);
          });
        } else {
          return toArray(form.querySelectorAll(selector));
        }
      };

    }).call(this);
    (function() {
      var allowAction, fire, stopEverything;

      fire = Rails.fire, stopEverything = Rails.stopEverything;

      Rails.handleConfirm = function(e) {
        if (!allowAction(this)) {
          return stopEverything(e);
        }
      };

      allowAction = function(element) {
        var answer, callback, message;
        message = element.getAttribute('data-confirm');
        if (!message) {
          return true;
        }
        answer = false;
        if (fire(element, 'confirm')) {
          try {
            answer = confirm(message);
          } catch (error) {}
          callback = fire(element, 'confirm:complete', [answer]);
        }
        return answer && callback;
      };

    }).call(this);
    (function() {
      var disableFormElement, disableFormElements, disableLinkElement, enableFormElement, enableFormElements, enableLinkElement, formElements, getData, matches, setData, stopEverything;

      matches = Rails.matches, getData = Rails.getData, setData = Rails.setData, stopEverything = Rails.stopEverything, formElements = Rails.formElements;

      Rails.handleDisabledElement = function(e) {
        var element;
        element = this;
        if (element.disabled) {
          return stopEverything(e);
        }
      };

      Rails.enableElement = function(e) {
        var element;
        element = e instanceof Event ? e.target : e;
        if (matches(element, Rails.linkDisableSelector)) {
          return enableLinkElement(element);
        } else if (matches(element, Rails.buttonDisableSelector) || matches(element, Rails.formEnableSelector)) {
          return enableFormElement(element);
        } else if (matches(element, Rails.formSubmitSelector)) {
          return enableFormElements(element);
        }
      };

      Rails.disableElement = function(e) {
        var element;
        element = e instanceof Event ? e.target : e;
        if (matches(element, Rails.linkDisableSelector)) {
          return disableLinkElement(element);
        } else if (matches(element, Rails.buttonDisableSelector) || matches(element, Rails.formDisableSelector)) {
          return disableFormElement(element);
        } else if (matches(element, Rails.formSubmitSelector)) {
          return disableFormElements(element);
        }
      };

      disableLinkElement = function(element) {
        var replacement;
        replacement = element.getAttribute('data-disable-with');
        if (replacement != null) {
          setData(element, 'ujs:enable-with', element.innerHTML);
          element.innerHTML = replacement;
        }
        element.addEventListener('click', stopEverything);
        return setData(element, 'ujs:disabled', true);
      };

      enableLinkElement = function(element) {
        var originalText;
        originalText = getData(element, 'ujs:enable-with');
        if (originalText != null) {
          element.innerHTML = originalText;
          setData(element, 'ujs:enable-with', null);
        }
        element.removeEventListener('click', stopEverything);
        return setData(element, 'ujs:disabled', null);
      };

      disableFormElements = function(form) {
        return formElements(form, Rails.formDisableSelector).forEach(disableFormElement);
      };

      disableFormElement = function(element) {
        var replacement;
        replacement = element.getAttribute('data-disable-with');
        if (replacement != null) {
          if (matches(element, 'button')) {
            setData(element, 'ujs:enable-with', element.innerHTML);
            element.innerHTML = replacement;
          } else {
            setData(element, 'ujs:enable-with', element.value);
            element.value = replacement;
          }
        }
        element.disabled = true;
        return setData(element, 'ujs:disabled', true);
      };

      enableFormElements = function(form) {
        return formElements(form, Rails.formEnableSelector).forEach(enableFormElement);
      };

      enableFormElement = function(element) {
        var originalText;
        originalText = getData(element, 'ujs:enable-with');
        if (originalText != null) {
          if (matches(element, 'button')) {
            element.innerHTML = originalText;
          } else {
            element.value = originalText;
          }
          setData(element, 'ujs:enable-with', null);
        }
        element.disabled = false;
        return setData(element, 'ujs:disabled', null);
      };

    }).call(this);
    (function() {
      var stopEverything;

      stopEverything = Rails.stopEverything;

      Rails.handleMethod = function(e) {
        var csrfParam, csrfToken, form, formContent, href, link, method;
        link = this;
        method = link.getAttribute('data-method');
        if (!method) {
          return;
        }
        href = Rails.href(link);
        csrfToken = Rails.csrfToken();
        csrfParam = Rails.csrfParam();
        form = document.createElement('form');
        formContent = "<input name='_method' value='" + method + "' type='hidden' />";
        if ((csrfParam != null) && (csrfToken != null) && !Rails.isCrossDomain(href)) {
          formContent += "<input name='" + csrfParam + "' value='" + csrfToken + "' type='hidden' />";
        }
        formContent += '<input type="submit" />';
        form.method = 'post';
        form.action = href;
        form.target = link.target;
        form.innerHTML = formContent;
        form.style.display = 'none';
        document.body.appendChild(form);
        form.querySelector('[type="submit"]').click();
        return stopEverything(e);
      };

    }).call(this);
    (function() {
      var ajax, fire, getData, isCrossDomain, isRemote, matches, serializeElement, setData, stopEverything,
        slice = [].slice;

      matches = Rails.matches, getData = Rails.getData, setData = Rails.setData, fire = Rails.fire, stopEverything = Rails.stopEverything, ajax = Rails.ajax, isCrossDomain = Rails.isCrossDomain, serializeElement = Rails.serializeElement;

      isRemote = function(element) {
        var value;
        value = element.getAttribute('data-remote');
        return (value != null) && value !== 'false';
      };

      Rails.handleRemote = function(e) {
        var button, data, dataType, element, method, url, withCredentials;
        element = this;
        if (!isRemote(element)) {
          return true;
        }
        if (!fire(element, 'ajax:before')) {
          fire(element, 'ajax:stopped');
          return false;
        }
        withCredentials = element.getAttribute('data-with-credentials');
        dataType = element.getAttribute('data-type') || 'script';
        if (matches(element, Rails.formSubmitSelector)) {
          button = getData(element, 'ujs:submit-button');
          method = getData(element, 'ujs:submit-button-formmethod') || element.method;
          url = getData(element, 'ujs:submit-button-formaction') || element.getAttribute('action') || location.href;
          if (method.toUpperCase() === 'GET') {
            url = url.replace(/\?.*$/, '');
          }
          if (element.enctype === 'multipart/form-data') {
            data = new FormData(element);
            if (button != null) {
              data.append(button.name, button.value);
            }
          } else {
            data = serializeElement(element, button);
          }
          setData(element, 'ujs:submit-button', null);
          setData(element, 'ujs:submit-button-formmethod', null);
          setData(element, 'ujs:submit-button-formaction', null);
        } else if (matches(element, Rails.buttonClickSelector) || matches(element, Rails.inputChangeSelector)) {
          method = element.getAttribute('data-method');
          url = element.getAttribute('data-url');
          data = serializeElement(element, element.getAttribute('data-params'));
        } else {
          method = element.getAttribute('data-method');
          url = Rails.href(element);
          data = element.getAttribute('data-params');
        }
        ajax({
          type: method || 'GET',
          url: url,
          data: data,
          dataType: dataType,
          beforeSend: function(xhr, options) {
            if (fire(element, 'ajax:beforeSend', [xhr, options])) {
              return fire(element, 'ajax:send', [xhr]);
            } else {
              fire(element, 'ajax:stopped');
              return false;
            }
          },
          success: function() {
            var args;
            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
            return fire(element, 'ajax:success', args);
          },
          error: function() {
            var args;
            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
            return fire(element, 'ajax:error', args);
          },
          complete: function() {
            var args;
            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
            return fire(element, 'ajax:complete', args);
          },
          crossDomain: isCrossDomain(url),
          withCredentials: (withCredentials != null) && withCredentials !== 'false'
        });
        return stopEverything(e);
      };

      Rails.formSubmitButtonClick = function(e) {
        var button, form;
        button = this;
        form = button.form;
        if (!form) {
          return;
        }
        if (button.name) {
          setData(form, 'ujs:submit-button', {
            name: button.name,
            value: button.value
          });
        }
        setData(form, 'ujs:formnovalidate-button', button.formNoValidate);
        setData(form, 'ujs:submit-button-formaction', button.getAttribute('formaction'));
        return setData(form, 'ujs:submit-button-formmethod', button.getAttribute('formmethod'));
      };

      Rails.preventInsignificantClick = function(e) {
        var data, insignificantMetaClick, link, metaClick, method, primaryMouseKey;
        link = this;
        method = (link.getAttribute('data-method') || 'GET').toUpperCase();
        data = link.getAttribute('data-params');
        metaClick = e.metaKey || e.ctrlKey;
        insignificantMetaClick = metaClick && method === 'GET' && !data;
        primaryMouseKey = e.button === 0;
        if (!primaryMouseKey || insignificantMetaClick) {
          return e.stopImmediatePropagation();
        }
      };

    }).call(this);
    (function() {
      var $, CSRFProtection, delegate, disableElement, enableElement, fire, formSubmitButtonClick, getData, handleConfirm, handleDisabledElement, handleMethod, handleRemote, loadCSPNonce, preventInsignificantClick, refreshCSRFTokens;

      fire = Rails.fire, delegate = Rails.delegate, getData = Rails.getData, $ = Rails.$, refreshCSRFTokens = Rails.refreshCSRFTokens, CSRFProtection = Rails.CSRFProtection, loadCSPNonce = Rails.loadCSPNonce, enableElement = Rails.enableElement, disableElement = Rails.disableElement, handleDisabledElement = Rails.handleDisabledElement, handleConfirm = Rails.handleConfirm, preventInsignificantClick = Rails.preventInsignificantClick, handleRemote = Rails.handleRemote, formSubmitButtonClick = Rails.formSubmitButtonClick, handleMethod = Rails.handleMethod;

      if ((typeof jQuery !== "undefined" && jQuery !== null) && (jQuery.ajax != null)) {
        if (jQuery.rails) {
          throw new Error('If you load both jquery_ujs and rails-ujs, use rails-ujs only.');
        }
        jQuery.rails = Rails;
        jQuery.ajaxPrefilter(function(options, originalOptions, xhr) {
          if (!options.crossDomain) {
            return CSRFProtection(xhr);
          }
        });
      }

      Rails.start = function() {
        if (window._rails_loaded) {
          throw new Error('rails-ujs has already been loaded!');
        }
        window.addEventListener('pageshow', function() {
          $(Rails.formEnableSelector).forEach(function(el) {
            if (getData(el, 'ujs:disabled')) {
              return enableElement(el);
            }
          });
          return $(Rails.linkDisableSelector).forEach(function(el) {
            if (getData(el, 'ujs:disabled')) {
              return enableElement(el);
            }
          });
        });
        delegate(document, Rails.linkDisableSelector, 'ajax:complete', enableElement);
        delegate(document, Rails.linkDisableSelector, 'ajax:stopped', enableElement);
        delegate(document, Rails.buttonDisableSelector, 'ajax:complete', enableElement);
        delegate(document, Rails.buttonDisableSelector, 'ajax:stopped', enableElement);
        delegate(document, Rails.linkClickSelector, 'click', preventInsignificantClick);
        delegate(document, Rails.linkClickSelector, 'click', handleDisabledElement);
        delegate(document, Rails.linkClickSelector, 'click', handleConfirm);
        delegate(document, Rails.linkClickSelector, 'click', disableElement);
        delegate(document, Rails.linkClickSelector, 'click', handleRemote);
        delegate(document, Rails.linkClickSelector, 'click', handleMethod);
        delegate(document, Rails.buttonClickSelector, 'click', preventInsignificantClick);
        delegate(document, Rails.buttonClickSelector, 'click', handleDisabledElement);
        delegate(document, Rails.buttonClickSelector, 'click', handleConfirm);
        delegate(document, Rails.buttonClickSelector, 'click', disableElement);
        delegate(document, Rails.buttonClickSelector, 'click', handleRemote);
        delegate(document, Rails.inputChangeSelector, 'change', handleDisabledElement);
        delegate(document, Rails.inputChangeSelector, 'change', handleConfirm);
        delegate(document, Rails.inputChangeSelector, 'change', handleRemote);
        delegate(document, Rails.formSubmitSelector, 'submit', handleDisabledElement);
        delegate(document, Rails.formSubmitSelector, 'submit', handleConfirm);
        delegate(document, Rails.formSubmitSelector, 'submit', handleRemote);
        delegate(document, Rails.formSubmitSelector, 'submit', function(e) {
          return setTimeout((function() {
            return disableElement(e);
          }), 13);
        });
        delegate(document, Rails.formSubmitSelector, 'ajax:send', disableElement);
        delegate(document, Rails.formSubmitSelector, 'ajax:complete', enableElement);
        delegate(document, Rails.formInputClickSelector, 'click', preventInsignificantClick);
        delegate(document, Rails.formInputClickSelector, 'click', handleDisabledElement);
        delegate(document, Rails.formInputClickSelector, 'click', handleConfirm);
        delegate(document, Rails.formInputClickSelector, 'click', formSubmitButtonClick);
        document.addEventListener('DOMContentLoaded', refreshCSRFTokens);
        document.addEventListener('DOMContentLoaded', loadCSPNonce);
        return window._rails_loaded = true;
      };

      if (window.Rails === Rails && fire(document, 'rails:attachBindings')) {
        Rails.start();
      }

    }).call(this);
  }).call(this);

  if (typeof module === "object" && module.exports) {
    module.exports = Rails;
  } else if (typeof define === "function" && define.amd) {
    define(Rails);
  }
}).call(this);
/*!
 * jQuery JavaScript Library v1.12.4
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-05-20T17:17Z
 */

(function( global, factory ) {

	if ( typeof module === "object" && typeof module.exports === "object" ) {
		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
}(typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Support: Firefox 18+
// Can't be in strict mode, several libs including ASP.NET trace
// the stack via arguments.caller.callee and Firefox dies if
// you try to trace through "use strict" call chains. (#13335)
//"use strict";
var deletedIds = [];

var document = window.document;

var slice = deletedIds.slice;

var concat = deletedIds.concat;

var push = deletedIds.push;

var indexOf = deletedIds.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var support = {};



var
	version = "1.12.4",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},

	// Support: Android<4.1, IE<9
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

	// Matches dashed string for camelizing
	rmsPrefix = /^-ms-/,
	rdashAlpha = /-([\da-z])/gi,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return letter.toUpperCase();
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// Start with an empty selector
	selector: "",

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		return num != null ?

			// Return just the one element from the set
			( num < 0 ? this[ num + this.length ] : this[ num ] ) :

			// Return all the elements in a clean array
			slice.call( this );
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;
		ret.context = this.context;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: deletedIds.sort,
	splice: deletedIds.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var src, copyIsArray, copy, name, options, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction( target ) ) {
		target = {};
	}

	// extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = jQuery.isArray( copy ) ) ) ) {

					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray( src ) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject( src ) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	// See test/unit/core.js for details concerning isFunction.
	// Since version 1.3, DOM methods and functions like alert
	// aren't supported. They return false on IE (#2968).
	isFunction: function( obj ) {
		return jQuery.type( obj ) === "function";
	},

	isArray: Array.isArray || function( obj ) {
		return jQuery.type( obj ) === "array";
	},

	isWindow: function( obj ) {
		/* jshint eqeqeq: false */
		return obj != null && obj == obj.window;
	},

	isNumeric: function( obj ) {

		// parseFloat NaNs numeric-cast false positives (null|true|false|"")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		// adding 1 corrects loss of precision from parseFloat (#15100)
		var realStringObj = obj && obj.toString();
		return !jQuery.isArray( obj ) && ( realStringObj - parseFloat( realStringObj ) + 1 ) >= 0;
	},

	isEmptyObject: function( obj ) {
		var name;
		for ( name in obj ) {
			return false;
		}
		return true;
	},

	isPlainObject: function( obj ) {
		var key;

		// Must be an Object.
		// Because of IE, we also have to check the presence of the constructor property.
		// Make sure that DOM nodes and window objects don't pass through, as well
		if ( !obj || jQuery.type( obj ) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
			return false;
		}

		try {

			// Not own constructor property must be Object
			if ( obj.constructor &&
				!hasOwn.call( obj, "constructor" ) &&
				!hasOwn.call( obj.constructor.prototype, "isPrototypeOf" ) ) {
				return false;
			}
		} catch ( e ) {

			// IE8,9 Will throw exceptions on certain host objects #9897
			return false;
		}

		// Support: IE<9
		// Handle iteration over inherited properties before own properties.
		if ( !support.ownFirst ) {
			for ( key in obj ) {
				return hasOwn.call( obj, key );
			}
		}

		// Own properties are enumerated firstly, so to speed up,
		// if last one is own, then all properties are own.
		for ( key in obj ) {}

		return key === undefined || hasOwn.call( obj, key );
	},

	type: function( obj ) {
		if ( obj == null ) {
			return obj + "";
		}
		return typeof obj === "object" || typeof obj === "function" ?
			class2type[ toString.call( obj ) ] || "object" :
			typeof obj;
	},

	// Workarounds based on findings by Jim Driscoll
	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context
	globalEval: function( data ) {
		if ( data && jQuery.trim( data ) ) {

			// We use execScript on Internet Explorer
			// We use an anonymous function so that context is window
			// rather than jQuery in Firefox
			( window.execScript || function( data ) {
				window[ "eval" ].call( window, data ); // jscs:ignore requireDotNotation
			} )( data );
		}
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// Support: Android<4.1, IE<9
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		var len;

		if ( arr ) {
			if ( indexOf ) {
				return indexOf.call( arr, elem, i );
			}

			len = arr.length;
			i = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;

			for ( ; i < len; i++ ) {

				// Skip accessing in sparse arrays
				if ( i in arr && arr[ i ] === elem ) {
					return i;
				}
			}
		}

		return -1;
	},

	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		while ( j < len ) {
			first[ i++ ] = second[ j++ ];
		}

		// Support: IE<9
		// Workaround casting of .length to NaN on otherwise arraylike objects (e.g., NodeLists)
		if ( len !== len ) {
			while ( second[ j ] !== undefined ) {
				first[ i++ ] = second[ j++ ];
			}
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		var args, proxy, tmp;

		if ( typeof context === "string" ) {
			tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		args = slice.call( arguments, 2 );
		proxy = function() {
			return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	},

	now: function() {
		return +( new Date() );
	},

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

// JSHint would error on this code due to the Symbol not being defined in ES5.
// Defining this global in .jshintrc would create a danger of using the global
// unguarded in another place, it seems safer to just disable JSHint for these
// three lines.
/* jshint ignore: start */
if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = deletedIds[ Symbol.iterator ];
}
/* jshint ignore: end */

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
function( i, name ) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
} );

function isArrayLike( obj ) {

	// Support: iOS 8.2 (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = jQuery.type( obj );

	if ( type === "function" || jQuery.isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.2.1
 * http://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2015-10-17
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// General-purpose constants
	MAX_NEGATIVE = 1 << 31,

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf as it's faster than native
	// http://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,
	rescape = /'|\\/g,

	// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	};

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, nidselect, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {

		if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
			setDocument( context );
		}
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {

				// ID selector
				if ( (m = match[1]) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( (elem = context.getElementById( m )) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && (elem = newContext.getElementById( m )) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[2] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( (m = match[3]) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!compilerCache[ selector + " " ] &&
				(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {

				if ( nodeType !== 1 ) {
					newContext = context;
					newSelector = selector;

				// qSA looks outside Element context, which is not what we want
				// Thanks to Andrew Dupont for this workaround technique
				// Support: IE <=8
				// Exclude object elements
				} else if ( context.nodeName.toLowerCase() !== "object" ) {

					// Capture the context ID, setting it first if necessary
					if ( (nid = context.getAttribute( "id" )) ) {
						nid = nid.replace( rescape, "\\$&" );
					} else {
						context.setAttribute( "id", (nid = expando) );
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					nidselect = ridentifier.test( nid ) ? "#" + nid : "[id='" + nid + "']";
					while ( i-- ) {
						groups[i] = nidselect + " " + toSelector( groups[i] );
					}
					newSelector = groups.join( "," );

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;
				}

				if ( newSelector ) {
					try {
						push.apply( results,
							newContext.querySelectorAll( newSelector )
						);
						return results;
					} catch ( qsaError ) {
					} finally {
						if ( nid === expando ) {
							context.removeAttribute( "id" );
						}
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created div and expects a boolean result
 */
function assert( fn ) {
	var div = document.createElement("div");

	try {
		return !!fn( div );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( div.parentNode ) {
			div.parentNode.removeChild( div );
		}
		// release memory in IE
		div = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			( ~b.sourceIndex || MAX_NEGATIVE ) -
			( ~a.sourceIndex || MAX_NEGATIVE );

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, parent,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9-11, Edge
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	if ( (parent = document.defaultView) && parent.top !== parent ) {
		// Support: IE 11
		if ( parent.addEventListener ) {
			parent.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( parent.attachEvent ) {
			parent.attachEvent( "onunload", unloadHandler );
		}
	}

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert(function( div ) {
		div.className = "i";
		return !div.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( div ) {
		div.appendChild( document.createComment("") );
		return !div.getElementsByTagName("*").length;
	});

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( div ) {
		docElem.appendChild( div ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	});

	// ID find and filter
	if ( support.getById ) {
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var m = context.getElementById( id );
				return m ? [ m ] : [];
			}
		};
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
	} else {
		// Support: IE6/7
		// getElementById is not reliable as a find shortcut
		delete Expr.find["ID"];

		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See http://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( div ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// http://bugs.jquery.com/ticket/12359
			docElem.appendChild( div ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( div.querySelectorAll("[msallowcapture^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !div.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !div.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push("~=");
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibing-combinator selector` fails
			if ( !div.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push(".#.+[+~]");
			}
		});

		assert(function( div ) {
			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement("input");
			input.setAttribute( "type", "hidden" );
			div.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( div.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":enabled").length ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			div.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( div ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( div, "div" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( div, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === document ? -1 :
				b === document ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );

	if ( support.matchesSelector && documentIsHTML &&
		!compilerCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch (e) {}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || (node[ expando ] = {});

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								(outerCache[ node.uniqueID ] = {});

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {
							// Use previously-cached element index if available
							if ( useCache ) {
								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || (node[ expando ] = {});

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									(outerCache[ node.uniqueID ] = {});

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {
								// Use the same loop as above to seek `elem` from the start
								while ( (node = ++nodeIndex && node && node[ dir ] ||
									(diff = nodeIndex = 0) || start.pop()) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] || (node[ expando ] = {});

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												(outerCache[ node.uniqueID ] = {});

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					// Don't keep the element (issue #299)
					input[0] = null;
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": function( elem ) {
			return elem.disabled === false;
		},

		"disabled": function( elem ) {
			return elem.disabled === true;
		},

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		checkNonElements = base && dir === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});

						if ( (oldCache = uniqueCache[ dir ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ dir ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context === document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					if ( !context && elem.ownerDocument !== document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context || document, xml) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				support.getById && context.nodeType === 9 && documentIsHTML &&
				Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( div1 ) {
	// Should return 1, but returns 4 (following)
	return div1.compareDocumentPosition( document.createElement("div") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( div ) {
	div.innerHTML = "<a href='#'></a>";
	return div.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( div ) {
	div.innerHTML = "<input/>";
	div.firstChild.setAttribute( "value", "" );
	return div.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( div ) {
	return div.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

return Sizzle;

})( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;



var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;

var rsingleTag = ( /^<([\w-]+)\s*\/?>(?:<\/\1>|)$/ );



var risSimple = /^.[^:#\[\.,]*$/;

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			/* jshint -W018 */
			return !!qualifier.call( elem, i, elem ) !== not;
		} );

	}

	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );

	}

	if ( typeof qualifier === "string" ) {
		if ( risSimple.test( qualifier ) ) {
			return jQuery.filter( qualifier, elements, not );
		}

		qualifier = jQuery.filter( qualifier, elements );
	}

	return jQuery.grep( elements, function( elem ) {
		return ( jQuery.inArray( elem, qualifier ) > -1 ) !== not;
	} );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	return elems.length === 1 && elem.nodeType === 1 ?
		jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :
		jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
			return elem.nodeType === 1;
		} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i,
			ret = [],
			self = this,
			len = self.length;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		// Needed because $( selector, context ) becomes $( context ).find( selector )
		ret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );
		ret.selector = this.selector ? this.selector + " " + selector : selector;
		return ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// init accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector.charAt( 0 ) === "<" &&
				selector.charAt( selector.length - 1 ) === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( jQuery.isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					if ( elem && elem.parentNode ) {

						// Handle the case where IE and Opera return items
						// by name instead of ID
						if ( elem.id !== match[ 2 ] ) {
							return rootjQuery.find( selector );
						}

						// Otherwise, we inject the element directly into the jQuery object
						this.length = 1;
						this[ 0 ] = elem;
					}

					this.context = document;
					this.selector = selector;
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this.context = this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return typeof root.ready !== "undefined" ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		if ( selector.selector !== undefined ) {
			this.selector = selector.selector;
			this.context = selector.context;
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var i,
			targets = jQuery( target, this ),
			len = targets.length;

		return this.filter( function() {
			for ( i = 0; i < len; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
				jQuery( selectors, context || this.context ) :
				0;

		for ( ; i < l; i++ ) {
			for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

				// Always skip document fragments
				if ( cur.nodeType < 11 && ( pos ?
					pos.index( cur ) > -1 :

					// Don't pass non-elements to Sizzle
					cur.nodeType === 1 &&
						jQuery.find.matchesSelector( cur, selectors ) ) ) {

					matched.push( cur );
					break;
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within
	// the matched set of elements
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// index in selector
		if ( typeof elem === "string" ) {
			return jQuery.inArray( this[ 0 ], jQuery( elem ) );
		}

		// Locate the position of the desired element
		return jQuery.inArray(

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem, this );
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	do {
		cur = cur[ dir ];
	} while ( cur && cur.nodeType !== 1 );

	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		return jQuery.nodeName( elem, "iframe" ) ?
			elem.contentDocument || elem.contentWindow.document :
			jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var ret = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			ret = jQuery.filter( selector, ret );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				ret = jQuery.uniqueSort( ret );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				ret = ret.reverse();
			}
		}

		return this.pushStack( ret );
	};
} );
var rnotwhite = ( /\S+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( jQuery.isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && jQuery.type( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = true;
				if ( !memory ) {
					self.disable();
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, listener list, final state
				[ "resolve", "done", jQuery.Callbacks( "once memory" ), "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ), "rejected" ],
				[ "notify", "progress", jQuery.Callbacks( "memory" ) ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				then: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;
					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {
							var fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];

							// deferred[ done | fail | progress ] for forwarding actions to newDefer
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && jQuery.isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this === promise ? newDefer.promise() : this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Keep pipe for back-compat
		promise.pipe = promise.then;

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 3 ];

			// promise[ done | fail | progress ] = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add( function() {

					// state = [ resolved | rejected ]
					state = stateString;

				// [ reject_list | resolve_list ].disable; progress_list.lock
				}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
			}

			// deferred[ resolve | reject | notify ]
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? promise : this, arguments );
				return this;
			};
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( subordinate /* , ..., subordinateN */ ) {
		var i = 0,
			resolveValues = slice.call( arguments ),
			length = resolveValues.length,

			// the count of uncompleted subordinates
			remaining = length !== 1 ||
				( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

			// the master Deferred.
			// If resolveValues consist of only a single Deferred, just use that.
			deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

			// Update function for both resolve and progress values
			updateFunc = function( i, contexts, values ) {
				return function( value ) {
					contexts[ i ] = this;
					values[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( values === progressValues ) {
						deferred.notifyWith( contexts, values );

					} else if ( !( --remaining ) ) {
						deferred.resolveWith( contexts, values );
					}
				};
			},

			progressValues, progressContexts, resolveContexts;

		// add listeners to Deferred subordinates; treat others as resolved
		if ( length > 1 ) {
			progressValues = new Array( length );
			progressContexts = new Array( length );
			resolveContexts = new Array( length );
			for ( ; i < length; i++ ) {
				if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
					resolveValues[ i ].promise()
						.progress( updateFunc( i, progressContexts, progressValues ) )
						.done( updateFunc( i, resolveContexts, resolveValues ) )
						.fail( deferred.reject );
				} else {
					--remaining;
				}
			}
		}

		// if we're not waiting on anything, resolve the master
		if ( !remaining ) {
			deferred.resolveWith( resolveContexts, resolveValues );
		}

		return deferred.promise();
	}
} );


// The deferred used on DOM ready
var readyList;

jQuery.fn.ready = function( fn ) {

	// Add the callback
	jQuery.ready.promise().done( fn );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );

		// Trigger any bound ready events
		if ( jQuery.fn.triggerHandler ) {
			jQuery( document ).triggerHandler( "ready" );
			jQuery( document ).off( "ready" );
		}
	}
} );

/**
 * Clean-up method for dom ready events
 */
function detach() {
	if ( document.addEventListener ) {
		document.removeEventListener( "DOMContentLoaded", completed );
		window.removeEventListener( "load", completed );

	} else {
		document.detachEvent( "onreadystatechange", completed );
		window.detachEvent( "onload", completed );
	}
}

/**
 * The ready event handler and self cleanup method
 */
function completed() {

	// readyState === "complete" is good enough for us to call the dom ready in oldIE
	if ( document.addEventListener ||
		window.event.type === "load" ||
		document.readyState === "complete" ) {

		detach();
		jQuery.ready();
	}
}

jQuery.ready.promise = function( obj ) {
	if ( !readyList ) {

		readyList = jQuery.Deferred();

		// Catch cases where $(document).ready() is called
		// after the browser event has already occurred.
		// Support: IE6-10
		// Older IE sometimes signals "interactive" too soon
		if ( document.readyState === "complete" ||
			( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

			// Handle it asynchronously to allow scripts the opportunity to delay ready
			window.setTimeout( jQuery.ready );

		// Standards-based browsers support DOMContentLoaded
		} else if ( document.addEventListener ) {

			// Use the handy event callback
			document.addEventListener( "DOMContentLoaded", completed );

			// A fallback to window.onload, that will always work
			window.addEventListener( "load", completed );

		// If IE event model is used
		} else {

			// Ensure firing before onload, maybe late but safe also for iframes
			document.attachEvent( "onreadystatechange", completed );

			// A fallback to window.onload, that will always work
			window.attachEvent( "onload", completed );

			// If IE and not a frame
			// continually check to see if the document is ready
			var top = false;

			try {
				top = window.frameElement == null && document.documentElement;
			} catch ( e ) {}

			if ( top && top.doScroll ) {
				( function doScrollCheck() {
					if ( !jQuery.isReady ) {

						try {

							// Use the trick by Diego Perini
							// http://javascript.nwbox.com/IEContentLoaded/
							top.doScroll( "left" );
						} catch ( e ) {
							return window.setTimeout( doScrollCheck, 50 );
						}

						// detach all dom ready events
						detach();

						// and execute any waiting functions
						jQuery.ready();
					}
				} )();
			}
		}
	}
	return readyList.promise( obj );
};

// Kick off the DOM ready check even if the user does not
jQuery.ready.promise();




// Support: IE<9
// Iteration over object's inherited properties before its own
var i;
for ( i in jQuery( support ) ) {
	break;
}
support.ownFirst = i === "0";

// Note: most support tests are defined in their respective modules.
// false until the test is run
support.inlineBlockNeedsLayout = false;

// Execute ASAP in case we need to set body.style.zoom
jQuery( function() {

	// Minified: var a,b,c,d
	var val, div, body, container;

	body = document.getElementsByTagName( "body" )[ 0 ];
	if ( !body || !body.style ) {

		// Return for frameset docs that don't have a body
		return;
	}

	// Setup
	div = document.createElement( "div" );
	container = document.createElement( "div" );
	container.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px";
	body.appendChild( container ).appendChild( div );

	if ( typeof div.style.zoom !== "undefined" ) {

		// Support: IE<8
		// Check if natively block-level elements act like inline-block
		// elements when setting their display to 'inline' and giving
		// them layout
		div.style.cssText = "display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1";

		support.inlineBlockNeedsLayout = val = div.offsetWidth === 3;
		if ( val ) {

			// Prevent IE 6 from affecting layout for positioned elements #11048
			// Prevent IE from shrinking the body in IE 7 mode #12869
			// Support: IE<8
			body.style.zoom = 1;
		}
	}

	body.removeChild( container );
} );


( function() {
	var div = document.createElement( "div" );

	// Support: IE<9
	support.deleteExpando = true;
	try {
		delete div.test;
	} catch ( e ) {
		support.deleteExpando = false;
	}

	// Null elements to avoid leaks in IE.
	div = null;
} )();
var acceptData = function( elem ) {
	var noData = jQuery.noData[ ( elem.nodeName + " " ).toLowerCase() ],
		nodeType = +elem.nodeType || 1;

	// Do not set data on non-element DOM nodes because it will not be cleared (#8335).
	return nodeType !== 1 && nodeType !== 9 ?
		false :

		// Nodes accept data unless otherwise specified; rejection can be conditional
		!noData || noData !== true && elem.getAttribute( "classid" ) === noData;
};




var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /([A-Z])/g;

function dataAttr( elem, key, data ) {

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {

		var name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();

		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = data === "true" ? true :
					data === "false" ? false :
					data === "null" ? null :

					// Only convert to a number if it doesn't change the string
					+data + "" === data ? +data :
					rbrace.test( data ) ? jQuery.parseJSON( data ) :
					data;
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			jQuery.data( elem, key, data );

		} else {
			data = undefined;
		}
	}

	return data;
}

// checks a cache object for emptiness
function isEmptyDataObject( obj ) {
	var name;
	for ( name in obj ) {

		// if the public data object is empty, the private is still empty
		if ( name === "data" && jQuery.isEmptyObject( obj[ name ] ) ) {
			continue;
		}
		if ( name !== "toJSON" ) {
			return false;
		}
	}

	return true;
}

function internalData( elem, name, data, pvt /* Internal Use Only */ ) {
	if ( !acceptData( elem ) ) {
		return;
	}

	var ret, thisCache,
		internalKey = jQuery.expando,

		// We have to handle DOM nodes and JS objects differently because IE6-7
		// can't GC object references properly across the DOM-JS boundary
		isNode = elem.nodeType,

		// Only DOM nodes need the global jQuery cache; JS object data is
		// attached directly to the object so GC can occur automatically
		cache = isNode ? jQuery.cache : elem,

		// Only defining an ID for JS objects if its cache already exists allows
		// the code to shortcut on the same path as a DOM node with no cache
		id = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey;

	// Avoid doing any more work than we need to when trying to get data on an
	// object that has no data at all
	if ( ( !id || !cache[ id ] || ( !pvt && !cache[ id ].data ) ) &&
		data === undefined && typeof name === "string" ) {
		return;
	}

	if ( !id ) {

		// Only DOM nodes need a new unique ID for each element since their data
		// ends up in the global cache
		if ( isNode ) {
			id = elem[ internalKey ] = deletedIds.pop() || jQuery.guid++;
		} else {
			id = internalKey;
		}
	}

	if ( !cache[ id ] ) {

		// Avoid exposing jQuery metadata on plain JS objects when the object
		// is serialized using JSON.stringify
		cache[ id ] = isNode ? {} : { toJSON: jQuery.noop };
	}

	// An object can be passed to jQuery.data instead of a key/value pair; this gets
	// shallow copied over onto the existing cache
	if ( typeof name === "object" || typeof name === "function" ) {
		if ( pvt ) {
			cache[ id ] = jQuery.extend( cache[ id ], name );
		} else {
			cache[ id ].data = jQuery.extend( cache[ id ].data, name );
		}
	}

	thisCache = cache[ id ];

	// jQuery data() is stored in a separate object inside the object's internal data
	// cache in order to avoid key collisions between internal data and user-defined
	// data.
	if ( !pvt ) {
		if ( !thisCache.data ) {
			thisCache.data = {};
		}

		thisCache = thisCache.data;
	}

	if ( data !== undefined ) {
		thisCache[ jQuery.camelCase( name ) ] = data;
	}

	// Check for both converted-to-camel and non-converted data property names
	// If a data property was specified
	if ( typeof name === "string" ) {

		// First Try to find as-is property data
		ret = thisCache[ name ];

		// Test for null|undefined property data
		if ( ret == null ) {

			// Try to find the camelCased property
			ret = thisCache[ jQuery.camelCase( name ) ];
		}
	} else {
		ret = thisCache;
	}

	return ret;
}

function internalRemoveData( elem, name, pvt ) {
	if ( !acceptData( elem ) ) {
		return;
	}

	var thisCache, i,
		isNode = elem.nodeType,

		// See jQuery.data for more information
		cache = isNode ? jQuery.cache : elem,
		id = isNode ? elem[ jQuery.expando ] : jQuery.expando;

	// If there is already no cache entry for this object, there is no
	// purpose in continuing
	if ( !cache[ id ] ) {
		return;
	}

	if ( name ) {

		thisCache = pvt ? cache[ id ] : cache[ id ].data;

		if ( thisCache ) {

			// Support array or space separated string names for data keys
			if ( !jQuery.isArray( name ) ) {

				// try the string as a key before any manipulation
				if ( name in thisCache ) {
					name = [ name ];
				} else {

					// split the camel cased version by spaces unless a key with the spaces exists
					name = jQuery.camelCase( name );
					if ( name in thisCache ) {
						name = [ name ];
					} else {
						name = name.split( " " );
					}
				}
			} else {

				// If "name" is an array of keys...
				// When data is initially created, via ("key", "val") signature,
				// keys will be converted to camelCase.
				// Since there is no way to tell _how_ a key was added, remove
				// both plain key and camelCase key. #12786
				// This will only penalize the array argument path.
				name = name.concat( jQuery.map( name, jQuery.camelCase ) );
			}

			i = name.length;
			while ( i-- ) {
				delete thisCache[ name[ i ] ];
			}

			// If there is no data left in the cache, we want to continue
			// and let the cache object itself get destroyed
			if ( pvt ? !isEmptyDataObject( thisCache ) : !jQuery.isEmptyObject( thisCache ) ) {
				return;
			}
		}
	}

	// See jQuery.data for more information
	if ( !pvt ) {
		delete cache[ id ].data;

		// Don't destroy the parent cache unless the internal data object
		// had been the only thing left in it
		if ( !isEmptyDataObject( cache[ id ] ) ) {
			return;
		}
	}

	// Destroy the cache
	if ( isNode ) {
		jQuery.cleanData( [ elem ], true );

	// Use delete when supported for expandos or `cache` is not a window per isWindow (#10080)
	/* jshint eqeqeq: false */
	} else if ( support.deleteExpando || cache != cache.window ) {
		/* jshint eqeqeq: true */
		delete cache[ id ];

	// When all else fails, undefined
	} else {
		cache[ id ] = undefined;
	}
}

jQuery.extend( {
	cache: {},

	// The following elements (space-suffixed to avoid Object.prototype collisions)
	// throw uncatchable exceptions if you attempt to set expando properties
	noData: {
		"applet ": true,
		"embed ": true,

		// ...but Flash objects (which have this classid) *can* handle expandos
		"object ": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"
	},

	hasData: function( elem ) {
		elem = elem.nodeType ? jQuery.cache[ elem[ jQuery.expando ] ] : elem[ jQuery.expando ];
		return !!elem && !isEmptyDataObject( elem );
	},

	data: function( elem, name, data ) {
		return internalData( elem, name, data );
	},

	removeData: function( elem, name ) {
		return internalRemoveData( elem, name );
	},

	// For internal use only.
	_data: function( elem, name, data ) {
		return internalData( elem, name, data, true );
	},

	_removeData: function( elem, name ) {
		return internalRemoveData( elem, name, true );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Special expections of .data basically thwart jQuery.access,
		// so implement the relevant behavior ourselves

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = jQuery.data( elem );

				if ( elem.nodeType === 1 && !jQuery._data( elem, "parsedAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE11+
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = jQuery.camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					jQuery._data( elem, "parsedAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				jQuery.data( this, key );
			} );
		}

		return arguments.length > 1 ?

			// Sets one value
			this.each( function() {
				jQuery.data( this, key, value );
			} ) :

			// Gets one value
			// Try to fetch any internally stored data first
			elem ? dataAttr( elem, key, jQuery.data( elem, key ) ) : undefined;
	},

	removeData: function( key ) {
		return this.each( function() {
			jQuery.removeData( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = jQuery._data( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || jQuery.isArray( data ) ) {
					queue = jQuery._data( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// not intended for public consumption - generates a queueHooks object,
	// or returns the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return jQuery._data( elem, key ) || jQuery._data( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				jQuery._removeData( elem, type + "queue" );
				jQuery._removeData( elem, key );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = jQuery._data( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );


( function() {
	var shrinkWrapBlocksVal;

	support.shrinkWrapBlocks = function() {
		if ( shrinkWrapBlocksVal != null ) {
			return shrinkWrapBlocksVal;
		}

		// Will be changed later if needed.
		shrinkWrapBlocksVal = false;

		// Minified: var b,c,d
		var div, body, container;

		body = document.getElementsByTagName( "body" )[ 0 ];
		if ( !body || !body.style ) {

			// Test fired too early or in an unsupported environment, exit.
			return;
		}

		// Setup
		div = document.createElement( "div" );
		container = document.createElement( "div" );
		container.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px";
		body.appendChild( container ).appendChild( div );

		// Support: IE6
		// Check if elements with layout shrink-wrap their children
		if ( typeof div.style.zoom !== "undefined" ) {

			// Reset CSS: box-sizing; display; margin; border
			div.style.cssText =

				// Support: Firefox<29, Android 2.3
				// Vendor-prefix box-sizing
				"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" +
				"box-sizing:content-box;display:block;margin:0;border:0;" +
				"padding:1px;width:1px;zoom:1";
			div.appendChild( document.createElement( "div" ) ).style.width = "5px";
			shrinkWrapBlocksVal = div.offsetWidth !== 3;
		}

		body.removeChild( container );

		return shrinkWrapBlocksVal;
	};

} )();
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var isHidden = function( elem, el ) {

		// isHidden might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;
		return jQuery.css( elem, "display" ) === "none" ||
			!jQuery.contains( elem.ownerDocument, elem );
	};



function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted,
		scale = 1,
		maxIterations = 20,
		currentValue = tween ?
			function() { return tween.cur(); } :
			function() { return jQuery.css( elem, prop, "" ); },
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = ( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		do {

			// If previous iteration zeroed out, double until we get *something*.
			// Use string for doubling so we don't accidentally see scale as unchanged below
			scale = scale || ".5";

			// Adjust and apply
			initialInUnit = initialInUnit / scale;
			jQuery.style( elem, prop, initialInUnit + unit );

		// Update scale, tolerating zero or NaN from tween.cur()
		// Break the loop if scale is unchanged or perfect, or if we've just had enough.
		} while (
			scale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations
		);
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		length = elems.length,
		bulk = key == null;

	// Sets many values
	if ( jQuery.type( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !jQuery.isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < length; i++ ) {
				fn(
					elems[ i ],
					key,
					raw ? value : value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	return chainable ?
		elems :

		// Gets
		bulk ?
			fn.call( elems ) :
			length ? fn( elems[ 0 ], key ) : emptyGet;
};
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([\w:-]+)/ );

var rscriptType = ( /^$|\/(?:java|ecma)script/i );

var rleadingWhitespace = ( /^\s+/ );

var nodeNames = "abbr|article|aside|audio|bdi|canvas|data|datalist|" +
		"details|dialog|figcaption|figure|footer|header|hgroup|main|" +
		"mark|meter|nav|output|picture|progress|section|summary|template|time|video";



function createSafeFragment( document ) {
	var list = nodeNames.split( "|" ),
		safeFrag = document.createDocumentFragment();

	if ( safeFrag.createElement ) {
		while ( list.length ) {
			safeFrag.createElement(
				list.pop()
			);
		}
	}
	return safeFrag;
}


( function() {
	var div = document.createElement( "div" ),
		fragment = document.createDocumentFragment(),
		input = document.createElement( "input" );

	// Setup
	div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";

	// IE strips leading whitespace when .innerHTML is used
	support.leadingWhitespace = div.firstChild.nodeType === 3;

	// Make sure that tbody elements aren't automatically inserted
	// IE will insert them into empty tables
	support.tbody = !div.getElementsByTagName( "tbody" ).length;

	// Make sure that link elements get serialized correctly by innerHTML
	// This requires a wrapper element in IE
	support.htmlSerialize = !!div.getElementsByTagName( "link" ).length;

	// Makes sure cloning an html5 element does not cause problems
	// Where outerHTML is undefined, this still works
	support.html5Clone =
		document.createElement( "nav" ).cloneNode( true ).outerHTML !== "<:nav></:nav>";

	// Check if a disconnected checkbox will retain its checked
	// value of true after appended to the DOM (IE6/7)
	input.type = "checkbox";
	input.checked = true;
	fragment.appendChild( input );
	support.appendChecked = input.checked;

	// Make sure textarea (and checkbox) defaultValue is properly cloned
	// Support: IE6-IE11+
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;

	// #11217 - WebKit loses check when the name is after the checked attribute
	fragment.appendChild( div );

	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input = document.createElement( "input" );
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Safari 5.1, iOS 5.1, Android 4.x, Android 2.3
	// old WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE<9
	// Cloned elements keep attachEvent handlers, we use addEventListener on IE9+
	support.noCloneEvent = !!div.addEventListener;

	// Support: IE<9
	// Since attributes and properties are the same in IE,
	// cleanData must set properties to undefined rather than use removeAttribute
	div[ jQuery.expando ] = 1;
	support.attributes = !div.getAttribute( jQuery.expando );
} )();


// We have to close these tags to support XHTML (#13200)
var wrapMap = {
	option: [ 1, "<select multiple='multiple'>", "</select>" ],
	legend: [ 1, "<fieldset>", "</fieldset>" ],
	area: [ 1, "<map>", "</map>" ],

	// Support: IE8
	param: [ 1, "<object>", "</object>" ],
	thead: [ 1, "<table>", "</table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	col: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	// IE6-8 can't serialize link, script, style, or any html5 (NoScope) tags,
	// unless wrapped in a div with non-breaking characters in front of it.
	_default: support.htmlSerialize ? [ 0, "", "" ] : [ 1, "X<div>", "</div>" ]
};

// Support: IE8-IE9
wrapMap.optgroup = wrapMap.option;

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;


function getAll( context, tag ) {
	var elems, elem,
		i = 0,
		found = typeof context.getElementsByTagName !== "undefined" ?
			context.getElementsByTagName( tag || "*" ) :
			typeof context.querySelectorAll !== "undefined" ?
				context.querySelectorAll( tag || "*" ) :
				undefined;

	if ( !found ) {
		for ( found = [], elems = context.childNodes || context;
			( elem = elems[ i ] ) != null;
			i++
		) {
			if ( !tag || jQuery.nodeName( elem, tag ) ) {
				found.push( elem );
			} else {
				jQuery.merge( found, getAll( elem, tag ) );
			}
		}
	}

	return tag === undefined || tag && jQuery.nodeName( context, tag ) ?
		jQuery.merge( [ context ], found ) :
		found;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var elem,
		i = 0;
	for ( ; ( elem = elems[ i ] ) != null; i++ ) {
		jQuery._data(
			elem,
			"globalEval",
			!refElements || jQuery._data( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/,
	rtbody = /<tbody/i;

function fixDefaultChecked( elem ) {
	if ( rcheckableType.test( elem.type ) ) {
		elem.defaultChecked = elem.checked;
	}
}

function buildFragment( elems, context, scripts, selection, ignored ) {
	var j, elem, contains,
		tmp, tag, tbody, wrap,
		l = elems.length,

		// Ensure a safe fragment
		safe = createSafeFragment( context ),

		nodes = [],
		i = 0;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( jQuery.type( elem ) === "object" ) {
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || safe.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;

				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Manually add leading whitespace removed by IE
				if ( !support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {
					nodes.push( context.createTextNode( rleadingWhitespace.exec( elem )[ 0 ] ) );
				}

				// Remove IE's autoinserted <tbody> from table fragments
				if ( !support.tbody ) {

					// String was a <table>, *may* have spurious <tbody>
					elem = tag === "table" && !rtbody.test( elem ) ?
						tmp.firstChild :

						// String was a bare <thead> or <tfoot>
						wrap[ 1 ] === "<table>" && !rtbody.test( elem ) ?
							tmp :
							0;

					j = elem && elem.childNodes.length;
					while ( j-- ) {
						if ( jQuery.nodeName( ( tbody = elem.childNodes[ j ] ), "tbody" ) &&
							!tbody.childNodes.length ) {

							elem.removeChild( tbody );
						}
					}
				}

				jQuery.merge( nodes, tmp.childNodes );

				// Fix #12392 for WebKit and IE > 9
				tmp.textContent = "";

				// Fix #12392 for oldIE
				while ( tmp.firstChild ) {
					tmp.removeChild( tmp.firstChild );
				}

				// Remember the top-level container for proper cleanup
				tmp = safe.lastChild;
			}
		}
	}

	// Fix #11356: Clear elements from fragment
	if ( tmp ) {
		safe.removeChild( tmp );
	}

	// Reset defaultChecked for any radios and checkboxes
	// about to be appended to the DOM in IE 6/7 (#8060)
	if ( !support.appendChecked ) {
		jQuery.grep( getAll( nodes, "input" ), fixDefaultChecked );
	}

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}

			continue;
		}

		contains = jQuery.contains( elem.ownerDocument, elem );

		// Append to fragment
		tmp = getAll( safe.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( contains ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	tmp = null;

	return safe;
}


( function() {
	var i, eventName,
		div = document.createElement( "div" );

	// Support: IE<9 (lack submit/change bubble), Firefox (lack focus(in | out) events)
	for ( i in { submit: true, change: true, focusin: true } ) {
		eventName = "on" + i;

		if ( !( support[ i ] = eventName in window ) ) {

			// Beware of CSP restrictions (https://developer.mozilla.org/en/Security/CSP)
			div.setAttribute( eventName, "t" );
			support[ i ] = div.attributes[ eventName ].expando === false;
		}
	}

	// Null elements to avoid leaks in IE.
	div = null;
} )();


var rformElems = /^(?:input|select|textarea)$/i,
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE9
// See #13393 for more info
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {
		var tmp, events, t, handleObjIn,
			special, eventHandle, handleObj,
			handlers, type, namespaces, origType,
			elemData = jQuery._data( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = {};
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" &&
					( !e || jQuery.event.triggered !== e.type ) ?
					jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :
					undefined;
			};

			// Add elem as a property of the handle fn to prevent a memory leak
			// with IE non-native events
			eventHandle.elem = elem;
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener/attachEvent if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					// Bind the global event handler to the element
					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle, false );

					} else if ( elem.attachEvent ) {
						elem.attachEvent( "on" + type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

		// Nullify elem to prevent memory leaks in IE
		elem = null;
	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {
		var j, handleObj, tmp,
			origCount, t, events,
			special, handlers, type,
			namespaces, origType,
			elemData = jQuery.hasData( elem ) && jQuery._data( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			delete elemData.handle;

			// removeData also checks for emptiness and clears the expando if empty
			// so use it instead of delete
			jQuery._removeData( elem, "events" );
		}
	},

	trigger: function( event, data, elem, onlyHandlers ) {
		var handle, ontype, cur,
			bubbleType, special, tmp, i,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {

			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( jQuery._data( cur, "events" ) || {} )[ event.type ] &&
				jQuery._data( cur, "handle" );

			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if (
				( !special._default ||
				 special._default.apply( eventPath.pop(), data ) === false
				) && acceptData( elem )
			) {

				// Call a native DOM method on the target with the same name name as the event.
				// Can't use an .isFunction() check here because IE6/7 fails that test.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && elem[ type ] && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					try {
						elem[ type ]();
					} catch ( e ) {

						// IE<9 dies on focus/blur to hidden element (#1486,#12518)
						// only reproducible on winXP IE8 native, not IE9 in IE8 mode
					}
					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	dispatch: function( event ) {

		// Make a writable jQuery.Event from the native event object
		event = jQuery.event.fix( event );

		var i, j, ret, matched, handleObj,
			handlerQueue = [],
			args = slice.call( arguments ),
			handlers = ( jQuery._data( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;
		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// Triggered event must either 1) have no namespace, or 2) have namespace(s)
				// a subset or equal to those in the bound event (both can have no namespace).
				if ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, matches, sel, handleObj,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Support (at least): Chrome, IE9
		// Find delegate handlers
		// Black-hole SVG <use> instance trees (#13180)
		//
		// Support: Firefox<=42+
		// Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)
		if ( delegateCount && cur.nodeType &&
			( event.type !== "click" || isNaN( event.button ) || event.button < 1 ) ) {

			/* jshint eqeqeq: false */
			for ( ; cur != this; cur = cur.parentNode || this ) {
				/* jshint eqeqeq: true */

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && ( cur.disabled !== true || event.type !== "click" ) ) {
					matches = [];
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matches[ sel ] === undefined ) {
							matches[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matches[ sel ] ) {
							matches.push( handleObj );
						}
					}
					if ( matches.length ) {
						handlerQueue.push( { elem: cur, handlers: matches } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: this, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	fix: function( event ) {
		if ( event[ jQuery.expando ] ) {
			return event;
		}

		// Create a writable copy of the event object and normalize some properties
		var i, prop, copy,
			type = event.type,
			originalEvent = event,
			fixHook = this.fixHooks[ type ];

		if ( !fixHook ) {
			this.fixHooks[ type ] = fixHook =
				rmouseEvent.test( type ) ? this.mouseHooks :
				rkeyEvent.test( type ) ? this.keyHooks :
				{};
		}
		copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

		event = new jQuery.Event( originalEvent );

		i = copy.length;
		while ( i-- ) {
			prop = copy[ i ];
			event[ prop ] = originalEvent[ prop ];
		}

		// Support: IE<9
		// Fix target property (#1925)
		if ( !event.target ) {
			event.target = originalEvent.srcElement || document;
		}

		// Support: Safari 6-8+
		// Target should not be a text node (#504, #13143)
		if ( event.target.nodeType === 3 ) {
			event.target = event.target.parentNode;
		}

		// Support: IE<9
		// For mouse/key events, metaKey==false if it's undefined (#3368, #11328)
		event.metaKey = !!event.metaKey;

		return fixHook.filter ? fixHook.filter( event, originalEvent ) : event;
	},

	// Includes some event props shared by KeyEvent and MouseEvent
	props: ( "altKey bubbles cancelable ctrlKey currentTarget detail eventPhase " +
		"metaKey relatedTarget shiftKey target timeStamp view which" ).split( " " ),

	fixHooks: {},

	keyHooks: {
		props: "char charCode key keyCode".split( " " ),
		filter: function( event, original ) {

			// Add which for key events
			if ( event.which == null ) {
				event.which = original.charCode != null ? original.charCode : original.keyCode;
			}

			return event;
		}
	},

	mouseHooks: {
		props: ( "button buttons clientX clientY fromElement offsetX offsetY " +
			"pageX pageY screenX screenY toElement" ).split( " " ),
		filter: function( event, original ) {
			var body, eventDoc, doc,
				button = original.button,
				fromElement = original.fromElement;

			// Calculate pageX/Y if missing and clientX/Y available
			if ( event.pageX == null && original.clientX != null ) {
				eventDoc = event.target.ownerDocument || document;
				doc = eventDoc.documentElement;
				body = eventDoc.body;

				event.pageX = original.clientX +
					( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) -
					( doc && doc.clientLeft || body && body.clientLeft || 0 );
				event.pageY = original.clientY +
					( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) -
					( doc && doc.clientTop  || body && body.clientTop  || 0 );
			}

			// Add relatedTarget, if necessary
			if ( !event.relatedTarget && fromElement ) {
				event.relatedTarget = fromElement === event.target ?
					original.toElement :
					fromElement;
			}

			// Add which for click: 1 === left; 2 === middle; 3 === right
			// Note: button is not normalized, so don't use it
			if ( !event.which && button !== undefined ) {
				event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
			}

			return event;
		}
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		focus: {

			// Fire native event if possible so blur/focus sequence is correct
			trigger: function() {
				if ( this !== safeActiveElement() && this.focus ) {
					try {
						this.focus();
						return false;
					} catch ( e ) {

						// Support: IE<9
						// If we error on focus to hidden element (#1486, #12518),
						// let .trigger() run the handlers
					}
				}
			},
			delegateType: "focusin"
		},
		blur: {
			trigger: function() {
				if ( this === safeActiveElement() && this.blur ) {
					this.blur();
					return false;
				}
			},
			delegateType: "focusout"
		},
		click: {

			// For checkbox, fire native event so checked state will be right
			trigger: function() {
				if ( jQuery.nodeName( this, "input" ) && this.type === "checkbox" && this.click ) {
					this.click();
					return false;
				}
			},

			// For cross-browser consistency, don't fire native .click() on links
			_default: function( event ) {
				return jQuery.nodeName( event.target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	},

	// Piggyback on a donor event to simulate a different one
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true

				// Previously, `originalEvent: {}` was set here, so stopPropagation call
				// would not be triggered on donor event, since in our own
				// jQuery.event.stopPropagation function we had a check for existence of
				// originalEvent.stopPropagation method, so, consequently it would be a noop.
				//
				// Guard for simulated events was moved to jQuery.event.stopPropagation function
				// since `originalEvent` should point to the original event for the
				// constancy with other events and for more focused logic
			}
		);

		jQuery.event.trigger( e, null, elem );

		if ( e.isDefaultPrevented() ) {
			event.preventDefault();
		}
	}
};

jQuery.removeEvent = document.removeEventListener ?
	function( elem, type, handle ) {

		// This "if" is needed for plain objects
		if ( elem.removeEventListener ) {
			elem.removeEventListener( type, handle );
		}
	} :
	function( elem, type, handle ) {
		var name = "on" + type;

		if ( elem.detachEvent ) {

			// #8545, #7054, preventing memory leaks for custom events in IE6-8
			// detachEvent needed property on element, by name of that event,
			// to properly expose it to GC
			if ( typeof elem[ name ] === "undefined" ) {
				elem[ name ] = null;
			}

			elem.detachEvent( name, handle );
		}
	};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: IE < 9, Android < 4.0
				src.returnValue === false ?
			returnTrue :
			returnFalse;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;
		if ( !e ) {
			return;
		}

		// If preventDefault exists, run it on the original event
		if ( e.preventDefault ) {
			e.preventDefault();

		// Support: IE
		// Otherwise set the returnValue property of the original event to false
		} else {
			e.returnValue = false;
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( !e || this.isSimulated ) {
			return;
		}

		// If stopPropagation exists, run it on the original event
		if ( e.stopPropagation ) {
			e.stopPropagation();
		}

		// Support: IE
		// Set the cancelBubble property of the original event to true
		e.cancelBubble = true;
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && e.stopImmediatePropagation ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://code.google.com/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

// IE submit delegation
if ( !support.submit ) {

	jQuery.event.special.submit = {
		setup: function() {

			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Lazy-add a submit handler when a descendant form may potentially be submitted
			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {

				// Node name check avoids a VML-related crash in IE (#9807)
				var elem = e.target,
					form = jQuery.nodeName( elem, "input" ) || jQuery.nodeName( elem, "button" ) ?

						// Support: IE <=8
						// We use jQuery.prop instead of elem.form
						// to allow fixing the IE8 delegated submit issue (gh-2332)
						// by 3rd party polyfills/workarounds.
						jQuery.prop( elem, "form" ) :
						undefined;

				if ( form && !jQuery._data( form, "submit" ) ) {
					jQuery.event.add( form, "submit._submit", function( event ) {
						event._submitBubble = true;
					} );
					jQuery._data( form, "submit", true );
				}
			} );

			// return undefined since we don't need an event listener
		},

		postDispatch: function( event ) {

			// If form was submitted by the user, bubble the event up the tree
			if ( event._submitBubble ) {
				delete event._submitBubble;
				if ( this.parentNode && !event.isTrigger ) {
					jQuery.event.simulate( "submit", this.parentNode, event );
				}
			}
		},

		teardown: function() {

			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Remove delegated handlers; cleanData eventually reaps submit handlers attached above
			jQuery.event.remove( this, "._submit" );
		}
	};
}

// IE change delegation and checkbox/radio fix
if ( !support.change ) {

	jQuery.event.special.change = {

		setup: function() {

			if ( rformElems.test( this.nodeName ) ) {

				// IE doesn't fire change on a check/radio until blur; trigger it on click
				// after a propertychange. Eat the blur-change in special.change.handle.
				// This still fires onchange a second time for check/radio after blur.
				if ( this.type === "checkbox" || this.type === "radio" ) {
					jQuery.event.add( this, "propertychange._change", function( event ) {
						if ( event.originalEvent.propertyName === "checked" ) {
							this._justChanged = true;
						}
					} );
					jQuery.event.add( this, "click._change", function( event ) {
						if ( this._justChanged && !event.isTrigger ) {
							this._justChanged = false;
						}

						// Allow triggered, simulated change events (#11500)
						jQuery.event.simulate( "change", this, event );
					} );
				}
				return false;
			}

			// Delegated event; lazy-add a change handler on descendant inputs
			jQuery.event.add( this, "beforeactivate._change", function( e ) {
				var elem = e.target;

				if ( rformElems.test( elem.nodeName ) && !jQuery._data( elem, "change" ) ) {
					jQuery.event.add( elem, "change._change", function( event ) {
						if ( this.parentNode && !event.isSimulated && !event.isTrigger ) {
							jQuery.event.simulate( "change", this.parentNode, event );
						}
					} );
					jQuery._data( elem, "change", true );
				}
			} );
		},

		handle: function( event ) {
			var elem = event.target;

			// Swallow native change events from checkbox/radio, we already triggered them above
			if ( this !== elem || event.isSimulated || event.isTrigger ||
				( elem.type !== "radio" && elem.type !== "checkbox" ) ) {

				return event.handleObj.handler.apply( this, arguments );
			}
		},

		teardown: function() {
			jQuery.event.remove( this, "._change" );

			return !rformElems.test( this.nodeName );
		}
	};
}

// Support: Firefox
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome, Safari
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = jQuery._data( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				jQuery._data( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = jQuery._data( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					jQuery._removeData( doc, fix );
				} else {
					jQuery._data( doc, fix, attaches );
				}
			}
		};
	} );
}

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	},

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


var rinlinejQuery = / jQuery\d+="(?:null|\d+)"/g,
	rnoshimcache = new RegExp( "<(?:" + nodeNames + ")[\\s/>]", "i" ),
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,

	// Support: IE 10-11, Edge 10240+
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptTypeMasked = /^true\/(.*)/,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,
	safeFragment = createSafeFragment( document ),
	fragmentDiv = safeFragment.appendChild( document.createElement( "div" ) );

// Support: IE<8
// Manipulating tables requires a tbody
function manipulationTarget( elem, content ) {
	return jQuery.nodeName( elem, "table" ) &&
		jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ?

		elem.getElementsByTagName( "tbody" )[ 0 ] ||
			elem.appendChild( elem.ownerDocument.createElement( "tbody" ) ) :
		elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( jQuery.find.attr( elem, "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	var match = rscriptTypeMasked.exec( elem.type );
	if ( match ) {
		elem.type = match[ 1 ];
	} else {
		elem.removeAttribute( "type" );
	}
	return elem;
}

function cloneCopyEvent( src, dest ) {
	if ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {
		return;
	}

	var type, i, l,
		oldData = jQuery._data( src ),
		curData = jQuery._data( dest, oldData ),
		events = oldData.events;

	if ( events ) {
		delete curData.handle;
		curData.events = {};

		for ( type in events ) {
			for ( i = 0, l = events[ type ].length; i < l; i++ ) {
				jQuery.event.add( dest, type, events[ type ][ i ] );
			}
		}
	}

	// make the cloned public data object a copy from the original
	if ( curData.data ) {
		curData.data = jQuery.extend( {}, curData.data );
	}
}

function fixCloneNodeIssues( src, dest ) {
	var nodeName, e, data;

	// We do not need to do anything for non-Elements
	if ( dest.nodeType !== 1 ) {
		return;
	}

	nodeName = dest.nodeName.toLowerCase();

	// IE6-8 copies events bound via attachEvent when using cloneNode.
	if ( !support.noCloneEvent && dest[ jQuery.expando ] ) {
		data = jQuery._data( dest );

		for ( e in data.events ) {
			jQuery.removeEvent( dest, e, data.handle );
		}

		// Event data gets referenced instead of copied if the expando gets copied too
		dest.removeAttribute( jQuery.expando );
	}

	// IE blanks contents when cloning scripts, and tries to evaluate newly-set text
	if ( nodeName === "script" && dest.text !== src.text ) {
		disableScript( dest ).text = src.text;
		restoreScript( dest );

	// IE6-10 improperly clones children of object elements using classid.
	// IE10 throws NoModificationAllowedError if parent is null, #12132.
	} else if ( nodeName === "object" ) {
		if ( dest.parentNode ) {
			dest.outerHTML = src.outerHTML;
		}

		// This path appears unavoidable for IE9. When cloning an object
		// element in IE9, the outerHTML strategy above is not sufficient.
		// If the src has innerHTML and the destination does not,
		// copy the src.innerHTML into the dest.innerHTML. #10324
		if ( support.html5Clone && ( src.innerHTML && !jQuery.trim( dest.innerHTML ) ) ) {
			dest.innerHTML = src.innerHTML;
		}

	} else if ( nodeName === "input" && rcheckableType.test( src.type ) ) {

		// IE6-8 fails to persist the checked state of a cloned checkbox
		// or radio button. Worse, IE6-7 fail to give the cloned element
		// a checked appearance if the defaultChecked value isn't also set

		dest.defaultChecked = dest.checked = src.checked;

		// IE6-7 get confused and end up setting the value of a cloned
		// checkbox/radio button to an empty string instead of "on"
		if ( dest.value !== src.value ) {
			dest.value = src.value;
		}

	// IE6-8 fails to return the selected option to the default selected
	// state when cloning options
	} else if ( nodeName === "option" ) {
		dest.defaultSelected = dest.selected = src.defaultSelected;

	// IE6-8 fails to set the defaultValue to the correct value when
	// cloning other types of input fields
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = concat.apply( [], args );

	var first, node, hasScripts,
		scripts, doc, fragment,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		isFunction = jQuery.isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( isFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( isFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android<4.1, PhantomJS<2
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!jQuery._data( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl ) {
								jQuery._evalUrl( node.src );
							}
						} else {
							jQuery.globalEval(
								( node.text || node.textContent || node.innerHTML || "" )
									.replace( rcleanScript, "" )
							);
						}
					}
				}
			}

			// Fix #11809: Avoid leaking memory
			fragment = first = null;
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		elems = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = elems[ i ] ) != null; i++ ) {

		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && jQuery.contains( node.ownerDocument, node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html.replace( rxhtmlTag, "<$1></$2>" );
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var destElements, node, clone, i, srcElements,
			inPage = jQuery.contains( elem.ownerDocument, elem );

		if ( support.html5Clone || jQuery.isXMLDoc( elem ) ||
			!rnoshimcache.test( "<" + elem.nodeName + ">" ) ) {

			clone = elem.cloneNode( true );

		// IE<=8 does not properly clone detached, unknown element nodes
		} else {
			fragmentDiv.innerHTML = elem.outerHTML;
			fragmentDiv.removeChild( clone = fragmentDiv.firstChild );
		}

		if ( ( !support.noCloneEvent || !support.noCloneChecked ) &&
				( elem.nodeType === 1 || elem.nodeType === 11 ) && !jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			// Fix all IE cloning issues
			for ( i = 0; ( node = srcElements[ i ] ) != null; ++i ) {

				// Ensure that the destination node is not null; Fixes #9587
				if ( destElements[ i ] ) {
					fixCloneNodeIssues( node, destElements[ i ] );
				}
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0; ( node = srcElements[ i ] ) != null; i++ ) {
					cloneCopyEvent( node, destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		destElements = srcElements = node = null;

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems, /* internal */ forceAcceptData ) {
		var elem, type, id, data,
			i = 0,
			internalKey = jQuery.expando,
			cache = jQuery.cache,
			attributes = support.attributes,
			special = jQuery.event.special;

		for ( ; ( elem = elems[ i ] ) != null; i++ ) {
			if ( forceAcceptData || acceptData( elem ) ) {

				id = elem[ internalKey ];
				data = id && cache[ id ];

				if ( data ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Remove cache only if it was not already removed by jQuery.event.remove
					if ( cache[ id ] ) {

						delete cache[ id ];

						// Support: IE<9
						// IE does not allow us to delete expando properties from nodes
						// IE creates expando attributes along with the property
						// IE does not have a removeAttribute function on Document nodes
						if ( !attributes && typeof elem.removeAttribute !== "undefined" ) {
							elem.removeAttribute( internalKey );

						// Webkit & Blink performance suffers when deleting properties
						// from DOM nodes, so set to undefined instead
						// https://code.google.com/p/chromium/issues/detail?id=378607
						} else {
							elem[ internalKey ] = undefined;
						}

						deletedIds.push( id );
					}
				}
			}
		}
	}
} );

jQuery.fn.extend( {

	// Keep domManip exposed until 3.0 (gh-2225)
	domManip: domManip,

	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().append(
					( this[ 0 ] && this[ 0 ].ownerDocument || document ).createTextNode( value )
				);
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {

			// Remove element nodes and prevent memory leaks
			if ( elem.nodeType === 1 ) {
				jQuery.cleanData( getAll( elem, false ) );
			}

			// Remove any remaining nodes
			while ( elem.firstChild ) {
				elem.removeChild( elem.firstChild );
			}

			// If this is a select, ensure that it displays empty (#12336)
			// Support: IE<9
			if ( elem.options && jQuery.nodeName( elem, "select" ) ) {
				elem.options.length = 0;
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined ) {
				return elem.nodeType === 1 ?
					elem.innerHTML.replace( rinlinejQuery, "" ) :
					undefined;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				( support.htmlSerialize || !rnoshimcache.test( value )  ) &&
				( support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {

						// Remove element nodes and prevent memory leaks
						elem = this[ i ] || {};
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			i = 0,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Modern browsers can apply jQuery collections as arrays, but oldIE needs a .get()
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );


var iframe,
	elemdisplay = {

		// Support: Firefox
		// We have to pre-define these values for FF (#10227)
		HTML: "block",
		BODY: "block"
	};

/**
 * Retrieve the actual display of a element
 * @param {String} name nodeName of the element
 * @param {Object} doc Document object
 */

// Called only from within defaultDisplay
function actualDisplay( name, doc ) {
	var elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),

		display = jQuery.css( elem[ 0 ], "display" );

	// We don't have any data stored on the element,
	// so use "detach" method as fast way to get rid of the element
	elem.detach();

	return display;
}

/**
 * Try to determine the default display value of an element
 * @param {String} nodeName
 */
function defaultDisplay( nodeName ) {
	var doc = document,
		display = elemdisplay[ nodeName ];

	if ( !display ) {
		display = actualDisplay( nodeName, doc );

		// If the simple way fails, read from inside an iframe
		if ( display === "none" || !display ) {

			// Use the already-created iframe if possible
			iframe = ( iframe || jQuery( "<iframe frameborder='0' width='0' height='0'/>" ) )
				.appendTo( doc.documentElement );

			// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
			doc = ( iframe[ 0 ].contentWindow || iframe[ 0 ].contentDocument ).document;

			// Support: IE
			doc.write();
			doc.close();

			display = actualDisplay( nodeName, doc );
			iframe.detach();
		}

		// Store the correct default display
		elemdisplay[ nodeName ] = display;
	}

	return display;
}
var rmargin = ( /^margin/ );

var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.apply( elem, args || [] );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var documentElement = document.documentElement;



( function() {
	var pixelPositionVal, pixelMarginRightVal, boxSizingReliableVal,
		reliableHiddenOffsetsVal, reliableMarginRightVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	div.style.cssText = "float:left;opacity:.5";

	// Support: IE<9
	// Make sure that element opacity exists (as opposed to filter)
	support.opacity = div.style.opacity === "0.5";

	// Verify style float existence
	// (IE uses styleFloat instead of cssFloat)
	support.cssFloat = !!div.style.cssFloat;

	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	container = document.createElement( "div" );
	container.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;" +
		"padding:0;margin-top:1px;position:absolute";
	div.innerHTML = "";
	container.appendChild( div );

	// Support: Firefox<29, Android 2.3
	// Vendor-prefix box-sizing
	support.boxSizing = div.style.boxSizing === "" || div.style.MozBoxSizing === "" ||
		div.style.WebkitBoxSizing === "";

	jQuery.extend( support, {
		reliableHiddenOffsets: function() {
			if ( pixelPositionVal == null ) {
				computeStyleTests();
			}
			return reliableHiddenOffsetsVal;
		},

		boxSizingReliable: function() {

			// We're checking for pixelPositionVal here instead of boxSizingReliableVal
			// since that compresses better and they're computed together anyway.
			if ( pixelPositionVal == null ) {
				computeStyleTests();
			}
			return boxSizingReliableVal;
		},

		pixelMarginRight: function() {

			// Support: Android 4.0-4.3
			if ( pixelPositionVal == null ) {
				computeStyleTests();
			}
			return pixelMarginRightVal;
		},

		pixelPosition: function() {
			if ( pixelPositionVal == null ) {
				computeStyleTests();
			}
			return pixelPositionVal;
		},

		reliableMarginRight: function() {

			// Support: Android 2.3
			if ( pixelPositionVal == null ) {
				computeStyleTests();
			}
			return reliableMarginRightVal;
		},

		reliableMarginLeft: function() {

			// Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37
			if ( pixelPositionVal == null ) {
				computeStyleTests();
			}
			return reliableMarginLeftVal;
		}
	} );

	function computeStyleTests() {
		var contents, divStyle,
			documentElement = document.documentElement;

		// Setup
		documentElement.appendChild( container );

		div.style.cssText =

			// Support: Android 2.3
			// Vendor-prefix box-sizing
			"-webkit-box-sizing:border-box;box-sizing:border-box;" +
			"position:relative;display:block;" +
			"margin:auto;border:1px;padding:1px;" +
			"top:1%;width:50%";

		// Support: IE<9
		// Assume reasonable values in the absence of getComputedStyle
		pixelPositionVal = boxSizingReliableVal = reliableMarginLeftVal = false;
		pixelMarginRightVal = reliableMarginRightVal = true;

		// Check for getComputedStyle so that this code is not run in IE<9.
		if ( window.getComputedStyle ) {
			divStyle = window.getComputedStyle( div );
			pixelPositionVal = ( divStyle || {} ).top !== "1%";
			reliableMarginLeftVal = ( divStyle || {} ).marginLeft === "2px";
			boxSizingReliableVal = ( divStyle || { width: "4px" } ).width === "4px";

			// Support: Android 4.0 - 4.3 only
			// Some styles come back with percentage values, even though they shouldn't
			div.style.marginRight = "50%";
			pixelMarginRightVal = ( divStyle || { marginRight: "4px" } ).marginRight === "4px";

			// Support: Android 2.3 only
			// Div with explicit width and no margin-right incorrectly
			// gets computed margin-right based on width of container (#3333)
			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
			contents = div.appendChild( document.createElement( "div" ) );

			// Reset CSS: box-sizing; display; margin; border; padding
			contents.style.cssText = div.style.cssText =

				// Support: Android 2.3
				// Vendor-prefix box-sizing
				"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" +
				"box-sizing:content-box;display:block;margin:0;border:0;padding:0";
			contents.style.marginRight = contents.style.width = "0";
			div.style.width = "1px";

			reliableMarginRightVal =
				!parseFloat( ( window.getComputedStyle( contents ) || {} ).marginRight );

			div.removeChild( contents );
		}

		// Support: IE6-8
		// First check that getClientRects works as expected
		// Check if table cells still have offsetWidth/Height when they are set
		// to display:none and there are still other visible table cells in a
		// table row; if so, offsetWidth/Height are not reliable for use when
		// determining if an element has been hidden directly using
		// display:none (it is still safe to use offsets if a parent element is
		// hidden; don safety goggles and see bug #4512 for more information).
		div.style.display = "none";
		reliableHiddenOffsetsVal = div.getClientRects().length === 0;
		if ( reliableHiddenOffsetsVal ) {
			div.style.display = "";
			div.innerHTML = "<table><tr><td></td><td>t</td></tr></table>";
			div.childNodes[ 0 ].style.borderCollapse = "separate";
			contents = div.getElementsByTagName( "td" );
			contents[ 0 ].style.cssText = "margin:0;border:0;padding:0;display:none";
			reliableHiddenOffsetsVal = contents[ 0 ].offsetHeight === 0;
			if ( reliableHiddenOffsetsVal ) {
				contents[ 0 ].style.display = "";
				contents[ 1 ].style.display = "none";
				reliableHiddenOffsetsVal = contents[ 0 ].offsetHeight === 0;
			}
		}

		// Teardown
		documentElement.removeChild( container );
	}

} )();


var getStyles, curCSS,
	rposition = /^(top|right|bottom|left)$/;

if ( window.getComputedStyle ) {
	getStyles = function( elem ) {

		// Support: IE<=11+, Firefox<=30+ (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

	curCSS = function( elem, name, computed ) {
		var width, minWidth, maxWidth, ret,
			style = elem.style;

		computed = computed || getStyles( elem );

		// getPropertyValue is only needed for .css('filter') in IE9, see #12537
		ret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined;

		// Support: Opera 12.1x only
		// Fall back to style even without computed
		// computed is undefined for elems on document fragments
		if ( ( ret === "" || ret === undefined ) && !jQuery.contains( elem.ownerDocument, elem ) ) {
			ret = jQuery.style( elem, name );
		}

		if ( computed ) {

			// A tribute to the "awesome hack by Dean Edwards"
			// Chrome < 17 and Safari 5.0 uses "computed value"
			// instead of "used value" for margin-right
			// Safari 5.1.7 (at least) returns percentage for a larger set of values,
			// but width seems to be reliably pixels
			// this is against the CSSOM draft spec:
			// http://dev.w3.org/csswg/cssom/#resolved-values
			if ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {

				// Remember the original values
				width = style.width;
				minWidth = style.minWidth;
				maxWidth = style.maxWidth;

				// Put in the new values to get a computed value out
				style.minWidth = style.maxWidth = style.width = ret;
				ret = computed.width;

				// Revert the changed values
				style.width = width;
				style.minWidth = minWidth;
				style.maxWidth = maxWidth;
			}
		}

		// Support: IE
		// IE returns zIndex value as an integer.
		return ret === undefined ?
			ret :
			ret + "";
	};
} else if ( documentElement.currentStyle ) {
	getStyles = function( elem ) {
		return elem.currentStyle;
	};

	curCSS = function( elem, name, computed ) {
		var left, rs, rsLeft, ret,
			style = elem.style;

		computed = computed || getStyles( elem );
		ret = computed ? computed[ name ] : undefined;

		// Avoid setting ret to empty string here
		// so we don't default to auto
		if ( ret == null && style && style[ name ] ) {
			ret = style[ name ];
		}

		// From the awesome hack by Dean Edwards
		// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291

		// If we're not dealing with a regular pixel number
		// but a number that has a weird ending, we need to convert it to pixels
		// but not position css attributes, as those are
		// proportional to the parent element instead
		// and we can't measure the parent instead because it
		// might trigger a "stacking dolls" problem
		if ( rnumnonpx.test( ret ) && !rposition.test( name ) ) {

			// Remember the original values
			left = style.left;
			rs = elem.runtimeStyle;
			rsLeft = rs && rs.left;

			// Put in the new values to get a computed value out
			if ( rsLeft ) {
				rs.left = elem.currentStyle.left;
			}
			style.left = name === "fontSize" ? "1em" : ret;
			ret = style.pixelLeft + "px";

			// Revert the changed values
			style.left = left;
			if ( rsLeft ) {
				rs.left = rsLeft;
			}
		}

		// Support: IE
		// IE returns zIndex value as an integer.
		return ret === undefined ?
			ret :
			ret + "" || "auto";
	};
}




function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var

		ralpha = /alpha\([^)]*\)/i,
	ropacity = /opacity\s*=\s*([^)]*)/i,

	// swappable if display is none or starts with table except
	// "table", "table-cell", or "table-caption"
	// see here for display values:
	// https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rnumsplit = new RegExp( "^(" + pnum + ")(.*)$", "i" ),

	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	},

	cssPrefixes = [ "Webkit", "O", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style;


// return a css property mapped to a potentially vendor prefixed property
function vendorPropName( name ) {

	// shortcut for names that are not vendor prefixed
	if ( name in emptyStyle ) {
		return name;
	}

	// check for vendor prefixed names
	var capName = name.charAt( 0 ).toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

function showHide( elements, show ) {
	var display, elem, hidden,
		values = [],
		index = 0,
		length = elements.length;

	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		values[ index ] = jQuery._data( elem, "olddisplay" );
		display = elem.style.display;
		if ( show ) {

			// Reset the inline display of this element to learn if it is
			// being hidden by cascaded rules or not
			if ( !values[ index ] && display === "none" ) {
				elem.style.display = "";
			}

			// Set elements which have been overridden with display: none
			// in a stylesheet to whatever the default browser style is
			// for such an element
			if ( elem.style.display === "" && isHidden( elem ) ) {
				values[ index ] =
					jQuery._data( elem, "olddisplay", defaultDisplay( elem.nodeName ) );
			}
		} else {
			hidden = isHidden( elem );

			if ( display && display !== "none" || !hidden ) {
				jQuery._data(
					elem,
					"olddisplay",
					hidden ? display : jQuery.css( elem, "display" )
				);
			}
		}
	}

	// Set the display of most of the elements in a second loop
	// to avoid the constant reflow
	for ( index = 0; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}
		if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
			elem.style.display = show ? values[ index ] || "" : "none";
		}
	}

	return elements;
}

function setPositiveNumber( elem, value, subtract ) {
	var matches = rnumsplit.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || "px" ) :
		value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
	var i = extra === ( isBorderBox ? "border" : "content" ) ?

		// If we already have the right measurement, avoid augmentation
		4 :

		// Otherwise initialize for horizontal or vertical properties
		name === "width" ? 1 : 0,

		val = 0;

	for ( ; i < 4; i += 2 ) {

		// both box models exclude margin, so add it if we want it
		if ( extra === "margin" ) {
			val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
		}

		if ( isBorderBox ) {

			// border-box includes padding, so remove it if we want content
			if ( extra === "content" ) {
				val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// at this point, extra isn't border nor margin, so remove border
			if ( extra !== "margin" ) {
				val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		} else {

			// at this point, extra isn't content, so add padding
			val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// at this point, extra isn't content nor padding, so add border
			if ( extra !== "padding" ) {
				val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	return val;
}

function getWidthOrHeight( elem, name, extra ) {

	// Start with offset property, which is equivalent to the border-box value
	var valueIsBorderBox = true,
		val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
		styles = getStyles( elem ),
		isBorderBox = support.boxSizing &&
			jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

	// some non-html elements return undefined for offsetWidth, so check for null/undefined
	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
	if ( val <= 0 || val == null ) {

		// Fall back to computed then uncomputed css if necessary
		val = curCSS( elem, name, styles );
		if ( val < 0 || val == null ) {
			val = elem.style[ name ];
		}

		// Computed unit is not pixels. Stop here and return.
		if ( rnumnonpx.test( val ) ) {
			return val;
		}

		// we need the check for style in case a browser which returns unreliable values
		// for getComputedStyle silently falls back to the reliable elem.style
		valueIsBorderBox = isBorderBox &&
			( support.boxSizingReliable() || val === elem.style[ name ] );

		// Normalize "", auto, and prepare for extra
		val = parseFloat( val ) || 0;
	}

	// use the active box-sizing model to add/subtract irrelevant styles
	return ( val +
		augmentWidthOrHeight(
			elem,
			name,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {

		// normalize float css property
		"float": support.cssFloat ? "cssFloat" : "styleFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = jQuery.camelCase( name ),
			style = elem.style;

		name = jQuery.cssProps[ origName ] ||
			( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set. See: #7116
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			if ( type === "number" ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// Fixes #8908, it can be done more correctly by specifing setters in cssHooks,
			// but it would mean to define eight
			// (for every problematic property) identical functions
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				// Support: IE
				// Swallow errors from 'invalid' CSS values (#5509)
				try {
					style[ name ] = value;
				} catch ( e ) {}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var num, val, hooks,
			origName = jQuery.camelCase( name );

		// Make sure that we're working with the right name
		name = jQuery.cssProps[ origName ] ||
			( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		//convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Return, converting to number if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}
		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// certain elements can have dimension info if we invisibly show them
				// however, it must have a current display style that would benefit from this
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&
					elem.offsetWidth === 0 ?
						swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, name, extra );
						} ) :
						getWidthOrHeight( elem, name, extra );
			}
		},

		set: function( elem, value, extra ) {
			var styles = extra && getStyles( elem );
			return setPositiveNumber( elem, value, extra ?
				augmentWidthOrHeight(
					elem,
					name,
					extra,
					support.boxSizing &&
						jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
					styles
				) : 0
			);
		}
	};
} );

if ( !support.opacity ) {
	jQuery.cssHooks.opacity = {
		get: function( elem, computed ) {

			// IE uses filters for opacity
			return ropacity.test( ( computed && elem.currentStyle ?
				elem.currentStyle.filter :
				elem.style.filter ) || "" ) ?
					( 0.01 * parseFloat( RegExp.$1 ) ) + "" :
					computed ? "1" : "";
		},

		set: function( elem, value ) {
			var style = elem.style,
				currentStyle = elem.currentStyle,
				opacity = jQuery.isNumeric( value ) ? "alpha(opacity=" + value * 100 + ")" : "",
				filter = currentStyle && currentStyle.filter || style.filter || "";

			// IE has trouble with opacity if it does not have layout
			// Force it by setting the zoom level
			style.zoom = 1;

			// if setting opacity to 1, and no other filters exist -
			// attempt to remove filter attribute #6652
			// if value === "", then remove inline opacity #12685
			if ( ( value >= 1 || value === "" ) &&
					jQuery.trim( filter.replace( ralpha, "" ) ) === "" &&
					style.removeAttribute ) {

				// Setting style.filter to null, "" & " " still leave "filter:" in the cssText
				// if "filter:" is present at all, clearType is disabled, we want to avoid this
				// style.removeAttribute is IE Only, but so apparently is this code path...
				style.removeAttribute( "filter" );

				// if there is no filter style applied in a css rule
				// or unset inline opacity, we are done
				if ( value === "" || currentStyle && !currentStyle.filter ) {
					return;
				}
			}

			// otherwise, set new filter values
			style.filter = ralpha.test( filter ) ?
				filter.replace( ralpha, opacity ) :
				filter + " " + opacity;
		}
	};
}

jQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,
	function( elem, computed ) {
		if ( computed ) {
			return swap( elem, { "display": "inline-block" },
				curCSS, [ elem, "marginRight" ] );
		}
	}
);

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return (
				parseFloat( curCSS( elem, "marginLeft" ) ) ||

				// Support: IE<=11+
				// Running getBoundingClientRect on a disconnected node in IE throws an error
				// Support: IE8 only
				// getClientRects() errors on disconnected elems
				( jQuery.contains( elem.ownerDocument, elem ) ?
					elem.getBoundingClientRect().left -
						swap( elem, { marginLeft: 0 }, function() {
							return elem.getBoundingClientRect().left;
						} ) :
					0
				)
			) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( !rmargin.test( prefix ) ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( jQuery.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	},
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHidden( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails
			// so, simple values such as "10px" are parsed to Float.
			// complex values such as "rotate(1rad)" are returned as is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// use step hook for back compat - use cssHook if its there - use .style if its
			// available and use plain properties where available
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 &&
				( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||
					jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9
// Panic based approach to setting things on disconnected nodes

Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back Compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, timerId,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = jQuery.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		attrs = { height: type },
		i = 0;

	// if we include width, step value is 1 to do all cssExpand values,
	// if we don't include width, step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4 ; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// we're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	/* jshint validthis: true */
	var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHidden( elem ),
		dataShow = jQuery._data( elem, "fxshow" );

	// handle queue: false promises
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// doing this makes sure that the complete handler will be called
			// before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// height/width overflow pass
	if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {

		// Make sure that nothing sneaks out
		// Record all 3 overflow attributes because IE does not
		// change the overflow attribute when overflowX and
		// overflowY are set to the same value
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Set display property to inline-block for height/width
		// animations on inline elements that are having width/height animated
		display = jQuery.css( elem, "display" );

		// Test default display if display is currently "none"
		checkDisplay = display === "none" ?
			jQuery._data( elem, "olddisplay" ) || defaultDisplay( elem.nodeName ) : display;

		if ( checkDisplay === "inline" && jQuery.css( elem, "float" ) === "none" ) {

			// inline-level elements accept inline-block;
			// block-level elements need to be inline with layout
			if ( !support.inlineBlockNeedsLayout || defaultDisplay( elem.nodeName ) === "inline" ) {
				style.display = "inline-block";
			} else {
				style.zoom = 1;
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		if ( !support.shrinkWrapBlocks() ) {
			anim.always( function() {
				style.overflow = opts.overflow[ 0 ];
				style.overflowX = opts.overflow[ 1 ];
				style.overflowY = opts.overflow[ 2 ];
			} );
		}
	}

	// show/hide pass
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.exec( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// If there is dataShow left over from a stopped hide or show
				// and we are going to proceed with show, we should pretend to be hidden
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );

		// Any non-fx value stops us from restoring the original display value
		} else {
			display = undefined;
		}
	}

	if ( !jQuery.isEmptyObject( orig ) ) {
		if ( dataShow ) {
			if ( "hidden" in dataShow ) {
				hidden = dataShow.hidden;
			}
		} else {
			dataShow = jQuery._data( elem, "fxshow", {} );
		}

		// store state if its toggle - enables .stop().toggle() to "reverse"
		if ( toggle ) {
			dataShow.hidden = !hidden;
		}
		if ( hidden ) {
			jQuery( elem ).show();
		} else {
			anim.done( function() {
				jQuery( elem ).hide();
			} );
		}
		anim.done( function() {
			var prop;
			jQuery._removeData( elem, "fxshow" );
			for ( prop in orig ) {
				jQuery.style( elem, prop, orig[ prop ] );
			}
		} );
		for ( prop in orig ) {
			tween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );

			if ( !( prop in dataShow ) ) {
				dataShow[ prop ] = tween.start;
				if ( hidden ) {
					tween.end = tween.start;
					tween.start = prop === "width" || prop === "height" ? 1 : 0;
				}
			}
		}

	// If this is a noop like .hide().hide(), restore an overwritten display value
	} else if ( ( display === "none" ? defaultDisplay( elem.nodeName ) : display ) === "inline" ) {
		style.display = display;
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = jQuery.camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( jQuery.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// not quite $.extend, this wont overwrite keys already present.
			// also - reusing 'index' from above because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length ; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			if ( percent < 1 && length ) {
				return remaining;
			} else {
				deferred.resolveWith( elem, [ animation ] );
				return false;
			}
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// if we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length ; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// resolve when we played the last frame
				// otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length ; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( jQuery.isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					jQuery.proxy( result.stop, result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( jQuery.isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	// attach callbacks from options
	return animation.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( jQuery.isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnotwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length ; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			jQuery.isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
	};

	opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
		opt.duration in jQuery.fx.speeds ?
			jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

	// normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( jQuery.isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// show any hidden elements after setting opacity to 0
		return this.filter( isHidden ).css( "opacity", 0 ).show()

			// animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || jQuery._data( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = jQuery._data( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// start the next in the queue if the last step wasn't forced
			// timers currently will call their complete callbacks, which will dequeue
			// but only if they were gotoEnd
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = jQuery._data( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// enable finishing flag on private data
			data.finish = true;

			// empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		timers = jQuery.timers,
		i = 0;

	fxNow = jQuery.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Checks the timer has not already been removed
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	if ( timer() ) {
		jQuery.fx.start();
	} else {
		jQuery.timers.pop();
	}
};

jQuery.fx.interval = 13;

jQuery.fx.start = function() {
	if ( !timerId ) {
		timerId = window.setInterval( jQuery.fx.tick, jQuery.fx.interval );
	}
};

jQuery.fx.stop = function() {
	window.clearInterval( timerId );
	timerId = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var a,
		input = document.createElement( "input" ),
		div = document.createElement( "div" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	// Setup
	div = document.createElement( "div" );
	div.setAttribute( "className", "t" );
	div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";
	a = div.getElementsByTagName( "a" )[ 0 ];

	// Support: Windows Web Apps (WWA)
	// `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "checkbox" );
	div.appendChild( input );

	a = div.getElementsByTagName( "a" )[ 0 ];

	// First batch of tests.
	a.style.cssText = "top:1px";

	// Test setAttribute on camelCase class.
	// If it works, we need attrFixes when doing get/setAttribute (ie6/7)
	support.getSetAttribute = div.className !== "t";

	// Get the style information from getAttribute
	// (IE uses .cssText instead)
	support.style = /top/.test( a.getAttribute( "style" ) );

	// Make sure that URLs aren't manipulated
	// (IE normalizes it by default)
	support.hrefNormalized = a.getAttribute( "href" ) === "/a";

	// Check the default checkbox/radio value ("" on WebKit; "on" elsewhere)
	support.checkOn = !!input.value;

	// Make sure that a selected-by-default option has a working selected property.
	// (WebKit defaults to false instead of true, IE too, if it's in an optgroup)
	support.optSelected = opt.selected;

	// Tests for enctype support on a form (#6743)
	support.enctype = !!document.createElement( "form" ).enctype;

	// Make sure that the options inside disabled selects aren't marked as disabled
	// (WebKit marks them as disabled)
	select.disabled = true;
	support.optDisabled = !opt.disabled;

	// Support: IE8 only
	// Check if we can trust getAttribute("value")
	input = document.createElement( "input" );
	input.setAttribute( "value", "" );
	support.input = input.getAttribute( "value" ) === "";

	// Check if an input maintains its value after becoming a radio
	input.value = "t";
	input.setAttribute( "type", "radio" );
	support.radioValue = input.value === "t";
} )();


var rreturn = /\r/g,
	rspaces = /[\x20\t\r\n\f]+/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if (
					hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				return typeof ret === "string" ?

					// handle most common string cases
					ret.replace( rreturn, "" ) :

					// handle cases where value is null/undef or number
					ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";
			} else if ( typeof val === "number" ) {
				val += "";
			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {
				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE10-11+
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					jQuery.trim( jQuery.text( elem ) ).replace( rspaces, " " );
			}
		},
		select: {
			get: function( elem ) {
				var value, option,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one" || index < 0,
					values = one ? null : [],
					max = one ? index + 1 : options.length,
					i = index < 0 ?
						max :
						one ? index : 0;

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// oldIE doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							( support.optDisabled ?
								!option.disabled :
								option.getAttribute( "disabled" ) === null ) &&
							( !option.parentNode.disabled ||
								!jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					if ( jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1 ) {

						// Support: IE6
						// When new option element is added to select box we need to
						// force reflow of newly added node in order to workaround delay
						// of initialization properties
						try {
							option.selected = optionSet = true;

						} catch ( _ ) {

							// Will be executed only in IE6
							option.scrollHeight;
						}

					} else {
						option.selected = false;
					}
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}

				return options;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




var nodeHook, boolHook,
	attrHandle = jQuery.expr.attrHandle,
	ruseDefault = /^(?:checked|selected)$/i,
	getSetAttribute = support.getSetAttribute,
	getSetInput = support.input;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// All attributes are lowercase
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			name = name.toLowerCase();
			hooks = jQuery.attrHooks[ name ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					jQuery.nodeName( elem, "input" ) ) {

					// Setting the type on a radio button after the value resets the value in IE8-9
					// Reset value to default in case type is set after value during creation
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name, propName,
			i = 0,
			attrNames = value && value.match( rnotwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				propName = jQuery.propFix[ name ] || name;

				// Boolean attributes get special treatment (#10870)
				if ( jQuery.expr.match.bool.test( name ) ) {

					// Set corresponding property to false
					if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {
						elem[ propName ] = false;

					// Support: IE<9
					// Also clear defaultChecked/defaultSelected (if appropriate)
					} else {
						elem[ jQuery.camelCase( "default-" + name ) ] =
							elem[ propName ] = false;
					}

				// See #9699 for explanation of this approach (setting first, then removal)
				} else {
					jQuery.attr( elem, name, "" );
				}

				elem.removeAttribute( getSetAttribute ? name : propName );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {

			// IE<8 needs the *property* name
			elem.setAttribute( !getSetAttribute && jQuery.propFix[ name ] || name, name );

		} else {

			// Support: IE<9
			// Use defaultChecked and defaultSelected for oldIE
			elem[ jQuery.camelCase( "default-" + name ) ] = elem[ name ] = true;
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {
		attrHandle[ name ] = function( elem, name, isXML ) {
			var ret, handle;
			if ( !isXML ) {

				// Avoid an infinite loop by temporarily removing this function from the getter
				handle = attrHandle[ name ];
				attrHandle[ name ] = ret;
				ret = getter( elem, name, isXML ) != null ?
					name.toLowerCase() :
					null;
				attrHandle[ name ] = handle;
			}
			return ret;
		};
	} else {
		attrHandle[ name ] = function( elem, name, isXML ) {
			if ( !isXML ) {
				return elem[ jQuery.camelCase( "default-" + name ) ] ?
					name.toLowerCase() :
					null;
			}
		};
	}
} );

// fix oldIE attroperties
if ( !getSetInput || !getSetAttribute ) {
	jQuery.attrHooks.value = {
		set: function( elem, value, name ) {
			if ( jQuery.nodeName( elem, "input" ) ) {

				// Does not return so that setAttribute is also used
				elem.defaultValue = value;
			} else {

				// Use nodeHook if defined (#1954); otherwise setAttribute is fine
				return nodeHook && nodeHook.set( elem, value, name );
			}
		}
	};
}

// IE6/7 do not support getting/setting some attributes with get/setAttribute
if ( !getSetAttribute ) {

	// Use this for any attribute in IE6/7
	// This fixes almost every IE6/7 issue
	nodeHook = {
		set: function( elem, value, name ) {

			// Set the existing or create a new attribute node
			var ret = elem.getAttributeNode( name );
			if ( !ret ) {
				elem.setAttributeNode(
					( ret = elem.ownerDocument.createAttribute( name ) )
				);
			}

			ret.value = value += "";

			// Break association with cloned elements by also using setAttribute (#9646)
			if ( name === "value" || value === elem.getAttribute( name ) ) {
				return value;
			}
		}
	};

	// Some attributes are constructed with empty-string values when not defined
	attrHandle.id = attrHandle.name = attrHandle.coords =
		function( elem, name, isXML ) {
			var ret;
			if ( !isXML ) {
				return ( ret = elem.getAttributeNode( name ) ) && ret.value !== "" ?
					ret.value :
					null;
			}
		};

	// Fixing value retrieval on a button requires this module
	jQuery.valHooks.button = {
		get: function( elem, name ) {
			var ret = elem.getAttributeNode( name );
			if ( ret && ret.specified ) {
				return ret.value;
			}
		},
		set: nodeHook.set
	};

	// Set contenteditable to false on removals(#10429)
	// Setting to empty string throws an error as an invalid value
	jQuery.attrHooks.contenteditable = {
		set: function( elem, value, name ) {
			nodeHook.set( elem, value === "" ? false : value, name );
		}
	};

	// Set width and height to auto instead of 0 on empty string( Bug #8150 )
	// This is for removals
	jQuery.each( [ "width", "height" ], function( i, name ) {
		jQuery.attrHooks[ name ] = {
			set: function( elem, value ) {
				if ( value === "" ) {
					elem.setAttribute( name, "auto" );
					return value;
				}
			}
		};
	} );
}

if ( !support.style ) {
	jQuery.attrHooks.style = {
		get: function( elem ) {

			// Return undefined in the case of empty string
			// Note: IE uppercases css property names, but if we were to .toLowerCase()
			// .cssText, that would destroy case sensitivity in URL's, like in "background"
			return elem.style.cssText || undefined;
		},
		set: function( elem, value ) {
			return ( elem.style.cssText = value + "" );
		}
	};
}




var rfocusable = /^(?:input|select|textarea|button|object)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		name = jQuery.propFix[ name ] || name;
		return this.each( function() {

			// try/catch handles cases where IE balks (such as removing a property on window)
			try {
				this[ name ] = undefined;
				delete this[ name ];
			} catch ( e ) {}
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				return tabindex ?
					parseInt( tabindex, 10 ) :
					rfocusable.test( elem.nodeName ) ||
						rclickable.test( elem.nodeName ) && elem.href ?
							0 :
							-1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Some attributes require a special call on IE
// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !support.hrefNormalized ) {

	// href/src property should get the full normalized URL (#10299/#12915)
	jQuery.each( [ "href", "src" ], function( i, name ) {
		jQuery.propHooks[ name ] = {
			get: function( elem ) {
				return elem.getAttribute( name, 4 );
			}
		};
	} );
}

// Support: Safari, IE9+
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {
			var parent = elem.parentNode;

			if ( parent ) {
				parent.selectedIndex;

				// Make sure that it also works with optgroups, see #5701
				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
			return null;
		},
		set: function( elem ) {
			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );

// IE6/7 call enctype encoding
if ( !support.enctype ) {
	jQuery.propFix.enctype = "encoding";
}




var rclass = /[\t\r\n\f]/g;

function getClass( elem ) {
	return jQuery.attr( elem, "class" ) || "";
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnotwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 &&
					( " " + curValue + " " ).replace( rclass, " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// only assign if different to avoid unneeded rendering.
					finalValue = jQuery.trim( cur );
					if ( curValue !== finalValue ) {
						jQuery.attr( elem, "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnotwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 &&
					( " " + curValue + " " ).replace( rclass, " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = jQuery.trim( cur );
					if ( curValue !== finalValue ) {
						jQuery.attr( elem, "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value;

		if ( typeof stateVal === "boolean" && type === "string" ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( type === "string" ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = value.match( rnotwhite ) || [];

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// store className if set
					jQuery._data( this, "__className__", className );
				}

				// If the element has a class name or if we're passed "false",
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				jQuery.attr( this, "class",
					className || value === false ?
					"" :
					jQuery._data( this, "__className__" ) || ""
				);
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + getClass( elem ) + " " ).replace( rclass, " " )
					.indexOf( className ) > -1
			) {
				return true;
			}
		}

		return false;
	}
} );




// Return jQuery for attributes-only inclusion


jQuery.each( ( "blur focus focusin focusout load resize scroll unload click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup error contextmenu" ).split( " " ),
	function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
} );

jQuery.fn.extend( {
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );


var location = window.location;

var nonce = jQuery.now();

var rquery = ( /\?/ );



var rvalidtokens = /(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;

jQuery.parseJSON = function( data ) {

	// Attempt to parse using the native JSON parser first
	if ( window.JSON && window.JSON.parse ) {

		// Support: Android 2.3
		// Workaround failure to string-cast null input
		return window.JSON.parse( data + "" );
	}

	var requireNonComma,
		depth = null,
		str = jQuery.trim( data + "" );

	// Guard against invalid (and possibly dangerous) input by ensuring that nothing remains
	// after removing valid tokens
	return str && !jQuery.trim( str.replace( rvalidtokens, function( token, comma, open, close ) {

		// Force termination if we see a misplaced comma
		if ( requireNonComma && comma ) {
			depth = 0;
		}

		// Perform no more replacements after returning to outermost depth
		if ( depth === 0 ) {
			return token;
		}

		// Commas must not follow "[", "{", or ","
		requireNonComma = open || comma;

		// Determine new depth
		// array/object open ("[" or "{"): depth += true - false (increment)
		// array/object close ("]" or "}"): depth += false - true (decrement)
		// other cases ("," or primitive): depth += true - true (numeric cast)
		depth += !close - !open;

		// Remove this token
		return "";
	} ) ) ?
		( Function( "return " + str ) )() :
		jQuery.error( "Invalid JSON: " + data );
};


// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml, tmp;
	if ( !data || typeof data !== "string" ) {
		return null;
	}
	try {
		if ( window.DOMParser ) { // Standard
			tmp = new window.DOMParser();
			xml = tmp.parseFromString( data, "text/xml" );
		} else { // IE
			xml = new window.ActiveXObject( "Microsoft.XMLDOM" );
			xml.async = "false";
			xml.loadXML( data );
		}
	} catch ( e ) {
		xml = undefined;
	}
	if ( !xml || !xml.documentElement || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	rhash = /#.*$/,
	rts = /([?&])_=[^&]*/,

	// IE leaves an \r character at EOL
	rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,
	rurl = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Document location
	ajaxLocation = location.href,

	// Segment location into parts
	ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];

		if ( jQuery.isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType.charAt( 0 ) === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var deep, key,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {
	var firstDataType, ct, finalDataType, type,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s[ "throws" ] ) { // jscs:ignore requireDotNotation
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: ajaxLocation,
		type: "GET",
		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",
		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": jQuery.parseJSON,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var

			// Cross-domain detection vars
			parts,

			// Loop variable
			i,

			// URL without anti-cache param
			cacheURL,

			// Response headers as string
			responseHeadersString,

			// timeout handle
			timeoutTimer,

			// To know if global events are to be dispatched
			fireGlobals,

			transport,

			// Response headers
			responseHeaders,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// The jqXHR state
			state = 0,

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( state === 2 ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match == null ? null : match;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return state === 2 ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					var lname = name.toLowerCase();
					if ( !state ) {
						name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( !state ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( state < 2 ) {
							for ( code in map ) {

								// Lazy-add the new callback in a way that preserves old ones
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						} else {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR ).complete = completeDeferred.add;
		jqXHR.success = jqXHR.done;
		jqXHR.error = jqXHR.fail;

		// Remove hash character (#7531: and string promotion)
		// Add protocol if not provided (#5866: IE7 issue with protocol-less urls)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || ajaxLocation ) + "" )
			.replace( rhash, "" )
			.replace( rprotocol, ajaxLocParts[ 1 ] + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( rnotwhite ) || [ "" ];

		// A cross-domain request is in order when we have a protocol:host:port mismatch
		if ( s.crossDomain == null ) {
			parts = rurl.exec( s.url.toLowerCase() );
			s.crossDomain = !!( parts &&
				( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||
					( parts[ 3 ] || ( parts[ 1 ] === "http:" ? "80" : "443" ) ) !==
						( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? "80" : "443" ) ) )
			);
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( state === 2 ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		cacheURL = s.url;

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// If data is available, append data to url
			if ( s.data ) {
				cacheURL = ( s.url += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data );

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add anti-cache in url if needed
			if ( s.cache === false ) {
				s.url = rts.test( cacheURL ) ?

					// If there is already a '_' parameter, set its value
					cacheURL.replace( rts, "$1_=" + nonce++ ) :

					// Otherwise add one to the end
					cacheURL + ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + nonce++;
			}
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		for ( i in { success: 1, error: 1, complete: 1 } ) {
			jqXHR[ i ]( s[ i ] );
		}

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( state === 2 ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				state = 1;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Propagate exception as error if not done
				if ( state < 2 ) {
					done( -1, e );

				// Simply rethrow otherwise
				} else {
					throw e;
				}
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Called once
			if ( state === 2 ) {
				return;
			}

			// State is "done" now
			state = 2;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// We extract error from statusText
				// then normalize statusText and status for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );


jQuery._evalUrl = function( url ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,
		"throws": true
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapAll( html.call( this, i ) );
			} );
		}

		if ( this[ 0 ] ) {

			// The elements to wrap the target around
			var wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstChild && elem.firstChild.nodeType === 1 ) {
					elem = elem.firstChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function() {
		return this.parent().each( function() {
			if ( !jQuery.nodeName( this, "body" ) ) {
				jQuery( this ).replaceWith( this.childNodes );
			}
		} ).end();
	}
} );


function getDisplay( elem ) {
	return elem.style && elem.style.display || jQuery.css( elem, "display" );
}

function filterHidden( elem ) {

	// Disconnected elements are considered hidden
	if ( !jQuery.contains( elem.ownerDocument || document, elem ) ) {
		return true;
	}
	while ( elem && elem.nodeType === 1 ) {
		if ( getDisplay( elem ) === "none" || elem.type === "hidden" ) {
			return true;
		}
		elem = elem.parentNode;
	}
	return false;
}

jQuery.expr.filters.hidden = function( elem ) {

	// Support: Opera <= 12.12
	// Opera reports offsetWidths and offsetHeights less than zero on some elements
	return support.reliableHiddenOffsets() ?
		( elem.offsetWidth <= 0 && elem.offsetHeight <= 0 &&
			!elem.getClientRects().length ) :
			filterHidden( elem );
};

jQuery.expr.filters.visible = function( elem ) {
	return !jQuery.expr.filters.hidden( elem );
};




var r20 = /%20/g,
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( jQuery.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, value ) {

			// If value is a function, invoke it and return its value
			value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
			s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
		};

	// Set traditional to true for jQuery <= 1.3.2 behavior.
	if ( traditional === undefined ) {
		traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" ).replace( r20, "+" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} )
		.filter( function() {
			var type = this.type;

			// Use .is(":disabled") so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} )
		.map( function( i, elem ) {
			var val = jQuery( this ).val();

			return val == null ?
				null :
				jQuery.isArray( val ) ?
					jQuery.map( val, function( val ) {
						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
					} ) :
					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


// Create the request object
// (This is still attached to ajaxSettings for backward compatibility)
jQuery.ajaxSettings.xhr = window.ActiveXObject !== undefined ?

	// Support: IE6-IE8
	function() {

		// XHR cannot access local files, always use ActiveX for that case
		if ( this.isLocal ) {
			return createActiveXHR();
		}

		// Support: IE 9-11
		// IE seems to error on cross-domain PATCH requests when ActiveX XHR
		// is used. In IE 9+ always use the native XHR.
		// Note: this condition won't catch Edge as it doesn't define
		// document.documentMode but it also doesn't support ActiveX so it won't
		// reach this code.
		if ( document.documentMode > 8 ) {
			return createStandardXHR();
		}

		// Support: IE<9
		// oldIE XHR does not support non-RFC2616 methods (#13240)
		// See http://msdn.microsoft.com/en-us/library/ie/ms536648(v=vs.85).aspx
		// and http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9
		// Although this check for six methods instead of eight
		// since IE also does not support "trace" and "connect"
		return /^(get|post|head|put|delete|options)$/i.test( this.type ) &&
			createStandardXHR() || createActiveXHR();
	} :

	// For all other browsers, use the standard XMLHttpRequest object
	createStandardXHR;

var xhrId = 0,
	xhrCallbacks = {},
	xhrSupported = jQuery.ajaxSettings.xhr();

// Support: IE<10
// Open requests must be manually aborted on unload (#5280)
// See https://support.microsoft.com/kb/2856746 for more info
if ( window.attachEvent ) {
	window.attachEvent( "onunload", function() {
		for ( var key in xhrCallbacks ) {
			xhrCallbacks[ key ]( undefined, true );
		}
	} );
}

// Determine support properties
support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
xhrSupported = support.ajax = !!xhrSupported;

// Create transport if the browser can provide an xhr
if ( xhrSupported ) {

	jQuery.ajaxTransport( function( options ) {

		// Cross domain only allowed if supported through XMLHttpRequest
		if ( !options.crossDomain || support.cors ) {

			var callback;

			return {
				send: function( headers, complete ) {
					var i,
						xhr = options.xhr(),
						id = ++xhrId;

					// Open the socket
					xhr.open(
						options.type,
						options.url,
						options.async,
						options.username,
						options.password
					);

					// Apply custom fields if provided
					if ( options.xhrFields ) {
						for ( i in options.xhrFields ) {
							xhr[ i ] = options.xhrFields[ i ];
						}
					}

					// Override mime type if needed
					if ( options.mimeType && xhr.overrideMimeType ) {
						xhr.overrideMimeType( options.mimeType );
					}

					// X-Requested-With header
					// For cross-domain requests, seeing as conditions for a preflight are
					// akin to a jigsaw puzzle, we simply never set it to be sure.
					// (it can always be set on a per-request basis or even using ajaxSetup)
					// For same-domain requests, won't change header if already provided.
					if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
						headers[ "X-Requested-With" ] = "XMLHttpRequest";
					}

					// Set headers
					for ( i in headers ) {

						// Support: IE<9
						// IE's ActiveXObject throws a 'Type Mismatch' exception when setting
						// request header to a null-value.
						//
						// To keep consistent with other XHR implementations, cast the value
						// to string and ignore `undefined`.
						if ( headers[ i ] !== undefined ) {
							xhr.setRequestHeader( i, headers[ i ] + "" );
						}
					}

					// Do send the request
					// This may raise an exception which is actually
					// handled in jQuery.ajax (so no try/catch here)
					xhr.send( ( options.hasContent && options.data ) || null );

					// Listener
					callback = function( _, isAbort ) {
						var status, statusText, responses;

						// Was never called and is aborted or complete
						if ( callback && ( isAbort || xhr.readyState === 4 ) ) {

							// Clean up
							delete xhrCallbacks[ id ];
							callback = undefined;
							xhr.onreadystatechange = jQuery.noop;

							// Abort manually if needed
							if ( isAbort ) {
								if ( xhr.readyState !== 4 ) {
									xhr.abort();
								}
							} else {
								responses = {};
								status = xhr.status;

								// Support: IE<10
								// Accessing binary-data responseText throws an exception
								// (#11426)
								if ( typeof xhr.responseText === "string" ) {
									responses.text = xhr.responseText;
								}

								// Firefox throws an exception when accessing
								// statusText for faulty cross-domain requests
								try {
									statusText = xhr.statusText;
								} catch ( e ) {

									// We normalize with Webkit giving an empty statusText
									statusText = "";
								}

								// Filter status for non standard behaviors

								// If the request is local and we have data: assume a success
								// (success with no data won't get notified, that's the best we
								// can do given current implementations)
								if ( !status && options.isLocal && !options.crossDomain ) {
									status = responses.text ? 200 : 404;

								// IE - #1450: sometimes returns 1223 when it should be 204
								} else if ( status === 1223 ) {
									status = 204;
								}
							}
						}

						// Call complete if needed
						if ( responses ) {
							complete( status, statusText, responses, xhr.getAllResponseHeaders() );
						}
					};

					// Do send the request
					// `xhr.send` may raise an exception, but it will be
					// handled in jQuery.ajax (so no try/catch here)
					if ( !options.async ) {

						// If we're in sync mode we fire the callback
						callback();
					} else if ( xhr.readyState === 4 ) {

						// (IE6 & IE7) if it's in cache and has been
						// retrieved directly we need to fire the callback
						window.setTimeout( callback );
					} else {

						// Register the callback, but delay it in case `xhr.send` throws
						// Add to the list of active xhr callbacks
						xhr.onreadystatechange = xhrCallbacks[ id ] = callback;
					}
				},

				abort: function() {
					if ( callback ) {
						callback( undefined, true );
					}
				}
			};
		}
	} );
}

// Functions to create xhrs
function createStandardXHR() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
}

function createActiveXHR() {
	try {
		return new window.ActiveXObject( "Microsoft.XMLHTTP" );
	} catch ( e ) {}
}




// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and global
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
		s.global = false;
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {

		var script,
			head = document.head || jQuery( "head" )[ 0 ] || document.documentElement;

		return {

			send: function( _, callback ) {

				script = document.createElement( "script" );

				script.async = true;

				if ( s.scriptCharset ) {
					script.charset = s.scriptCharset;
				}

				script.src = s.url;

				// Attach handlers for all browsers
				script.onload = script.onreadystatechange = function( _, isAbort ) {

					if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {

						// Handle memory leak in IE
						script.onload = script.onreadystatechange = null;

						// Remove the script
						if ( script.parentNode ) {
							script.parentNode.removeChild( script );
						}

						// Dereference the script
						script = null;

						// Callback if not abort
						if ( !isAbort ) {
							callback( 200, "success" );
						}
					}
				};

				// Circumvent IE6 bugs with base elements (#2709 and #4378) by prepending
				// Use native DOM manipulation to avoid our domManip AJAX trickery
				head.insertBefore( script, head.firstChild );
			},

			abort: function() {
				if ( script ) {
					script.onload( undefined, true );
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// data: string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( !data || typeof data !== "string" ) {
		return null;
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}
	context = context || document;

	var parsed = rsingleTag.exec( data ),
		scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


// Keep a copy of the old load method
var _load = jQuery.fn.load;

/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	if ( typeof url !== "string" && _load ) {
		return _load.apply( this, arguments );
	}

	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = jQuery.trim( url.slice( off, url.length ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( jQuery.isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




// Attach a bunch of functions for handling common AJAX events
jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.expr.filters.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};





/**
 * Gets a window from an element
 */
function getWindow( elem ) {
	return jQuery.isWindow( elem ) ?
		elem :
		elem.nodeType === 9 ?
			elem.defaultView || elem.parentWindow :
			false;
}

jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			jQuery.inArray( "auto", [ curCSSTop, curCSSLeft ] ) > -1;

		// need to be able to calculate position if either top or left
		// is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;
		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );
		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {
	offset: function( options ) {
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var docElem, win,
			box = { top: 0, left: 0 },
			elem = this[ 0 ],
			doc = elem && elem.ownerDocument;

		if ( !doc ) {
			return;
		}

		docElem = doc.documentElement;

		// Make sure it's not a disconnected DOM node
		if ( !jQuery.contains( docElem, elem ) ) {
			return box;
		}

		// If we don't have gBCR, just use 0,0 rather than error
		// BlackBerry 5, iOS 3 (original iPhone)
		if ( typeof elem.getBoundingClientRect !== "undefined" ) {
			box = elem.getBoundingClientRect();
		}
		win = getWindow( doc );
		return {
			top: box.top  + ( win.pageYOffset || docElem.scrollTop )  - ( docElem.clientTop  || 0 ),
			left: box.left + ( win.pageXOffset || docElem.scrollLeft ) - ( docElem.clientLeft || 0 )
		};
	},

	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset,
			parentOffset = { top: 0, left: 0 },
			elem = this[ 0 ];

		// Fixed elements are offset from window (parentOffset = {top:0, left: 0},
		// because it is its only offset parent
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// we assume that getBoundingClientRect is available when computed position is fixed
			offset = elem.getBoundingClientRect();
		} else {

			// Get *real* offsetParent
			offsetParent = this.offsetParent();

			// Get correct offsets
			offset = this.offset();
			if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
				parentOffset = offsetParent.offset();
			}

			// Add offsetParent borders
			parentOffset.top  += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );
			parentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );
		}

		// Subtract parent offsets and element margins
		// note: when an element has margin: auto the offsetLeft and marginLeft
		// are the same in Safari causing offset.left to incorrectly be 0
		return {
			top:  offset.top  - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && ( !jQuery.nodeName( offsetParent, "html" ) &&
				jQuery.css( offsetParent, "position" ) === "static" ) ) {
				offsetParent = offsetParent.offsetParent;
			}
			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = /Y/.test( prop );

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {
			var win = getWindow( elem );

			if ( val === undefined ) {
				return win ? ( prop in win ) ? win[ prop ] :
					win.document.documentElement[ method ] :
					elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : jQuery( win ).scrollLeft(),
					top ? val : jQuery( win ).scrollTop()
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length, null );
	};
} );

// Support: Safari<7-8+, Chrome<37-44+
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// getComputedStyle returns percent when specified for top/left/bottom/right
// rather than make the css module depend on the offset module, we just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// if curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
	function( defaultExtra, funcName ) {

		// margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( jQuery.isWindow( elem ) ) {

					// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
					// isn't a whole lot we can do. See pull request at this URL for discussion:
					// https://github.com/jquery/jquery/pull/764
					return elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					// unfortunately, this causes bug #3838 in IE6/8 only,
					// but there is currently no good, small way to fix it.
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable, null );
		};
	} );
} );


jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	}
} );

// The number of elements contained in the matched element set
jQuery.fn.size = function() {
	return this.length;
};

jQuery.fn.andSelf = jQuery.fn.addBack;




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( typeof define === "function" && define.amd ) {
	define( "jquery", [], function() {
		return jQuery;
	} );
}



var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in
// AMD (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( !noGlobal ) {
	window.jQuery = window.$ = jQuery;
}

return jQuery;
}));
/*!
 * Bootstrap v3.3.4 (http://getbootstrap.com)
 * Copyright 2011-2015 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */
if("undefined"==typeof jQuery)throw new Error("Bootstrap's JavaScript requires jQuery");+function(a){"use strict";var b=a.fn.jquery.split(" ")[0].split(".");if(b[0]<2&&b[1]<9||1==b[0]&&9==b[1]&&b[2]<1)throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher")}(jQuery),+function(a){"use strict";function b(){var a=document.createElement("bootstrap"),b={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var c in b)if(void 0!==a.style[c])return{end:b[c]};return!1}a.fn.emulateTransitionEnd=function(b){var c=!1,d=this;a(this).one("bsTransitionEnd",function(){c=!0});var e=function(){c||a(d).trigger(a.support.transition.end)};return setTimeout(e,b),this},a(function(){a.support.transition=b(),a.support.transition&&(a.event.special.bsTransitionEnd={bindType:a.support.transition.end,delegateType:a.support.transition.end,handle:function(b){return a(b.target).is(this)?b.handleObj.handler.apply(this,arguments):void 0}})})}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var c=a(this),e=c.data("bs.alert");e||c.data("bs.alert",e=new d(this)),"string"==typeof b&&e[b].call(c)})}var c='[data-dismiss="alert"]',d=function(b){a(b).on("click",c,this.close)};d.VERSION="3.3.4",d.TRANSITION_DURATION=150,d.prototype.close=function(b){function c(){g.detach().trigger("closed.bs.alert").remove()}var e=a(this),f=e.attr("data-target");f||(f=e.attr("href"),f=f&&f.replace(/.*(?=#[^\s]*$)/,""));var g=a(f);b&&b.preventDefault(),g.length||(g=e.closest(".alert")),g.trigger(b=a.Event("close.bs.alert")),b.isDefaultPrevented()||(g.removeClass("in"),a.support.transition&&g.hasClass("fade")?g.one("bsTransitionEnd",c).emulateTransitionEnd(d.TRANSITION_DURATION):c())};var e=a.fn.alert;a.fn.alert=b,a.fn.alert.Constructor=d,a.fn.alert.noConflict=function(){return a.fn.alert=e,this},a(document).on("click.bs.alert.data-api",c,d.prototype.close)}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.button"),f="object"==typeof b&&b;e||d.data("bs.button",e=new c(this,f)),"toggle"==b?e.toggle():b&&e.setState(b)})}var c=function(b,d){this.$element=a(b),this.options=a.extend({},c.DEFAULTS,d),this.isLoading=!1};c.VERSION="3.3.4",c.DEFAULTS={loadingText:"loading..."},c.prototype.setState=function(b){var c="disabled",d=this.$element,e=d.is("input")?"val":"html",f=d.data();b+="Text",null==f.resetText&&d.data("resetText",d[e]()),setTimeout(a.proxy(function(){d[e](null==f[b]?this.options[b]:f[b]),"loadingText"==b?(this.isLoading=!0,d.addClass(c).attr(c,c)):this.isLoading&&(this.isLoading=!1,d.removeClass(c).removeAttr(c))},this),0)},c.prototype.toggle=function(){var a=!0,b=this.$element.closest('[data-toggle="buttons"]');if(b.length){var c=this.$element.find("input");"radio"==c.prop("type")&&(c.prop("checked")&&this.$element.hasClass("active")?a=!1:b.find(".active").removeClass("active")),a&&c.prop("checked",!this.$element.hasClass("active")).trigger("change")}else this.$element.attr("aria-pressed",!this.$element.hasClass("active"));a&&this.$element.toggleClass("active")};var d=a.fn.button;a.fn.button=b,a.fn.button.Constructor=c,a.fn.button.noConflict=function(){return a.fn.button=d,this},a(document).on("click.bs.button.data-api",'[data-toggle^="button"]',function(c){var d=a(c.target);d.hasClass("btn")||(d=d.closest(".btn")),b.call(d,"toggle"),c.preventDefault()}).on("focus.bs.button.data-api blur.bs.button.data-api",'[data-toggle^="button"]',function(b){a(b.target).closest(".btn").toggleClass("focus",/^focus(in)?$/.test(b.type))})}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.carousel"),f=a.extend({},c.DEFAULTS,d.data(),"object"==typeof b&&b),g="string"==typeof b?b:f.slide;e||d.data("bs.carousel",e=new c(this,f)),"number"==typeof b?e.to(b):g?e[g]():f.interval&&e.pause().cycle()})}var c=function(b,c){this.$element=a(b),this.$indicators=this.$element.find(".carousel-indicators"),this.options=c,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on("keydown.bs.carousel",a.proxy(this.keydown,this)),"hover"==this.options.pause&&!("ontouchstart"in document.documentElement)&&this.$element.on("mouseenter.bs.carousel",a.proxy(this.pause,this)).on("mouseleave.bs.carousel",a.proxy(this.cycle,this))};c.VERSION="3.3.4",c.TRANSITION_DURATION=600,c.DEFAULTS={interval:5e3,pause:"hover",wrap:!0,keyboard:!0},c.prototype.keydown=function(a){if(!/input|textarea/i.test(a.target.tagName)){switch(a.which){case 37:this.prev();break;case 39:this.next();break;default:return}a.preventDefault()}},c.prototype.cycle=function(b){return b||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(a.proxy(this.next,this),this.options.interval)),this},c.prototype.getItemIndex=function(a){return this.$items=a.parent().children(".item"),this.$items.index(a||this.$active)},c.prototype.getItemForDirection=function(a,b){var c=this.getItemIndex(b),d="prev"==a&&0===c||"next"==a&&c==this.$items.length-1;if(d&&!this.options.wrap)return b;var e="prev"==a?-1:1,f=(c+e)%this.$items.length;return this.$items.eq(f)},c.prototype.to=function(a){var b=this,c=this.getItemIndex(this.$active=this.$element.find(".item.active"));return a>this.$items.length-1||0>a?void 0:this.sliding?this.$element.one("slid.bs.carousel",function(){b.to(a)}):c==a?this.pause().cycle():this.slide(a>c?"next":"prev",this.$items.eq(a))},c.prototype.pause=function(b){return b||(this.paused=!0),this.$element.find(".next, .prev").length&&a.support.transition&&(this.$element.trigger(a.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},c.prototype.next=function(){return this.sliding?void 0:this.slide("next")},c.prototype.prev=function(){return this.sliding?void 0:this.slide("prev")},c.prototype.slide=function(b,d){var e=this.$element.find(".item.active"),f=d||this.getItemForDirection(b,e),g=this.interval,h="next"==b?"left":"right",i=this;if(f.hasClass("active"))return this.sliding=!1;var j=f[0],k=a.Event("slide.bs.carousel",{relatedTarget:j,direction:h});if(this.$element.trigger(k),!k.isDefaultPrevented()){if(this.sliding=!0,g&&this.pause(),this.$indicators.length){this.$indicators.find(".active").removeClass("active");var l=a(this.$indicators.children()[this.getItemIndex(f)]);l&&l.addClass("active")}var m=a.Event("slid.bs.carousel",{relatedTarget:j,direction:h});return a.support.transition&&this.$element.hasClass("slide")?(f.addClass(b),f[0].offsetWidth,e.addClass(h),f.addClass(h),e.one("bsTransitionEnd",function(){f.removeClass([b,h].join(" ")).addClass("active"),e.removeClass(["active",h].join(" ")),i.sliding=!1,setTimeout(function(){i.$element.trigger(m)},0)}).emulateTransitionEnd(c.TRANSITION_DURATION)):(e.removeClass("active"),f.addClass("active"),this.sliding=!1,this.$element.trigger(m)),g&&this.cycle(),this}};var d=a.fn.carousel;a.fn.carousel=b,a.fn.carousel.Constructor=c,a.fn.carousel.noConflict=function(){return a.fn.carousel=d,this};var e=function(c){var d,e=a(this),f=a(e.attr("data-target")||(d=e.attr("href"))&&d.replace(/.*(?=#[^\s]+$)/,""));if(f.hasClass("carousel")){var g=a.extend({},f.data(),e.data()),h=e.attr("data-slide-to");h&&(g.interval=!1),b.call(f,g),h&&f.data("bs.carousel").to(h),c.preventDefault()}};a(document).on("click.bs.carousel.data-api","[data-slide]",e).on("click.bs.carousel.data-api","[data-slide-to]",e),a(window).on("load",function(){a('[data-ride="carousel"]').each(function(){var c=a(this);b.call(c,c.data())})})}(jQuery),+function(a){"use strict";function b(b){var c,d=b.attr("data-target")||(c=b.attr("href"))&&c.replace(/.*(?=#[^\s]+$)/,"");return a(d)}function c(b){return this.each(function(){var c=a(this),e=c.data("bs.collapse"),f=a.extend({},d.DEFAULTS,c.data(),"object"==typeof b&&b);!e&&f.toggle&&/show|hide/.test(b)&&(f.toggle=!1),e||c.data("bs.collapse",e=new d(this,f)),"string"==typeof b&&e[b]()})}var d=function(b,c){this.$element=a(b),this.options=a.extend({},d.DEFAULTS,c),this.$trigger=a('[data-toggle="collapse"][href="#'+b.id+'"],[data-toggle="collapse"][data-target="#'+b.id+'"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};d.VERSION="3.3.4",d.TRANSITION_DURATION=350,d.DEFAULTS={toggle:!0},d.prototype.dimension=function(){var a=this.$element.hasClass("width");return a?"width":"height"},d.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass("in")){var b,e=this.$parent&&this.$parent.children(".panel").children(".in, .collapsing");if(!(e&&e.length&&(b=e.data("bs.collapse"),b&&b.transitioning))){var f=a.Event("show.bs.collapse");if(this.$element.trigger(f),!f.isDefaultPrevented()){e&&e.length&&(c.call(e,"hide"),b||e.data("bs.collapse",null));var g=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[g](0).attr("aria-expanded",!0),this.$trigger.removeClass("collapsed").attr("aria-expanded",!0),this.transitioning=1;var h=function(){this.$element.removeClass("collapsing").addClass("collapse in")[g](""),this.transitioning=0,this.$element.trigger("shown.bs.collapse")};if(!a.support.transition)return h.call(this);var i=a.camelCase(["scroll",g].join("-"));this.$element.one("bsTransitionEnd",a.proxy(h,this)).emulateTransitionEnd(d.TRANSITION_DURATION)[g](this.$element[0][i])}}}},d.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass("in")){var b=a.Event("hide.bs.collapse");if(this.$element.trigger(b),!b.isDefaultPrevented()){var c=this.dimension();this.$element[c](this.$element[c]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded",!1),this.$trigger.addClass("collapsed").attr("aria-expanded",!1),this.transitioning=1;var e=function(){this.transitioning=0,this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")};return a.support.transition?void this.$element[c](0).one("bsTransitionEnd",a.proxy(e,this)).emulateTransitionEnd(d.TRANSITION_DURATION):e.call(this)}}},d.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()},d.prototype.getParent=function(){return a(this.options.parent).find('[data-toggle="collapse"][data-parent="'+this.options.parent+'"]').each(a.proxy(function(c,d){var e=a(d);this.addAriaAndCollapsedClass(b(e),e)},this)).end()},d.prototype.addAriaAndCollapsedClass=function(a,b){var c=a.hasClass("in");a.attr("aria-expanded",c),b.toggleClass("collapsed",!c).attr("aria-expanded",c)};var e=a.fn.collapse;a.fn.collapse=c,a.fn.collapse.Constructor=d,a.fn.collapse.noConflict=function(){return a.fn.collapse=e,this},a(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(d){var e=a(this);e.attr("data-target")||d.preventDefault();var f=b(e),g=f.data("bs.collapse"),h=g?"toggle":e.data();c.call(f,h)})}(jQuery),+function(a){"use strict";function b(b){b&&3===b.which||(a(e).remove(),a(f).each(function(){var d=a(this),e=c(d),f={relatedTarget:this};e.hasClass("open")&&(e.trigger(b=a.Event("hide.bs.dropdown",f)),b.isDefaultPrevented()||(d.attr("aria-expanded","false"),e.removeClass("open").trigger("hidden.bs.dropdown",f)))}))}function c(b){var c=b.attr("data-target");c||(c=b.attr("href"),c=c&&/#[A-Za-z]/.test(c)&&c.replace(/.*(?=#[^\s]*$)/,""));var d=c&&a(c);return d&&d.length?d:b.parent()}function d(b){return this.each(function(){var c=a(this),d=c.data("bs.dropdown");d||c.data("bs.dropdown",d=new g(this)),"string"==typeof b&&d[b].call(c)})}var e=".dropdown-backdrop",f='[data-toggle="dropdown"]',g=function(b){a(b).on("click.bs.dropdown",this.toggle)};g.VERSION="3.3.4",g.prototype.toggle=function(d){var e=a(this);if(!e.is(".disabled, :disabled")){var f=c(e),g=f.hasClass("open");if(b(),!g){"ontouchstart"in document.documentElement&&!f.closest(".navbar-nav").length&&a('<div class="dropdown-backdrop"/>').insertAfter(a(this)).on("click",b);var h={relatedTarget:this};if(f.trigger(d=a.Event("show.bs.dropdown",h)),d.isDefaultPrevented())return;e.trigger("focus").attr("aria-expanded","true"),f.toggleClass("open").trigger("shown.bs.dropdown",h)}return!1}},g.prototype.keydown=function(b){if(/(38|40|27|32)/.test(b.which)&&!/input|textarea/i.test(b.target.tagName)){var d=a(this);if(b.preventDefault(),b.stopPropagation(),!d.is(".disabled, :disabled")){var e=c(d),g=e.hasClass("open");if(!g&&27!=b.which||g&&27==b.which)return 27==b.which&&e.find(f).trigger("focus"),d.trigger("click");var h=" li:not(.disabled):visible a",i=e.find('[role="menu"]'+h+', [role="listbox"]'+h);if(i.length){var j=i.index(b.target);38==b.which&&j>0&&j--,40==b.which&&j<i.length-1&&j++,~j||(j=0),i.eq(j).trigger("focus")}}}};var h=a.fn.dropdown;a.fn.dropdown=d,a.fn.dropdown.Constructor=g,a.fn.dropdown.noConflict=function(){return a.fn.dropdown=h,this},a(document).on("click.bs.dropdown.data-api",b).on("click.bs.dropdown.data-api",".dropdown form",function(a){a.stopPropagation()}).on("click.bs.dropdown.data-api",f,g.prototype.toggle).on("keydown.bs.dropdown.data-api",f,g.prototype.keydown).on("keydown.bs.dropdown.data-api",'[role="menu"]',g.prototype.keydown).on("keydown.bs.dropdown.data-api",'[role="listbox"]',g.prototype.keydown)}(jQuery),+function(a){"use strict";function b(b,d){return this.each(function(){var e=a(this),f=e.data("bs.modal"),g=a.extend({},c.DEFAULTS,e.data(),"object"==typeof b&&b);f||e.data("bs.modal",f=new c(this,g)),"string"==typeof b?f[b](d):g.show&&f.show(d)})}var c=function(b,c){this.options=c,this.$body=a(document.body),this.$element=a(b),this.$dialog=this.$element.find(".modal-dialog"),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.options.remote&&this.$element.find(".modal-content").load(this.options.remote,a.proxy(function(){this.$element.trigger("loaded.bs.modal")},this))};c.VERSION="3.3.4",c.TRANSITION_DURATION=300,c.BACKDROP_TRANSITION_DURATION=150,c.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},c.prototype.toggle=function(a){return this.isShown?this.hide():this.show(a)},c.prototype.show=function(b){var d=this,e=a.Event("show.bs.modal",{relatedTarget:b});this.$element.trigger(e),this.isShown||e.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass("modal-open"),this.escape(),this.resize(),this.$element.on("click.dismiss.bs.modal",'[data-dismiss="modal"]',a.proxy(this.hide,this)),this.$dialog.on("mousedown.dismiss.bs.modal",function(){d.$element.one("mouseup.dismiss.bs.modal",function(b){a(b.target).is(d.$element)&&(d.ignoreBackdropClick=!0)})}),this.backdrop(function(){var e=a.support.transition&&d.$element.hasClass("fade");d.$element.parent().length||d.$element.appendTo(d.$body),d.$element.show().scrollTop(0),d.adjustDialog(),e&&d.$element[0].offsetWidth,d.$element.addClass("in").attr("aria-hidden",!1),d.enforceFocus();var f=a.Event("shown.bs.modal",{relatedTarget:b});e?d.$dialog.one("bsTransitionEnd",function(){d.$element.trigger("focus").trigger(f)}).emulateTransitionEnd(c.TRANSITION_DURATION):d.$element.trigger("focus").trigger(f)}))},c.prototype.hide=function(b){b&&b.preventDefault(),b=a.Event("hide.bs.modal"),this.$element.trigger(b),this.isShown&&!b.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),a(document).off("focusin.bs.modal"),this.$element.removeClass("in").attr("aria-hidden",!0).off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"),this.$dialog.off("mousedown.dismiss.bs.modal"),a.support.transition&&this.$element.hasClass("fade")?this.$element.one("bsTransitionEnd",a.proxy(this.hideModal,this)).emulateTransitionEnd(c.TRANSITION_DURATION):this.hideModal())},c.prototype.enforceFocus=function(){a(document).off("focusin.bs.modal").on("focusin.bs.modal",a.proxy(function(a){this.$element[0]===a.target||this.$element.has(a.target).length||this.$element.trigger("focus")},this))},c.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on("keydown.dismiss.bs.modal",a.proxy(function(a){27==a.which&&this.hide()},this)):this.isShown||this.$element.off("keydown.dismiss.bs.modal")},c.prototype.resize=function(){this.isShown?a(window).on("resize.bs.modal",a.proxy(this.handleUpdate,this)):a(window).off("resize.bs.modal")},c.prototype.hideModal=function(){var a=this;this.$element.hide(),this.backdrop(function(){a.$body.removeClass("modal-open"),a.resetAdjustments(),a.resetScrollbar(),a.$element.trigger("hidden.bs.modal")})},c.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},c.prototype.backdrop=function(b){var d=this,e=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var f=a.support.transition&&e;if(this.$backdrop=a('<div class="modal-backdrop '+e+'" />').appendTo(this.$body),this.$element.on("click.dismiss.bs.modal",a.proxy(function(a){return this.ignoreBackdropClick?void(this.ignoreBackdropClick=!1):void(a.target===a.currentTarget&&("static"==this.options.backdrop?this.$element[0].focus():this.hide()))},this)),f&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),!b)return;f?this.$backdrop.one("bsTransitionEnd",b).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):b()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass("in");var g=function(){d.removeBackdrop(),b&&b()};a.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one("bsTransitionEnd",g).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):g()}else b&&b()},c.prototype.handleUpdate=function(){this.adjustDialog()},c.prototype.adjustDialog=function(){var a=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&a?this.scrollbarWidth:"",paddingRight:this.bodyIsOverflowing&&!a?this.scrollbarWidth:""})},c.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:"",paddingRight:""})},c.prototype.checkScrollbar=function(){var a=window.innerWidth;if(!a){var b=document.documentElement.getBoundingClientRect();a=b.right-Math.abs(b.left)}this.bodyIsOverflowing=document.body.clientWidth<a,this.scrollbarWidth=this.measureScrollbar()},c.prototype.setScrollbar=function(){var a=parseInt(this.$body.css("padding-right")||0,10);this.originalBodyPad=document.body.style.paddingRight||"",this.bodyIsOverflowing&&this.$body.css("padding-right",a+this.scrollbarWidth)},c.prototype.resetScrollbar=function(){this.$body.css("padding-right",this.originalBodyPad)},c.prototype.measureScrollbar=function(){var a=document.createElement("div");a.className="modal-scrollbar-measure",this.$body.append(a);var b=a.offsetWidth-a.clientWidth;return this.$body[0].removeChild(a),b};var d=a.fn.modal;a.fn.modal=b,a.fn.modal.Constructor=c,a.fn.modal.noConflict=function(){return a.fn.modal=d,this},a(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(c){var d=a(this),e=d.attr("href"),f=a(d.attr("data-target")||e&&e.replace(/.*(?=#[^\s]+$)/,"")),g=f.data("bs.modal")?"toggle":a.extend({remote:!/#/.test(e)&&e},f.data(),d.data());d.is("a")&&c.preventDefault(),f.one("show.bs.modal",function(a){a.isDefaultPrevented()||f.one("hidden.bs.modal",function(){d.is(":visible")&&d.trigger("focus")})}),b.call(f,g,this)})}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.tooltip"),f="object"==typeof b&&b;(e||!/destroy|hide/.test(b))&&(e||d.data("bs.tooltip",e=new c(this,f)),"string"==typeof b&&e[b]())})}var c=function(a,b){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.init("tooltip",a,b)};c.VERSION="3.3.4",c.TRANSITION_DURATION=150,c.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,container:!1,viewport:{selector:"body",padding:0}},c.prototype.init=function(b,c,d){if(this.enabled=!0,this.type=b,this.$element=a(c),this.options=this.getOptions(d),this.$viewport=this.options.viewport&&a(this.options.viewport.selector||this.options.viewport),this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error("`selector` option must be specified when initializing "+this.type+" on the window.document object!");for(var e=this.options.trigger.split(" "),f=e.length;f--;){var g=e[f];if("click"==g)this.$element.on("click."+this.type,this.options.selector,a.proxy(this.toggle,this));else if("manual"!=g){var h="hover"==g?"mouseenter":"focusin",i="hover"==g?"mouseleave":"focusout";this.$element.on(h+"."+this.type,this.options.selector,a.proxy(this.enter,this)),this.$element.on(i+"."+this.type,this.options.selector,a.proxy(this.leave,this))}}this.options.selector?this._options=a.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.getOptions=function(b){return b=a.extend({},this.getDefaults(),this.$element.data(),b),b.delay&&"number"==typeof b.delay&&(b.delay={show:b.delay,hide:b.delay}),b},c.prototype.getDelegateOptions=function(){var b={},c=this.getDefaults();return this._options&&a.each(this._options,function(a,d){c[a]!=d&&(b[a]=d)}),b},c.prototype.enter=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data("bs."+this.type);return c&&c.$tip&&c.$tip.is(":visible")?void(c.hoverState="in"):(c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data("bs."+this.type,c)),clearTimeout(c.timeout),c.hoverState="in",c.options.delay&&c.options.delay.show?void(c.timeout=setTimeout(function(){"in"==c.hoverState&&c.show()},c.options.delay.show)):c.show())},c.prototype.leave=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data("bs."+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data("bs."+this.type,c)),clearTimeout(c.timeout),c.hoverState="out",c.options.delay&&c.options.delay.hide?void(c.timeout=setTimeout(function(){"out"==c.hoverState&&c.hide()},c.options.delay.hide)):c.hide()},c.prototype.show=function(){var b=a.Event("show.bs."+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(b);var d=a.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(b.isDefaultPrevented()||!d)return;var e=this,f=this.tip(),g=this.getUID(this.type);this.setContent(),f.attr("id",g),this.$element.attr("aria-describedby",g),this.options.animation&&f.addClass("fade");var h="function"==typeof this.options.placement?this.options.placement.call(this,f[0],this.$element[0]):this.options.placement,i=/\s?auto?\s?/i,j=i.test(h);j&&(h=h.replace(i,"")||"top"),f.detach().css({top:0,left:0,display:"block"}).addClass(h).data("bs."+this.type,this),this.options.container?f.appendTo(this.options.container):f.insertAfter(this.$element);var k=this.getPosition(),l=f[0].offsetWidth,m=f[0].offsetHeight;if(j){var n=h,o=this.options.container?a(this.options.container):this.$element.parent(),p=this.getPosition(o);h="bottom"==h&&k.bottom+m>p.bottom?"top":"top"==h&&k.top-m<p.top?"bottom":"right"==h&&k.right+l>p.width?"left":"left"==h&&k.left-l<p.left?"right":h,f.removeClass(n).addClass(h)}var q=this.getCalculatedOffset(h,k,l,m);this.applyPlacement(q,h);var r=function(){var a=e.hoverState;e.$element.trigger("shown.bs."+e.type),e.hoverState=null,"out"==a&&e.leave(e)};a.support.transition&&this.$tip.hasClass("fade")?f.one("bsTransitionEnd",r).emulateTransitionEnd(c.TRANSITION_DURATION):r()}},c.prototype.applyPlacement=function(b,c){var d=this.tip(),e=d[0].offsetWidth,f=d[0].offsetHeight,g=parseInt(d.css("margin-top"),10),h=parseInt(d.css("margin-left"),10);isNaN(g)&&(g=0),isNaN(h)&&(h=0),b.top=b.top+g,b.left=b.left+h,a.offset.setOffset(d[0],a.extend({using:function(a){d.css({top:Math.round(a.top),left:Math.round(a.left)})}},b),0),d.addClass("in");var i=d[0].offsetWidth,j=d[0].offsetHeight;"top"==c&&j!=f&&(b.top=b.top+f-j);var k=this.getViewportAdjustedDelta(c,b,i,j);k.left?b.left+=k.left:b.top+=k.top;var l=/top|bottom/.test(c),m=l?2*k.left-e+i:2*k.top-f+j,n=l?"offsetWidth":"offsetHeight";d.offset(b),this.replaceArrow(m,d[0][n],l)},c.prototype.replaceArrow=function(a,b,c){this.arrow().css(c?"left":"top",50*(1-a/b)+"%").css(c?"top":"left","")},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle();a.find(".tooltip-inner")[this.options.html?"html":"text"](b),a.removeClass("fade in top bottom left right")},c.prototype.hide=function(b){function d(){"in"!=e.hoverState&&f.detach(),e.$element.removeAttr("aria-describedby").trigger("hidden.bs."+e.type),b&&b()}var e=this,f=a(this.$tip),g=a.Event("hide.bs."+this.type);return this.$element.trigger(g),g.isDefaultPrevented()?void 0:(f.removeClass("in"),a.support.transition&&f.hasClass("fade")?f.one("bsTransitionEnd",d).emulateTransitionEnd(c.TRANSITION_DURATION):d(),this.hoverState=null,this)},c.prototype.fixTitle=function(){var a=this.$element;(a.attr("title")||"string"!=typeof a.attr("data-original-title"))&&a.attr("data-original-title",a.attr("title")||"").attr("title","")},c.prototype.hasContent=function(){return this.getTitle()},c.prototype.getPosition=function(b){b=b||this.$element;var c=b[0],d="BODY"==c.tagName,e=c.getBoundingClientRect();null==e.width&&(e=a.extend({},e,{width:e.right-e.left,height:e.bottom-e.top}));var f=d?{top:0,left:0}:b.offset(),g={scroll:d?document.documentElement.scrollTop||document.body.scrollTop:b.scrollTop()},h=d?{width:a(window).width(),height:a(window).height()}:null;return a.extend({},e,g,h,f)},c.prototype.getCalculatedOffset=function(a,b,c,d){return"bottom"==a?{top:b.top+b.height,left:b.left+b.width/2-c/2}:"top"==a?{top:b.top-d,left:b.left+b.width/2-c/2}:"left"==a?{top:b.top+b.height/2-d/2,left:b.left-c}:{top:b.top+b.height/2-d/2,left:b.left+b.width}},c.prototype.getViewportAdjustedDelta=function(a,b,c,d){var e={top:0,left:0};if(!this.$viewport)return e;var f=this.options.viewport&&this.options.viewport.padding||0,g=this.getPosition(this.$viewport);if(/right|left/.test(a)){var h=b.top-f-g.scroll,i=b.top+f-g.scroll+d;h<g.top?e.top=g.top-h:i>g.top+g.height&&(e.top=g.top+g.height-i)}else{var j=b.left-f,k=b.left+f+c;j<g.left?e.left=g.left-j:k>g.width&&(e.left=g.left+g.width-k)}return e},c.prototype.getTitle=function(){var a,b=this.$element,c=this.options;return a=b.attr("data-original-title")||("function"==typeof c.title?c.title.call(b[0]):c.title)},c.prototype.getUID=function(a){do a+=~~(1e6*Math.random());while(document.getElementById(a));return a},c.prototype.tip=function(){return this.$tip=this.$tip||a(this.options.template)},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},c.prototype.enable=function(){this.enabled=!0},c.prototype.disable=function(){this.enabled=!1},c.prototype.toggleEnabled=function(){this.enabled=!this.enabled},c.prototype.toggle=function(b){var c=this;b&&(c=a(b.currentTarget).data("bs."+this.type),c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data("bs."+this.type,c))),c.tip().hasClass("in")?c.leave(c):c.enter(c)},c.prototype.destroy=function(){var a=this;clearTimeout(this.timeout),this.hide(function(){a.$element.off("."+a.type).removeData("bs."+a.type)})};var d=a.fn.tooltip;a.fn.tooltip=b,a.fn.tooltip.Constructor=c,a.fn.tooltip.noConflict=function(){return a.fn.tooltip=d,this}}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.popover"),f="object"==typeof b&&b;(e||!/destroy|hide/.test(b))&&(e||d.data("bs.popover",e=new c(this,f)),"string"==typeof b&&e[b]())})}var c=function(a,b){this.init("popover",a,b)};if(!a.fn.tooltip)throw new Error("Popover requires tooltip.js");c.VERSION="3.3.4",c.DEFAULTS=a.extend({},a.fn.tooltip.Constructor.DEFAULTS,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),c.prototype=a.extend({},a.fn.tooltip.Constructor.prototype),c.prototype.constructor=c,c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle(),c=this.getContent();a.find(".popover-title")[this.options.html?"html":"text"](b),a.find(".popover-content").children().detach().end()[this.options.html?"string"==typeof c?"html":"append":"text"](c),a.removeClass("fade top bottom left right in"),a.find(".popover-title").html()||a.find(".popover-title").hide()},c.prototype.hasContent=function(){return this.getTitle()||this.getContent()},c.prototype.getContent=function(){var a=this.$element,b=this.options;return a.attr("data-content")||("function"==typeof b.content?b.content.call(a[0]):b.content)},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".arrow")};var d=a.fn.popover;a.fn.popover=b,a.fn.popover.Constructor=c,a.fn.popover.noConflict=function(){return a.fn.popover=d,this}}(jQuery),+function(a){"use strict";function b(c,d){this.$body=a(document.body),this.$scrollElement=a(a(c).is(document.body)?window:c),this.options=a.extend({},b.DEFAULTS,d),this.selector=(this.options.target||"")+" .nav li > a",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on("scroll.bs.scrollspy",a.proxy(this.process,this)),this.refresh(),this.process()}function c(c){return this.each(function(){var d=a(this),e=d.data("bs.scrollspy"),f="object"==typeof c&&c;e||d.data("bs.scrollspy",e=new b(this,f)),"string"==typeof c&&e[c]()})}b.VERSION="3.3.4",b.DEFAULTS={offset:10},b.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},b.prototype.refresh=function(){var b=this,c="offset",d=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),a.isWindow(this.$scrollElement[0])||(c="position",d=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var b=a(this),e=b.data("target")||b.attr("href"),f=/^#./.test(e)&&a(e);return f&&f.length&&f.is(":visible")&&[[f[c]().top+d,e]]||null}).sort(function(a,b){return a[0]-b[0]}).each(function(){b.offsets.push(this[0]),b.targets.push(this[1])})},b.prototype.process=function(){var a,b=this.$scrollElement.scrollTop()+this.options.offset,c=this.getScrollHeight(),d=this.options.offset+c-this.$scrollElement.height(),e=this.offsets,f=this.targets,g=this.activeTarget;if(this.scrollHeight!=c&&this.refresh(),b>=d)return g!=(a=f[f.length-1])&&this.activate(a);if(g&&b<e[0])return this.activeTarget=null,this.clear();for(a=e.length;a--;)g!=f[a]&&b>=e[a]&&(void 0===e[a+1]||b<e[a+1])&&this.activate(f[a])},b.prototype.activate=function(b){this.activeTarget=b,this.clear();var c=this.selector+'[data-target="'+b+'"],'+this.selector+'[href="'+b+'"]',d=a(c).parents("li").addClass("active");d.parent(".dropdown-menu").length&&(d=d.closest("li.dropdown").addClass("active")),d.trigger("activate.bs.scrollspy")},b.prototype.clear=function(){a(this.selector).parentsUntil(this.options.target,".active").removeClass("active")};var d=a.fn.scrollspy;a.fn.scrollspy=c,a.fn.scrollspy.Constructor=b,a.fn.scrollspy.noConflict=function(){return a.fn.scrollspy=d,this},a(window).on("load.bs.scrollspy.data-api",function(){a('[data-spy="scroll"]').each(function(){var b=a(this);c.call(b,b.data())})})}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.tab");e||d.data("bs.tab",e=new c(this)),"string"==typeof b&&e[b]()})}var c=function(b){this.element=a(b)};c.VERSION="3.3.4",c.TRANSITION_DURATION=150,c.prototype.show=function(){var b=this.element,c=b.closest("ul:not(.dropdown-menu)"),d=b.data("target");if(d||(d=b.attr("href"),d=d&&d.replace(/.*(?=#[^\s]*$)/,"")),!b.parent("li").hasClass("active")){
  var e=c.find(".active:last a"),f=a.Event("hide.bs.tab",{relatedTarget:b[0]}),g=a.Event("show.bs.tab",{relatedTarget:e[0]});if(e.trigger(f),b.trigger(g),!g.isDefaultPrevented()&&!f.isDefaultPrevented()){var h=a(d);this.activate(b.closest("li"),c),this.activate(h,h.parent(),function(){e.trigger({type:"hidden.bs.tab",relatedTarget:b[0]}),b.trigger({type:"shown.bs.tab",relatedTarget:e[0]})})}}},c.prototype.activate=function(b,d,e){function f(){g.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!1),b.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded",!0),h?(b[0].offsetWidth,b.addClass("in")):b.removeClass("fade"),b.parent(".dropdown-menu").length&&b.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!0),e&&e()}var g=d.find("> .active"),h=e&&a.support.transition&&(g.length&&g.hasClass("fade")||!!d.find("> .fade").length);g.length&&h?g.one("bsTransitionEnd",f).emulateTransitionEnd(c.TRANSITION_DURATION):f(),g.removeClass("in")};var d=a.fn.tab;a.fn.tab=b,a.fn.tab.Constructor=c,a.fn.tab.noConflict=function(){return a.fn.tab=d,this};var e=function(c){c.preventDefault(),b.call(a(this),"show")};a(document).on("click.bs.tab.data-api",'[data-toggle="tab"]',e).on("click.bs.tab.data-api",'[data-toggle="pill"]',e)}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.affix"),f="object"==typeof b&&b;e||d.data("bs.affix",e=new c(this,f)),"string"==typeof b&&e[b]()})}var c=function(b,d){this.options=a.extend({},c.DEFAULTS,d),this.$target=a(this.options.target).on("scroll.bs.affix.data-api",a.proxy(this.checkPosition,this)).on("click.bs.affix.data-api",a.proxy(this.checkPositionWithEventLoop,this)),this.$element=a(b),this.affixed=null,this.unpin=null,this.pinnedOffset=null,this.checkPosition()};c.VERSION="3.3.4",c.RESET="affix affix-top affix-bottom",c.DEFAULTS={offset:0,target:window},c.prototype.getState=function(a,b,c,d){var e=this.$target.scrollTop(),f=this.$element.offset(),g=this.$target.height();if(null!=c&&"top"==this.affixed)return c>e?"top":!1;if("bottom"==this.affixed)return null!=c?e+this.unpin<=f.top?!1:"bottom":a-d>=e+g?!1:"bottom";var h=null==this.affixed,i=h?e:f.top,j=h?g:b;return null!=c&&c>=e?"top":null!=d&&i+j>=a-d?"bottom":!1},c.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(c.RESET).addClass("affix");var a=this.$target.scrollTop(),b=this.$element.offset();return this.pinnedOffset=b.top-a},c.prototype.checkPositionWithEventLoop=function(){setTimeout(a.proxy(this.checkPosition,this),1)},c.prototype.checkPosition=function(){if(this.$element.is(":visible")){var b=this.$element.height(),d=this.options.offset,e=d.top,f=d.bottom,g=a(document.body).height();"object"!=typeof d&&(f=e=d),"function"==typeof e&&(e=d.top(this.$element)),"function"==typeof f&&(f=d.bottom(this.$element));var h=this.getState(g,b,e,f);if(this.affixed!=h){null!=this.unpin&&this.$element.css("top","");var i="affix"+(h?"-"+h:""),j=a.Event(i+".bs.affix");if(this.$element.trigger(j),j.isDefaultPrevented())return;this.affixed=h,this.unpin="bottom"==h?this.getPinnedOffset():null,this.$element.removeClass(c.RESET).addClass(i).trigger(i.replace("affix","affixed")+".bs.affix")}"bottom"==h&&this.$element.offset({top:g-b-f})}};var d=a.fn.affix;a.fn.affix=b,a.fn.affix.Constructor=c,a.fn.affix.noConflict=function(){return a.fn.affix=d,this},a(window).on("load",function(){a('[data-spy="affix"]').each(function(){var c=a(this),d=c.data();d.offset=d.offset||{},null!=d.offsetBottom&&(d.offset.bottom=d.offsetBottom),null!=d.offsetTop&&(d.offset.top=d.offsetTop),b.call(c,d)})})}(jQuery);
/*!
 * JavaScript Cookie v2.1.4
 * https://github.com/js-cookie/js-cookie
 *
 * Copyright 2006, 2015 Klaus Hartl & Fagner Brack
 * Released under the MIT license
 */
;(function (factory) {
	var registeredInModuleLoader = false;
	if (typeof define === 'function' && define.amd) {
		define(factory);
		registeredInModuleLoader = true;
	}
	if (typeof exports === 'object') {
		module.exports = factory();
		registeredInModuleLoader = true;
	}
	if (!registeredInModuleLoader) {
		var OldCookies = window.Cookies;
		var api = window.Cookies = factory();
		api.noConflict = function () {
			window.Cookies = OldCookies;
			return api;
		};
	}
}(function () {
	function extend () {
		var i = 0;
		var result = {};
		for (; i < arguments.length; i++) {
			var attributes = arguments[ i ];
			for (var key in attributes) {
				result[key] = attributes[key];
			}
		}
		return result;
	}

	function init (converter) {
		function api (key, value, attributes) {
			var result;
			if (typeof document === 'undefined') {
				return;
			}

			// Write

			if (arguments.length > 1) {
				attributes = extend({
					path: '/'
				}, api.defaults, attributes);

				if (typeof attributes.expires === 'number') {
					var expires = new Date();
					expires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);
					attributes.expires = expires;
				}

				// We're using "expires" because "max-age" is not supported by IE
				attributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';

				try {
					result = JSON.stringify(value);
					if (/^[\{\[]/.test(result)) {
						value = result;
					}
				} catch (e) {}

				if (!converter.write) {
					value = encodeURIComponent(String(value))
						.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);
				} else {
					value = converter.write(value, key);
				}

				key = encodeURIComponent(String(key));
				key = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);
				key = key.replace(/[\(\)]/g, escape);

				var stringifiedAttributes = '';

				for (var attributeName in attributes) {
					if (!attributes[attributeName]) {
						continue;
					}
					stringifiedAttributes += '; ' + attributeName;
					if (attributes[attributeName] === true) {
						continue;
					}
					stringifiedAttributes += '=' + attributes[attributeName];
				}
				return (document.cookie = key + '=' + value + stringifiedAttributes);
			}

			// Read

			if (!key) {
				result = {};
			}

			// To prevent the for loop in the first place assign an empty array
			// in case there are no cookies at all. Also prevents odd result when
			// calling "get()"
			var cookies = document.cookie ? document.cookie.split('; ') : [];
			var rdecode = /(%[0-9A-Z]{2})+/g;
			var i = 0;

			for (; i < cookies.length; i++) {
				var parts = cookies[i].split('=');
				var cookie = parts.slice(1).join('=');

				if (cookie.charAt(0) === '"') {
					cookie = cookie.slice(1, -1);
				}

				try {
					var name = parts[0].replace(rdecode, decodeURIComponent);
					cookie = converter.read ?
						converter.read(cookie, name) : converter(cookie, name) ||
						cookie.replace(rdecode, decodeURIComponent);

					if (this.json) {
						try {
							cookie = JSON.parse(cookie);
						} catch (e) {}
					}

					if (key === name) {
						result = cookie;
						break;
					}

					if (!key) {
						result[name] = cookie;
					}
				} catch (e) {}
			}

			return result;
		}

		api.set = api;
		api.get = function (key) {
			return api.call(api, key);
		};
		api.getJSON = function () {
			return api.apply({
				json: true
			}, [].slice.call(arguments));
		};
		api.defaults = {};

		api.remove = function (key, attributes) {
			api(key, '', extend(attributes, {
				expires: -1
			}));
		};

		api.withConverter = init;

		return api;
	}

	return init(function () {});
}));
(function(t,e){"object"==typeof exports?module.exports=e():"function"==typeof define&&define.amd?define(e):t.Spinner=e()})(this,function(){"use strict";function t(t,e){var i,n=document.createElement(t||"div");for(i in e)n[i]=e[i];return n}function e(t){for(var e=1,i=arguments.length;i>e;e++)t.appendChild(arguments[e]);return t}function i(t,e,i,n){var r=["opacity",e,~~(100*t),i,n].join("-"),o=.01+100*(i/n),a=Math.max(1-(1-t)/e*(100-o),t),s=u.substring(0,u.indexOf("Animation")).toLowerCase(),l=s&&"-"+s+"-"||"";return c[r]||(p.insertRule("@"+l+"keyframes "+r+"{"+"0%{opacity:"+a+"}"+o+"%{opacity:"+t+"}"+(o+.01)+"%{opacity:1}"+(o+e)%100+"%{opacity:"+t+"}"+"100%{opacity:"+a+"}"+"}",p.cssRules.length),c[r]=1),r}function n(t,e){var i,n,r=t.style;for(e=e.charAt(0).toUpperCase()+e.slice(1),n=0;d.length>n;n++)if(i=d[n]+e,void 0!==r[i])return i;return void 0!==r[e]?e:void 0}function r(t,e){for(var i in e)t.style[n(t,i)||i]=e[i];return t}function o(t){for(var e=1;arguments.length>e;e++){var i=arguments[e];for(var n in i)void 0===t[n]&&(t[n]=i[n])}return t}function a(t,e){return"string"==typeof t?t:t[e%t.length]}function s(t){this.opts=o(t||{},s.defaults,f)}function l(){function i(e,i){return t("<"+e+' xmlns="urn:schemas-microsoft.com:vml" class="spin-vml">',i)}p.addRule(".spin-vml","behavior:url(#default#VML)"),s.prototype.lines=function(t,n){function o(){return r(i("group",{coordsize:d+" "+d,coordorigin:-u+" "+-u}),{width:d,height:d})}function s(t,s,l){e(p,e(r(o(),{rotation:360/n.lines*t+"deg",left:~~s}),e(r(i("roundrect",{arcsize:n.corners}),{width:u,height:n.width,left:n.radius,top:-n.width>>1,filter:l}),i("fill",{color:a(n.color,t),opacity:n.opacity}),i("stroke",{opacity:0}))))}var l,u=n.length+n.width,d=2*u,c=2*-(n.width+n.length)+"px",p=r(o(),{position:"absolute",top:c,left:c});if(n.shadow)for(l=1;n.lines>=l;l++)s(l,-2,"progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)");for(l=1;n.lines>=l;l++)s(l);return e(t,p)},s.prototype.opacity=function(t,e,i,n){var r=t.firstChild;n=n.shadow&&n.lines||0,r&&r.childNodes.length>e+n&&(r=r.childNodes[e+n],r=r&&r.firstChild,r=r&&r.firstChild,r&&(r.opacity=i))}}var u,d=["webkit","Moz","ms","O"],c={},p=function(){var i=t("style",{type:"text/css"});return e(document.getElementsByTagName("head")[0],i),i.sheet||i.styleSheet}(),f={lines:12,length:7,width:5,radius:10,rotate:0,corners:1,color:"#000",direction:1,speed:1,trail:100,opacity:.25,fps:20,zIndex:2e9,className:"spinner",top:"50%",left:"50%",position:"absolute"};s.defaults={},o(s.prototype,{spin:function(e){this.stop();var i=this,n=i.opts,o=i.el=r(t(0,{className:n.className}),{position:n.position,width:0,zIndex:n.zIndex});if(n.radius+n.length+n.width,r(o,{left:n.left,top:n.top}),e&&e.insertBefore(o,e.firstChild||null),o.setAttribute("role","progressbar"),i.lines(o,i.opts),!u){var a,s=0,l=(n.lines-1)*(1-n.direction)/2,d=n.fps,c=d/n.speed,p=(1-n.opacity)/(c*n.trail/100),f=c/n.lines;(function h(){s++;for(var t=0;n.lines>t;t++)a=Math.max(1-(s+(n.lines-t)*f)%c*p,n.opacity),i.opacity(o,t*n.direction+l,a,n);i.timeout=i.el&&setTimeout(h,~~(1e3/d))})()}return i},stop:function(){var t=this.el;return t&&(clearTimeout(this.timeout),t.parentNode&&t.parentNode.removeChild(t),this.el=void 0),this},lines:function(n,o){function s(e,i){return r(t(),{position:"absolute",width:o.length+o.width+"px",height:o.width+"px",background:e,boxShadow:i,transformOrigin:"left",transform:"rotate("+~~(360/o.lines*d+o.rotate)+"deg) translate("+o.radius+"px"+",0)",borderRadius:(o.corners*o.width>>1)+"px"})}for(var l,d=0,c=(o.lines-1)*(1-o.direction)/2;o.lines>d;d++)l=r(t(),{position:"absolute",top:1+~(o.width/2)+"px",transform:o.hwaccel?"translate3d(0,0,0)":"",opacity:o.opacity,animation:u&&i(o.opacity,o.trail,c+d*o.direction,o.lines)+" "+1/o.speed+"s linear infinite"}),o.shadow&&e(l,r(s("#000","0 0 4px #000"),{top:"2px"})),e(n,e(l,s(a(o.color,d),"0 0 1px rgba(0,0,0,.1)")));return n},opacity:function(t,e,i){t.childNodes.length>e&&(t.childNodes[e].style.opacity=i)}});var h=r(t("group"),{behavior:"url(#default#VML)"});return!n(h,"transform")&&h.adj?l():u=n(h,"animation"),s});
/*!
 * Ladda
 * http://lab.hakim.se/ladda
 * MIT licensed
 *
 * Copyright (C) 2015 Hakim El Hattab, http://hakim.se
 */
/* jshint node:true, browser:true */
(function( root, factory ) {

	// CommonJS
	if( typeof exports === 'object' )  {
		module.exports = factory(require('spin.js'));
	}
	// AMD module
	else if( typeof define === 'function' && define.amd ) {
		define( [ 'spin' ], factory );
	}
	// Browser global
	else {
		root.Ladda = factory( root.Spinner );
	}

}
(this, function( Spinner ) {
	'use strict';

	// All currently instantiated instances of Ladda
	var ALL_INSTANCES = [];

	/**
	 * Creates a new instance of Ladda which wraps the
	 * target button element.
	 *
	 * @return An API object that can be used to control
	 * the loading animation state.
	 */
	function create( button ) {

		if( typeof button === 'undefined' ) {
			console.warn( "Ladda button target must be defined." );
			return;
		}

		// The button must have the class "ladda-button"
		if( !/ladda-button/i.test( button.className ) ) {
			button.className += ' ladda-button';
		}

		// Style is required, default to "expand-right"
		if( !button.hasAttribute( 'data-style' ) ) {
			button.setAttribute( 'data-style', 'expand-right' );
		}

		// The text contents must be wrapped in a ladda-label
		// element, create one if it doesn't already exist
		if( !button.querySelector( '.ladda-label' ) ) {
			var laddaLabel = document.createElement( 'span' );
			laddaLabel.className = 'ladda-label';
			wrapContent( button, laddaLabel );
		}

		// The spinner component
		var spinner,
			spinnerWrapper = button.querySelector( '.ladda-spinner' );

		// Wrapper element for the spinner
		if( !spinnerWrapper ) {
			spinnerWrapper = document.createElement( 'span' );
			spinnerWrapper.className = 'ladda-spinner';
		}

		button.appendChild( spinnerWrapper );

		// Timer used to delay starting/stopping
		var timer;

		var instance = {

			/**
			 * Enter the loading state.
			 */
			start: function() {

				// Create the spinner if it doesn't already exist
				if( !spinner ) spinner = createSpinner( button );

				button.setAttribute( 'disabled', '' );
				button.setAttribute( 'data-loading', '' );

				clearTimeout( timer );
				spinner.spin( spinnerWrapper );

				this.setProgress( 0 );

				return this; // chain

			},

			/**
			 * Enter the loading state, after a delay.
			 */
			startAfter: function( delay ) {

				clearTimeout( timer );
				timer = setTimeout( function() { instance.start(); }, delay );

				return this; // chain

			},

			/**
			 * Exit the loading state.
			 */
			stop: function() {

				button.removeAttribute( 'disabled' );
				button.removeAttribute( 'data-loading' );

				// Kill the animation after a delay to make sure it
				// runs for the duration of the button transition
				clearTimeout( timer );

				if( spinner ) {
					timer = setTimeout( function() { spinner.stop(); }, 1000 );
				}

				return this; // chain

			},

			/**
			 * Toggle the loading state on/off.
			 */
			toggle: function() {

				if( this.isLoading() ) {
					this.stop();
				}
				else {
					this.start();
				}

				return this; // chain

			},

			/**
			 * Sets the width of the visual progress bar inside of
			 * this Ladda button
			 *
			 * @param {Number} progress in the range of 0-1
			 */
			setProgress: function( progress ) {

				// Cap it
				progress = Math.max( Math.min( progress, 1 ), 0 );

				var progressElement = button.querySelector( '.ladda-progress' );

				// Remove the progress bar if we're at 0 progress
				if( progress === 0 && progressElement && progressElement.parentNode ) {
					progressElement.parentNode.removeChild( progressElement );
				}
				else {
					if( !progressElement ) {
						progressElement = document.createElement( 'div' );
						progressElement.className = 'ladda-progress';
						button.appendChild( progressElement );
					}

					progressElement.style.width = ( ( progress || 0 ) * button.offsetWidth ) + 'px';
				}

			},

			enable: function() {

				this.stop();

				return this; // chain

			},

			disable: function () {

				this.stop();
				button.setAttribute( 'disabled', '' );

				return this; // chain

			},

			isLoading: function() {

				return button.hasAttribute( 'data-loading' );

			},

			remove: function() {

				clearTimeout( timer );

				button.removeAttribute( 'disabled', '' );
				button.removeAttribute( 'data-loading', '' );

				if( spinner ) {
					spinner.stop();
					spinner = null;
				}

				for( var i = 0, len = ALL_INSTANCES.length; i < len; i++ ) {
					if( instance === ALL_INSTANCES[i] ) {
						ALL_INSTANCES.splice( i, 1 );
						break;
					}
				}

			}

		};

		ALL_INSTANCES.push( instance );

		return instance;

	}

	/**
	* Get the first ancestor node from an element, having a
	* certain type.
	*
	* @param elem An HTML element
	* @param type an HTML tag type (uppercased)
	*
	* @return An HTML element
	*/
	function getAncestorOfTagType( elem, type ) {

		while ( elem.parentNode && elem.tagName !== type ) {
			elem = elem.parentNode;
		}

		return ( type === elem.tagName ) ? elem : undefined;

	}

	/**
	 * Returns a list of all inputs in the given form that
	 * have their `required` attribute set.
	 *
	 * @param form The from HTML element to look in
	 *
	 * @return A list of elements
	 */
	function getRequiredFields( form ) {

		var requirables = [ 'input', 'textarea', 'select' ];
		var inputs = [];

		for( var i = 0; i < requirables.length; i++ ) {
			var candidates = form.getElementsByTagName( requirables[i] );
			for( var j = 0; j < candidates.length; j++ ) {
				if ( candidates[j].hasAttribute( 'required' ) ) {
					inputs.push( candidates[j] );
				}
			}
		}

		return inputs;

	}


	/**
	 * Binds the target buttons to automatically enter the
	 * loading state when clicked.
	 *
	 * @param target Either an HTML element or a CSS selector.
	 * @param options
	 *          - timeout Number of milliseconds to wait before
	 *            automatically cancelling the animation.
	 */
	function bind( target, options ) {

		options = options || {};

		var targets = [];

		if( typeof target === 'string' ) {
			targets = toArray( document.querySelectorAll( target ) );
		}
		else if( typeof target === 'object' && typeof target.nodeName === 'string' ) {
			targets = [ target ];
		}

		for( var i = 0, len = targets.length; i < len; i++ ) {

			(function() {
				var element = targets[i];

				// Make sure we're working with a DOM element
				if( typeof element.addEventListener === 'function' ) {
					var instance = create( element );
					var timeout = -1;

					element.addEventListener( 'click', function( event ) {

						// If the button belongs to a form, make sure all the
						// fields in that form are filled out
						var valid = true;
						var form = getAncestorOfTagType( element, 'FORM' );

						if( typeof form !== 'undefined' ) {
							var requireds = getRequiredFields( form );
							for( var i = 0; i < requireds.length; i++ ) {

								// Alternatively to this trim() check,
								// we could have use .checkValidity() or .validity.valid
								if( requireds[i].value.replace( /^\s+|\s+$/g, '' ) === '' ) {
									valid = false;
								}

								// Radiobuttons and Checkboxes need to be checked for the "checked" attribute
								if( (requireds[i].type === 'checkbox' || requireds[i].type === 'radio' ) && !requireds[i].checked ) {
									valid = false;
								}

								// Email field validation, otherwise button starts spinning although field is not complete
								if( requireds[i].type === 'email' ) {
									valid = /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$/.test( requireds[i].value );
								}

							}
						}

						if( valid ) {
							// This is asynchronous to avoid an issue where setting
							// the disabled attribute on the button prevents forms
							// from submitting
							instance.startAfter( 1 );

							// Set a loading timeout if one is specified
							if( typeof options.timeout === 'number' ) {
								clearTimeout( timeout );
								timeout = setTimeout( instance.stop, options.timeout );
							}

							// Invoke callbacks
							if( typeof options.callback === 'function' ) {
								options.callback.apply( null, [ instance ] );
							}
						}

					}, false );
				}
			})();

		}

	}

	/**
	 * Stops ALL current loading animations.
	 */
	function stopAll() {

		for( var i = 0, len = ALL_INSTANCES.length; i < len; i++ ) {
			ALL_INSTANCES[i].stop();
		}

	}

	function createSpinner( button ) {

		var height = button.offsetHeight,
			spinnerColor,
			spinnerLines;

		if( height === 0 ) {
			// We may have an element that is not visible so
			// we attempt to get the height in a different way
			height = parseFloat( window.getComputedStyle( button ).height );
		}

		// If the button is tall we can afford some padding
		if( height > 32 ) {
			height *= 0.8;
		}

		// Prefer an explicit height if one is defined
		if( button.hasAttribute( 'data-spinner-size' ) ) {
			height = parseInt( button.getAttribute( 'data-spinner-size' ), 10 );
		}

		// Allow buttons to specify the color of the spinner element
		if( button.hasAttribute( 'data-spinner-color' ) ) {
			spinnerColor = button.getAttribute( 'data-spinner-color' );
		}

		// Allow buttons to specify the number of lines of the spinner
		if( button.hasAttribute( 'data-spinner-lines' ) ) {
			spinnerLines = parseInt( button.getAttribute( 'data-spinner-lines' ), 10 );
		}

		var radius = height * 0.2,
			length = radius * 0.6,
			width = radius < 7 ? 2 : 3;

		return new Spinner( {
			color: spinnerColor || '#fff',
			lines: spinnerLines || 12,
			radius: radius,
			length: length,
			width: width,
			zIndex: 'auto',
			top: 'auto',
			left: 'auto',
			className: ''
		} );

	}

	function toArray( nodes ) {

		var a = [];

		for ( var i = 0; i < nodes.length; i++ ) {
			a.push( nodes[ i ] );
		}

		return a;

	}

	function wrapContent( node, wrapper ) {

		var r = document.createRange();
		r.selectNodeContents( node );
		r.surroundContents( wrapper );
		node.appendChild( wrapper );

	}

	// Public API
	return {

		bind: bind,
		create: create,
		stopAll: stopAll

	};

}));
//
// Use internal $.serializeArray to get list of form elements which is
// consistent with $.serialize
//
// From version 2.0.0, $.serializeObject will stop converting [name] values
// to camelCase format. This is *consistent* with other serialize methods:
//
//   - $.serialize
//   - $.serializeArray
//
// If you require camel casing, you can either download version 1.0.4 or map
// them yourself.
//

(function($){
	$.fn.serializeObject = function () {
		"use strict";

		var result = {};
		var extend = function (i, element) {
			var node = result[element.name];

	// If node with same name exists already, need to convert it to an array as it
	// is a multi-value field (i.e., checkboxes)

			if ('undefined' !== typeof node && node !== null) {
				if ($.isArray(node)) {
					node.push(element.value);
				} else {
					result[element.name] = [node, element.value];
				}
			} else {
				result[element.name] = element.value;
			}
		};

		$.each(this.serializeArray(), extend);
		return result;
	};
})(jQuery);
// I18n.js
// =======
//
// This small library provides the Rails I18n API on the Javascript.
// You don't actually have to use Rails (or even Ruby) to use I18n.js.
// Just make sure you export all translations in an object like this:
//
//     I18n.translations.en = {
//       hello: "Hello World"
//     };
//
// See tests for specific formatting like numbers and dates.
//

// Using UMD pattern from
// https://github.com/umdjs/umd#regular-module
// `returnExports.js` version
;(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define("i18n", function(){ return factory(root);});
  } else if (typeof module === 'object' && module.exports) {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like environments that support module.exports,
    // like Node.
    module.exports = factory(root);
  } else {
    // Browser globals (root is window)
    root.I18n = factory(root);
  }
}(this, function(global) {
  "use strict";

  // Use previously defined object if exists in current scope
  var I18n = global && global.I18n || {};

  // Just cache the Array#slice function.
  var slice = Array.prototype.slice;

  // Apply number padding.
  var padding = function(number) {
    return ("0" + number.toString()).substr(-2);
  };

  // Improved toFixed number rounding function with support for unprecise floating points
  // JavaScript's standard toFixed function does not round certain numbers correctly (for example 0.105 with precision 2).
  var toFixed = function(number, precision) {
    return decimalAdjust('round', number, -precision).toFixed(precision);
  };

  // Is a given variable an object?
  // Borrowed from Underscore.js
  var isObject = function(obj) {
    var type = typeof obj;
    return type === 'function' || type === 'object'
  };

  var isFunction = function(func) {
    var type = typeof func;
    return type === 'function'
  };

  // Check if value is different than undefined and null;
  var isSet = function(value) {
    return typeof(value) !== 'undefined' && value !== null;
  };

  // Is a given value an array?
  // Borrowed from Underscore.js
  var isArray = function(val) {
    if (Array.isArray) {
      return Array.isArray(val);
    }
    return Object.prototype.toString.call(val) === '[object Array]';
  };

  var isString = function(val) {
    return typeof val === 'string' || Object.prototype.toString.call(val) === '[object String]';
  };

  var isNumber = function(val) {
    return typeof val === 'number' || Object.prototype.toString.call(val) === '[object Number]';
  };

  var isBoolean = function(val) {
    return val === true || val === false;
  };

  var isNull = function(val) {
    return val === null;
  };

  var decimalAdjust = function(type, value, exp) {
    // If the exp is undefined or zero...
    if (typeof exp === 'undefined' || +exp === 0) {
      return Math[type](value);
    }
    value = +value;
    exp = +exp;
    // If the value is not a number or the exp is not an integer...
    if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {
      return NaN;
    }
    // Shift
    value = value.toString().split('e');
    value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));
    // Shift back
    value = value.toString().split('e');
    return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));
  };

  var lazyEvaluate = function(message, scope) {
    if (isFunction(message)) {
      return message(scope);
    } else {
      return message;
    }
  };

  var merge = function (dest, obj) {
    var key, value;
    for (key in obj) if (obj.hasOwnProperty(key)) {
      value = obj[key];
      if (isString(value) || isNumber(value) || isBoolean(value) || isArray(value) || isNull(value)) {
        dest[key] = value;
      } else {
        if (dest[key] == null) dest[key] = {};
        merge(dest[key], value);
      }
    }
    return dest;
  };

  // Set default days/months translations.
  var DATE = {
      day_names: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
    , abbr_day_names: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]
    , month_names: [null, "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
    , abbr_month_names: [null, "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
    , meridian: ["AM", "PM"]
  };

  // Set default number format.
  var NUMBER_FORMAT = {
      precision: 3
    , separator: "."
    , delimiter: ","
    , strip_insignificant_zeros: false
  };

  // Set default currency format.
  var CURRENCY_FORMAT = {
      unit: "$"
    , precision: 2
    , format: "%u%n"
    , sign_first: true
    , delimiter: ","
    , separator: "."
  };

  // Set default percentage format.
  var PERCENTAGE_FORMAT = {
      unit: "%"
    , precision: 3
    , format: "%n%u"
    , separator: "."
    , delimiter: ""
  };

  // Set default size units.
  var SIZE_UNITS = [null, "kb", "mb", "gb", "tb"];

  // Other default options
  var DEFAULT_OPTIONS = {
    // Set default locale. This locale will be used when fallback is enabled and
    // the translation doesn't exist in a particular locale.
      defaultLocale: "en"
    // Set the current locale to `en`.
    , locale: "en"
    // Set the translation key separator.
    , defaultSeparator: "."
    // Set the placeholder format. Accepts `{{placeholder}}` and `%{placeholder}`.
    , placeholder: /(?:\{\{|%\{)(.*?)(?:\}\}?)/gm
    // Set if engine should fallback to the default locale when a translation
    // is missing.
    , fallbacks: false
    // Set the default translation object.
    , translations: {}
    // Set missing translation behavior. 'message' will display a message
    // that the translation is missing, 'guess' will try to guess the string
    , missingBehaviour: 'message'
    // if you use missingBehaviour with 'message', but want to know that the
    // string is actually missing for testing purposes, you can prefix the
    // guessed string by setting the value here. By default, no prefix!
    , missingTranslationPrefix: ''
  };

  // Set default locale. This locale will be used when fallback is enabled and
  // the translation doesn't exist in a particular locale.
  I18n.reset = function() {
    var key;
    for (key in DEFAULT_OPTIONS) {
      this[key] = DEFAULT_OPTIONS[key];
    }
  };

  // Much like `reset`, but only assign options if not already assigned
  I18n.initializeOptions = function() {
    var key;
    for (key in DEFAULT_OPTIONS) if (!isSet(this[key])) {
      this[key] = DEFAULT_OPTIONS[key];
    }
  };
  I18n.initializeOptions();

  // Return a list of all locales that must be tried before returning the
  // missing translation message. By default, this will consider the inline option,
  // current locale and fallback locale.
  //
  //     I18n.locales.get("de-DE");
  //     // ["de-DE", "de", "en"]
  //
  // You can define custom rules for any locale. Just make sure you return a array
  // containing all locales.
  //
  //     // Default the Wookie locale to English.
  //     I18n.locales["wk"] = function(locale) {
  //       return ["en"];
  //     };
  //
  I18n.locales = {};

  // Retrieve locales based on inline locale, current locale or default to
  // I18n's detection.
  I18n.locales.get = function(locale) {
    var result = this[locale] || this[I18n.locale] || this["default"];

    if (isFunction(result)) {
      result = result(locale);
    }

    if (isArray(result) === false) {
      result = [result];
    }

    return result;
  };

  // The default locale list.
  I18n.locales["default"] = function(locale) {
    var locales = []
      , list = []
    ;

    // Handle the inline locale option that can be provided to
    // the `I18n.t` options.
    if (locale) {
      locales.push(locale);
    }

    // Add the current locale to the list.
    if (!locale && I18n.locale) {
      locales.push(I18n.locale);
    }

    // Add the default locale if fallback strategy is enabled.
    if (I18n.fallbacks && I18n.defaultLocale) {
      locales.push(I18n.defaultLocale);
    }

    // Locale code format 1:
    // According to RFC4646 (http://www.ietf.org/rfc/rfc4646.txt)
    // language codes for Traditional Chinese should be `zh-Hant`
    //
    // But due to backward compatibility
    // We use older version of IETF language tag
    // @see http://www.w3.org/TR/html401/struct/dirlang.html
    // @see http://en.wikipedia.org/wiki/IETF_language_tag
    //
    // Format: `language-code = primary-code ( "-" subcode )*`
    //
    // primary-code uses ISO639-1
    // @see http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
    // @see http://www.iso.org/iso/home/standards/language_codes.htm
    //
    // subcode uses ISO 3166-1 alpha-2
    // @see http://en.wikipedia.org/wiki/ISO_3166
    // @see http://www.iso.org/iso/country_codes.htm
    //
    // @note
    //   subcode can be in upper case or lower case
    //   defining it in upper case is a convention only


    // Locale code format 2:
    // Format: `code = primary-code ( "-" region-code )*`
    // primary-code uses ISO 639-1
    // script-code uses ISO 15924
    // region-code uses ISO 3166-1 alpha-2
    // Example: zh-Hant-TW, en-HK, zh-Hant-CN
    //
    // It is similar to RFC4646 (or actually the same),
    // but seems to be limited to language, script, region

    // Compute each locale with its country code.
    // So this will return an array containing
    // `de-DE` and `de`
    // or
    // `zh-hans-tw`, `zh-hans`, `zh`
    // locales.
    locales.forEach(function(locale) {
      var localeParts = locale.split("-");
      var firstFallback = null;
      var secondFallback = null;
      if (localeParts.length === 3) {
        firstFallback = [
          localeParts[0],
          localeParts[1]
        ].join("-");
        secondFallback = localeParts[0];
      }
      else if (localeParts.length === 2) {
        firstFallback = localeParts[0];
      }

      if (list.indexOf(locale) === -1) {
        list.push(locale);
      }

      if (! I18n.fallbacks) {
        return;
      }

      [
        firstFallback,
        secondFallback
      ].forEach(function(nullableFallbackLocale) {
        // We don't want null values
        if (typeof nullableFallbackLocale === "undefined") { return; }
        if (nullableFallbackLocale === null) { return; }
        // We don't want duplicate values
        //
        // Comparing with `locale` first is faster than
        // checking whether value's presence in the list
        if (nullableFallbackLocale === locale) { return; }
        if (list.indexOf(nullableFallbackLocale) !== -1) { return; }

        list.push(nullableFallbackLocale);
      });
    });

    // No locales set? English it is.
    if (!locales.length) {
      locales.push("en");
    }

    return list;
  };

  // Hold pluralization rules.
  I18n.pluralization = {};

  // Return the pluralizer for a specific locale.
  // If no specify locale is found, then I18n's default will be used.
  I18n.pluralization.get = function(locale) {
    return this[locale] || this[I18n.locale] || this["default"];
  };

  // The default pluralizer rule.
  // It detects the `zero`, `one`, and `other` scopes.
  I18n.pluralization["default"] = function(count) {
    switch (count) {
      case 0: return ["zero", "other"];
      case 1: return ["one"];
      default: return ["other"];
    }
  };

  // Return current locale. If no locale has been set, then
  // the current locale will be the default locale.
  I18n.currentLocale = function() {
    return this.locale || this.defaultLocale;
  };

  // Check if value is different than undefined and null;
  I18n.isSet = isSet;

  // Find and process the translation using the provided scope and options.
  // This is used internally by some functions and should not be used as an
  // public API.
  I18n.lookup = function(scope, options) {
    options = options || {};

    var locales = this.locales.get(options.locale).slice()
      , locale
      , scopes
      , fullScope
      , translations
    ;

    fullScope = this.getFullScope(scope, options);

    while (locales.length) {
      locale = locales.shift();
      scopes = fullScope.split(this.defaultSeparator);
      translations = this.translations[locale];

      if (!translations) {
        continue;
      }
      while (scopes.length) {
        translations = translations[scopes.shift()];

        if (translations === undefined || translations === null) {
          break;
        }
      }

      if (translations !== undefined && translations !== null) {
        return translations;
      }
    }

    if (isSet(options.defaultValue)) {
      return lazyEvaluate(options.defaultValue, scope);
    }
  };

  // lookup pluralization rule key into translations
  I18n.pluralizationLookupWithoutFallback = function(count, locale, translations) {
    var pluralizer = this.pluralization.get(locale)
      , pluralizerKeys = pluralizer(count)
      , pluralizerKey
      , message;

    if (isObject(translations)) {
      while (pluralizerKeys.length) {
        pluralizerKey = pluralizerKeys.shift();
        if (isSet(translations[pluralizerKey])) {
          message = translations[pluralizerKey];
          break;
        }
      }
    }

    return message;
  };

  // Lookup dedicated to pluralization
  I18n.pluralizationLookup = function(count, scope, options) {
    options = options || {};
    var locales = this.locales.get(options.locale).slice()
      , locale
      , scopes
      , translations
      , message
    ;
    scope = this.getFullScope(scope, options);

    while (locales.length) {
      locale = locales.shift();
      scopes = scope.split(this.defaultSeparator);
      translations = this.translations[locale];

      if (!translations) {
        continue;
      }

      while (scopes.length) {
        translations = translations[scopes.shift()];
        if (!isObject(translations)) {
          break;
        }
        if (scopes.length === 0) {
          message = this.pluralizationLookupWithoutFallback(count, locale, translations);
        }
      }
      if (typeof message !== "undefined" && message !== null) {
        break;
      }
    }

    if (typeof message === "undefined" || message === null) {
      if (isSet(options.defaultValue)) {
        if (isObject(options.defaultValue)) {
          message = this.pluralizationLookupWithoutFallback(count, options.locale, options.defaultValue);
        } else {
          message = options.defaultValue;
        }
        translations = options.defaultValue;
      }
    }

    return { message: message, translations: translations };
  };

  // Rails changed the way the meridian is stored.
  // It started with `date.meridian` returning an array,
  // then it switched to `time.am` and `time.pm`.
  // This function abstracts this difference and returns
  // the correct meridian or the default value when none is provided.
  I18n.meridian = function() {
    var time = this.lookup("time");
    var date = this.lookup("date");

    if (time && time.am && time.pm) {
      return [time.am, time.pm];
    } else if (date && date.meridian) {
      return date.meridian;
    } else {
      return DATE.meridian;
    }
  };

  // Merge serveral hash options, checking if value is set before
  // overwriting any value. The precedence is from left to right.
  //
  //     I18n.prepareOptions({name: "John Doe"}, {name: "Mary Doe", role: "user"});
  //     #=> {name: "John Doe", role: "user"}
  //
  I18n.prepareOptions = function() {
    var args = slice.call(arguments)
      , options = {}
      , subject
    ;

    while (args.length) {
      subject = args.shift();

      if (typeof(subject) != "object") {
        continue;
      }

      for (var attr in subject) {
        if (!subject.hasOwnProperty(attr)) {
          continue;
        }

        if (isSet(options[attr])) {
          continue;
        }

        options[attr] = subject[attr];
      }
    }

    return options;
  };

  // Generate a list of translation options for default fallbacks.
  // `defaultValue` is also deleted from options as it is returned as part of
  // the translationOptions array.
  I18n.createTranslationOptions = function(scope, options) {
    var translationOptions = [{scope: scope}];

    // Defaults should be an array of hashes containing either
    // fallback scopes or messages
    if (isSet(options.defaults)) {
      translationOptions = translationOptions.concat(options.defaults);
    }

    // Maintain support for defaultValue. Since it is always a message
    // insert it in to the translation options as such.
    if (isSet(options.defaultValue)) {
      translationOptions.push({ message: options.defaultValue });
    }

    return translationOptions;
  };

  // Translate the given scope with the provided options.
  I18n.translate = function(scope, options) {
    options = options || {};

    var translationOptions = this.createTranslationOptions(scope, options);

    var translation;
    var usedScope = scope;

    var optionsWithoutDefault = this.prepareOptions(options)
    delete optionsWithoutDefault.defaultValue

    // Iterate through the translation options until a translation
    // or message is found.
    var translationFound =
      translationOptions.some(function(translationOption) {
        if (isSet(translationOption.scope)) {
          usedScope = translationOption.scope;
          translation = this.lookup(usedScope, optionsWithoutDefault);
        } else if (isSet(translationOption.message)) {
          translation = lazyEvaluate(translationOption.message, scope);
        }

        if (translation !== undefined && translation !== null) {
          return true;
        }
      }, this);

    if (!translationFound) {
      return this.missingTranslation(scope, options);
    }

    if (typeof(translation) === "string") {
      translation = this.interpolate(translation, options);
    } else if (isArray(translation)) {
      translation = translation.map(function(t) {
        return (typeof(t) === "string" ? this.interpolate(t, options) : t);
      }, this);
    } else if (isObject(translation) && isSet(options.count)) {
      translation = this.pluralize(options.count, usedScope, options);
    }

    return translation;
  };

  // This function interpolates the all variables in the given message.
  I18n.interpolate = function(message, options) {
    if (message == null) {
      return message;
    }

    options = options || {};
    var matches = message.match(this.placeholder)
      , placeholder
      , value
      , name
      , regex
    ;

    if (!matches) {
      return message;
    }

    while (matches.length) {
      placeholder = matches.shift();
      name = placeholder.replace(this.placeholder, "$1");

      if (isSet(options[name])) {
        value = options[name].toString().replace(/\$/gm, "_#$#_");
      } else if (name in options) {
        value = this.nullPlaceholder(placeholder, message, options);
      } else {
        value = this.missingPlaceholder(placeholder, message, options);
      }

      regex = new RegExp(placeholder.replace(/{/gm, "\\{").replace(/}/gm, "\\}"));
      message = message.replace(regex, value);
    }

    return message.replace(/_#\$#_/g, "$");
  };

  // Pluralize the given scope using the `count` value.
  // The pluralized translation may have other placeholders,
  // which will be retrieved from `options`.
  I18n.pluralize = function(count, scope, options) {
    options = this.prepareOptions({count: String(count)}, options)
    var pluralizer, result;

    result = this.pluralizationLookup(count, scope, options);
    if (typeof result.translations === "undefined" || result.translations == null) {
      return this.missingTranslation(scope, options);
    }

    if (typeof result.message !== "undefined" && result.message != null) {
      return this.interpolate(result.message, options);
    }
    else {
      pluralizer = this.pluralization.get(options.locale);
      return this.missingTranslation(scope + '.' + pluralizer(count)[0], options);
    }
  };

  // Return a missing translation message for the given parameters.
  I18n.missingTranslation = function(scope, options) {
    //guess intended string
    if(this.missingBehaviour === 'guess'){
      //get only the last portion of the scope
      var s = scope.split('.').slice(-1)[0];
      //replace underscore with space && camelcase with space and lowercase letter
      return (this.missingTranslationPrefix.length > 0 ? this.missingTranslationPrefix : '') +
          s.replace('_',' ').replace(/([a-z])([A-Z])/g,
          function(match, p1, p2) {return p1 + ' ' + p2.toLowerCase()} );
    }

    var localeForTranslation = (options != null && options.locale != null) ? options.locale : this.currentLocale();
    var fullScope           = this.getFullScope(scope, options);
    var fullScopeWithLocale = [localeForTranslation, fullScope].join(this.defaultSeparator);

    return '[missing "' + fullScopeWithLocale + '" translation]';
  };

  // Return a missing placeholder message for given parameters
  I18n.missingPlaceholder = function(placeholder, message, options) {
    return "[missing " + placeholder + " value]";
  };

  I18n.nullPlaceholder = function() {
    return I18n.missingPlaceholder.apply(I18n, arguments);
  };

  // Format number using localization rules.
  // The options will be retrieved from the `number.format` scope.
  // If this isn't present, then the following options will be used:
  //
  // - `precision`: `3`
  // - `separator`: `"."`
  // - `delimiter`: `","`
  // - `strip_insignificant_zeros`: `false`
  //
  // You can also override these options by providing the `options` argument.
  //
  I18n.toNumber = function(number, options) {
    options = this.prepareOptions(
        options
      , this.lookup("number.format")
      , NUMBER_FORMAT
    );

    var negative = number < 0
      , string = toFixed(Math.abs(number), options.precision).toString()
      , parts = string.split(".")
      , precision
      , buffer = []
      , formattedNumber
      , format = options.format || "%n"
      , sign = negative ? "-" : ""
    ;

    number = parts[0];
    precision = parts[1];

    while (number.length > 0) {
      buffer.unshift(number.substr(Math.max(0, number.length - 3), 3));
      number = number.substr(0, number.length -3);
    }

    formattedNumber = buffer.join(options.delimiter);

    if (options.strip_insignificant_zeros && precision) {
      precision = precision.replace(/0+$/, "");
    }

    if (options.precision > 0 && precision) {
      formattedNumber += options.separator + precision;
    }

    if (options.sign_first) {
      format = "%s" + format;
    }
    else {
      format = format.replace("%n", "%s%n");
    }

    formattedNumber = format
      .replace("%u", options.unit)
      .replace("%n", formattedNumber)
      .replace("%s", sign)
    ;

    return formattedNumber;
  };

  // Format currency with localization rules.
  // The options will be retrieved from the `number.currency.format` and
  // `number.format` scopes, in that order.
  //
  // Any missing option will be retrieved from the `I18n.toNumber` defaults and
  // the following options:
  //
  // - `unit`: `"$"`
  // - `precision`: `2`
  // - `format`: `"%u%n"`
  // - `delimiter`: `","`
  // - `separator`: `"."`
  //
  // You can also override these options by providing the `options` argument.
  //
  I18n.toCurrency = function(number, options) {
    options = this.prepareOptions(
        options
      , this.lookup("number.currency.format")
      , this.lookup("number.format")
      , CURRENCY_FORMAT
    );

    return this.toNumber(number, options);
  };

  // Localize several values.
  // You can provide the following scopes: `currency`, `number`, or `percentage`.
  // If you provide a scope that matches the `/^(date|time)/` regular expression
  // then the `value` will be converted by using the `I18n.toTime` function.
  //
  // It will default to the value's `toString` function.
  //
  I18n.localize = function(scope, value, options) {
    options || (options = {});

    switch (scope) {
      case "currency":
        return this.toCurrency(value);
      case "number":
        scope = this.lookup("number.format");
        return this.toNumber(value, scope);
      case "percentage":
        return this.toPercentage(value);
      default:
        var localizedValue;

        if (scope.match(/^(date|time)/)) {
          localizedValue = this.toTime(scope, value);
        } else {
          localizedValue = value.toString();
        }

        return this.interpolate(localizedValue, options);
    }
  };

  // Parse a given `date` string into a JavaScript Date object.
  // This function is time zone aware.
  //
  // The following string formats are recognized:
  //
  //    yyyy-mm-dd
  //    yyyy-mm-dd[ T]hh:mm::ss
  //    yyyy-mm-dd[ T]hh:mm::ss
  //    yyyy-mm-dd[ T]hh:mm::ssZ
  //    yyyy-mm-dd[ T]hh:mm::ss+0000
  //    yyyy-mm-dd[ T]hh:mm::ss+00:00
  //    yyyy-mm-dd[ T]hh:mm::ss.123Z
  //
  I18n.parseDate = function(date) {
    var matches, convertedDate, fraction;
    // A date input of `null` or `undefined` will be returned as-is
    if (date == null) {
      return date;
    }
    // we have a date, so just return it.
    if (typeof(date) === "object") {
      return date;
    }

    matches = date.toString().match(/(\d{4})-(\d{2})-(\d{2})(?:[ T](\d{2}):(\d{2}):(\d{2})([\.,]\d{1,3})?)?(Z|\+00:?00)?/);

    if (matches) {
      for (var i = 1; i <= 6; i++) {
        matches[i] = parseInt(matches[i], 10) || 0;
      }

      // month starts on 0
      matches[2] -= 1;

      fraction = matches[7] ? 1000 * ("0" + matches[7]) : null;

      if (matches[8]) {
        convertedDate = new Date(Date.UTC(matches[1], matches[2], matches[3], matches[4], matches[5], matches[6], fraction));
      } else {
        convertedDate = new Date(matches[1], matches[2], matches[3], matches[4], matches[5], matches[6], fraction);
      }
    } else if (typeof(date) == "number") {
      // UNIX timestamp
      convertedDate = new Date();
      convertedDate.setTime(date);
    } else if (date.match(/([A-Z][a-z]{2}) ([A-Z][a-z]{2}) (\d+) (\d+:\d+:\d+) ([+-]\d+) (\d+)/)) {
      // This format `Wed Jul 20 13:03:39 +0000 2011` is parsed by
      // webkit/firefox, but not by IE, so we must parse it manually.
      convertedDate = new Date();
      convertedDate.setTime(Date.parse([
        RegExp.$1, RegExp.$2, RegExp.$3, RegExp.$6, RegExp.$4, RegExp.$5
      ].join(" ")));
    } else if (date.match(/\d+ \d+:\d+:\d+ [+-]\d+ \d+/)) {
      // a valid javascript format with timezone info
      convertedDate = new Date();
      convertedDate.setTime(Date.parse(date));
    } else {
      // an arbitrary javascript string
      convertedDate = new Date();
      convertedDate.setTime(Date.parse(date));
    }

    return convertedDate;
  };

  // Formats time according to the directives in the given format string.
  // The directives begins with a percent (%) character. Any text not listed as a
  // directive will be passed through to the output string.
  //
  // The accepted formats are:
  //
  //     %a     - The abbreviated weekday name (Sun)
  //     %A     - The full weekday name (Sunday)
  //     %b     - The abbreviated month name (Jan)
  //     %B     - The full month name (January)
  //     %c     - The preferred local date and time representation
  //     %d     - Day of the month (01..31)
  //     %-d    - Day of the month (1..31)
  //     %H     - Hour of the day, 24-hour clock (00..23)
  //     %-H/%k - Hour of the day, 24-hour clock (0..23)
  //     %I     - Hour of the day, 12-hour clock (01..12)
  //     %-I/%l - Hour of the day, 12-hour clock (1..12)
  //     %m     - Month of the year (01..12)
  //     %-m    - Month of the year (1..12)
  //     %M     - Minute of the hour (00..59)
  //     %-M    - Minute of the hour (0..59)
  //     %p     - Meridian indicator (AM  or  PM)
  //     %P     - Meridian indicator (am  or  pm)
  //     %S     - Second of the minute (00..60)
  //     %-S    - Second of the minute (0..60)
  //     %w     - Day of the week (Sunday is 0, 0..6)
  //     %y     - Year without a century (00..99)
  //     %-y    - Year without a century (0..99)
  //     %Y     - Year with century
  //     %z/%Z  - Timezone offset (+0545)
  //
  I18n.strftime = function(date, format) {
    var options = this.lookup("date")
      , meridianOptions = I18n.meridian()
    ;

    if (!options) {
      options = {};
    }

    options = this.prepareOptions(options, DATE);

    if (isNaN(date.getTime())) {
      throw new Error('I18n.strftime() requires a valid date object, but received an invalid date.');
    }

    var weekDay = date.getDay()
      , day = date.getDate()
      , year = date.getFullYear()
      , month = date.getMonth() + 1
      , hour = date.getHours()
      , hour12 = hour
      , meridian = hour > 11 ? 1 : 0
      , secs = date.getSeconds()
      , mins = date.getMinutes()
      , offset = date.getTimezoneOffset()
      , absOffsetHours = Math.floor(Math.abs(offset / 60))
      , absOffsetMinutes = Math.abs(offset) - (absOffsetHours * 60)
      , timezoneoffset = (offset > 0 ? "-" : "+") +
          (absOffsetHours.toString().length < 2 ? "0" + absOffsetHours : absOffsetHours) +
          (absOffsetMinutes.toString().length < 2 ? "0" + absOffsetMinutes : absOffsetMinutes)
    ;

    if (hour12 > 12) {
      hour12 = hour12 - 12;
    } else if (hour12 === 0) {
      hour12 = 12;
    }

    format = format.replace("%a", options.abbr_day_names[weekDay]);
    format = format.replace("%A", options.day_names[weekDay]);
    format = format.replace("%b", options.abbr_month_names[month]);
    format = format.replace("%B", options.month_names[month]);
    format = format.replace("%d", padding(day));
    format = format.replace("%e", day);
    format = format.replace("%-d", day);
    format = format.replace("%H", padding(hour));
    format = format.replace("%-H", hour);
    format = format.replace("%k", hour);
    format = format.replace("%I", padding(hour12));
    format = format.replace("%-I", hour12);
    format = format.replace("%l", hour12);
    format = format.replace("%m", padding(month));
    format = format.replace("%-m", month);
    format = format.replace("%M", padding(mins));
    format = format.replace("%-M", mins);
    format = format.replace("%p", meridianOptions[meridian]);
    format = format.replace("%P", meridianOptions[meridian].toLowerCase());
    format = format.replace("%S", padding(secs));
    format = format.replace("%-S", secs);
    format = format.replace("%w", weekDay);
    format = format.replace("%y", padding(year));
    format = format.replace("%-y", padding(year).replace(/^0+/, ""));
    format = format.replace("%Y", year);
    format = format.replace("%z", timezoneoffset);
    format = format.replace("%Z", timezoneoffset);

    return format;
  };

  // Convert the given dateString into a formatted date.
  I18n.toTime = function(scope, dateString) {
    var date = this.parseDate(dateString)
      , format = this.lookup(scope)
    ;

    // A date input of `null` or `undefined` will be returned as-is
    if (date == null) {
      return date;
    }

    var date_string = date.toString()
    if (date_string.match(/invalid/i)) {
      return date_string;
    }

    if (!format) {
      return date_string;
    }

    return this.strftime(date, format);
  };

  // Convert a number into a formatted percentage value.
  I18n.toPercentage = function(number, options) {
    options = this.prepareOptions(
        options
      , this.lookup("number.percentage.format")
      , this.lookup("number.format")
      , PERCENTAGE_FORMAT
    );

    return this.toNumber(number, options);
  };

  // Convert a number into a readable size representation.
  I18n.toHumanSize = function(number, options) {
    var kb = 1024
      , size = number
      , iterations = 0
      , unit
      , precision
    ;

    while (size >= kb && iterations < 4) {
      size = size / kb;
      iterations += 1;
    }

    if (iterations === 0) {
      unit = this.t("number.human.storage_units.units.byte", {count: size});
      precision = 0;
    } else {
      unit = this.t("number.human.storage_units.units." + SIZE_UNITS[iterations]);
      precision = (size - Math.floor(size) === 0) ? 0 : 1;
    }

    options = this.prepareOptions(
        options
      , {unit: unit, precision: precision, format: "%n%u", delimiter: ""}
    );

    return this.toNumber(size, options);
  };

  I18n.getFullScope = function(scope, options) {
    options = options || {};

    // Deal with the scope as an array.
    if (isArray(scope)) {
      scope = scope.join(this.defaultSeparator);
    }

    // Deal with the scope option provided through the second argument.
    //
    //    I18n.t('hello', {scope: 'greetings'});
    //
    if (options.scope) {
      scope = [options.scope, scope].join(this.defaultSeparator);
    }

    return scope;
  };
  /**
   * Merge obj1 with obj2 (shallow merge), without modifying inputs
   * @param {Object} obj1
   * @param {Object} obj2
   * @returns {Object} Merged values of obj1 and obj2
   *
   * In order to support ES3, `Object.prototype.hasOwnProperty.call` is used
   * Idea is from:
   * https://stackoverflow.com/questions/8157700/object-has-no-hasownproperty-method-i-e-its-undefined-ie8
   */
  I18n.extend = function ( obj1, obj2 ) {
    if (typeof(obj1) === "undefined" && typeof(obj2) === "undefined") {
      return {};
    }
    return merge(obj1, obj2);
  };

  // Set aliases, so we can save some typing.
  I18n.t = I18n.translate.bind(I18n);
  I18n.l = I18n.localize.bind(I18n);
  I18n.p = I18n.pluralize.bind(I18n);

  return I18n;
}));
// https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/indexOf
if (!Array.prototype.indexOf) {
    Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {
        "use strict";
        if (this == null) {
            throw new TypeError();
        }
        var t = Object(this);
        var len = t.length >>> 0;
        if (len === 0) {
            return -1;
        }
        var n = 0;
        if (arguments.length > 1) {
            n = Number(arguments[1]);
            if (n != n) { // shortcut for verifying if it's NaN
                n = 0;
            } else if (n != 0 && n != Infinity && n != -Infinity) {
                n = (n > 0 || -1) * Math.floor(Math.abs(n));
            }
        }
        if (n >= len) {
            return -1;
        }
        var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);
        for (; k < len; k++) {
            if (k in t && t[k] === searchElement) {
                return k;
            }
        }
        return -1;
    }
}

// Production steps of ECMA-262, Edition 5, 15.4.4.18
// Reference: http://es5.github.com/#x15.4.4.18
// https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/forEach
if ( !Array.prototype.forEach ) {

  Array.prototype.forEach = function forEach( callback, thisArg ) {

    var T, k;

    if ( this == null ) {
      throw new TypeError( "this is null or not defined" );
    }

    // 1. Let O be the result of calling ToObject passing the |this| value as the argument.
    var O = Object(this);

    // 2. Let lenValue be the result of calling the Get internal method of O with the argument "length".
    // 3. Let len be ToUint32(lenValue).
    var len = O.length >>> 0; // Hack to convert O.length to a UInt32

    // 4. If IsCallable(callback) is false, throw a TypeError exception.
    // See: http://es5.github.com/#x9.11
    if ( {}.toString.call(callback) !== "[object Function]" ) {
      throw new TypeError( callback + " is not a function" );
    }

    // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.
    if ( thisArg ) {
      T = thisArg;
    }

    // 6. Let k be 0
    k = 0;

    // 7. Repeat, while k < len
    while( k < len ) {

      var kValue;

      // a. Let Pk be ToString(k).
      //   This is implicit for LHS operands of the in operator
      // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.
      //   This step can be combined with c
      // c. If kPresent is true, then
      if ( Object.prototype.hasOwnProperty.call(O, k) ) {

        // i. Let kValue be the result of calling the Get internal method of O with argument Pk.
        kValue = O[ k ];

        // ii. Call the Call internal method of callback with T as the this value and
        // argument list containing kValue, k, and O.
        callback.call( T, kValue, k, O );
      }
      // d. Increase k by 1.
      k++;
    }
    // 8. return undefined
  };
}

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some
if (!Array.prototype.some)
{
  Array.prototype.some = function(fun /*, thisArg */)
  {
    'use strict';

    if (this === void 0 || this === null)
      throw new TypeError();

    var t = Object(this);
    var len = t.length >>> 0;
    if (typeof fun !== 'function')
      throw new TypeError();

    var thisArg = arguments.length >= 2 ? arguments[1] : void 0;
    for (var i = 0; i < len; i++)
    {
      if (i in t && fun.call(thisArg, t[i], i, t))
        return true;
    }

    return false;
  };
}

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map
if (!Array.prototype.map) {

  Array.prototype.map = function(callback/*, thisArg*/) {

    var T, A, k;

    if (this == null) {
      throw new TypeError('this is null or not defined');
    }

    // 1. Let O be the result of calling ToObject passing the |this| 
    //    value as the argument.
    var O = Object(this);

    // 2. Let lenValue be the result of calling the Get internal 
    //    method of O with the argument "length".
    // 3. Let len be ToUint32(lenValue).
    var len = O.length >>> 0;

    // 4. If IsCallable(callback) is false, throw a TypeError exception.
    // See: http://es5.github.com/#x9.11
    if (typeof callback !== 'function') {
      throw new TypeError(callback + ' is not a function');
    }

    // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.
    if (arguments.length > 1) {
      T = arguments[1];
    }

    // 6. Let A be a new array created as if by the expression new Array(len) 
    //    where Array is the standard built-in constructor with that name and 
    //    len is the value of len.
    A = new Array(len);

    // 7. Let k be 0
    k = 0;

    // 8. Repeat, while k < len
    while (k < len) {

      var kValue, mappedValue;

      // a. Let Pk be ToString(k).
      //   This is implicit for LHS operands of the in operator
      // b. Let kPresent be the result of calling the HasProperty internal 
      //    method of O with argument Pk.
      //   This step can be combined with c
      // c. If kPresent is true, then
      if (k in O) {

        // i. Let kValue be the result of calling the Get internal 
        //    method of O with argument Pk.
        kValue = O[k];

        // ii. Let mappedValue be the result of calling the Call internal 
        //     method of callback with T as the this value and argument 
        //     list containing kValue, k, and O.
        mappedValue = callback.call(T, kValue, k, O);

        // iii. Call the DefineOwnProperty internal method of A with arguments
        // Pk, Property Descriptor
        // { Value: mappedValue,
        //   Writable: true,
        //   Enumerable: true,
        //   Configurable: true },
        // and false.

        // In browsers that support Object.defineProperty, use the following:
        // Object.defineProperty(A, k, {
        //   value: mappedValue,
        //   writable: true,
        //   enumerable: true,
        //   configurable: true
        // });

        // For best browser support, use the following:
        A[k] = mappedValue;
      }
      // d. Increase k by 1.
      k++;
    }

    // 9. return A
    return A;
  };
}

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind
if (!Function.prototype.bind) (function(){
  var ArrayPrototypeSlice = Array.prototype.slice;
  Function.prototype.bind = function(otherThis) {
    if (typeof this !== 'function') {
      // closest thing possible to the ECMAScript 5
      // internal IsCallable function
      throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');
    }

    var baseArgs= ArrayPrototypeSlice .call(arguments, 1),
        baseArgsLength = baseArgs.length,
        fToBind = this,
        fNOP    = function() {},
        fBound  = function() {
          baseArgs.length = baseArgsLength; // reset to default base arguments
          baseArgs.push.apply(baseArgs, arguments);
          return fToBind.apply(
                 fNOP.prototype.isPrototypeOf(this) ? this : otherThis, baseArgs
          );
        };

    if (this.prototype) {
      // Function.prototype doesn't have a prototype property
      fNOP.prototype = this.prototype; 
    }
    fBound.prototype = new fNOP();

    return fBound;
  };
})();

// Using UMD pattern from
// https://github.com/umdjs/umd#regular-module
// `returnExports.js` version
;(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(["i18n"], factory);
  } else if (typeof module === 'object' && module.exports) {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like environments that support module.exports,
    // like Node.
    factory(require("i18n"));
  } else {
    // Browser globals (root is window)
    factory(root.I18n);
  }
}(this, function(I18n) {
  "use strict";

  I18n.translations = {"de":{"account":{"Bookmakers":"Buchmacher","Change Password":"Passwort ändern","Changes saved":"Änderungen sind gespeichert","E-mail address":"E-Mail-Adresse","Live":"Live","Live bookmakers":"Live Buchmacher","My bookmakers":"Meine Buchmacher","Personal info":"Persönliche Informationen","Prematch":"Prematch","Prematch bookmakers":"Prematch Buchmacher","Time zone":"Stundenkreis","and":"und","bookmakers clones":"Buchmacher-Klone","label":{"confirm":"Bestätigen Sie die Löschung","delete_account":"Account löschen"},"new password":"neues Passwort","old password":"altes Passwort","repeat new password":"neues Passwort wiederholen","submit":{"save":"speichern","save my changes":"Änderungen speichern"},"success":"erfolgreich aktualisiert"},"activerecord":{"errors":{"messages":{"record_invalid":"Gültigkeitsprüfung ist fehlgeschlagen: %{errors}","restrict_dependent_destroy":{"has_many":"Datensatz kann nicht gelöscht werden, da abhängige %{record} existieren.","has_one":"Datensatz kann nicht gelöscht werden, da ein abhängiger %{record}-Datensatz existiert."}},"models":{"bb_user":{"attributes":{"reset_password_token":{"blank":"Reset-Link ist nicht aktuell","invalid":"Reset-Link ist nicht aktuell"}}}}}},"breadscrump":{"Home":"Home","Soccer":"Fußball"},"contact_us":{"Email":"E-Mail","Hello":"Hallo","If you have any questions you can write to us":"Bitte kontaktieren Sie uns, wenn Sie Fragen haben","Message":"Mitteilung","Name":"Name","Send":"Senden","Wrong captcha verification":"Captcha Fehler","contact_us_form_error":"Sie haben die falschen Daten eingegeben, versuchen Sie noch einmal","contact_us_form_success":"Ihre Mitteilung wurde gesendet.Wir werden uns mit Ihnen in Verbindung setzen. Danke!"},"countries":{"AC":"Ascension","AD":"Andorra","AE":"Vereinigte Arabische Emirate","AF":"Afghanistan","AFGHANISTAN":"Afghanistan","AFRICA":"Africa","AG":"Antigua und Barbuda","AI":"Anguilla","AL":"Albanien","ALBANIA":"Albania","ALGERIA":"Algeria","AM":"Armenien","AMERICAN_SAMOA":"American Samoa","AN":"Niederländische Antillen","ANDORRA":"Andorra","ANGOLA":"Angola","ANGUILLA":"Anguilla","ANTIGUA_AND_BARBUDA":"Antigua and Barbuda","AO":"Angola","AQ":"Antarktis","AR":"Argentinien","ARGENTINA":"Argentina","ARMENIA":"Armenia","ARUBA":"Aruba","AS":"Amerikanisch-Samoa","ASIA":"Asia","AT":"Österreich","AU":"Australien","AUSTRALIA":"Australia","AUSTRIA":"Austria","AW":"Aruba","AX":"Åland-Inseln","AZ":"Aserbaidschan","AZERBAIJAN":"Azerbaijan","BA":"Bosnien und Herzegowina","BAHAMAS":"Bahamas","BAHRAIN":"Bahrain","BANGLADESH":"Bangladesh","BARBADOS":"Barbados","BB":"Barbados","BD":"Bangladesch","BE":"Belgien","BELARUS":"Belarus","BELGIUM":"Belgium","BELIZE":"Belize","BENIN":"Benin","BERMUDA":"Bermuda","BF":"Burkina Faso","BG":"Bulgarien","BH":"Bahrain","BHUTAN":"Bhutan","BI":"Burundi","BJ":"Benin","BL":"St. Barthélemy","BM":"Bermuda","BN":"Brunei Darussalam","BO":"Bolivien","BOLIVIA":"Bolivia","BOSNIA_HERZEGOVINA":"Bosnia-Herzegovina","BOTSWANA":"Botswana","BQ":"Karibische Niederlande","BR":"Brasilien","BRAZIL":"Brazil","BRITISH_VIRGIN_ISLANDS":"British Virgin Islands","BRUNEI_DARUSSALAM":"Brunei Darussalam","BS":"Bahamas","BT":"Bhutan","BULGARIA":"Bulgaria","BURKINA_FASO":"Burkina Faso","BURUNDI":"Burundi","BV":"Bouvetinsel","BW":"Botsuana","BY":"Belarus","BZ":"Belize","CA":"Kanada","CAMBODIA":"Cambodia","CAMEROON":"Cameroon","CANADA":"Canada","CAPE_VERDE_ISLANDS":"Cape Verde Islands","CAYMAN_ISLANDS":"Cayman Islands","CC":"Kokosinseln","CD":"Kongo-Kinshasa","CENTRAL_AFRICAN_REPUBLIC":"Central African Republic","CF":"Zentralafrikanische Republik","CG":"Kongo-Brazzaville","CH":"Schweiz","CHAD":"Chad","CHILE":"Chile","CHINA_PR":"China PR","CHINESE_TAIPEI":"Chinese Taipei","CI":"Côte d’Ivoire","CK":"Cookinseln","CL":"Chile","CM":"Kamerun","CN":"China","CO":"Kolumbien","COLOMBIA":"Colombia","COMOROS":"Comoros","CONCACAF":"CONCACAF","CONGO":"Congo","CONGO_DR":"Congo DR","COOK_ISLANDS":"Cook Islands","COSTA_RICA":"Costa Rica","COTE_D_IVOIRE":"Côte d'Ivoire","CP":"Clipperton-Insel","CR":"Costa Rica","CROATIA":"Croatia","CU":"Kuba","CUBA":"Cuba","CURACAO":"Curaçao","CV":"Kap Verde","CW":"Curaçao","CX":"Weihnachtsinsel","CY":"Zypern","CYPRUS":"Cyprus","CZ":"Tschechische Republik","CZECH_REPUBLIC":"Czech Republic","DE":"Deutschland","DENMARK":"Denmark","DG":"Diego Garcia","DJ":"Dschibuti","DJIBOUTI":"Djibouti","DK":"Dänemark","DM":"Dominica","DO":"Dominikanische Republik","DOMINICA":"Dominica","DOMINICAN_REPUBLIC":"Dominican Republic","DZ":"Algerien","EA":"Ceuta und Melilla","EC":"Ecuador","ECUADOR":"Ecuador","EE":"Estland","EG":"Ägypten","EGYPT":"Egypt","EH":"Westsahara","EL_SALVADOR":"El Salvador","ENGLAND":"England","EQUATORIAL_GUINEA":"Equatorial Guinea","ER":"Eritrea","ERITREA":"Eritrea","ES":"Spanien","ESTONIA":"Estonia","ET":"Äthiopien","ETHIOPIA":"Ethiopia","EU":"Europäische Union","EUROPE":"Europe","FAROE_ISLANDS":"Faroe Islands","FI":"Finnland","FIJI":"Fiji","FINLAND":"Finland","FJ":"Fidschi","FK":"Falklandinseln","FM":"Mikronesien","FO":"Färöer","FR":"Frankreich","FRANCE":"France","FRENCH_GUIANA":"French Guiana","GA":"Gabun","GABON":"Gabon","GAMBIA":"Gambia","GB":"Vereinigtes Königreich","GD":"Grenada","GE":"Georgien","GEORGIA":"Georgia","GERMANY":"Germany","GF":"Französisch-Guayana","GG":"Guernsey","GH":"Ghana","GHANA":"Ghana","GI":"Gibraltar","GIBRALTAR":"Gibraltar","GL":"Grönland","GM":"Gambia","GN":"Guinea","GP":"Guadeloupe","GQ":"Äquatorialguinea","GR":"Griechenland","GREAT_BRITAIN":"Great Britain","GREECE":"Greece","GRENADA":"Grenada","GS":"Südgeorgien und die Südlichen Sandwichinseln","GT":"Guatemala","GU":"Guam","GUADELOUPE":"Guadeloupe","GUAM":"Guam","GUATEMALA":"Guatemala","GUINEA":"Guinea","GUINEA_BISSAU":"Guinea-Bissau","GUYANA":"Guyana","GW":"Guinea-Bissau","GY":"Guyana","HAITI":"Haiti","HK":"Sonderverwaltungszone Hongkong","HM":"Heard- und McDonald-Inseln","HN":"Honduras","HONDURAS":"Honduras","HONG_KONG":"Hong Kong","HR":"Kroatien","HT":"Haiti","HU":"Ungarn","HUNGARY":"Hungary","IC":"Kanarische Inseln","ICELAND":"Iceland","ID":"Indonesien","IE":"Irland","IL":"Israel","IM":"Isle of Man","IN":"Indien","INDIA":"India","INDONESIA":"Indonesia","IO":"Britisches Territorium im Indischen Ozean","IQ":"Irak","IR":"Iran","IRAN":"Iran","IRAQ":"Iraq","IRELAND_REPUBLIC":"Ireland Republic","IS":"Island","ISRAEL":"Israel","IT":"Italien","ITALY":"Italy","JAMAICA":"Jamaica","JAPAN":"Japan","JE":"Jersey","JM":"Jamaika","JO":"Jordanien","JORDAN":"Jordan","JP":"Japan","KAZAKHSTAN":"Kazakhstan","KE":"Kenia","KENYA":"Kenya","KG":"Kirgisistan","KH":"Kambodscha","KI":"Kiribati","KIRIBATI":"Kiribati","KM":"Komoren","KN":"St. Kitts und Nevis","KOREA_DPR":"Korea DPR","KOREA_REPUBLIC":"Korea Republic","KOSOVO":"Kosovo","KP":"Demokratische Volksrepublik Korea","KR":"Republik Korea","KUWAIT":"Kuwait","KW":"Kuwait","KY":"Kaimaninseln","KYRGYZSTAN":"Kyrgyzstan","KZ":"Kasachstan","LA":"Laos","LAOS":"Laos","LATVIA":"Latvia","LB":"Libanon","LC":"St. Lucia","LEBANON":"Lebanon","LESOTHO":"Lesotho","LI":"Liechtenstein","LIBERIA":"Liberia","LIBYA":"Libya","LIECHTENSTEIN":"Liechtenstein","LITHUANIA":"Lithuania","LK":"Sri Lanka","LR":"Liberia","LS":"Lesotho","LT":"Litauen","LU":"Luxemburg","LUXEMBOURG":"Luxembourg","LV":"Lettland","LY":"Libyen","MA":"Marokko","MACAO":"Macao","MACEDONIA_FYR":"Macedonia FYR","MADAGASCAR":"Madagascar","MALAWI":"Malawi","MALAYSIA":"Malaysia","MALDIVES":"Maldives","MALI":"Mali","MALTA":"Malta","MARTINIQUE":"Martinique","MAURITANIA":"Mauritania","MAURITIUS":"Mauritius","MAYOTTE":"Mayotte","MC":"Monaco","MD":"Republik Moldau","ME":"Montenegro","MEXICO":"Mexico","MF":"St. Martin","MG":"Madagaskar","MH":"Marshallinseln","MK":"Mazedonien","ML":"Mali","MM":"Myanmar","MN":"Mongolei","MO":"Sonderverwaltungsregion Macau","MOLDOVA":"Moldova","MONACO":"Monaco","MONGOLIA":"Mongolia","MONTENEGRO":"Montenegro","MONTSERRAT":"Montserrat","MOROCCO":"Morocco","MOZAMBIQUE":"Mozambique","MP":"Nördliche Marianen","MQ":"Martinique","MR":"Mauretanien","MS":"Montserrat","MT":"Malta","MU":"Mauritius","MV":"Malediven","MW":"Malawi","MX":"Mexiko","MY":"Malaysia","MYANMAR":"Myanmar","MZ":"Mosambik","NA":"Namibia","NAMIBIA":"Namibia","NC":"Neukaledonien","NE":"Niger","NEPAL":"Nepal","NETHERLANDS":"Netherlands","NETHERLANDS_ANTILLES":"Netherlands Antilles","NEW_CALEDONIA":"New Caledonia","NEW_ZEALAND":"New Zealand","NF":"Norfolkinsel","NG":"Nigeria","NI":"Nicaragua","NICARAGUA":"Nicaragua","NIGER":"Niger","NIGERIA":"Nigeria","NL":"Niederlande","NO":"Norwegen","NORTHERN IRELAND":"Northern Ireland","NORTHERN_IRELAND":"Northern Ireland","NORTHERN_MARIANA_ISLANDS":"Northern Mariana Islands","NORTH_AMERICA":"North America","NORWAY":"Norway","NP":"Nepal","NR":"Nauru","NU":"Niue","NZ":"Neuseeland","OM":"Oman","OMAN":"Oman","PA":"Panama","PAKISTAN":"Pakistan","PALESTINE":"Palestine","PANAMA":"Panama","PAPUA_NEW_GUINEA":"Papua New Guinea","PARAGUAY":"Paraguay","PE":"Peru","PERU":"Peru","PF":"Französisch-Polynesien","PG":"Papua-Neuguinea","PH":"Philippinen","PHILIPPINES":"Philippines","PK":"Pakistan","PL":"Polen","PM":"St. Pierre und Miquelon","PN":"Pitcairninseln","POLAND":"Poland","PORTUGAL":"Portugal","PR":"Puerto Rico","PS":"Palästinensische Autonomiegebiete","PT":"Portugal","PUERTO_RICO":"Puerto Rico","PW":"Palau","PY":"Paraguay","QA":"Katar","QATAR":"Qatar","QO":"Äußeres Ozeanien","RE":"Reunion","REUNION":"Reunion","RO":"Rumänien","ROMANIA":"Romania","RS":"Serbien","RS_AND_M":"Serbia and Macedonia","RU":"Russische Föderation","RUSSIA":"Russia","RW":"Ruanda","RWANDA":"Rwanda","SA":"Saudi-Arabien","SAINT_MARTIN":"Saint Martin","SAMOA":"Samoa","SAN_MARINO":"San Marino","SAO_TOME_AND_PRINCIPE":"Sao Tome and Principe","SAUDI_ARABIA":"Saudi Arabia","SB":"Salomonen","SC":"Seychellen","SCOTLAND":"Scotland","SD":"Sudan","SE":"Schweden","SENEGAL":"Senegal","SERBIA":"Serbia","SEYCHELLES":"Seychelles","SG":"Singapur","SH":"St. Helena","SI":"Slowenien","SIERRA_LEONE":"Sierra Leone","SINGAPORE":"Singapore","SINT_MAARTEN":"Sint Maarten","SJ":"Svalbard und Jan Mayen","SK":"Slowakei","SL":"Sierra Leone","SLOVAKIA":"Slovakia","SLOVENIA":"Slovenia","SM":"San Marino","SN":"Senegal","SO":"Somalia","SOLOMON_ISLANDS":"Solomon Islands","SOMALIA":"Somalia","SOUTH_AFRICA":"South Africa","SOUTH_AMERICA":"South America","SOUTH_SUDAN":"South Sudan","SPAIN":"Spain","SR":"Suriname","SRI_LANKA":"Sri Lanka","SS":"Südsudan","ST":"Sao Tome \u0026 Principe","ST_KITTS_AND_NEVIS":"St. Kitts and Nevis","ST_LUCIA":"St. Lucia","ST_VINCENT_AND_THE_GRENADINES":"St. Vincent and the Grenadines","SUDAN":"Sudan","SURINAME":"Suriname","SV":"El Salvador","SWAZILAND":"Swaziland","SWEDEN":"Sweden","SWITZERLAND":"Switzerland","SX":"Sint Maarten","SY":"Syrien","SYRIA":"Syria","SZ":"Swasiland","TA":"Tristan da Cunha","TAHITI":"Tahiti","TAIWAN":"Taiwan","TAJIKISTAN":"Tajikistan","TANZANIA":"Tanzania","TC":"Turks- und Caicosinseln","TD":"Tschad","TF":"Französische Süd- und Antarktisgebiete","TG":"Togo","TH":"Thailand","THAILAND":"Thailand","TIMOR_LESTE":"Timor-Leste","TJ":"Tadschikistan","TK":"Tokelau","TL":"Timor-Leste","TM":"Turkmenistan","TN":"Tunesien","TO":"Tonga","TOGO":"Togo","TONGA":"Tonga","TR":"Türkei","TRINIDAD_AND_TOBAGO":"Trinidad and Tobago","TT":"Trinidad und Tobago","TUNISIA":"Tunisia","TURKEY":"Turkey","TURKMENISTAN":"Turkmenistan","TURKS_AND_CAICOS_ISLANDS":"Turks and Caicos Islands","TUVALU":"Tuvalu","TV":"Tuvalu","TW":"Taiwan","TZ":"Tansania","UA":"Ukraine","UAE":"UAE","UG":"Uganda","UGANDA":"Uganda","UKRAINE":"Ukraine","UM":"Amerikanisch-Ozeanien","URUGUAY":"Uruguay","US":"Vereinigte Staaten","USA":"USA","US_VIRGIN_ISLANDS":"US Virgin Islands","UY":"Uruguay","UZ":"Usbekistan","UZBEKISTAN":"Uzbekistan","VA":"Vatikanstadt","VANUATU":"Vanuatu","VC":"St. Vincent und die Grenadinen","VE":"Venezuela","VENEZUELA":"Venezuela","VG":"Britische Jungferninseln","VI":"Amerikanische Jungferninseln","VIETNAM":"Vietnam","VN":"Vietnam","VU":"Vanuatu","WALES":"Wales","WF":"Wallis und Futuna","WORLD":"World","WS":"Samoa","XK":"Kosovo","YE":"Jemen","YEMEN":"Yemen","YT":"Mayotte","ZA":"Südafrika","ZAMBIA":"Zambia","ZANZIBAR":"Zanzibar","ZIMBABWE":"Zimbabwe","ZM":"Sambia","ZW":"Simbabwe"},"country":{"Active teams":"Teilnehmende Mannschaften","No active leagues":"Keine aktiven Ligen","No active teams":"Keine aktive Mannschaften stehen zur Verfügung","Watch all coefficients":"Alle Wettquoten ansehen","country_page_leagues_text":"Um die Wettquoten der Buchmacher um %s zu vergleichen, während Sie die jeweilige Liga im seitlichen Menü rechts. Dann wird die Seite mit der Liste von Spielen und aktuellen Wettquoten für diese Spiele geöffnet.","country_page_teams_text":"Kalender mit Spielplan der Mannschaften %s. Um die Wettquoten für die nächstfolgenden Spiele anzusehen und vergleichen zu können, öffnen Sie die Pop-up-Liste mit der jeweiligen Mannschaft, die Sie interessiert.","h1_leagues_text":"Ligen %s %s","h1_teams_text":"Mannschaften %s %s","leagues":"Ligen %s","show more":"Mehr zeigen","table":{"Bookmakers count":"Anzahl der Buchmacher","Date":"Datum","Event name":"Bezeichnung des Spiels","Events count":"Anzahl der Ereignisse","First event":"Erstes Spiel","League":"Liga","Play date":"Datum des Spiels","Play time":"Uhrzeit des Beginns","Score":"Ergebnis","Start time":"Beginn des Spiels"},"teams":"Mannschaften %s"},"date":{"abbr_day_names":["So","Mo","Di","Mi","Do","Fr","Sa"],"abbr_month_names":[null,"Jan","Feb","Mär","Apr","Mai","Jun","Jul","Aug","Sep","Okt","Nov","Dez"],"day_names":["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"],"formats":{"default":"%d.%m.%Y","long":"%e. %B %Y","short":"%e. %b"},"month_names":[null,"Januar","Februar","März","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"],"order":["day","month","year"]},"datetime":{"distance_in_words":{"about_x_hours":{"one":"etwa eine Stunde","other":"etwa %{count} Stunden"},"about_x_months":{"one":"etwa ein Monat","other":"etwa %{count} Monate"},"about_x_years":{"one":"etwa ein Jahr","other":"etwa %{count} Jahre"},"almost_x_years":{"one":"fast ein Jahr","other":"fast %{count} Jahre"},"half_a_minute":"eine halbe Minute","less_than_x_minutes":{"one":"weniger als eine Minute","other":"weniger als %{count} Minuten"},"less_than_x_seconds":{"one":"weniger als eine Sekunde","other":"weniger als %{count} Sekunden"},"over_x_years":{"one":"mehr als ein Jahr","other":"mehr als %{count} Jahre"},"x_days":{"one":"ein Tag","other":"%{count} Tage"},"x_minutes":{"one":"eine Minute","other":"%{count} Minuten"},"x_months":{"one":"ein Monat","other":"%{count} Monate"},"x_seconds":{"one":"eine Sekunde","other":"%{count} Sekunden"},"x_years":{"one":"ein Jahr","other":"%{count} Jahr"}},"prompts":{"day":"Tag","hour":"Stunden","minute":"Minute","month":"Monat","second":"Sekunde","year":"Jahr"}},"devise":{"Change my password":"Passwort ändern","Change your password":"Passwort ändern","Didn't receive confirmation instructions?":"Haben Sie keine Anweisungen zur Änderung des Passwortes erhalten?","Forgot your password?":"Passwort vergessen?","Login":"Einloggen","Remember me":"Speichern","Resend confirmation instructions":"Anweisungen zur Änderung des Passwortes wiederholt senden","Send me reset password instructions":"Anweisungen zur Änderung des Passwortes senden","Sign up":"Anmeldung","characters minimum":"Min.Zeichen","confirm new password":"Passwort bestätigen","confirmations":{"confirmed":"Ihre E-Mail-Adresse wurde erfolgreich bestätigt.","send_instructions":"Innerhalb von einigen Minuten wird Ihnen eine E-Mitteilung mit den Anweisungen zur Bestätigung IhrerE-Mail-Adressezugesendet.","send_paranoid_instructions":"Wenn Ihre E-Mail-Adresse in unserer Datenbasis schon angemeldet worden ist, so wird Ihnen eine E-Mitteilung mit den Anweisungen zur Bestätigung IhrerE-Mail-Adresseinnerhalb von einigen Minuten zugesendet."},"email":"E-Mail","failure":{"already_authenticated":"Sie sind eingeloggt.","deleted_account":"Account with this email address was deleted. If you want recover it please connect with support.","inactive":"Ihr Account wurde noch nicht aktiviert.","invalid":"Ungültiges Login oder Passwort.","last_attempt":"Ihnen steht noch ein Versuch zu Verfügung, dann wird Ihr Account gesperrt.","locked":"Ihr Account wurde gesperrt.","need_to_sign_in":"Loggen Sie ein, um diese Seite anzusehen.","not_found_in_database":"Ungültiges Login oder Passwort.","timeout":"Verbindung wurde unterbrochen. Loggen Sie noch einmal ein, um fortzusetzen.","unauthenticated":"Sie sollen einloggen bzw. sich anmelden, um fortzusetzen.","unconfirmed":"Sie sollen Ihre E-Mail-Adresse bestätigen, um fortzusetzen."},"mailer":{"Change my password":"Passwort ändern","Confirm my account":"Mein Account bestätigen","Hello":"Hallo","If you did not request this, please ignore this email":"Haben Sie das nicht getan – so können Sie diese Mitteilung ignorieren.","Someone has requested a link to change your password, and you can do this through the link below":"Jemand (vielleicht Sie) hat das Link zur Änderung des Passwort angefordert, Sie können das Passwort mit dem Link unten ändern.","Welcome":"Herzlich willkommen","You can confirm your account email through the link below":"Sie können Ihr Account bestätigen, dazu folgen Sie dem Link.","Your password will not change until you access the link above and create a new one":"Ihr Passwort wird nicht geändert, bis Sie dem Link unten nicht folgen und das neue nicht erstellen.","confirmation_instructions":{"subject":"Daten bestätigen"},"password_change":{"subject":"Passwort ändern"},"reset_password_instructions":{"subject":"Anweisung zur Wiederherstellung des Passwortes"},"unlock_instructions":{"subject":"Anweisung zur Freigabe"}},"new password":"Neues Passwort","omniauth_callbacks":{"failure":"Sie können nicht authentifiziert werden %{kind} weil \"%{reason}\".","success":"Authentifizierung wurde erfolgreich beendet %{kind}."},"password":"Passwort","password confirmation":"Passwort bestätigen","passwords":{"no_token":"Sie haben keinen Zugang zu dieser Seite, dazu sollen Sie von der Mitteilung über Wiederherstellung des Passwortes wechseln. Wenn Sie von der Mitteilung über Wiederherstellung des Passwortes wechseln, prüfen Sie bitte die Integrität vom zur Verfügung gestellten URL.","send_instructions":"Innerhalb von einigen Minuten wird Ihnen eine E-Mitteilung mit den Anweisungen zur Wiederherstellung Ihres Passwortes zugesendet.","send_paranoid_instructions":"Wenn Ihre E-Mail-Adresse in unserer Datenbasis schon angemeldet worden ist, so wird Ihnen eine E-Mitteilung mit den Anweisungen zur Wiederherstellung Ihres Passwortes innerhalb von einigen Minuten zugesendet.","updated":"Ihr Passwort wurde geändert. Sie sind eingeloggt.","updated_not_active":"Ihr Passwort wurde erfolgreich geändert."},"registrations":{"destroyed":"Tschüß! Ihr Account wurde gelöscht. Wir hoffen Sie bald wiedersehen zu können.","signed_up":"Herzlich willkommen! Sie haben sich erfolgreich angemeldet.","signed_up_but_inactive":"Sie haben sich erfolgreich angemeldet. Aber vorläufig können Sie nicht einloggen, da Ihr Account nicht aktiviert wurde.","signed_up_but_locked":"Sie haben sich erfolgreich angemeldet. Aber vorläufig können Sie nicht einloggen, da Ihr Account gesperrt ist.","signed_up_but_unconfirmed":"Die Mitteilung mit dem Link zur Bestätigung wurde auf Ihre E-Mail-Adresse zugesendet. Folgen Sie bitte dem Link, um Ihr Account zu bestätigen.","update_needs_confirmation":"Ihr Account wurde erfolgreich aktualisiert,aber wir sollen Ihre neue E-Mail-Adresse prüfen.Prüfen Sie bitte Ihren Posteingang, folgen Sie dem Link, umIhre neue E-Mail-Adresse zu bestätigen.","updated":"Ihr Account wurde erfolgreich aktualisiert"},"sessions":{"already_signed_out":"Sie sind erfolgreich ausgeloggt.","signed_in":"Sie sind erfolgreich eingeloggt.","signed_out":"Sie sind erfolgreich ausgeloggt."},"unlocks":{"send_instructions":"Innerhalb von einigen Minuten wird Ihnen eine E-Mitteilung mit den Anweisungen zur Wiederherstellung Ihres Accounts zugesendet.","send_paranoid_instructions":"Wenn Ihre E-Mail-Adresse in unserer Datenbasis schon angemeldet worden ist,so wird Ihnen eine E-Mitteilung mit den Anweisungen zur Wiederherstellung Ihres Accounts innerhalb von einigen Minuten zugesendet.","unlocked":"Ihr Account wurde erfolgreich freigegeben. Loggen Sie ein, um fortzusetzen."}},"errors":{"format":"%{attribute} %{message}","messages":{"accepted":"muss akzeptiert werden","already_confirmed":"schon bestätigt, versuchen Sie einzuloggen","blank":"muss ausgefüllt werden","changes_saved":"Änderungen sind gespeichert","confirmation":"stimmt nicht mit %{attribute} überein","confirmation_period_expired":"soll innerhalb von %{period} bestätigt werden, bitte fordern Sie die neue an","empty":"muss ausgefüllt werden","entered_email":"Die E-Mail wurde für Einloggen im Account verwendet,das Sie gelöscht haben.Bitte setzen Sie sich mit uns in Verbindung, um Ihr Account wiederherzustellen.","equal_to":"muss genau %{count} sein","even":"muss gerade sein","exclusion":"ist nicht verfügbar","expired":"ist abgelaufen, bitte fordern Sie die neue an","greater_than":"muss größer als %{count} sein","greater_than_or_equal_to":"muss größer oder gleich %{count} sein","inclusion":"ist kein gültiger Wert","invalid":"ist nicht gültig","less_than":"muss kleiner als %{count} sein","less_than_or_equal_to":"muss kleiner oder gleich %{count} sein","model_invalid":"Gültigkeitsprüfung ist fehlgeschlagen: %{errors}","not_a_number":"ist keine Zahl","not_an_integer":"muss ganzzahlig sein","not_found":"nicht gefunden","not_locked":"war nicht gesperrt","not_saved":{"one":"1 ошибка запретила этому %{resource} сохранится:","other":"%{count} Fehler verhindern, %{resource} zu speichern"},"odd":"muss ungerade sein","other_than":"darf nicht gleich %{count} sein","please_select_bk":"Wählen Sie bitte mindestens einen Buchmacher","present":"darf nicht ausgefüllt werden","required":"muss ausgefüllt werden","send_instruction_reset_pass":"Sie werden eine E-Mitteilung mit den Anweisungen erhalten, wie das Passwort innerhalb von einigen Minuten abgebrochen werden kann","taken":"ist bereits vergeben","too_long":{"one":"ist zu lang (mehr als 1 Zeichen)","other":"ist zu lang (mehr als %{count} Zeichen)"},"too_short":{"one":"ist zu kurz (weniger als 1 Zeichen)","other":"ist zu kurz (weniger als %{count} Zeichen)"},"wrong_length":{"one":"hat die falsche Länge (muss genau 1 Zeichen haben)","other":"hat die falsche Länge (muss genau %{count} Zeichen haben)"}},"template":{"body":"Bitte überprüfen Sie die folgenden Felder:","header":{"one":"Konnte %{model} nicht speichern: ein Fehler.","other":"Konnte %{model} nicht speichern: %{count} Fehler."}}},"event":{"Close":"Close","Colorful labels":"Farbige Labels","Draw":"Unentschieden","Highest":"Die höchste","Matrix":"Matrix","Open":"Open","Value bets":"Value bets","Valuebets":"Value bets","Visit it":"Zu den Live Quoten wechseln","event-live-page-description":"Die Wettquoten für verschiedene Ausgänge \u003cspan class=bold\u003e%s\u003c/span\u003e mit mehr als 79 Wettbüros.","event-page-description":"Die Wettquoten für verschiedene Ausgänge \u003cspan class=bold\u003e%s\u003c/span\u003e mit mehr als 79 Wettbüros, das %s um %s stattfindet.","match":"Spiel","match ended":"Spiel ist beendet %s","match is in live":"Spiel ist begonnen","match_18":"Kampf","match_25":"Wettrennen","match_30":"Lauf","match_31":"Rennen","nav":{"11_s":{"correct_score":"Genaues Ergebnis","frames":"Frames","handicaps":"Handikaps","main":"Wichtig","totals":"Totals"},"12_s":{"correct_score":"Genaues Ergebnis","handicaps":"Handikaps","main":"Wichtig","sets":"Sets","totals":"Totals"},"13_s":{"correct_score":"Genaues Ergebnis","handicaps":"Handikaps","main":"Wichtig","sets":"Sets","totals":"Totals"},"14_s":{"correct_score":"Genaues Ergebnis","handicaps":"Handikaps","main":"Wichtig","sets":"Sets","totals":"Totals"},"15_s":{"halfs":"Halbzeiten","handicaps":"Handikaps","main":"Wichtig","totals":"Totals"},"16_s":{"halfs":"Halbzeiten","handicaps":"Handikaps","main":"Wichtig","totals":"Totals"},"17_s":{"halfs":"Halbzeiten","handicaps":"Handikaps","main":"Wichtig","totals":"Totals"},"18_s":{"main":"Wichtig","totals":"Totals"},"19_s":{"halfs":"Halbzeiten","handicaps":"Handikaps","main":"Wichtig","totals":"Totals"},"1_s":{"half":"Halbzeiten","handicaps":"Handikaps","innings":"Abgabe des Balles","main":"Wichtig","totals":"Totals"},"23_s":{"halfs":"Halbzeiten","handicaps":"Handikaps","main":"Wichtig","totals":"Totals"},"29_s":{"correct_score":"Genaues Ergebnis","halfs":"Halbzeiten","handicaps":"Handikaps","main":"Wichtig","totals":"Totals"},"2_s":{"halfs":"Halbzeiten","handicaps":"Handikaps","innings":"Abgabe des Balles","main":"Wichtig","quarters":"Viertel","totals":"Totals"},"30_s":{"winner":"Gewinner"},"31_s":{"head_to_head":"Head to Head","podium":"Podium","winner":"Winner"},"4_s":{"halfs":"Halbzeiten","handicaps":"Handikaps","main":"Wichtig","totals":"Totals"},"5_s":{"halfs":"Halbzeiten","handicaps":"Handikaps","main":"Wichtig","totals":"Totals"},"6_s":{"correct_score":"Genaues Ergebnis","handicaps":"Handikaps","main":"Wichtig","periods":"Perioden","totals":"Totals"},"7_s":{"goals":"Treffer","half":"Halbzeiten","halfs":"Halbzeiten","handicaps":"Handikaps","main":"Wichtig","statistics":"Statistik"},"8_s":{"correct_score":"Genaues Ergebnis","handicaps":"Handikaps","home_away":"Gewinner","sets":"Sets","totals":"Totals"},"9_s":{"correct_score":"Genaues Ergebnis","handicaps":"Handikaps","main":"Wichtig","sets":"Sets","totals":"Totals"},"close":"Schließen","open":"Öffnen"},"not lay":"Für","with a score":"mit dem Ergebnis","with lay":"Gegen","Лучшие коэффициенты":"Die besten Quoten"},"events":{"Live Odds":"Live Quoten","Next Matches":"Nächste Spiele","Popular Matches":"Beliebte Spiele","Surebets":"Prematch Surebets"},"events_grid":{"1":1,"2":2,"F1":1,"F2":2,"Hand":"Vorgabe","ML1":1,"ML2":2,"PL1-N":"PL1-N","PL1-Y":"PL1-Y","PL1_3-N":"PL1_3-N","PL1_3-Y":"PL1_3-Y","TO":"mehr","TU":"weniger","Total":"Total","X":"X","events":"EREIGNISSE","score":"ERGEBNIS","valF1":"Vorgabe","valF2":"Vorgabe","valT":"Total"},"footer":{"bookmakers":"Buchmacher","legal_info":"Copyright © 2019 Oddsfan, alle Rechte vorbehalten. Dieses Programm wird freiwillig angeboten, jegliche Beleidigung wird gemäß den internationalen Rechtsvorschriften bestraft.","sport markets":"Märkte","sports":"Sport"},"global":{"Get the best odds Kick-off at":"Sie können die besten Quoten erhalten. Beginn um","Home":"Home","Login":"Einloggen","Logout":"Ausloggen","My account":"Mein Account","PAYOUT":"Auszahlung","Register":"Anmeldung","Soccer":"Fußball","Today":"Heute","Toggle Menu":"Menü","Tomorrow":"Morgen","Yesterday":"Gestern","anonces":"Match previews","betting odds comparison":"odds comparison service","bookmakers":"Buchmacher","calendar":"Event Calendar","check_all_bk":"Alle wählen","coming soon":"Bald auf der Site","country_page_text":"Hier finden Sie die besten Wettquoten für eine Vielzahl der Fußballspiele %s mit mehr als %s Wettbüros.","enter_more_3_char":"Please enter 3 or more characters","horizontal mode":"in den horizontalen Modus","koefs":"Odds","league_h1_text":"%s","league_page_text":"%s hier finden Sie die Liste von allen zur Verfügung stehenden Spielen der ausgewählten Liga in 79 Wettbüros. Um die Quoten zu vergleichen, wechseln Sie zur Vergleichsseite durch Klicken auf den Namen des Sie interessierenden Ereignisses.","open":"öffnen","or":"oder","please":"Bitte,","return the phone":"drehen Sie Ihr Handy","sports":"Sportarten","standings":"Standings","successfully saved":"Änderungen gespeichert","world_champions":"WC 2018"},"header":{"SEARCH":"Ereignisse, Gegner...","choose_bookmakers":"Buchmacher wählen","choose_league":"Liga wählen","mail_subject":"Frage von"},"helpers":{"select":{"prompt":"Bitte wählen"},"submit":{"create":"%{model} erstellen","submit":"%{model} speichern","update":"%{model} aktualisieren"}},"languages":{"de":"DE","en":"ENG","esr":"ESP","fra":"FRA","lang":"Sprache","language":"Sprache","ru":"RUS"},"market_variation_full_name":{"1ACE-ML1":"Player1 - 1st Ace","1ACE-ML2":"Player2 - 1st Ace","1BR-1":"Player1 - 1st Break","1BR-2":"Player2 - 1st Break","1BR-ML1":"Player1 - 1st Break","1BR-ML2":"Player2 - 1st Break","1BR-X":"No break - 1st Break","1CNR-1":"Team1 - 1st corner","1CNR-2":"Team2 - 1st corner","1CNR-ML1":"Team1 - 1st corner","1CNR-ML2":"Team2 - 1st corner","1CNR-X":"No corners","1DBF-ML1":"Player1 - 1st Double Fault","1DBF-ML2":"Player2 - 1st Double Fault","1OFS-1":"Team1 - 1st offside","1OFS-2":"Team2 - 1st offside","1OFS-ML1":"Team1 - 1st offside","1OFS-ML2":"Team2 - 1st offside","1OFS-X":"No offsides","1SER_F-F1":"Asian Handicap1(%s) - 1st Serve","1SER_F-F2":"Asian Handicap2(%s) - 1st Serve","1SER_OU1-TO":"Total Over(%s) for Team1 - 1st Serve","1SER_OU1-TU":"Total Under(%s) for Team1 - 1st Serve","1SER_OU2-TO":"Total Over(%s) for Team2 - 1st Serve","1SER_OU2-TU":"Total Under(%s) for Team2 - 1st Serve","1SUBS-ML1":"Team1 - 1st subs","1SUBS-ML2":"Team2 - 1st subs","1X2-1":"1","1X2-2":"2","1X2-X":"X","1YC-1":"Team1 - 1st Yellow Card","1YC-2":"Team2 - 1st Yellow Card","1YC-ML1":"Team1 - 1st Yellow Card","1YC-ML2":"Team2 - 1st Yellow Card","1YC-X":"No Yellow Card","60SET-N":"6-0 Set - no","60SET-Y":"6-0 Set - yes","ACE_F-F1":"Asian Handicap1(%s) - Aces","ACE_F-F2":"Asian Handicap2(%s) - Aces","ACE_OU-TO":"Total Over(%s) - Aces","ACE_OU-TU":"Total Under(%s) - Aces","ACE_OU1-TO":"Total Over(%s) for Team1 - Aces","ACE_OU1-TU":"Total Under(%s) for Team1 - Aces","ACE_OU2-TO":"Total Over(%s) for Team2 - Aces","ACE_OU2-TU":"Total Under(%s) for Team2 - Aces","ADDED_EG-EG":"Exact (%s) - Added time","ADDED_EG-EG_N":"Exact (%s) - Added time - no","ADDED_OU-TO":"Total Over(%s) - Added time","ADDED_OU-TU":"Total Under(%s) - Added time","BHO-N":"Both halves \u003e 1.5 goals - no","BHO-Y":"Both halves \u003e 1.5 goals - yes","BHU-N":"Both halves \u003c 1.5 goals - no","BHU-Y":"Both halves \u003c 1.5 goals - yes","BTS-N":"One scoreless","BTS-OTS_Y":"Only one to score","BTS-Y":"Beide Teams erzielen mind. 1 Tor","BTSD-N":"Both To Score and Draw - no","BTSD-Y":"Both To Score and Draw - yes","BTSW1-N":"Both To Score and W1 - no","BTSW1-Y":"Both To Score and W1 - yes","BTSW2-N":"Both To Score and W2 - no","BTSW2-Y":"Both To Score and W2 - yes","CNR_1X2-1":"1 - Eckbälle","CNR_1X2-2":"2 - Eckbälle","CNR_1X2-X":"X - Eckbälle","CNR_DC-12":"12 - Eckbälle","CNR_DC-1X":"1X - Eckbälle","CNR_DC-X2":"X2 - Eckbälle","CNR_F-F1":"Handicap 1(%s) - Eckbälle","CNR_F-F2":"Handicap 2(%s) - Eckbälle","CNR_OE-EVEN":"Gerade - Eckbälle","CNR_OE-ODD":"Ungerade - Eckbälle","CNR_OU-TO":"Gesamtzahl Mehr als(%s) - Eckbälle","CNR_OU-TU":"Gesamtzahl Weniger als(%s) - Eckbälle","CNR_OU1-TO":"Gesamtzahl Mehr als(%s) team 1 - Eckbälle","CNR_OU1-TU":"Gesamtzahl Weniger als(%s) team 1 - Eckbälle","CNR_OU2-TO":"Gesamtzahl Mehr als(%s) team 2 - Eckbälle","CNR_OU2-TU":"Gesamtzahl Weniger als(%s) team 2 - Eckbälle","CS-CS":"Genaues Ergebnis (%s)","CS-CS_N":"Genaues Ergebnis (%s) - weder","DBF_F-F1":"Asian Handicap1(%s) - Double Faults","DBF_F-F2":"Asian Handicap2(%s) - Double Faults","DBF_OU-TO":"Total Over(%s) - Double Faults","DBF_OU-TU":"Total Under(%s) - Double Faults","DBF_OU1-TO":"Total Over(%s) for Team1 - Double Faults","DBF_OU1-TU":"Total Under(%s) for Team1 - Double Faults","DBF_OU2-TO":"Total Over(%s) for Team2 - Double Faults","DBF_OU2-TU":"Total Under(%s) for Team2 - Double Faults","DBH-N":"unentschieden beiden Spielhälften - weder","DBH-Y":"unentschieden beiden Spielhälften - so","DBL-N":"Double - no","DBL-Y":"Double - yes","DC-12":"12","DC-1X":"1X","DC-X2":"X2","DEH-N":"Draw in either half - no","DEH-Y":"Draw in either half - yes","DNB-DNB1":"Handicap 1(0)/Unentschieden wette ungültig","DNB-DNB2":"Handicap 2(0)/Unentschieden wette ungültig","DTO-N":"unentschieden und Gesamtzahl Mehr als(2.5) - weder","DTO-Y":"unentschieden und Gesamtzahl Mehr als(2.5) - so","DTU-N":"unentschieden und Gesamtzahl Weniger als(2.5) - weder","DTU-Y":"unentschieden und Gesamtzahl Weniger als(2.5) - so","EG-EG":"Exact (%s)","EG-EG_N":"Exact (%s) - no","EG1-EG":"Exact (%s) for Team1","EG1-EG_N":"Exact (%s) for Team1 - no","EG2-EG":"Exact (%s) for Team2","EG2-EG_N":"Exact (%s) for Team2 - no","EH-EH1":"European Handicap1(%s)","EH-EH2":"European Handicap2(%s)","EH-EHX":"European HandicapX(%s)","ERR_OU-TO":"Gesamtzahl Mehr als(%s) - Fehler","ERR_OU-TU":"Handicap 2(%s) - Fehler","F-F1":"Handicap 1(%s)","F-F2":"Handicap 2(%s)","FG-1":"Team1 - 1st goal","FG-2":"Team2 - 1st goal","FG-ML1":"Team1 - 1st goal (draw no bet)","FG-ML2":"Team2 - 1st goal (draw no bet)","FG-X":"No goal","FOUL_1X2-1":"1 - Foul","FOUL_1X2-2":"2 - Foul","FOUL_1X2-X":"X - Foul","FOUL_DC-12":"12 - Foul","FOUL_DC-1X":"1X - Foul","FOUL_DC-X2":"X2 - Foul","FOUL_F-F1":"Handicap 1(%s) - Foul","FOUL_F-F2":"Handicap 2(%s) - Foul","FOUL_OE-EVEN":"Gerade - Foul","FOUL_OE-ODD":"Ungerade - Foul","FOUL_OU-TO":"Gesamtzahl Mehr als(%s) - Foul","FOUL_OU-TU":"Gesamtzahl Weniger als(%s) - Foul","FOUL_OU1-TO":"Gesamtzahl Mehr als(%s) team 1 - Foul","FOUL_OU1-TU":"Gesamtzahl Weniger als(%s) team 1 - Foul","FOUL_OU2-TO":"Gesamtzahl Mehr als(%s) team 2 - Foul","FOUL_OU2-TU":"Gesamtzahl Weniger als(%s) team 2 - Foul","GBH-N":"Goals in both halves - no","GBH-Y":"Goals in both halves - yes","GBH1-N":"Team 1 - Erzielt in beiden Spielhälften mind. 1 Tor - weder","GBH1-Y":"Team 1 - Erzielt in beiden Spielhälften mind. 1 Tor - so","GBH2-N":"Team 2 - Erzielt in beiden Spielhälften mind. 1 Tor - weder","GBH2-Y":"Team 2 - Erzielt in beiden Spielhälften mind. 1 Tor - so","HH-ML1":"Gewinner des Spiels team 1","HH-ML2":"Gewinner des Spiels team 2","HIT_1X2-1":"1 - Treffer","HIT_1X2-2":"2 - Treffer","HIT_1X2-X":"X - Treffer","HIT_F-F1":"Handicap 1(%s) - Treffer+Fehler+Runs","HIT_F-F2":"Handicap 2(%s) - Treffer+Fehler+Runs","HIT_OU-TO":"Gesamtzahl Mehr als(%s) - Treffer","HIT_OU-TU":"Gesamtzahl Weniger als(%s) - Treffer","HIT_OU1-TO":"Gesamtzahl Mehr als(%s) team 1 - Treffer","HIT_OU1-TU":"Gesamtzahl Weniger als(%s) team 1 - Treffer","HIT_OU2-TO":"Gesamtzahl Mehr als(%s) team 2 - Treffer","HIT_OU2-TU":"Gesamtzahl Weniger als(%s) team 2 - Treffer","HMG-1":"More goals in the 1st half","HMG-2":"More goals in the 2nd half","HMG-ML1":"1 half most goals (draw no bet)","HMG-ML2":"2 half most goals (draw no bet)","HMG-X":"Equal goals in halves","HTFT-1_1":"01.янв","HTFT-1_1_N":"1/1 - weder","HTFT-1_2":"01.фев","HTFT-1_2_N":"1/2 - weder","HTFT-1_X":"1/X","HTFT-1_X_N":"1/X - weder","HTFT-2_1":"02.янв","HTFT-2_1_N":"2/1 - weder","HTFT-2_2":"02.фев","HTFT-2_2_N":"2/2 - weder","HTFT-2_X":"2/X","HTFT-2_X_N":"2/X - weder","HTFT-X_1":"X/1","HTFT-X_1_N":"X/1 - weder","HTFT-X_2":"X/2","HTFT-X_2_N":"X/2 - weder","HTFT-X_X":"X/X","HTFT-X_X_N":"X/X - weder","HTR-N":"Hattrick - no","HTR-Y":"Hattrick - yes","LCNR-1":"Team1 - Last corner","LCNR-2":"Team2 - Last corner","LCNR-ML1":"Team1 - Last corner","LCNR-ML2":"Team2 - Last corner","LCNR-X":"No corners","LG-1":"Team1 - Last goal","LG-2":"Team2 - Last goal","LG-ML1":"Team1 - Last goal (draw no bet)","LG-ML2":"Team2 - Last goal (draw no bet)","LG-X":"No goal","LOFS-1":"Team1 - Last offside","LOFS-2":"Team2 - Last offside","LOFS-ML1":"Team1 - Last offside","LOFS-ML2":"Team2 - Last offside","LOFS-X":"No offsides","LSUBS-ML1":"Team1 - Last subs","LSUBS-ML2":"Team2 - Last subs","LYC-1":"Team1 - Last Yellow Card","LYC-2":"Team2 - Last Yellow Card","LYC-ML1":"Team1 - Last Yellow Card","LYC-ML2":"Team2 - Last Yellow Card","LYC-X":"No Yellow Card","ML-ML1":"Gewinner des Spiels team 1","ML-ML1-30":"1. platz - so","ML-ML2":"Gewinner des Spiels team 2","ML-ML2-30":"1. platz - weder","NB1-ML1":"Home No Bet - No W2","NB1-ML2":"Home No Bet - W2","NB1-MLX":"Home No Bet - Draw","NB1-MLX_N":"Home No Bet - No Draw","NB2-ML1":"Away No Bet - W1","NB2-ML2":"Away No Bet - No W1","NB2-MLX":"Away No Bet - Draw","NB2-MLX_N":"Away No Bet - No Draw","NG-1":"Team1 - Next goal","NG-2":"Team2 - Next goal","NG-ML1":"Team1 - Next goal (draw no bet)","NG-ML2":"Team2 - Next goal (draw no bet)","NG-X":"No next goal","OE-EVEN":"Gerade","OE-ODD":"Ungerade","OFS_1X2-1":"1 - Offsides","OFS_1X2-2":"2 - Offsides","OFS_1X2-X":"X - Offsides","OFS_DC-12":"12 - Offsides","OFS_DC-1X":"1X - Offsides","OFS_DC-X2":"X2 - Offsides","OFS_F-F1":"Handicap 1(%s) - Offsides","OFS_F-F2":"Handicap 2(%s) - Offsides","OFS_OE-EVEN":"Gerade - Offsides","OFS_OE-ODD":"Ungerade - Offsides","OFS_OU-TO":"Gesamtzahl Mehr als(%s) - Offsides","OFS_OU-TU":"Gesamtzahl Weniger als(%s) - Offsides","OFS_OU1-TO":"Gesamtzahl Mehr als(%s) team 1 - Offsides","OFS_OU1-TU":"Gesamtzahl Weniger als(%s) team 1 - Offsides","OFS_OU2-TO":"Gesamtzahl Mehr als(%s) team 2 - Offsides","OFS_OU2-TU":"Gesamtzahl Weniger als(%s) team 2 - Offsides","OG-N":"Eigentor - weder","OG-Y":"Eigentor - so","OT-N":"Spiel geht in die Verlangerund - weder","OT-Y":"Spiel geht in die Verlangerund - so","OU-TO":"Gesamtzahl Mehr als(%s)","OU-TU":"Gesamtzahl Weniger als(%s)","OU1-TO":"Gesamtzahl Mehr als(%s) team 1","OU1-TU":"Gesamtzahl Weniger als(%s) team 1","OU2-TO":"Gesamtzahl Mehr als(%s) team 2","OU2-TU":"Gesamtzahl Weniger als(%s) team 2","PEN-N":"Elfmeter - weder","PEN-Y":"Elfmeter - so","PL1-N":"1. platz - weder","PL1-Y":"1. platz - so","PL1_3-N":"1-3 platz - weder","PL1_3-Y":"1-3 platz - so","POS_1X2-1":"1 - Beherrschung ball","POS_1X2-2":"2 - Beherrschung ball","POS_1X2-X":"X - Beherrschung ball","POS_DC-12":"12 - Beherrschung ball","POS_DC-1X":"1X - Beherrschung ball","POS_DC-X2":"X2 - Beherrschung ball","POS_F-F1":"Handicap 1(%s) - Beherrschung ball","POS_F-F2":"Handicap 2(%s) - Beherrschung ball","POS_OU1-TO":"Gesamtzahl Mehr als(%s) team 1 - Beherrschung ball","POS_OU1-TU":"Gesamtzahl Weniger als(%s) team 1 - Beherrschung ball","POS_OU2-TO":"Gesamtzahl Mehr als(%s) team 2 - Beherrschung ball","POS_OU2-TU":"Gesamtzahl Weniger als(%s) team 2 - Beherrschung ball","RACE10-1":"Zuerst 10 punkte - team 1","RACE10-2":"Zuerst 10 punkte - team 2","RACE10-ML1":"Zuerst 10 punkte - team 1","RACE10-ML2":"Zuerst 10 punkte - team 2","RACE10-X":"Zuerst 10 punkte - niemand","RACE15-1":"Zuerst 15 punkte - team 1","RACE15-2":"Zuerst 15 punkte - team 2","RACE15-ML1":"Zuerst 15 punkte - team 1","RACE15-ML2":"Zuerst 15 punkte - team 2","RACE15-X":"Zuerst 15 punkte - niemand","RACE2-1":"Zuerst 2 punkte - team 1","RACE2-2":"Zuerst 2 punkte - team 2","RACE2-ML1":"Zuerst 2 punkte - team 1","RACE2-ML2":"Zuerst 2 punkte - team 2","RACE2-X":"Zuerst 2 punkte - niemand","RACE20-1":"Zuerst 20 punkte - team 1","RACE20-2":"Zuerst 20 punkte - team 2","RACE20-ML1":"Zuerst 20 punkte - team 1","RACE20-ML2":"Zuerst 20 punkte - team 2","RACE20-X":"Zuerst 20 punkte - niemand","RACE3-1":"Zuerst 3 punkte - team 1","RACE3-2":"Zuerst 3 punkte - team 2","RACE3-ML1":"Zuerst 3 punkte - team 1","RACE3-ML2":"Zuerst 3 punkte - team 2","RACE3-X":"Zuerst 3 punkte - niemand","RACE4-1":"Zuerst 4 punkte - team 1","RACE4-2":"Zuerst 4 punkte - team 2","RACE4-ML1":"Zuerst 4 punkte - team 1","RACE4-ML2":"Zuerst 4 punkte - team 2","RACE4-X":"Zuerst 4 punkte - niemand","RACE5-1":"Zuerst 5 punkte - team 1","RACE5-2":"Zuerst 5 punkte - team 2","RACE5-ML1":"Zuerst 5 punkte - team 1","RACE5-ML2":"Zuerst 5 punkte - team 2","RACE5-X":"Zuerst 5 punkte - niemand","RC-N":"rote Karte - weder","RC-Y":"rote Karte - so","RHE_OU-TO":"Gesamtzahl Mehr als(%s) - Treffer+Fehler+Runs","RHE_OU-TU":"Gesamtzahl Weniger als(%s) - Treffer+Fehler+Runs","SD-N":"Score Draw - no","SD-Y":"Score Draw - yes","SET_CS-SET_CS":"Genaues Ergebnis (%s) - Satz","SET_CS-SET_CS_N":"Genaues Ergebnis (%s) - Satz - weder","SET_EG-EG":"Exact (%s) - Sets","SET_EG-EG_N":"Exact (%s) - Sets - no","SET_F-SET_F1":"Handicap 1(%s) - Satz","SET_F-SET_F2":"Handicap 2(%s) - Satz","SET_OU-SET_TO":"Gesamtzahl Mehr als(%s) - Satz","SET_OU-SET_TU":"Gesamtzahl Weniger als(%s) - Satz","SHOT_1X2-1":"1 - Schüsse auf ziel","SHOT_1X2-2":"2 - Schüsse auf ziel","SHOT_1X2-X":"X - Schüsse auf ziel","SHOT_DC-12":"12 - Schüsse auf ziel","SHOT_DC-1X":"1X - Schüsse auf ziel","SHOT_DC-X2":"X2 - Schüsse auf ziel","SHOT_F-F1":"Handicap 1(%s) - Schüsse auf ziel","SHOT_F-F2":"Handicap 2(%s) - Schüsse auf ziel","SHOT_OE-EVEN":"Gerade - Schüsse auf ziel","SHOT_OE-ODD":"Ungerade - Schüsse auf ziel","SHOT_OU-TO":"Gesamtzahl Mehr als(%s) - Schüsse auf ziel","SHOT_OU-TU":"Gesamtzahl Weniger als(%s) - Schüsse auf ziel","SHOT_OU1-TO":"Gesamtzahl Mehr als(%s) team 1 - Schüsse auf ziel","SHOT_OU1-TU":"Gesamtzahl Weniger als(%s) team 1 - Schüsse auf ziel","SHOT_OU2-TO":"Gesamtzahl Mehr als(%s) team 2 - Schüsse auf ziel","SHOT_OU2-TU":"Gesamtzahl Weniger als(%s) team 2 - Schüsse auf ziel","SUBS_OU-TO":"Total Over(%s) - Subs","SUBS_OU-TU":"Total Under(%s) - Subs","SUBS_OU1-TO":"Total Over(%s) for Team1 - Subs","SUBS_OU1-TU":"Total Under(%s) for Team1 - Subs","SUBS_OU2-TO":"Total Over(%s) for Team2 - Subs","SUBS_OU2-TU":"Total Under(%s) for Team1 - Subs","SWS-N":"A sub will score - no","SWS-Y":"A sub will score - yes","TB-TO":"Gesamtzahl Mehr als(%s) - Tie-Break","TB-TU":"Gesamtzahl Weniger als(%s) - Tie-Break","TIME_FG-1":"1st goal - 1 half","TIME_FG-2":"1st goal - 2 half","TIME_FG-X":"No goal","TIME_SUBS-1":"1st substitution - 1 half","TIME_SUBS-2":"1st substitution - 2 half","TIME_SUBS-X":"1st substitution - intermission","TOX1-N":"1X und Gesamtzahl Mehr als(2.5) - weder","TOX1-Y":"1X und Gesamtzahl Mehr als(2.5) - so","TOX2-N":"X2 und Gesamtzahl Mehr als(2.5) - weder","TOX2-Y":"X2 und Gesamtzahl Mehr als(2.5) - so","TUX1-N":"1X und Gesamtzahl Weniger als(2.5) - weder","TUX1-Y":"1X und Gesamtzahl Weniger als(2.5) - so","TUX2-N":"X2 und Gesamtzahl Weniger als(2.5) - weder","TUX2-Y":"X2 und Gesamtzahl Weniger als(2.5) - so","W1G1-N":"Siegesvorsprung 1 Ziel - team 1 - weder","W1G1-Y":"Siegesvorsprung 1 Ziel - team 1 - so","W1G2-N":"Siegesvorsprung 1 Ziel - team 2 - weder","W1G2-Y":"Siegesvorsprung 1 Ziel - team 2 - so","W2G1-N":"Siegesvorsprung 2 Ziel - team 1 - weder","W2G1-Y":"Siegesvorsprung 2 Ziel - team 1 - so","W2G2-N":"Siegesvorsprung 2 Ziel - team 2 - weder","W2G2-Y":"Siegesvorsprung 2 Ziel - team 2 - so","W3G1-N":"Siegesvorsprung 3 Ziel - team 1 - weder","W3G1-Y":"Siegesvorsprung 3 Ziel - team 1 - so","W3G2-N":"Siegesvorsprung 3 Ziel - team 2 - weder","W3G2-Y":"Siegesvorsprung 3 Ziel - team 2 - so","WBH1-N":"Team 1 Gewinnt beiden Spielhälften - weder","WBH1-Y":"Team 1 Gewinnt beiden Spielhälften - so","WBH2-N":"Team 2 Gewinnt beiden Spielhälften - weder","WBH2-Y":"Team 2 Gewinnt beiden Spielhälften - so","WEH1-N":"Team 1 Gewinnt eine der beiden Spielhälften - weder","WEH1-Y":"Team 1 Gewinnt eine der beiden Spielhälften - so","WEH2-N":"Team 2 Gewinnt eine der beiden Spielhälften - weder","WEH2-Y":"Team 2 Gewinnt eine der beiden Spielhälften - so","WFB-N":"Win From Behind - no","WFB-Y":"Win From Behind - yes","WFB1-N":"Team1 to Win From Behind - no","WFB1-Y":"Team1 to Win From Behind - yes","WFB2-N":"Team2 to Win From Behind - no","WFB2-Y":"Team2 to Win From Behind - yes","WTN1-N":"Team 1 gewinnt ohne Gegentor","WTN1-Y":"Team 1 gewinnt ohne Gegentor","WTN2-N":"Team 2 gewinnt ohne Gegentor - weder","WTN2-Y":"Team 2 gewinnt ohne Gegentor - so","WTO1-N":"Gewinner des Spiels team 1 und Gesamtzahl Mehr als(2.5) - weder","WTO1-Y":"Gewinner des Spiels team 1 und Gesamtzahl Mehr als(2.5) - so","WTO2-N":"Gewinner des Spiels team 2 und Gesamtzahl Mehr als(2.5) - weder","WTO2-Y":"Gewinner des Spiels team 2 und Gesamtzahl Mehr als(2.5) - so","WTU1-N":"Gewinner des Spiels team 1 und Gesamtzahl Weniger als(2.5) - weder","WTU1-Y":"Gewinner des Spiels team 1 und Gesamtzahl Weniger als(2.5) - so","WTU2-N":"Gewinner des Spiels team 2 und Gesamtzahl Weniger als(2.5) - weder","WTU2-Y":"Gewinner des Spiels team 2 und Gesamtzahl Weniger als(2.5) - so","YC_1X2-1":"1 - gelbe Karte","YC_1X2-2":"2 - gelbe Karte","YC_1X2-X":"X - gelbe Karte","YC_DC-12":"12 - gelbe Karte","YC_DC-1X":"1X - gelbe Karte","YC_DC-X2":"X2 - gelbe Karte","YC_F-F1":"Handicap 1(%s) - gelbe Karte","YC_F-F2":"Handicap 2(%s) - gelbe Karte","YC_OE-EVEN":"Gerade - gelbe Karte","YC_OE-ODD":"Ungerade - gelbe Karte","YC_OU-TO":"Gesamtzahl Mehr als(%s) - gelbe Karte","YC_OU-TU":"Gesamtzahl Weniger als(%s) - gelbe Karte","YC_OU1-TO":"Gesamtzahl Mehr als(%s) team 1 - gelbe Karte","YC_OU1-TU":"Gesamtzahl Weniger als(%s) team 1 - gelbe Karte","YC_OU2-TO":"Gesamtzahl Mehr als(%s) team 2 - gelbe Karte","YC_OU2-TU":"Gesamtzahl Weniger als(%s) team 2 - gelbe Karte"},"markets":{"1":{"-1 F":"Handicap","-1 F more":"Handicap (Weitere Möglichkeiten)","-1 ML":"Gewinner des Spiels","-1 OU":"Mehr als/weniger als","-1 OU more":"Mehr als/weniger als (Weitere Möglichkeiten)","-1 OU1":"Gesamtzahl Tore - Team 1","-1 OU1 more":"Gesamtzahl Tore - Team 1 (Weitere Möglichkeiten)","-1 OU2":"Gesamtzahl Tore - Team 2","-1 OU2 more":"Gesamtzahl Tore - Team 2 (Weitere Möglichkeiten)","-100 ML":"Проход","0 1X2":"1X2","1 1X2":"1X2 [1 inning]","1 F":"Handicap [1 inning]","1 F more":"Handicap [1 inning] (Weitere Möglichkeiten)","1 OU":"Mehr als/weniger als [1 inning]","1 OU more":"Mehr als/weniger als [1 inning] (Weitere Möglichkeiten)","2 1X2":"1X2 [2 inning]","2 F":"Handicap [2 inning]","2 F more":"Handicap [2 inning] (Weitere Möglichkeiten)","2 OU":"Mehr als/weniger als [2 inning]","2 OU more":"Mehr als/weniger als [2 inning] (Weitere Möglichkeiten)","3 1X2":"1X2 [3 inning]","3 F":"Handicap [3 inning]","3 F more":"Handicap [3 inning] (Weitere Möglichkeiten)","3 OU":"Mehr als/weniger als [3 inning]","3 OU more":"Mehr als/weniger als [3 inning] (Weitere Möglichkeiten)"},"11":{"0 CS":"Genaues Ergebnis","0 F":"Handicap","0 F more":"Handicap (Weitere Möglichkeiten)","0 ML":"Gewinner des Spiels","0 OU":"Mehr als/weniger als","0 OU more":"Mehr als/weniger als (Weitere Möglichkeiten)","1 ML":"Gewinner des Spiels [1 frame]","2 ML":"Gewinner des Spiels [2 frame]","3 ML":"Gewinner des Spiels [3 frame]"},"12":{"0 CS":"Genaues Ergebnis","0 F":"Handicap","0 F more":"Handicap (Weitere Möglichkeiten)","0 ML":"Gewinner des Spiels","0 OU":"Mehr als/weniger als","0 OU more":"Mehr als/weniger als (Weitere Möglichkeiten)","0 OU1":"Gesamtzahl Tore - Team 1","0 OU2":"Gesamtzahl Tore - Team 2","1 ML":"Gewinner des Spiels [1 satz]","2 ML":"Gewinner des Spiels [2 satz]","3 ML":"Gewinner des Spiels [3 satz]"},"13":{"-1 CS":"Genaues Ergebnis","-1 F":"Handicap","-1 F more":"Handicap (Weitere Möglichkeiten)","-1 ML":"Gewinner des Spiels","-1 OU":"Mehr als/weniger als","-1 OU more":"Mehr als/weniger als (Weitere Möglichkeiten)","1 ML":"Gewinner des Spiels [1 satz]","2 ML":"Gewinner des Spiels [2 satz]","3 ML":"Gewinner des Spiels [3 satz]"},"14":{"0 CS":"Genaues Ergebnis","0 F":"Handicap","0 F more":"Handicap (Weitere Möglichkeiten)","0 ML":"Gewinner des Spiels","0 OU":"Mehr als/weniger als","0 OU more":"Mehr als/weniger als (Weitere Möglichkeiten)","1 ML":"Gewinner des Spiels [1 satz]","2 ML":"Gewinner des Spiels [2 satz]","3 ML":"Gewinner des Spiels [3 satz]"},"15":{"-100 ML":"Qualifiziert sich","0 1X2":"1X2","0 F":"Handicap","0 F more":"Handicap (Weitere Möglichkeiten)","0 OU":"Mehr als/weniger als","0 OU more":"Mehr als/weniger als (Weitere Möglichkeiten)","0 OU1":"Gesamtzahl Tore - Team 1","0 OU1 more":"Gesamtzahl Tore - Team 1 (Weitere Möglichkeiten)","0 OU2":"Gesamtzahl Tore - Team 2","0 OU2 more":"Gesamtzahl Tore - Team 2 (Weitere Möglichkeiten)","1 1X2":"1X2[1 hälfte]","1 F":"Handicap [1 hälfte]","1 F more":"Handicap [1 hälfte] (Weitere Möglichkeiten)","1 OU":"Mehr als/weniger als [1 hälfte]","1 OU more":"Mehr als/weniger als [1 hälfte] (Weitere Möglichkeiten)","2 1X2":"1X2[2 hälfte]","2 F":"Handicap [2 hälfte]","2 F more":"Handicap [2 hälfte] (Weitere Möglichkeiten)","2 OU":"Mehr als/weniger als [2 hälfte]","2 OU more":"Mehr als/weniger als [2 hälfte] (Weitere Möglichkeiten)"},"16":{"-100 ML":"Qualifiziert sich","0 1X2":"1X2","0 F":"Handicap","0 F more":"Handicap (Weitere Möglichkeiten)","0 OU":"Mehr als/weniger als","0 OU more":"Mehr als/weniger als (Weitere Möglichkeiten)","0 OU1":"Gesamtzahl Tore - Team 1","0 OU1 more":"Gesamtzahl Tore - Team 1 (Weitere Möglichkeiten)","0 OU2":"Gesamtzahl Tore - Team 2","0 OU2 more":"Gesamtzahl Tore - Team 2 (Weitere Möglichkeiten)","1 1X2":"1X2[1 halbzeit]","1 F":"Handicap [1 halbzeit]","1 F more":"Handicap [1 halbzeit] (Weitere Möglichkeiten)","1 OU":"Mehr als/weniger als [1 halbzeit]","1 OU more":"Mehr als/weniger als [1 halbzeit] (Weitere Möglichkeiten)","2 1X2":"1X2[2 halbzeit]","2 F":"Handicap [2 halbzeit]","2 F more":"Handicap [2 halbzeit] (Weitere Möglichkeiten)","2 OU":"Mehr als/weniger als [2 halbzeit]","2 OU more":"Mehr als/weniger als [2 halbzeit] (Weitere Möglichkeiten)"},"17":{"-100 ML":"Qualifiziert sich","0 1X2":"1X2","0 F":"Handicap","0 F more":"Handicap (Weitere Möglichkeiten)","0 OU":"Mehr als/weniger als","0 OU more":"Mehr als/weniger als (Weitere Möglichkeiten)","0 OU1":"Gesamtzahl Tore - Team 1","0 OU1 more":"Gesamtzahl Tore - Team 1 (Weitere Möglichkeiten)","0 OU2":"Gesamtzahl Tore - Team 2","0 OU2 more":"Gesamtzahl Tore - Team 2 (Weitere Möglichkeiten)","1 1X2":"1X2[1 halbzeit]","1 F":"Handicap [1 hälfte]","1 F more":"Handicap [1 hälfte] (Weitere Möglichkeiten)","1 OU":"Mehr als/weniger als [1 hälfte]","1 OU more":"Mehr als/weniger als [1 hälfte] (Weitere Möglichkeiten)","2 1X2":"1X2[2 hälfte]","2 F":"Handicap [2 hälfte]","2 F more":"Handicap [2 hälfte] (Weitere Möglichkeiten)","2 OU":"Mehr als/weniger als [2 hälfte]","2 OU more":"Mehr als/weniger als [2 hälfte] (Weitere Möglichkeiten)"},"18":{"-100 ML":"Qualifiziert sich","0 1X2":"1X2","0 F":"Handicap","0 F more":"Handicap (Weitere Möglichkeiten)","0 ML":"Gewinner des Spiels","0 OU":"Mehr als/weniger als","0 OU more":"Mehr als/weniger als (Weitere Möglichkeiten)","0 OU1":"Gesamtzahl Tore - Team 1","0 OU1 more":"Gesamtzahl Tore - Team 1 (Weitere Möglichkeiten)","0 OU2":"Gesamtzahl Tore - Team 2","0 OU2 more":"Gesamtzahl Tore - Team 2 (Weitere Möglichkeiten)","1 1X2":"1X2[1 halbzeit]","1 F":"Handicap [1 hälfte]","1 F more":"Handicap [1 hälfte] (Weitere Möglichkeiten)","1 OU":"Mehr als/weniger als [1 hälfte]","1 OU more":"Mehr als/weniger als [1 hälfte] (Weitere Möglichkeiten)","19":null,"2 1X2":"1X2[2 hälfte]","2 F":"Handicap [2 hälfte]","2 F more":"Handicap [2 hälfte] (Weitere Möglichkeiten)","2 OU":"Mehr als/weniger als [2 hälfte]","2 OU more":"Mehr als/weniger als [2 hälfte] (Weitere Möglichkeiten)"},"2":{"-1 F":"Handicap","-1 F more":"Handicap (Weitere Möglichkeiten)","-1 ML":"Gewinner des Spiels","-1 OU":"Mehr als/weniger als","-1 OU more":"Mehr als/weniger als (Weitere Möglichkeiten)","-1 OU1":"Gesamtzahl Tore - Team 1","-1 OU1 more":"Gesamtzahl Tore - Team 1 (Weitere Möglichkeiten)","-1 OU2":"Gesamtzahl Tore - Team 2","-1 OU2 more":"Gesamtzahl Tore - Team 2 (Weitere Möglichkeiten)","-100 ML":"Qualifiziert sich","0 1X2":"1X2","1 1X2":"1X2[1 viertel]","1 F":"Handicap [1 viertel]","1 F more":"Handicap [1 viertel] (Weitere Möglichkeiten)","1 OU":"Mehr als/weniger als [1 viertel]","1 OU more":"Mehr als/weniger als [1 viertel] (Weitere Möglichkeiten)","10 1X2":"1X2[1 hälfte]","10 F":"Handicap [1 hälfte]","10 F more":"Handicap [1 hälfte] (Weitere Möglichkeiten)","10 OU":"Mehr als/weniger als [1 hälfte]","10 OU more":"Mehr als/weniger als [1 hälfte] (Weitere Möglichkeiten)","2 1X2":"1X2[2 viertel]","2 F":"Handicap [2 viertel]","2 F more":"Handicap [2 viertel] (Weitere Möglichkeiten)","2 OU":"Mehr als/weniger als [2 viertel]","2 OU more":"Mehr als/weniger als [2 viertel] (Weitere Möglichkeiten)","20 1X2":"1X2[2 hälfte]","20 F":"Handicap [2 hälfte]","20 F more":"Handicap [2 hälfte] (Weitere Möglichkeiten)","20 OU":"Mehr als/weniger als [2 hälfte]","20 OU more":"Mehr als/weniger als [2 hälfte] (Weitere Möglichkeiten)","3 1X2":"1X2[3 viertel]","3 F":"Handicap [3 viertel]","3 F more":"Handicap [3 viertel] (Weitere Möglichkeiten)","3 OU":"Mehr als/weniger als [3 viertel]","3 OU more":"Mehr als/weniger als [3 viertel] (Weitere Möglichkeiten)","4 1X2":"1X2[4 viertel]","4 F":"Handicap [4 viertel]","4 F OU":"Mehr als/weniger als [4 viertel]","4 F OU more":"Mehr als/weniger als [4 viertel] (Weitere Möglichkeiten)","4 F more":"Handicap [4 viertel] (Weitere Möglichkeiten)","4 OU":"Mehr als/weniger als [4 viertel]","4 OU more":"Mehr als/weniger als [4 viertel] (Weitere Möglichkeiten)"},"23":{"-100 ML":"Qualifiziert sich","0 1X2":"1X2","0 F":"Handicap","0 F more":"Handicap (Weitere Möglichkeiten)","0 OU":"Mehr als/weniger als","0 OU more":"Mehr als/weniger als (Weitere Möglichkeiten)","0 OU1":"Gesamtzahl Tore - Team 1","0 OU1 more":"Gesamtzahl Tore - Team 1 (Weitere Möglichkeiten)","0 OU2":"Gesamtzahl Tore - Team 2","0 OU2 more":"Gesamtzahl Tore - Team 2 (Weitere Möglichkeiten)","1 1X2":"1X2[1 halbzeit]","1 F":"Handicap [1 hälfte]","1 F more":"Handicap [1 hälfte] (Weitere Möglichkeiten)","1 OU":"Mehr als/weniger als [1 hälfte]","1 OU more":"Mehr als/weniger als [1 hälfte] (Weitere Möglichkeiten)","2 1X2":"1X2[2 hälfte]","2 F":"Handicap [2 hälfte]","2 F more":"Handicap [2 hälfte] (Weitere Möglichkeiten)","2 OU":"Mehr als/weniger als [2 hälfte]","2 OU more":"Mehr als/weniger als [2 hälfte] (Weitere Möglichkeiten)"},"25":{"0 HH":"Кто выше","0 PL1":"1. platz","0 PL1_3":"1-3 platz"},"29":{"-1 CS":"Genaues Ergebnis","-1 F":"Handicap","-1 F more":"Handicap (Weitere Möglichkeiten)","-1 ML":"Gewinner des Spiels","-1 OU":"Mehr als/weniger als","-1 OU more":"Mehr als/weniger als (Weitere Möglichkeiten)","1 F":"Handicap [1 satz]","1 F more":"Handicap [1 satz] (Weitere Möglichkeiten)","1 ML":"Gewinner des Spiels [1 satz]","1 OU":"Mehr als/weniger als [1 satz]","1 OU more":"Mehr als/weniger als [1 satz] (Weitere Möglichkeiten)","2 F":"Handicap [2 satz]","2 F more":"Handicap [2 satz] (Weitere Möglichkeiten)","2 ML":"Gewinner des Spiels [2 satz]","2 OU":"Mehr als/weniger als [2 satz]","2 OU more":"Mehr als/weniger als [2 satz] (Weitere Möglichkeiten)","3 F":"Handicap [3 satz]","3 F more":"Handicap [3 satz] (Weitere Möglichkeiten)","3 ML":"Gewinner des Spiels [3 satz]","3 OU":"Mehr als/weniger als [3 satz]","3 OU more":"Mehr als/weniger als [3 satz] (Weitere Möglichkeiten)"},"30":{"0 ML":"1. platz"},"31":{"0 HH":"Кто выше","0 PL1":"1. platz","0 PL1_3":"1-3 platz"},"4":{"-100 ML":"Qualifiziert sich","0 1X2":"1X2","0 F":"Handicap","0 F more":"Handicap (Weitere Möglichkeiten)","0 OU":"Mehr als/weniger als","0 OU more":"Mehr als/weniger als (Weitere Möglichkeiten)","0 OU1":"Gesamtzahl Tore - Team 1","0 OU1 more":"Gesamtzahl Tore - Team 1 (Weitere Möglichkeiten)","0 OU2":"Gesamtzahl Tore - Team 2","0 OU2 more":"Gesamtzahl Tore - Team 2 (Weitere Möglichkeiten)","1 1X2":"1X2[1 halbzeit]","1 F":"Handicap [1 halbzeit]","1 F more":"Handicap [1 halbzeit] (Weitere Möglichkeiten)","1 OU":"Mehr als/weniger als [1 halbzeit]","1 OU more":"Mehr als/weniger als [1 halbzeit] (Weitere Möglichkeiten)","2 1X2":"1X2[2 halbzeit]","2 F":"Handicap [2 halbzeit]","2 F more":"Handicap [2 halbzeit] (Weitere Möglichkeiten)","2 OU":"Mehr als/weniger als [2 halbzeit]","2 OU more":"Mehr als/weniger als [2 halbzeit] (Weitere Möglichkeiten)"},"5":{"-100 ML":"Qualifiziert sich","0 1X2":"1X2","0 F":"Handicap","0 F more":"Handicap (Weitere Möglichkeiten)","0 OU":"Mehr als/weniger als","0 OU more":"Mehr als/weniger als (Weitere Möglichkeiten)","0 OU1":"Gesamtzahl Tore - Team 1","0 OU1 more":"Gesamtzahl Tore - Team 1 (Weitere Möglichkeiten)","0 OU2":"Gesamtzahl Tore - Team 2","0 OU2 more":"Gesamtzahl Tore - Team 2 (Weitere Möglichkeiten)","1 1X2":"1X2[1 hälfte]","1 F":"Handicap [1 hälfte]","1 F more":"Handicap [1 hälfte] (Weitere Möglichkeiten)","1 OU":"Mehr als/weniger als [1 hälfte]","1 OU more":"Mehr als/weniger als [1 hälfte] (Weitere Möglichkeiten)","2 1X2":"1X2[2 hälfte]","2 F":"Handicap [2 hälfte]","2 F more":"Handicap [2 hälfte] (Weitere Möglichkeiten)","2 OU":"Mehr als/weniger als [2 hälfte]","2 OU more":"Mehr als/weniger als [2 hälfte] (Weitere Möglichkeiten)"},"6":{"-100 ML":"Qualifiziert sich","-2 EH":"Europäisch handicap (mit verlängerung)","-2 EH more":"Europäisch handicap (Weitere Möglichkeiten) (mit verlängerung)","-2 F":"Handicap (mit verlängerung)","-2 F more":"Handicap (Weitere Möglichkeiten) (mit verlängerung)","-2 ML":"Gewinner des Spiels","-2 OU":"Mehr als/weniger als (mit verlängerung)","-2 OU more":"Mehr als/weniger als (Weitere Möglichkeiten) (mit verlängerung)","-2 OU1":"Gesamtzahl Tore - Team 1 (mit verlängerung)","-2 OU1 more":"Gesamtzahl Tore - Team 1 (Weitere Möglichkeiten) (mit verlängerung)","-2 OU2":"Gesamtzahl Tore - Team 2 (mit verlängerung)","-2 OU2 more":"Gesamtzahl Tore - Team 2 (Weitere Möglichkeiten) (mit verlängerung)","0 1X2":"1X2","0 BTS":"Beide Teams erzielen mind. 1 Tor","0 CS":"Genaues Ergebnis","0 DC":"Doppelte chance","0 EH":"Europäisch handicap","0 EH more":"Europäisch handicap (Weitere Möglichkeiten)","0 F":"Handicap","0 F more":"Handicap (Weitere Möglichkeiten)","0 OU":"Mehr als/weniger als","0 OU more":"Mehr als/weniger als (Weitere Möglichkeiten)","0 OU1":"Gesamtzahl Tore - Team 1","0 OU1 more":"Gesamtzahl Tore - Team 1 (Weitere Möglichkeiten)","0 OU2":"Gesamtzahl Tore - Team 2","0 OU2 more":"Gesamtzahl Tore - Team 2 (Weitere Möglichkeiten)","1 1X2":"1X2 [1 drittel]","1 F":"Handicap [1 drittel]","1 F more":"Handicap [1 drittel] (Weitere Möglichkeiten)","1 OU":"Mehr als/weniger als [1 drittel]","1 OU more":"Mehr als/weniger als [1 drittel] (Weitere Möglichkeiten)","2 1X2":"1X2 [2 drittel]","2 F":"Handicap [2 drittel]","2 F more":"Handicap [2 drittel] (Weitere Möglichkeiten)","2 OU":"Mehr als/weniger als [2 drittel]","2 OU more":"Mehr als/weniger als [2 drittel] (Weitere Möglichkeiten)","3 1X2":"1X2 [3 drittel]","3 F":"Handicap [3 drittel]","3 F more":"Handicap [3 drittel] (Weitere Möglichkeiten)","3 OU":"Mehr als/weniger als [3 drittel]","3 OU more":"Mehr als/weniger als [3 drittel] (Weitere Möglichkeiten)"},"7":{"-100 ML":"Qualifiziert sich","0 1X2":"1X2","0 BTS":"Beide Teams erzielen mind. 1 Tor","0 CNR_1X2":"1X2 Eckballe","0 CNR_DC":"Eckbälle mehr als/weniger als (Weitere Möglichkeiten)","0 CNR_F":"Eckbälle asian handicap","0 CNR_F more":"Eckbälle asian handicap (Weitere Möglichkeiten)","0 CNR_OU":"Eckbälle mehr als/weniger als","0 CNR_OU more":"Eckbälle mehr als/weniger als (Weitere Möglichkeiten)","0 CNR_OU1":"Eckbälle gesamtzahl Tore - Team 1","0 CNR_OU2":"Eckbälle gesamtzahl Tore - Team 2","0 DC":"Doppelte chance","0 DNB":"Unentschieden wette ungültig","0 EH":"Europäisch handicap","0 EH more":"Europäisch handicap (Weitere Möglichkeiten)","0 F":"Asian handicap","0 F more":"Asian handicap (Weitere Möglichkeiten)","0 NG":"Team mit dem ersten Tor","0 OE":"Ungerade/Gerade","0 OU":"Mehr als/weniger als","0 OU more":"Mehr als/weniger als (Weitere Möglichkeiten)","0 OU1":"Gesamtzahl Tore - Team 1","0 OU1 more":"Gesamtzahl Tore - Team 1 (Weitere Möglichkeiten)","0 OU2":"Gesamtzahl Tore - Team 2","0 OU2 more":"Gesamtzahl Tore - Team 2 (Weitere Möglichkeiten)","0 WTN1":"Team 1 gewinnt ohne Gegentor","0 WTN2":"Team 2 gewinnt ohne Gegentor","1 1X2":"1X2 [1 halbzeit]","1 CNR_1X2":"1X2 Eckbälle [1 halbzeit]","1 CNR_F":"Eckbälle asian handicap [1 halbzeit]","1 CNR_OU":"Eckbälle mehr als/weniger als [1 halbzeit]","1 DC":"Doppelte chance [1 halbzeit]","1 EH":"Europäisch handicap [1 halbzeit]","1 EH more":"Europäisch handicap (Weitere Möglichkeiten) [1 halbzeit]","1 F":"Asian handicap [1 halbzeit]","1 F more":"Asian handicap (Weitere Möglichkeiten) [1 halbzeit]","1 OU":"Mehr als/weniger als [1 halbzeit]","1 OU more":"Mehr als/weniger als [1 halbzeit] (Weitere Möglichkeiten)","2 1X2":"1X2 [2 halbzeit]","2 DC":"Doppelte chance [2 halbzeit]","2 EH":"Europäisch handicap [2 halbzeit]","2 EH more":"Europäisch handicap (Weitere Möglichkeiten) [2 halbzeit]","2 F":"Asian handicap [2 halbzeit]","2 F more":"Asian handicap (Weitere Möglichkeiten) [2 halbzeit]","2 OU":"Mehr als/weniger als [2 halbzeit]","2 OU more":"Mehr als/weniger als [2 halbzeit] (Weitere Möglichkeiten)"},"8":{"-1 CS":"Genaues Ergebnis","-1 F":"Handicap","-1 F more":"Handicap (Weitere Möglichkeiten)","-1 ML":"Gewinner des Spiels","-1 OU":"Mehr als/weniger als","-1 OU more":"Mehr als/weniger als (Weitere Möglichkeiten)","1 F":"Handicap [1 satz]","1 F more":"Handicap [1 satz] (Weitere Möglichkeiten)","1 ML":"Gewinner des Spiels [1 satz]","1 OU":"Mehr als/weniger als [1 satz]","1 OU more":"Mehr als/weniger als [1 satz] (Weitere Möglichkeiten)","2 F":"Handicap [2 satz]","2 F more":"Handicap [2 satz] (Weitere Möglichkeiten)","2 ML":"Gewinner des Spiels [2 satz]","2 OU":"Mehr als/weniger als [2 satz]","2 OU more":"Mehr als/weniger als [2 satz] (Weitere Möglichkeiten)"},"9":{"-100 ML":"Qualifiziert sich","0 CS":"Genaues Ergebnis","0 F":"Handicap","0 F more":"Handicap (Weitere Möglichkeiten)","0 ML":"Gewinner des Spiels","0 OU":"Mehr als/weniger als","0 OU more":"Mehr als/weniger als (Weitere Möglichkeiten)","1 F":"Handicap [1 satz]","1 F more":"Handicap [1 satz] (Weitere Möglichkeiten)","1 ML":"Gewinner des Spiels [1 satz]","1 OU":"Mehr als/weniger als [1 satz]","1 OU more":"Mehr als/weniger als [1 satz] (Weitere Möglichkeiten)","2 F":"Handicap [2 satz]","2 F more":"Handicap [2 satz] (Weitere Möglichkeiten)","2 ML":"Gewinner des Spiels [2 satz]","2 OU":"Mehr als/weniger als [2 satz]","2 OU more":"Mehr als/weniger als [2 satz] (Weitere Möglichkeiten)","3 F":"Handicap [3 satz]","3 F more":"Handicap [3 satz] (Weitere Möglichkeiten)","3 ML":"Gewinner des Spiels [3 satz]","3 OU":"Mehr als/weniger als [3 satz]","3 OU more":"Mehr als/weniger als [3 satz] (Weitere Möglichkeiten)"}},"modal":{"Choose Bookmakers":"Buchmacher wählen"},"no_found":{"markets_message":"Keine aktiven Quoten für Märkte von diesem Typ.","message":"Leider aktuelle stehen keine Ereignisse zur Verfügung."},"number":{"currency":{"format":{"delimiter":".","format":"%n %u","precision":2,"separator":",","significant":false,"strip_insignificant_zeros":false,"unit":"€"}},"format":{"delimiter":".","precision":2,"separator":",","significant":false,"strip_insignificant_zeros":false},"human":{"decimal_units":{"format":"%n %u","units":{"billion":{"one":"Milliarde","other":"Milliarden"},"million":{"one":"Million","other":"Millionen"},"quadrillion":{"one":"Billiarde","other":"Billiarden"},"thousand":"Tausend","trillion":{"one":"Billion","other":"Billionen"},"unit":""}},"format":{"delimiter":"","precision":3,"significant":true,"strip_insignificant_zeros":true},"storage_units":{"format":"%n %u","units":{"byte":{"one":"Byte","other":"Bytes"},"gb":"GB","kb":"KB","mb":"MB","tb":"TB"}}},"percentage":{"format":{"delimiter":"","format":"%n %"}},"precision":{"format":{"delimiter":""}}},"recaptcha":{"errors":{"failed":"Recaptcha – Prüfung misslungen","reenter":"Bitte füllen Sie Captcha aus"}},"seo":{"/de/":{"description":"Wettquoten von 79 Wettbüros für aktuelle Sportereignisse in Live und Prematch! Vergleichen Sie, setzen Sie die Wetten und gewinnen Sie mit OddsFan!","keywords":"Online, Service, Vergleich, Buchmacher, Quoten.","title":"Vergleichsservice der Wettquoten von Wettbüros – OddsFan.com"},"/de/about_bookmakers":{"description":"Alle erforderlichen Informationen über Wettbüros, mit denen wir zusammenarbeiten.","keywords":"OddsFan","title":"Über unsere Buchmacher | OddsFan.com"},"/de/about_us":{"description":"Über unseren Vergleichsservice der Wettquoten.","keywords":"OddsFan","title":"Über uns | OddsFan.com"},"/de/account":{"description":"Personenbezogene Daten.","keywords":"OddsFan","title":"Personenbezogene Daten"},"/de/account/bookmakers":{"description":"Meine Buchmacher.","keywords":"OddsFan","title":"Meine Buchmacher"},"/de/advanced":{"description":"Fachliche Tipps und Empfehlungen für erfahrene Spieler und für Anfänger.","keywords":"OddsFan","title":"Fachliche Tipps und Empfehlungen | OddsFan.com"},"/de/advertising":{"description":"Für Rückfragen über Zusammenarbeit und Werbung auf unserer Website stehen wir Ihnen gerne zur Verfügung.","keywords":"OddsFan","title":"Werbung | OddsFan.com"},"/de/betting_guide":{"description":"Wie setzt man die Wetten in den Wettbüros: schrittweise Anweisung für Anfänger.","keywords":"OddsFan","title":"Wie setzt man die Wetten in den Wettbüros? | OddsFan.com"},"/de/contact_us":{"description":"Feedbackmit Administration der Site| OddsFan.com","keywords":"OddsFan","title":"Kontakt | OddsFan.com"},"/de/content_solution":{"description":"Content-Lösung von OddsFan.com","keywords":"OddsFan","title":"Content-Lösung | OddsFan.com"},"/de/country":{"description":"Wir bieten die besten Wettquoten für %s an! Vergleichen Sie, wählen Sie die besten Angebote der Buchmacher und setzen Sie die vorteilhaften Wetten! %s","keywords":"%s, %s, Quoten, Buchmacher, Vergleich.","title":"Ligen %s – Quoten der Buchmacher für %s vergleichen"},"/de/country/teams":{"description":"%s: Kalender und Spielplan für %s. Wir bieten die besten Wettquoten für jegliche Sportereignisse %s an.","keywords":"%s, Quoten, Buchmacher, Kalender, Spiele. %s","title":"Mannschaften %s – Spielplan für %s"},"/de/disclaimer":{"description":"Haftungsausschluss OddsFan.com","keywords":"OddsFan","title":"Haftungsausschluss | OddsFan.com"},"/de/event":{"description":"%s: Wettquoten für Spiel %s.","keywords":"%s, %s, %s,Quoten, Buchmacher, Spiel.","title":"%s - Wettquoten für Spiel"},"/de/getting_started":{"description":"Womit sollen Sie bei unserem Vergleichsservice der Wettquoten anfangen.","keywords":"OddsFan","title":"Wie kann ich die Arbeit mit Service beginnen? | OddsFan.com"},"/de/league":{"description":"%s: die besten Wettquoten für Ereignisse von 79 Wettbüros. Vergleichen Sie, wählen Sie die besten und gewinnen Sie mit uns!","keywords":"%s, Buchmacher, Quoten, die besten, Vergleich.","title":"%s – Vergleich der Wettquoten für %s %s"},"/de/legal_status":{"description":"Rechtsstatus OddsFan.com","keywords":"OddsFan","title":"Rechtsstatus | OddsFan.com"},"/de/live_odds":{"description":"Die besten Wettquoten Live für %s spiele von über 170 Wettbüros! OddsFan.com – Vergleichsservice von Wettquoten.","keywords":"%s, live Quoten, Wettquoten,Vergleichsservice","title":"Live Wettquoten - Wettquoten für beliebte %s spiele Live"},"/de/next_matches":{"description":"Wettquoten für bevorstehende Spiele von über 170 Wettbüros! OddsFan.com – nur die besten Wettquoten für %s spiele.","keywords":"%s, nächstfolgende Spiele, Wettquoten, Vergleichsservice","title":"Nächstfolgende Spiele - Wettquoten für bevorstehende %s spiele"},"/de/popular":{"description":"Hier sind die Wettquoten für beliebte %s spiele von über 170 Wettbüros gesammelt. Nur die besten Wettquoten für die beliebten Spiele von OddsFan.com","keywords":"%s, beliebte Spiele, Wettquoten, Vergleichsservice","title":"Beliebte Spiele - Wettquoten für beliebte %s spiele"},"/de/privacy":{"description":"Vertraulichkeitspolitik OddsFan.com","keywords":"OddsFan","title":"Vertraulichkeitspolitik | OddsFan.com"},"/de/sign_in":{"description":"Authorization OddsFan.com","keywords":"OddsFan","title":"Authorization | OddsFan.com\""},"/de/sign_up":{"description":"Anmeldung OddsFan.com","keywords":"OddsFan","title":"Anmeldung | OddsFan.com"},"/de/sport/id":{"description":"Wir bieten die besten Wettquoten für %s an! Vergleichen Sie, wählen Sie die besten Angebote der Buchmacher und setzen Sie die vorteilhaften Wetten!","keywords":"%s, Quoten, Buchmacher, Vergleich, Wetten","title":"Quoten für %s – die besten Wettquoten für %s"},"/de/terms":{"description":"Bedingungen und Anforderungen OddsFan.com","keywords":"OddsFan","title":"Bedingungen und Anforderungen | OddsFan.com"},"/de/what_is_oddsfan":{"description":"Alle erforderlichen Informationen über den Vergleichsservice der Wettquoten OddsFan.com","keywords":"OddsFan","title":"Was ist OddsFan?"},"/de/widget/new":{"description":"Widget für Websites mit Anzeige von besten Wettquoten für bevorstehende Spiele.","keywords":"OddsFan","title":"Widget – bevorstehende Spiele | OddsFan.com"}},"sidebar":{"Dark":"dunkel","Light":"hell"},"sport":{"Choose League":"Ligen","Live":"Live","Most popular League data_live":"Beliebte Ligen Live","Most popular League data_prematch":"Beliebte Ligen","Most popular Matches data_live":"Beliebte Spiele Live","Most popular Matches data_prematch":"Beliebte Spiele","No leagues with active matches":"Keine Ligen mit aktiven Spielen stehen zur Verfügung","Prematch":"Prematch","Statistics":"Statistik","The number of":"Anzahl","back":"Zurück","bookmakers":"Buchmacher","countries_groups":{"africa":"Africa","asia":"Asia","australia":"Australia","europe":"Europe","north_america":"North America","south_america":"South America","world":"World"},"events":"Ereignisse","league":"Liga","match":"Spiel","other":"Other","page_desc":"Dank unserem Service können Sie die günstigsten Wettquoten für %s vergleichen und wählen. Vergleichen Sie, wählen Sie die besten Angebote der Buchmacher und setzen Sie die vorteilhaften Wetten.","page_h1":"Quoten für%s","score":"Ergebnis des Spiels","started at":"Datum des Beginns","stats":{"bookmakers_count":"gescannte Buchmacher","countries_count":"gescannte Länder","events_count":"ereignisse","leagues_count":"gescannte Ligen","teams_count":"teilnehmende Mannschaften"}},"sports":{"AFL":"AFL","American Football":"Am. Fußball","Athletics":"Leichtathletik","Badminton":"Badminton","Bandy":"Bandy","Baseball":"Baseball","Basketball":"Basketball","Beach Soccer":"Beach Soccer","Beach Volleyball":"Strandvolleyball","Biathlon":"Biathlon","Boxing/MMA":"Boxen/MMA","Chess":"Schachspiel","Cricket":"Cricket","Cycling":"Radfahrsport","Darts":"Darts","E-Sports":"E-Sport","Field Hockey":"Feldhockey","Formula 1":"Formel 1","Futsal":"Futsal","Gaelic Sport":"Gaelic Sport","Handball":"Handball","Hockey":"Hockey","Horse Racing":"Pferderennen","Motorcycling":"Motorsport","Netball":"Netball","Rugby":"Rugby","Snooker":"Snooker","Soccer":"Fußball","Squash":"Squash","Table Tennis":"Tischtennis","Tennis":"Tennis","Volleyball":"Volleyball","Water Polo":"Wasserpolo","full":{"AFL":"AFL","American Football":"Amerikanischer Fußball","Athletics":"Leichtathletik","Badminton":"Badminton","Bandy":"Bandy","Baseball":"Baseball","Basketball":"Basketball","Beach Soccer":"Beach Soccer","Beach Volleyball":"Strandvolleyball","Boxing/MMA":"Boxen/MMA","Chess":"Schachspiel","Cricket":"Cricket","Cycling":"Radfahrsport","Darts":"Darts","E-Sports":"E-Sport","Field Hockey":"Feldhockey","Formula 1":"Formel 1","Futsal":"Futsal","Gaelic Sport":"Gaelic Sport","Handball":"Handball","Hockey":"Hockey","Horse Racing":"Pferderennen","Ice Hockey":"Eishockey","Motorcycling":"Motorsport","Netball":"Netball","Rugby":"Rugby","Snooker":"Snooker","Soccer":"Fußball","Squash":"Squash","Table Tennis":"Tischtennis","Tennis":"Tennis","Volleyball":"Volleyball","Water Polo":"Wasserpolo"}},"static_pages":{"nav":{"links":{"About Us":"Über uns","About our bookmakers":"Buchmacher","Advanced Tips \u0026 Tricks":"Fachliche Tipps und Empfehlungen","Advertising":"Werbung","Bet responsibly":"18 + Gamble Responsible","Betting Guide":"Wie setzt man Wetten?","Contact us":"Schreiben Sie uns","Content Solution":"Content-Lösung","Disclaimer":"Haftungsausschluss","Getting started":"Wie kann ich damit anfangen?","Getting started betting and":"Wie kann ich mit Wetten beginnen und","HELP \u0026 SUPPORT":"Hilfe und Support","Legal Status":"Rechtsstatus","Legal information":"Rechtliche Informationen","Privacy Policy":"Vertraulichkeitspolitik","Terms and conditions":"Allgemeine Geschäftsbedingungen","What is OddsFan?":"Was ist OddsFan?","blog":"Blog","business partnership":"Geschäfts partnerschaft","odds comparison":"Quoten vergleichen","widget":"Widget"}}},"support":{"array":{"last_word_connector":" und ","two_words_connector":" und ","words_connector":", "}},"time":{"am":"vormittags","formats":{"default":"%A, %d. %B %Y, %H:%M Uhr","long":"%A, %d. %B %Y, %H:%M Uhr","short":"%d. %B, %H:%M Uhr"},"pm":"nachmittags"},"timezones":{"Abu Dhabi":"Abu Dhabi","Adelaide":"Adelaide","Alaska":"Alaska","Almaty":"Almaty","American Samoa":"American Samoa","Amsterdam":"Amsterdam","Arizona":"Arizona","Astana":"Astana","Athens":"Athens","Atlantic Time (Canada)":"Atlantic Time (Canada)","Auckland":"Auckland","Azores":"Azores","Baghdad":"Baghdad","Baku":"Baku","Bangkok":"Bangkok","Beijing":"Beijing","Belgrade":"Belgrade","Berlin":"Berlin","Bern":"Bern","Bogota":"Bogota","Brasilia":"Brasilia","Bratislava":"Bratislava","Brisbane":"Brisbane","Brussels":"Brussels","Bucharest":"Bucharest","Budapest":"Budapest","Buenos Aires":"Buenos Aires","Cairo":"Cairo","Canberra":"Canberra","Cape Verde Is":"Cape Verde Is.","Cape Verde Is.":"Cape Verde Is.","Caracas":"Caracas","Casablanca":"Casablanca","Central America":"Central America","Central Time (US \u0026 Canada)":"Central Time (US \u0026 Canada)","Chatham Is":"Chatham Is","Chennai":"Chennai","Chihuahua":"Chihuahua","Chongqing":"Chongqing","Copenhagen":"Copenhagen","Darwin":"Darwin","Dhaka":"Dhaka","Dublin":"Dublin","Eastern Time (US \u0026 Canada)":"Eastern Time (US \u0026 Canada)","Edinburgh":"Edinburgh","Ekaterinburg":"Ekaterinburg","Fiji":"Fiji","Georgetown":"Georgetown","Greenland":"Greenland","Guadalajara":"Guadalajara","Guam":"Guam","Hanoi":"Hanoi","Harare":"Harare","Hawaii":"Hawaii","Helsinki":"Helsinki","Hobart":"Hobart","Hong Kong":"Hong Kong","Indiana (East)":"Indiana (East)","International Date Line West":"International Date Line West","Irkutsk":"Irkutsk","Islamabad":"Islamabad","Istanbul":"Istanbul","Jakarta":"Jakarta","Jerusalem":"Jerusalem","Kabul":"Kabul","Kaliningrad":"Kaliningrad","Kamchatka":"Kamchatka","Karachi":"Karachi","Kathmandu":"Kathmandu","Kolkata":"Kolkata","Krasnoyarsk":"Krasnoyarsk","Kuala Lumpur":"Kuala Lumpur","Kuwait":"Kuwait","Kyiv":"Kyiv","La Paz":"La Paz","Lima":"Lima","Lisbon":"Lisbon","Ljubljana":"Ljubljana","London":"London","Madrid":"Madrid","Magadan":"Magadan","Marshall Is":"Marshall Is.","Marshall Is.":"Marshall Is.","Mazatlan":"Mazatlan","Melbourne":"Melbourne","Mexico City":"Mexico City","Mid-Atlantic":"Mid-Atlantic","Midway Island":"Midway Island","Minsk":"Minsk","Monrovia":"Casablanca","Monterrey":"Monterrey","Montevideo":"Montevideo","Moscow":"Moscow","Mountain Time (US \u0026 Canada)":"Mountain Time (US \u0026 Canada)","Mumbai":"Mumbai","Muscat":"Muscat","Nairobi":"Nairobi","New Caledonia":"New Caledonia","New Delhi":"New Delhi","Newfoundland":"Newfoundland","Novosibirsk":"Novosibirsk","Nuku'alofa":"Nuku'alofa","Osaka":"Osaka","Pacific Time (US \u0026 Canada)":"Pacific Time (US \u0026 Canada)","Paris":"Paris","Perth":"Perth","Port Moresby":"Port Moresby","Prague":"Prague","Pretoria":"Pretoria","Quito":"Quito","Rangoon":"Rangoon","Riga":"Riga","Riyadh":"Riyadh","Rome":"Rome","Samara":"Samara","Samoa":"Samoa","Santiago":"Santiago","Sapporo":"Sapporo","Sarajevo":"Sarajevo","Saskatchewan":"Saskatchewan","Seoul":"Seoul","Singapore":"Singapore","Skopje":"Skopje","Sofia":"Sofia","Solomon Is":"Solomon Is.","Solomon Is.":"Solomon Is.","Srednekolymsk":"Srednekolymsk","Sri Jayawardenepura":"Sri Jayawardenepura","St":{" Petersburg":"St. Petersburg"},"St. Petersburg":"St. Petersburg","Stockholm":"Stockholm","Sydney":"Sydney","Taipei":"Taipei","Tallinn":"Tallinn","Tashkent":"Tashkent","Tbilisi":"Tbilisi","Tehran":"Tehran","Tijuana":"Tijuana","Tokelau Is":"Tokelau Is.","Tokelau Is.":"Tokelau Is.","Tokyo":"Tokyo","UTC":"UTC","Ulaan Bataar":"Ulaan Bataar","Ulaanbaatar":"Ulaanbaatar","Urumqi":"Urumqi","Vienna":"Vienna","Vilnius":"Vilnius","Vladivostok":"Vladivostok","Volgograd":"Volgograd","Warsaw":"Warsaw","Wellington":"Wellington","West Central Africa":"West Central Africa","Yakutsk":"Yakutsk","Yerevan":"Yerevan","Zagreb":"Zagreb"},"tournament":{"A":"A","Beginning time":"Beginning time","D":"D","F":"F","L":"L","P":"P","Pts":"Pts","Score":"Score","Team":"Team","W":"W","final":"%s Final","final_1":"Final","final_3":"Third place play-off","group":"Group %s","wc2018_h1":"World Cup 2018","wc2018_h1_seo":"World Cup 2018 Standings"},"wc_seo":{"Argentina_Croatia":"\u003cp\u003eThere's no doubt, the Argentina national team won't easily fight with Croatia, although the bookmakers' odds are clearly in favor of the Sampaoli team.\u003c/p\u003e","Brazil_Switzerland":"\u003cp\u003eSetting odds on the match Brazil-Switzerland, bookmakers made it clear that they do not believe in the success of the Swiss.\u003c/p\u003e\u003cp\u003eHowever, the Brazilians obviously shouldn't expect an easy game, as Switzerland have repeatedly proved they can adequately compete with big-name opponents.\u003c/p\u003e","Denmark_France":"\u003cp\u003eWill the Danish team be able to get a victory in the fight with eminent France? We'll see it. In any case, bookmakers' odds are clearly not in favor of the nominal home team.\u003c/p\u003e","England_Belgium":"\u003cp\u003eVery interesting confrontation without obvious favorite and outsider. The same opinion is shared by bookmakers that put their odds on this meeting.\u003c/p\u003e","France_Australia":"\u003cp\u003eAustralian team is the undisputed underdog in the confrontation with France. It’s difficult to imagine in what way Bert van Marwijk's wards could beat such an eminent rival.\u003c/p\u003e\u003cp\u003eBookmakers don't believe in the success of Australia as well. Odds for the victory of nominal away team exceeded the mark of 10 to 1.\u003c/p\u003e","Germany_Mexico":"\u003cp\u003eMexico has a great chance to take revenge on the German national team for the defeat in the semi-finals of the Confederations Cup, but the bookmakers' odds are not in favor of nominal away team.\u003c/p\u003e","Germany_Sweden":"\u003cp\u003eFor all football fans, the favorite in this match is absolutely obvious and it’s the German national team. No wonder the odds for the victory of Lev's team in most bookmakers do not exceed 1.5 to 1.\u003c/p\u003e\u003cp\u003eHowever, the Swedish national team has repeatedly proved that it is able to take points from famous rivals, so that it may well present a nasty surprise to the current World Champion.\u003c/p\u003e","Mexico_Sweden":"\u003cp\u003eIn the match Mexico-Sweden won’t be pronounced a clear favorite, as in the face-to-face confrontation play almost equal level teams.\u003c/p\u003e\u003cp\u003eThis is well understood by bookmakers, so the odds of winning the Swedes and Mexicans in this meeting are almost equal.\u003c/p\u003e","Poland_Colombia":"\u003cp\u003ePoland and Colombia are rivals of approximately the same level, so we are likely to have a very interesting match.\u003c/p\u003e\u003cp\u003eEven experienced bookmakers failed to identify a favorite in this pair and therefore odds for the victory of these national teams in face-to-face match are almost equal.\u003c/p\u003e","Portugal_Spain":"\u003cp\u003eThe match Portugal-Spain is rightly one of the most interesting and expected confrontations of the group stage of the 2018 World Cup.\u003c/p\u003e\u003cp\u003eIn this case, bookmakers' odds are in favor of the Spaniards but do not forget that Portugal is the current winner of the European Championship.\u003c/p\u003e","Russia_Egypt":"\u003cp\u003eThe Russian national team is called the unconditional favorite in the match with Egypt, and it is clearly shown by bookmakers’ odds.\u003c/p\u003e\u003cp\u003eSuch experts opinion is true, but Cherchesov's wards need to be very careful, as the Egyptians have a tangible trump card in the face of Mohammed Salah.\u003c/p\u003e","Russia_Saudi_Arabia":"\u003cp\u003eIn the match Russia-Saudi Arabia, many experts consider the home team to be the unconditional favorite, and the odds of bookmakers confirm this once again.\u003c/p\u003e\u003cp\u003eBut for Cherchesov's team, it's very important to prevent underestimation of the rival, as it may play a dirty trick.\u003c/p\u003e","Uruguay_Russia":"\u003cp\u003eUruguay is considered Russia's main rival for leadership in the group, and if we talk about the upcoming meeting of these teams, betting odds are in favor of the nominal home team.\u003c/p\u003e\u003cp\u003eCertainly, the Russians have a chance to win, but in this case Cherchesov's squad have to do the best possible to achieve a positive result.\u003c/p\u003e","header":"A few words about the match %s"},"widget_plugin":{"1":1,"2":2,"F1":"Кф","F2":"Кф","Highest odds":"Die höchsten Quoten","Next Matches":"Die nächstfolgenden Spiele","No active events":"Нет активных событий","TO":"Mehr","TU":"Weniger","X":"X","button":{"generate_code":"HTML-Kode erstellen","reset":"Einstellungen abbrechen"},"form":{"all_sports":"Alle Sportarten","background":"Hintergrund","bold_header":"Markierter Titel","bold_label":"Markierte Bezeichnung","border":"Grenzen","color_settings":"Einstellungen der Farbe","color_text":"Text","font":"Schrift","fonts":"Schrift Einstellungen","footer_link":"Fußnote des unteren Kolumnentitels","general":"Allgemeine Einstellungen","generate":"2. HTML-Kode erstellen","get_html":"HTMLerhalten","header_bg":"Hintergrund des Titels","header_text":"Text des Titels","height":"Widge Höhe","high_odds":"Die höchsten Quoten","insert_html":"einfügen in end \u003ccode\u003e\u0026lt;body\u0026gt;\u003c/code\u003e tag:","insert_html_2":"einfügen in \u003ccode\u003e\u0026lt;body\u0026gt;\u003c/code\u003etag, an der Stelle, wo Sie Widget sehen möchten \u003ccode\u003e\u0026lt;divid='oddsfan-widget'\u0026gt;\u003c/code\u003e\u003ccode\u003e\u0026lt;/div\u0026gt;\u003c/code\u003e","label_bg":"Hintergrund der Bezeichnung","label_font":"Schrift der Bezeichnung","label_name":"Bezeichnung","lang":"Sprache","line_height":"Zeilenhöhe","link":"Fußnote","matches":"Anzahl der Spiele","odds_displayed":"Verwendete Quoten","odds_type":{"1x2":"Ausgang des Spiels","handicap":"Vorgabe","over_under":"Total des Spiels"},"prev":"Preview","put":"3. Auf eigener Website platzieren","select_bk":"Quoten der ausgewählten Buchmacher","select_sports":"Sportarten","setup":"1. Widget installieren","show_label":"Bezeichnung zeigen","size":"Größe","table_1":"Tabelle 1","table_2":"Tabelle 2","time_zone":"Stundenkreis","title":"Widget - Prematch Quoten","type":"Typ der Quote","width":"Widget Breite","with_logo":"Logo beim Buchmacher zeigen","without_logo":"Logo beim Buchmacher nicht zeigen"},"powered by":"bearbeitet","tabs":{"live":"Live Quoten","prematch":"Prematch Quoten","surebets":"Prematch Surebets","valuebets":"Value bets"},"valF1":"Ф1","valF2":"Ф2","valT":"Total"}},"en":{"account":{"Bookmakers":"Bookmakers","Change Password":"Change Password","Changes saved":"Changes saved","E-mail address":"E-mail address","Live":"Live","Live bookmakers":"Live bookmakers","My bookmakers":"My bookmakers","Personal info":"Personal info","Prematch":"Prematch","Prematch bookmakers":"Prematch bookmakers","Time zone":"Time zone","and":"and","bookmakers clones":"bookmakers clones","label":{"confirm":"Are you sure?","delete_account":"Delete account"},"new password":"new password","old password":"old password","repeat new password":"repeat new password","submit":{"save":"save","save my changes":"save my changes"}},"activerecord":{"errors":{"messages":{"record_invalid":"Validation failed: %{errors}","restrict_dependent_destroy":{"has_many":"Cannot delete record because dependent %{record} exist","has_one":"Cannot delete record because a dependent %{record} exists"}},"models":{"bb_user":{"attributes":{"reset_password_token":{"blank":"reset link is not actual","invalid":"reset link is not actual"}}}}}},"bet":{"%s set, %s game":"%s set, %s game","1 frame":"1st frame","1 half":"1st half","1 inning":"1st inning","1 period":"1st per","1 quarter":"1st qtr","1 set":"1st set","1 time":"1st half","10 set":"10th set","11 set":"11th set","12 set":"12th set","13 set":"13th set","2 frame":"2nd frame","2 half":"2nd half","2 inning":"2nd inning","2 period":"2nd per","2 quarter":"2nd qtr","2 set":"2nd set","2 time":"2nd half","3 frame":"3rd frame","3 inning":"3rd inning","3 period":"3rd per","3 quarter":"3rd qtr","3 set":"3rd set","4 frame":"4th frame","4 inning":"4th inning","4 quarter":"4th qtr","4 set":"4th set","5 frame":"5th frame","5 inning":"5th inning","5 set":"5th set","6 frame":"6th frame","6 inning":"6th inning","6 set":"6th set","60 mins":"60 mins","7 frame":"7th frame","7 inning":"7th inning","7 set":"7th set","8 frame":"8th frame","8 inning":"8th inning","8 set":"8th set","9 inning":"9th inning","9 set":"9th set","match":"match","match (doubles)":"match (doubles)","next round":"next round","no_desc":"","regular time":"regular time","with overtime":"with OT","with overtime and shootouts":"with OT \u0026 SO"},"breadscrump":{"Home":"Home","Soccer":"Soccer"},"contact_us":{"Email":"Email","Hello":"Hello","If you have any questions you can write to us":"If you have any questions you can write to us","Message":"Message","Name":"Name","Send":"Send","Wrong captcha verification":"Wrong captcha verification","contact_us_form_error":"You added wrong data, try again","contact_us_form_success":"Your question sent we will connect with you. Thanks!"},"countries":{"AC":"Ascension Island","AD":"Andorra","AE":"United Arab Emirates","AF":"Afghanistan","AFGHANISTAN":"Afghanistan","AFRICA":"Africa","AG":"Antigua \u0026 Barbuda","AI":"Anguilla","AL":"Albania","ALBANIA":"Albania","ALGERIA":"Algeria","AM":"Armenia","AMERICAN_SAMOA":"American Samoa","AN":"Netherlands Antilles","ANDORRA":"Andorra","ANGOLA":"Angola","ANGUILLA":"Anguilla","ANTIGUA_AND_BARBUDA":"Antigua and Barbuda","AO":"Angola","AQ":"Antarctica","AR":"Argentina","ARGENTINA":"Argentina","ARMENIA":"Armenia","ARUBA":"Aruba","AS":"American Samoa","ASIA":"Asia","AT":"Austria","AU":"Australia","AUSTRALIA":"Australia","AUSTRIA":"Austria","AW":"Aruba","AX":"Åland Islands","AZ":"Azerbaijan","AZERBAIJAN":"Azerbaijan","BA":"Bosnia \u0026 Herzegovina","BAHAMAS":"Bahamas","BAHRAIN":"Bahrain","BANGLADESH":"Bangladesh","BARBADOS":"Barbados","BB":"Barbados","BD":"Bangladesh","BE":"Belgium","BELARUS":"Belarus","BELGIUM":"Belgium","BELIZE":"Belize","BENIN":"Benin","BERMUDA":"Bermuda","BF":"Burkina Faso","BG":"Bulgaria","BH":"Bahrain","BHUTAN":"Bhutan","BI":"Burundi","BJ":"Benin","BL":"St. Barthélemy","BM":"Bermuda","BN":"Brunei","BO":"Bolivia","BOLIVIA":"Bolivia","BOSNIA_HERZEGOVINA":"Bosnia-Herzegovina","BOTSWANA":"Botswana","BQ":"Caribbean Netherlands","BR":"Brazil","BRAZIL":"Brazil","BRITISH_VIRGIN_ISLANDS":"British Virgin Islands","BRUNEI_DARUSSALAM":"Brunei Darussalam","BS":"Bahamas","BT":"Bhutan","BULGARIA":"Bulgaria","BURKINA_FASO":"Burkina Faso","BURUNDI":"Burundi","BV":"Bouvet Island","BW":"Botswana","BY":"Belarus","BZ":"Belize","CA":"Canada","CAMBODIA":"Cambodia","CAMEROON":"Cameroon","CANADA":"Canada","CAPE_VERDE_ISLANDS":"Cape Verde Islands","CAYMAN_ISLANDS":"Cayman Islands","CC":"Cocos (Keeling) Islands","CD":"Congo - Kinshasa","CENTRAL_AFRICAN_REPUBLIC":"Central African Republic","CF":"Central African Republic","CG":"Congo - Brazzaville","CH":"Switzerland","CHAD":"Chad","CHILE":"Chile","CHINA_PR":"China PR","CHINESE_TAIPEI":"Chinese Taipei","CI":"Côte d’Ivoire","CK":"Cook Islands","CL":"Chile","CM":"Cameroon","CN":"China","CO":"Colombia","COLOMBIA":"Colombia","COMOROS":"Comoros","CONCACAF":"CONCACAF","CONGO":"Congo","CONGO_DR":"Congo DR","COOK_ISLANDS":"Cook Islands","COSTA_RICA":"Costa Rica","COTE_D_IVOIRE":"Côte d'Ivoire","CP":"Clipperton Island","CR":"Costa Rica","CROATIA":"Croatia","CU":"Cuba","CUBA":"Cuba","CURACAO":"Curaçao","CV":"Cape Verde","CW":"Curaçao","CX":"Christmas Island","CY":"Cyprus","CYPRUS":"Cyprus","CZ":"Czech Republic","CZECH_REPUBLIC":"Czech Republic","DE":"Germany","DENMARK":"Denmark","DG":"Diego Garcia","DJ":"Djibouti","DJIBOUTI":"Djibouti","DK":"Denmark","DM":"Dominica","DO":"Dominican Republic","DOMINICA":"Dominica","DOMINICAN_REPUBLIC":"Dominican Republic","DZ":"Algeria","EA":"Ceuta \u0026 Melilla","EC":"Ecuador","ECUADOR":"Ecuador","EE":"Estonia","EG":"Egypt","EGYPT":"Egypt","EH":"Western Sahara","EL_SALVADOR":"El Salvador","ENGLAND":"England","EQUATORIAL_GUINEA":"Equatorial Guinea","ER":"Eritrea","ERITREA":"Eritrea","ES":"Spain","ESTONIA":"Estonia","ET":"Ethiopia","ETHIOPIA":"Ethiopia","EU":"European Union","EUROPE":"Europe","FAROE_ISLANDS":"Faroe Islands","FI":"Finland","FIJI":"Fiji","FINLAND":"Finland","FJ":"Fiji","FK":"Falkland Islands","FM":"Micronesia","FO":"Faroe Islands","FR":"France","FRANCE":"France","FRENCH_GUIANA":"French Guiana","GA":"Gabon","GABON":"Gabon","GAMBIA":"Gambia","GB":"United Kingdom","GD":"Grenada","GE":"Georgia","GEORGIA":"Georgia","GERMANY":"Germany","GF":"French Guiana","GG":"Guernsey","GH":"Ghana","GHANA":"Ghana","GI":"Gibraltar","GIBRALTAR":"Gibraltar","GL":"Greenland","GM":"Gambia","GN":"Guinea","GP":"Guadeloupe","GQ":"Equatorial Guinea","GR":"Greece","GREAT_BRITAIN":"Great Britain","GREECE":"Greece","GRENADA":"Grenada","GS":"South Georgia \u0026 South Sandwich Islands","GT":"Guatemala","GU":"Guam","GUADELOUPE":"Guadeloupe","GUAM":"Guam","GUATEMALA":"Guatemala","GUINEA":"Guinea","GUINEA_BISSAU":"Guinea-Bissau","GUYANA":"Guyana","GW":"Guinea-Bissau","GY":"Guyana","HAITI":"Haiti","HK":"Hong Kong SAR China","HM":"Heard \u0026 McDonald Islands","HN":"Honduras","HONDURAS":"Honduras","HONG_KONG":"Hong Kong","HR":"Croatia","HT":"Haiti","HU":"Hungary","HUNGARY":"Hungary","IC":"Canary Islands","ICELAND":"Iceland","ID":"Indonesia","IE":"Ireland","IL":"Israel","IM":"Isle of Man","IN":"India","INDIA":"India","INDONESIA":"Indonesia","IO":"British Indian Ocean Territory","IQ":"Iraq","IR":"Iran","IRAN":"Iran","IRAQ":"Iraq","IRELAND_REPUBLIC":"Ireland Republic","IS":"Iceland","ISRAEL":"Israel","IT":"Italy","ITALY":"Italy","JAMAICA":"Jamaica","JAPAN":"Japan","JE":"Jersey","JM":"Jamaica","JO":"Jordan","JORDAN":"Jordan","JP":"Japan","KAZAKHSTAN":"Kazakhstan","KE":"Kenya","KENYA":"Kenya","KG":"Kyrgyzstan","KH":"Cambodia","KI":"Kiribati","KIRIBATI":"Kiribati","KM":"Comoros","KN":"St. Kitts \u0026 Nevis","KOREA_DPR":"Korea DPR","KOREA_REPUBLIC":"Korea Republic","KOSOVO":"Kosovo","KP":"North Korea","KR":"South Korea","KUWAIT":"Kuwait","KW":"Kuwait","KY":"Cayman Islands","KYRGYZSTAN":"Kyrgyzstan","KZ":"Kazakhstan","LA":"Laos","LAOS":"Laos","LATVIA":"Latvia","LB":"Lebanon","LC":"St. Lucia","LEBANON":"Lebanon","LESOTHO":"Lesotho","LI":"Liechtenstein","LIBERIA":"Liberia","LIBYA":"Libya","LIECHTENSTEIN":"Liechtenstein","LITHUANIA":"Lithuania","LK":"Sri Lanka","LR":"Liberia","LS":"Lesotho","LT":"Lithuania","LU":"Luxembourg","LUXEMBOURG":"Luxembourg","LV":"Latvia","LY":"Libya","MA":"Morocco","MACAO":"Macao","MACEDONIA_FYR":"Macedonia FYR","MADAGASCAR":"Madagascar","MALAWI":"Malawi","MALAYSIA":"Malaysia","MALDIVES":"Maldives","MALI":"Mali","MALTA":"Malta","MARTINIQUE":"Martinique","MAURITANIA":"Mauritania","MAURITIUS":"Mauritius","MAYOTTE":"Mayotte","MC":"Monaco","MD":"Moldova","ME":"Montenegro","MEXICO":"Mexico","MF":"St. Martin","MG":"Madagascar","MH":"Marshall Islands","MK":"Macedonia","ML":"Mali","MM":"Myanmar (Burma)","MN":"Mongolia","MO":"Macau SAR China","MOLDOVA":"Moldova","MONACO":"Monaco","MONGOLIA":"Mongolia","MONTENEGRO":"Montenegro","MONTSERRAT":"Montserrat","MOROCCO":"Morocco","MOZAMBIQUE":"Mozambique","MP":"Northern Mariana Islands","MQ":"Martinique","MR":"Mauritania","MS":"Montserrat","MT":"Malta","MU":"Mauritius","MV":"Maldives","MW":"Malawi","MX":"Mexico","MY":"Malaysia","MYANMAR":"Myanmar","MZ":"Mozambique","NA":"Namibia","NAMIBIA":"Namibia","NC":"New Caledonia","NE":"Niger","NEPAL":"Nepal","NETHERLANDS":"Netherlands","NETHERLANDS_ANTILLES":"Netherlands Antilles","NEW_CALEDONIA":"New Caledonia","NEW_ZEALAND":"New Zealand","NF":"Norfolk Island","NG":"Nigeria","NI":"Nicaragua","NICARAGUA":"Nicaragua","NIGER":"Niger","NIGERIA":"Nigeria","NL":"Netherlands","NO":"Norway","NORTHERN IRELAND":"Northern Ireland","NORTHERN_IRELAND":"Northern Ireland","NORTHERN_MARIANA_ISLANDS":"Northern Mariana Islands","NORTH_AMERICA":"North America","NORWAY":"Norway","NP":"Nepal","NR":"Nauru","NU":"Niue","NZ":"New Zealand","OM":"Oman","OMAN":"Oman","PA":"Panama","PAKISTAN":"Pakistan","PALESTINE":"Palestine","PANAMA":"Panama","PAPUA_NEW_GUINEA":"Papua New Guinea","PARAGUAY":"Paraguay","PE":"Peru","PERU":"Peru","PF":"French Polynesia","PG":"Papua New Guinea","PH":"Philippines","PHILIPPINES":"Philippines","PK":"Pakistan","PL":"Poland","PM":"St. Pierre \u0026 Miquelon","PN":"Pitcairn Islands","POLAND":"Poland","PORTUGAL":"Portugal","PR":"Puerto Rico","PS":"Palestinian Territories","PT":"Portugal","PUERTO_RICO":"Puerto Rico","PW":"Palau","PY":"Paraguay","QA":"Qatar","QATAR":"Qatar","QO":"Outlying Oceania","RE":"Reunion","REUNION":"Reunion","RO":"Romania","ROMANIA":"Romania","RS":"Serbia","RS_AND_M":"Serbia and Macedonia","RU":"Russia","RUSSIA":"Russia","RW":"Rwanda","RWANDA":"Rwanda","SA":"Saudi Arabia","SAINT_MARTIN":"Saint Martin","SAMOA":"Samoa","SAN_MARINO":"San Marino","SAO_TOME_AND_PRINCIPE":"Sao Tome and Principe","SAUDI_ARABIA":"Saudi Arabia","SB":"Solomon Islands","SC":"Seychelles","SCOTLAND":"Scotland","SD":"Sudan","SE":"Sweden","SENEGAL":"Senegal","SERBIA":"Serbia","SEYCHELLES":"Seychelles","SG":"Singapore","SH":"St. Helena","SI":"Slovenia","SIERRA_LEONE":"Sierra Leone","SINGAPORE":"Singapore","SINT_MAARTEN":"Sint Maarten","SJ":"Svalbard \u0026 Jan Mayen","SK":"Slovakia","SL":"Sierra Leone","SLOVAKIA":"Slovakia","SLOVENIA":"Slovenia","SM":"San Marino","SN":"Senegal","SO":"Somalia","SOLOMON_ISLANDS":"Solomon Islands","SOMALIA":"Somalia","SOUTH_AFRICA":"South Africa","SOUTH_AMERICA":"South America","SOUTH_SUDAN":"South Sudan","SPAIN":"Spain","SR":"Suriname","SRI_LANKA":"Sri Lanka","SS":"South Sudan","ST":"Sao Tome \u0026 Principe","ST_KITTS_AND_NEVIS":"St. Kitts and Nevis","ST_LUCIA":"St. Lucia","ST_VINCENT_AND_THE_GRENADINES":"St. Vincent and the Grenadines","SUDAN":"Sudan","SURINAME":"Suriname","SV":"El Salvador","SWAZILAND":"Swaziland","SWEDEN":"Sweden","SWITZERLAND":"Switzerland","SX":"Saint Martin","SY":"Syria","SYRIA":"Syria","SZ":"Swaziland","TA":"Tristan da Cunha","TAHITI":"Tahiti","TAIWAN":"Taiwan","TAJIKISTAN":"Tajikistan","TANZANIA":"Tanzania","TC":"Turks \u0026 Caicos Islands","TD":"Chad","TF":"French Southern Territories","TG":"Togo","TH":"Thailand","THAILAND":"Thailand","TIMOR_LESTE":"Timor-Leste","TJ":"Tajikistan","TK":"Tokelau","TL":"Timor-Leste","TM":"Turkmenistan","TN":"Tunisia","TO":"Tonga","TOGO":"Togo","TONGA":"Tonga","TR":"Turkey","TRINIDAD_AND_TOBAGO":"Trinidad and Tobago","TT":"Trinidad \u0026 Tobago","TUNISIA":"Tunisia","TURKEY":"Turkey","TURKMENISTAN":"Turkmenistan","TURKS_AND_CAICOS_ISLANDS":"Turks and Caicos Islands","TUVALU":"Tuvalu","TV":"Tuvalu","TW":"Taiwan","TZ":"Tanzania","UA":"Ukraine","UAE":"UAE","UG":"Uganda","UGANDA":"Uganda","UKRAINE":"Ukraine","UM":"U.S. Outlying Islands","URUGUAY":"Uruguay","US":"United States","USA":"USA","US_VIRGIN_ISLANDS":"US Virgin Islands","UY":"Uruguay","UZ":"Uzbekistan","UZBEKISTAN":"Uzbekistan","VA":"Vatican City","VANUATU":"Vanuatu","VC":"St. Vincent \u0026 Grenadines","VE":"Venezuela","VENEZUELA":"Venezuela","VG":"British Virgin Islands","VI":"U.S. Virgin Islands","VIETNAM":"Vietnam","VN":"Vietnam","VU":"Vanuatu","WALES":"Wales","WF":"Wallis \u0026 Futuna","WORLD":"World","WS":"Samoa","XK":"Kosovo","YE":"Yemen","YEMEN":"Yemen","YT":"Mayotte","ZA":"South Africa","ZAMBIA":"Zambia","ZANZIBAR":"Zanzibar","ZIMBABWE":"Zimbabwe","ZM":"Zambia","ZW":"Zimbabwe"},"country":{"Active teams":"Active teams","No active leagues":"No active leagues","No active teams":"No active teams","Watch all coefficients":"Watch all coefficient","country_page_leagues_text":"You have to select the league you need in the right sidebar menu to compare the bookmaker odds. Then the page with the list of %s and actual %s %s odds will open.","country_page_teams_text":"Event calendar of teams from %s. Open a dropdown list with the team you need to see and compare the odds on upcoming events.","h1_leagues_text":"%s %s odds","h1_teams_text":"%s teams from %s","leagues":"%s leagues","show more":"Show more","table":{"Bookmakers count":"Bookmakers count","Date":"Date","Event name":"Event name","Events count":"Events count","First event":"First event","League":"League","Play date":"Play date","Play time":"Play time","Score":"Score","Start time":"Start time"},"teams":"%s teams"},"date":{"abbr_day_names":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"abbr_month_names":[null,"Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"day_names":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"formats":{"default":"%Y-%m-%d","long":"%B %d, %Y","short":"%b %d"},"month_names":[null,"January","February","March","April","May","June","July","August","September","October","November","December"],"order":["year","month","day"]},"datetime":{"distance_in_words":{"about_x_hours":{"one":"about 1 hour","other":"about %{count} hours"},"about_x_months":{"one":"about 1 month","other":"about %{count} months"},"about_x_years":{"one":"about 1 year","other":"about %{count} years"},"almost_x_years":{"one":"almost 1 year","other":"almost %{count} years"},"half_a_minute":"half a minute","less_than_x_minutes":{"one":"less than a minute","other":"less than %{count} minutes"},"less_than_x_seconds":{"one":"less than 1 second","other":"less than %{count} seconds"},"over_x_years":{"one":"over 1 year","other":"over %{count} years"},"x_days":{"one":"1 day","other":"%{count} days"},"x_minutes":{"one":"1 minute","other":"%{count} minutes"},"x_months":{"one":"1 month","other":"%{count} months"},"x_seconds":{"one":"1 second","other":"%{count} seconds"}},"prompts":{"day":"Day","hour":"Hour","minute":"Minute","month":"Month","second":"Seconds","year":"Year"}},"devise":{"Change my password":"Change my password","Change your password":"Change your password","Didn't receive confirmation instructions?":"Didn't receive confirmation instructions?","Forgot your password?":"Forgot your password?","Login":"Login","Remember me":"Remember me","Resend confirmation instructions":"Resend confirmation instructions","Send me reset password instructions":"Send me reset password instructions","Sign up":"Sign up","characters minimum":"characters minimum","confirm new password":"confirm new password","confirmations":{"confirmed":"Your email address has been successfully confirmed.","send_instructions":"You will receive an email with instructions for how to confirm your email address in a few minutes.","send_paranoid_instructions":"If your email address exists in our database, you will receive an email with instructions for how to confirm your email address in a few minutes."},"email":"email","failure":{"already_authenticated":"You are already signed in.","deleted_account":"Account with this email address was deleted. If you want recover it please connect with support.","inactive":"Your account is not activated yet.","invalid":"Invalid %{authentication_keys} or password.","last_attempt":"You have one more attempt before your account is locked.","locked":"Your account is locked.","need_to_sign_in":"Please sign in to see this page.","not_found_in_database":"Invalid %{authentication_keys} or password.","timeout":"Your session expired. Please sign in again to continue.","unauthenticated":"You need to sign in or sign up before continuing.","unconfirmed":"You have to confirm your email address before continuing."},"mailer":{"Change my password":"Change my password","Confirm my account":"Confirm my account","Hello":"Hello","If you did not request this, please ignore this email":"If you did not request this, please ignore this email.","Someone has requested a link to change your password, and you can do this through the link below":"Someone has requested a link to change your password, and you can do this through the link below.","Welcome":"Welcome","You can confirm your account email through the link below":"You can confirm your account email through the link below","Your password will not change until you access the link above and create a new one":"Your password will not change until you access the link above and create a new one.","confirmation_instructions":{"subject":"Confirmation instructions"},"email_changed":{"subject":"Email Changed"},"password_change":{"subject":"Password Changed"},"reset_password_instructions":{"subject":"Reset password instructions"},"unlock_instructions":{"subject":"Unlock instructions"}},"new password":"new password","omniauth_callbacks":{"failure":"Could not authenticate you from %{kind} because \"%{reason}\".","success":"Successfully authenticated from %{kind} account."},"password":"password","password confirmation":"password confirmation","passwords":{"no_token":"You can't access this page without coming from a password reset email. If you do come from a password reset email, please make sure you used the full URL provided.","send_instructions":"You will receive an email with instructions on how to reset your password in a few minutes.","send_paranoid_instructions":"If your email address exists in our database, you will receive a password recovery link at your email address in a few minutes.","updated":"Your password has been changed successfully. You are now signed in.","updated_not_active":"Your password has been changed successfully."},"registrations":{"destroyed":"Bye! Your account has been successfully cancelled. We hope to see you again soon.","signed_up":"Welcome! You have signed up successfully.","signed_up_but_inactive":"You have signed up successfully. However, we could not sign you in because your account is not yet activated.","signed_up_but_locked":"You have signed up successfully. However, we could not sign you in because your account is locked.","signed_up_but_unconfirmed":"A message with a confirmation link has been sent to your email address. Please follow the link to activate your account.","update_needs_confirmation":"You updated your account successfully, but we need to verify your new email address. Please check your email and follow the confirm link to confirm your new email address.","updated":"Your account has been updated successfully.","updated_but_not_signed_in":"Your account has been updated successfully, but since your password was changed, you need to sign in again"},"sessions":{"already_signed_out":"Signed out successfully.","signed_in":"Signed in successfully.","signed_out":"Signed out successfully."},"unlocks":{"send_instructions":"You will receive an email with instructions for how to unlock your account in a few minutes.","send_paranoid_instructions":"If your account exists, you will receive an email with instructions for how to unlock it in a few minutes.","unlocked":"Your account has been unlocked successfully. Please sign in to continue."}},"errors":{"format":"%{attribute} %{message}","messages":{"accepted":"must be accepted","already_confirmed":"was already confirmed, please try signing in","blank":"Can't be blank","changes_saved":"Changes Saved","confirmation":"doesn't match %{attribute}","confirmation_period_expired":"needs to be confirmed within %{period}, please request a new one","empty":"can't be empty","entered_email":"Email was used for a deleted account. Please contact us to restore your account.","equal_to":"must be equal to %{count}","even":"must be even","exclusion":"is reserved","expired":"has expired, please request a new one","greater_than":"must be greater than %{count}","greater_than_or_equal_to":"must be greater than or equal to %{count}","in_between":"must be in between %{min} and %{max}","inclusion":"is not included in the list","invalid":"is invalid","less_than":"must be less than %{count}","less_than_or_equal_to":"must be less than or equal to %{count}","model_invalid":"Validation failed: %{errors}","not_a_number":"is not a number","not_an_integer":"must be an integer","not_found":"not found","not_locked":"was not locked","not_saved":{"one":"1 error prohibited this %{resource} from being saved:","other":"%{count} errors prohibited this %{resource} from being saved:"},"odd":"must be odd","other_than":"must be other than %{count}","please_select_bk":"Please select at least one bookmaker","present":"must be blank","required":"must exist","send_instruction_reset_pass":"You will receive an email with instructions about how to reset your password in a few minutes","spoofed_media_type":"has contents that are not what they are reported to be","taken":"has already been taken","too_long":{"one":"is too long (maximum is 1 character)","other":"is too long (maximum is %{count} characters)"},"too_short":{"one":"is too short (minimum is 1 character)","other":"is too short (minimum is %{count} characters)"},"wrong_length":{"one":"is the wrong length (should be 1 character)","other":"is the wrong length (should be %{count} characters)"}}},"event":{"Close":"Close","Colorful labels":"Colorful labels","Draw":"Draw","Highest":"Highest","Matrix":"Matrix","Open":"Open","Value bets":"Value bets","Valuebets":"Valuebets","Visit it":"Visit Live Odds","event ended":"Event ended %s","event-live-page-description":"Betting odds on different outcomes of the \u003cspan class=\"bold\"\u003e%s\u003c/span\u003e from more than 79 bookmakers. Pick the best bookie offers and make profitable live bets on %s %s","event-page-description":"Betting odds on different outcomes of the \u003cspan class=\"bold\"\u003e%s\u003c/span\u003e from more than 79 bookmakers that starts on %s at %s. Pick the best bookie offers and make profitable bets on %s %s","match":"","match ended":"Match ended %s","match is in live":"The match has started","match_18":"","match_25":"","match_30":"","match_31":"","nav":{"11_s":{"correсt_score":"Correct Score","handicaps":"Handicaps","main":"Main","totals":"Totals"},"12_s":{"correct_score":"Correct Score","frames":"Frames","handicaps":"Handicaps","main":"Main","sets":"Sets","totals":"Totals"},"13_s":{"correct_score":"Correct Score","handicaps":"Handicaps","main":"Main","sets":"Sets","totals":"Totals"},"14_s":{"correct_score":"Correct Score","handicaps":"Handicaps","main":"Main","sets":"Sets","totals":"Totals"},"15_s":{"halfs":"Half","handicaps":"Handicaps","main":"Main","totals":"Totals"},"16_s":{"halfs":"Half","handicaps":"Handicaps","main":"Main","totals":"Totals"},"17_s":{"halfs":"Half","handicaps":"Handicaps","main":"Main","totals":"Totals"},"18_s":{"main":"Main","totals":"Totals"},"19_s":{"halfs":"Half","handicaps":"Handicaps","main":"Main","totals":"Totals"},"1_s":{"half":"Half","handicaps":"Handicaps","innings":"Innings","main":"Main","totals":"Totals"},"23_s":{"halfs":"Half","handicaps":"Handicaps","main":"Main","totals":"Totals"},"25_s":{"head_to_head":"Head To Head","podium":"Podium","winner":"Winner"},"29_s":{"correct_score":"Correct Score","halfs":"Sets","handicaps":"Handicaps","main":"Main","totals":"Totals"},"2_s":{"halfs":"Half","handicaps":"Handicaps","innings":"Innings","main":"Main","quarters":"Quarters","totals":"Totals"},"30_s":{"winner":"Winner"},"31_s":{"head_to_head":"Head To Head","podium":"Podium","winner":"Winner"},"4_s":{"halfs":"Half","handicaps":"Handicaps","main":"Main","totals":"Totals"},"5_s":{"halfs":"Half","handicaps":"Handicaps","main":"Main","totals":"Totals"},"6_s":{"correct_score":"Correct Score","handicaps":"Handicaps","main":"Main","periods":"Periods","totals":"Totals"},"7_s":{"correct_score":"Correct Score","goals":"Goals","halfs":"Half","handicaps":"Handicaps","main":"Main","statistics":"Statistics"},"8_s":{"correct_score":"Correct Score","handicaps":"Handicaps","home_away":"Moneyline","sets":"Sets","totals":"Totals"},"9_s":{"correct_score":"Correct Score","handicaps":"Handicaps","main":"Main","sets":"Sets","totals":"Totals"},"close":"Close","open":"Open"},"not lay":"","with a score":"with a score","with lay":"Lay","Лучшие коэффициенты":"Best rates"},"events":{"Live Odds":"Live Odds","Next Matches":"Next Matches","Popular Matches":"Popular Matches","Surebets":"Surebets"},"events_grid":{"1":1,"2":2,"F1":1,"F2":2,"Hand":"Hand","ML1":1,"ML2":2,"PL1-N":"PL1-N","PL1-Y":"PL1-Y","PL1_3-N":"PL1_3-N","PL1_3-Y":"PL1_3-Y","TO":"Over","TU":"Under","Total":"Total","X":"X","events":"EVENTS","score":"SCORE","valF1":"Hand","valF2":"Hand","valT":"Total"},"flash":{"actions":{"create":{"notice":"%{resource_name} was successfully created."},"destroy":{"alert":"%{resource_name} could not be destroyed.","notice":"%{resource_name} was successfully destroyed."},"update":{"notice":"%{resource_name} was successfully updated."}}},"footer":{"bookmakers":"bookmakers","legal_info":"Copyright © 2019 Oddsfan, all rights reserved. This tool is offered in good will, and any abuse is punishable by international law.","sport markets":"sport markets","sports":"sports"},"global":{"E-mail confirmed":"E-mail confirmed","Get the best odds Kick-off at":"Get the best odds. Kick-off at","Login":"Login","Logout":"Logout","My account":"My account","PAYOUT":"PAYOUT","Register":"Register","Soccer":"Soccer","Today":"Today","Toggle Menu":"Toggle Menu","Tomorrow":"Tomorrow","Yesterday":"Yesterday","You will be automatically redirected in 10 seconds":"You will be automatically redirected to home page in 10 seconds","anonces":"Match previews","betting odds comparison":"odds comparison service","bookmakers":"bookmakers","calendar":"Event Calendar","check_all_bk":"Check all","coming soon":"coming soon","horizontal mode":"in horizontal mode view","koefs":"Odds","league_h1_text":"%s betting odds","league_page_text":"%s: here you will find the list of %s available on the league you have chosen among 79 bookmakers. Click the name of the event to get redirected to the betting odds comparison page.","legal_info":"Copyright © 2019 Oddsfan, all rights reserved. This tool is offered in good will, and any abuse is punishable by international law.","open":"open","please":"Please","processing_personal_data":"I consent to collecting, processing and storing of my personal data","profile_email_me":"Get email notifications on promos, discounts and news","registration_email_me":"Get email notifications on discounts, promos and news","return the phone":"return the phone","sports":"sports","standings":"Standings","successfully saved":"successfully saved","welcome_to_project":"Welcome to OddsFan","world_champions":"WC 2018"},"header":{"SEARCH":"Events, competitors...","choose_bookmakers":"Choose Bookmakers","choose_league":"Choose League","mail_subject":"Question from"},"hello":"Hello world","helpers":{"select":{"prompt":"Please select"},"submit":{"create":"Create %{model}","submit":"Save %{model}","update":"Update %{model}"}},"label":{"choose_bookmakers":"Choose Bookmakers","choose_league":"Choose League","mail_subject":"Question from"},"languages":{"de":"DE","en":"ENG","esr":"ESP","fra":"FRA","lang":"Lang","language":"Language","ru":"RUS"},"market_variation_full_name":{"1ACE-ML1":"Player1 - 1st Ace","1ACE-ML2":"Player2 - 1st Ace","1BR-1":"Player1 - 1st Break","1BR-2":"Player2 - 1st Break","1BR-ML1":"Player1 - 1st Break","1BR-ML2":"Player2 - 1st Break","1BR-X":"No break - 1st Break","1CNR-1":"Team1 - 1st corner","1CNR-2":"Team2 - 1st corner","1CNR-ML1":"Team1 - 1st corner","1CNR-ML2":"Team2 - 1st corner","1CNR-X":"No corners","1DBF-ML1":"Player1 - 1st Double Fault","1DBF-ML2":"Player2 - 1st Double Fault","1OFS-1":"Team1 - 1st offside","1OFS-2":"Team2 - 1st offside","1OFS-ML1":"Team1 - 1st offside","1OFS-ML2":"Team2 - 1st offside","1OFS-X":"No offsides","1SER_F-F1":"Asian Handicap1(%s) - 1st Serve","1SER_F-F2":"Asian Handicap2(%s) - 1st Serve","1SER_OU1-TO":"Total Over(%s) for Team1 - 1st Serve","1SER_OU1-TU":"Total Under(%s) for Team1 - 1st Serve","1SER_OU2-TO":"Total Over(%s) for Team2 - 1st Serve","1SER_OU2-TU":"Total Under(%s) for Team2 - 1st Serve","1SUBS-ML1":"Team1 - 1st subs","1SUBS-ML2":"Team2 - 1st subs","1X2-1":"1","1X2-2":"2","1X2-X":"X","1YC-1":"Team1 - 1st Yellow Card","1YC-2":"Team2 - 1st Yellow Card","1YC-ML1":"Team1 - 1st Yellow Card","1YC-ML2":"Team2 - 1st Yellow Card","1YC-X":"No Yellow Card","60SET-N":"6-0 Set - no","60SET-Y":"6-0 Set - yes","ACE_F-F1":"Asian Handicap1(%s) - Aces","ACE_F-F2":"Asian Handicap2(%s) - Aces","ACE_OU-TO":"Total Over(%s) - Aces","ACE_OU-TU":"Total Under(%s) - Aces","ACE_OU1-TO":"Total Over(%s) for Team1 - Aces","ACE_OU1-TU":"Total Under(%s) for Team1 - Aces","ACE_OU2-TO":"Total Over(%s) for Team2 - Aces","ACE_OU2-TU":"Total Under(%s) for Team2 - Aces","ADDED_EG-EG":"Exact (%s) - Added time","ADDED_EG-EG_N":"Exact (%s) - Added time - no","ADDED_OU-TO":"Total Over(%s) - Added time","ADDED_OU-TU":"Total Under(%s) - Added time","BHO-N":"Both halves \u003e 1.5 goals - no","BHO-Y":"Both halves \u003e 1.5 goals - yes","BHU-N":"Both halves \u003c 1.5 goals - no","BHU-Y":"Both halves \u003c 1.5 goals - yes","BTS-N":"One scoreless","BTS-OTS_Y":"Only one to score","BTS-Y":"Both to score","BTSD-N":"Both To Score and Draw - no","BTSD-Y":"Both To Score and Draw - yes","BTSW1-N":"Both To Score and W1 - no","BTSW1-Y":"Both To Score and W1 - yes","BTSW2-N":"Both To Score and W2 - no","BTSW2-Y":"Both To Score and W2 - yes","CNR_1X2-1":"1 - Corners","CNR_1X2-2":"2 - Corners","CNR_1X2-X":"X - Corners","CNR_DC-12":"12 - Corners","CNR_DC-1X":"1X - Corners","CNR_DC-X2":"X2 - Corners","CNR_F-F1":"Asian Handicap1(%s) - Corners","CNR_F-F2":"Asian Handicap2(%s) - Corners","CNR_OE-EVEN":"Even - Corners","CNR_OE-ODD":"Odd - Corners","CNR_OU-TO":"Total Over(%s) - Corners","CNR_OU-TU":"Total Under(%s) - Corners","CNR_OU1-TO":"Total Over(%s) for Team1 - Corners","CNR_OU1-TU":"Total Under(%s) for Team1 - Corners","CNR_OU2-TO":"Total Over(%s) for Team2 - Corners","CNR_OU2-TU":"Total Under(%s) for Team2 - Corners","CS-CS":"Score (%s)","CS-CS_N":"Score (%s) - not","DBF_F-F1":"Asian Handicap1(%s) - Double Faults","DBF_F-F2":"Asian Handicap2(%s) - Double Faults","DBF_OU-TO":"Total Over(%s) - Double Faults","DBF_OU-TU":"Total Under(%s) - Double Faults","DBF_OU1-TO":"Total Over(%s) for Team1 - Double Faults","DBF_OU1-TU":"Total Under(%s) for Team1 - Double Faults","DBF_OU2-TO":"Total Over(%s) for Team2 - Double Faults","DBF_OU2-TU":"Total Under(%s) for Team2 - Double Faults","DBH-N":"Draw in both half - no","DBH-Y":"Draw in both half - yes","DBL-N":"Double - no","DBL-Y":"Double - yes","DC-12":"12","DC-1X":"1X","DC-X2":"X2","DEH-N":"Draw in either half - no","DEH-Y":"Draw in either half - yes","DNB-DNB1":"Asian Handicap1(0.0)/Draw No Bet","DNB-DNB2":"Asian Handicap2(0.0)/Draw No Bet","DTO-N":"Draw and Total Over 2.5 - no","DTO-Y":"Draw and Total Over 2.5 - yes","DTU-N":"Draw and Total Under 2.5 - no","DTU-Y":"Draw and Total Under 2.5 - yes","EG-EG":"Exact (%s)","EG-EG_N":"Exact (%s) - no","EG1-EG":"Exact (%s) for Team1","EG1-EG_N":"Exact (%s) for Team1 - no","EG2-EG":"Exact (%s) for Team2","EG2-EG_N":"Exact (%s) for Team2 - no","EH-EH1":"European Handicap1(%s)","EH-EH2":"European Handicap2(%s)","EH-EHX":"European HandicapX(%s)","ERR_OU-TO":"TO(%s) - Errors","ERR_OU-TU":"TU(%s) - Errors","F-F1":"Asian Handicap1(%s)","F-F2":"Asian Handicap2(%s)","FG-1":"Team1 - 1st goal","FG-2":"Team2 - 1st goal","FG-ML1":"Team1 - 1st goal (draw no bet)","FG-ML2":"Team2 - 1st goal (draw no bet)","FG-X":"No goal","FOUL_1X2-1":"1 - Fouls","FOUL_1X2-2":"2 - Fouls","FOUL_1X2-X":"X - Fouls","FOUL_DC-12":"12 - Fouls","FOUL_DC-1X":"1X - Fouls","FOUL_DC-X2":"X2 - Fouls","FOUL_F-F1":"Asian Handicap1(%s) - Fouls","FOUL_F-F2":"Asian Handicap2(%s) - Fouls","FOUL_OE-EVEN":"Even - Fouls","FOUL_OE-ODD":"Odd - Fouls","FOUL_OU-TO":"Total Over(%s) - Fouls","FOUL_OU-TU":"Total Under(%s) - Fouls","FOUL_OU1-TO":"Total Over(%s) for Team1 - Fouls","FOUL_OU1-TU":"Total Under(%s) for Team1 - Fouls","FOUL_OU2-TO":"Total Over(%s) for Team2 - Fouls","FOUL_OU2-TU":"Total Under(%s) for Team2 - Fouls","GBH-N":"Goals in both halves - no","GBH-Y":"Goals in both halves - yes","GBH1-N":"Team1 to score in both halves - no","GBH1-Y":"Team1 to score in both halves - yes","GBH2-N":"Team2 to score in both halves - no","GBH2-Y":"Team2 to score in both halves - yes","HH-ML1":"W1","HH-ML2":"W2","HIT_1X2-1":"1 - Hits","HIT_1X2-2":"2 - Hits","HIT_1X2-X":"X - Hits","HIT_F-F1":"AH1(%s) - Hits","HIT_F-F2":"AH2(%s) - Hits","HIT_OU-TO":"TO(%s) - Hits","HIT_OU-TU":"TU(%s) - Hits","HIT_OU1-TO":"TO(%s) for Team1 - Hits","HIT_OU1-TU":"TU(%s) for Team1 - Hits","HIT_OU2-TO":"TO(%s) for Team2 - Hits","HIT_OU2-TU":"TU(%s) for Team2 - Hits","HMG-1":"More goals in the 1st half","HMG-2":"More goals in the 2nd half","HMG-ML1":"1 half most goals (draw no bet)","HMG-ML2":"2 half most goals (draw no bet)","HMG-X":"Equal goals in halves","HTFT-1_1":"Team1/Team1","HTFT-1_1_N":"Team1/Team1 - no","HTFT-1_2":"Team1/Team2","HTFT-1_2_N":"Team1/Team2 - no","HTFT-1_X":"Team1/Draw","HTFT-1_X_N":"Team1/Draw - no","HTFT-2_1":"Team2/Team1","HTFT-2_1_N":"Team2/Team1 - no","HTFT-2_2":"Team2/Team2","HTFT-2_2_N":"Team2/Team2 - no","HTFT-2_X":"Team2/Draw","HTFT-2_X_N":"Team2/Draw - no","HTFT-X_1":"Draw/Team1","HTFT-X_1_N":"Draw/Team1 - no","HTFT-X_2":"Draw/Team2","HTFT-X_2_N":"Draw/Team2 - no","HTFT-X_X":"Draw/Draw","HTFT-X_X_N":"Draw/Draw - no","HTR-N":"Hattrick - no","HTR-Y":"Hattrick - yes","LCNR-1":"Team1 - Last corner","LCNR-2":"Team2 - Last corner","LCNR-ML1":"Team1 - Last corner","LCNR-ML2":"Team2 - Last corner","LCNR-X":"No corners","LG-1":"Team1 - Last goal","LG-2":"Team2 - Last goal","LG-ML1":"Team1 - Last goal (draw no bet)","LG-ML2":"Team2 - Last goal (draw no bet)","LG-X":"No goal","LOFS-1":"Team1 - Last offside","LOFS-2":"Team2 - Last offside","LOFS-ML1":"Team1 - Last offside","LOFS-ML2":"Team2 - Last offside","LOFS-X":"No offsides","LSUBS-ML1":"Team1 - Last subs","LSUBS-ML2":"Team2 - Last subs","LYC-1":"Team1 - Last Yellow Card","LYC-2":"Team2 - Last Yellow Card","LYC-ML1":"Team1 - Last Yellow Card","LYC-ML2":"Team2 - Last Yellow Card","LYC-X":"No Yellow Card","ML-ML1":"Team1 Win","ML-ML1-30":"1st Place - yes","ML-ML2":"Team2 Win","ML-ML2-30":"1st Place - no","NB1-ML1":"Home No Bet - No W2","NB1-ML2":"Home No Bet - W2","NB1-MLX":"Home No Bet - Draw","NB1-MLX_N":"Home No Bet - No Draw","NB2-ML1":"Away No Bet - W1","NB2-ML2":"Away No Bet - No W1","NB2-MLX":"Away No Bet - Draw","NB2-MLX_N":"Away No Bet - No Draw","NG-1":"Team1 - Next goal","NG-2":"Team2 - Next goal","NG-ML1":"Team1 - Next goal (draw no bet)","NG-ML2":"Team2 - Next goal (draw no bet)","NG-X":"No next goal","OE-EVEN":"Even","OE-ODD":"Odd","OFS_1X2-1":"1 - Offsides","OFS_1X2-2":"2 - Offsides","OFS_1X2-X":"X - Offsides","OFS_DC-12":"12 - Offsides","OFS_DC-1X":"1X - Offsides","OFS_DC-X2":"X2 - Offsides","OFS_F-F1":"Asian Handicap1(%s) - Offsides","OFS_F-F2":"Asian Handicap2(%s) - Offsides","OFS_OE-EVEN":"Even - Offsides","OFS_OE-ODD":"Odd - Offsides","OFS_OU-TO":"Total Over(%s) - Offsides","OFS_OU-TU":"Total Under(%s) - Offsides","OFS_OU1-TO":"Total Over(%s) for Team1 - Offsides","OFS_OU1-TU":"Total Under(%s) for Team1 - Offsides","OFS_OU2-TO":"Total Over(%s) for Team2 - Offsides","OFS_OU2-TU":"Total Under(%s) for Team2 - Offsides","OG-N":"Own goal - no","OG-Y":"Own goal - yes","OT-N":"Overtime - no","OT-Y":"Overtime - yes","OU-TO":"Total Over(%s)","OU-TU":"Total Under(%s)","OU1-TO":"Total Over(%s) for Team1","OU1-TU":"Total Under(%s) for Team1","OU2-TO":"Total Over(%s) for Team2","OU2-TU":"Total Under(%s) for Team2","PEN-N":"No penalty","PEN-Y":"Penalty - yes","PL1-N":"1st - no","PL1-Y":"1st - yes","PL1_3-N":"1st-3rd - no","PL1_3-Y":"1st-3rd - yes","POS_1X2-1":"1 - Ball possession","POS_1X2-2":"2 - Ball possession","POS_1X2-X":"X - Ball possession","POS_DC-12":"12 - Ball possession","POS_DC-1X":"1X - Ball possession","POS_DC-X2":"X2 - Ball possession","POS_F-F1":"Asian Handicap1(%s) - Ball possession","POS_F-F2":"Asian Handicap2(%s) - Ball possession","POS_OU1-TO":"Total Over(%s) for Team1 - Ball possession","POS_OU1-TU":"Total Under(%s) for Team1 - Ball possession","POS_OU2-TO":"Total Over(%s) for Team2 - Ball possession","POS_OU2-TU":"Total Under(%s) for Team2 - Ball possession","RACE10-1":"Race to 10 - Team1","RACE10-2":"Race to 10 - Team2","RACE10-ML1":"Race to 10 - Team1","RACE10-ML2":"Race to 10 - Team2","RACE10-X":"Race to 10 - neither","RACE15-1":"Race to 15 - Team1","RACE15-2":"Race to 15 - Team2","RACE15-ML1":"Race to 15 - Team1","RACE15-ML2":"Race to 15 - Team2","RACE15-X":"Race to 15 - neither","RACE2-1":"Race to 2 - Team1","RACE2-2":"Race to 2 - Team2","RACE2-ML1":"Race to 2 - Team1","RACE2-ML2":"Race to 2 - Team2","RACE2-X":"Race to 2 - neither","RACE20-1":"Race to 20 - Team1","RACE20-2":"Race to 20 - Team2","RACE20-ML1":"Race to 20 - Team1","RACE20-ML2":"Race to 20 - Team2","RACE20-X":"Race to 20 - neither","RACE3-1":"Race to 3 - Team1","RACE3-2":"Race to 3 - Team2","RACE3-ML1":"Race to 3 - Team1","RACE3-ML2":"Race to 3 - Team2","RACE3-X":"Race to 3 - neither","RACE4-1":"Race to 4 - Team1","RACE4-2":"Race to 4 - Team2","RACE4-ML1":"Race to 4 - Team1","RACE4-ML2":"Race to 4 - Team2","RACE4-X":"Race to 4 - neither","RACE5-1":"Race to 5 - Team1","RACE5-2":"Race to 5 - Team2","RACE5-ML1":"Race to 5 - Team1","RACE5-ML2":"Race to 5 - Team2","RACE5-X":"Race to 5 - neither","RC-N":"No red card","RC-Y":"Red card - yes","RHE_OU-TO":"TO(%s) - Hits+Errors+Runs","RHE_OU-TU":"TU(%s) - Hits+Errors+Runs","SD-N":"Score Draw - no","SD-Y":"Score Draw - yes","SET_CS-SET_CS":"Sets (%s)","SET_CS-SET_CS_N":"Sets (%s) - not","SET_EG-EG":"Exact (%s) - Sets","SET_EG-EG_N":"Exact (%s) - Sets - no","SET_F-SET_F1":"Asian Handicap1(%s) - Sets","SET_F-SET_F2":"Asian Handicap2(%s) - Sets","SET_OU-SET_TO":"Total Over(%s) - Sets","SET_OU-SET_TU":"Total Under(%s) - Sets","SHOT_1X2-1":"1 - Shots on goal","SHOT_1X2-2":"2 - Shots on goal","SHOT_1X2-X":"X - Shots on goal","SHOT_DC-12":"12 - Shots on goal","SHOT_DC-1X":"1X - Shots on goal","SHOT_DC-X2":"X2 - Shots on goal","SHOT_F-F1":"Asian Handicap1(%s) - Shots on goal","SHOT_F-F2":"Asian Handicap2(%s) - Shots on goal","SHOT_OE-EVEN":"Even - Shots on goal","SHOT_OE-ODD":"Odd - Shots on goal","SHOT_OU-TO":"Total Over(%s) - Shots on goal","SHOT_OU-TU":"Total Under(%s) - Shots on goal","SHOT_OU1-TO":"Total Over(%s) for Team1 - Shots on goal","SHOT_OU1-TU":"Total Under(%s) for Team1 - Shots on goal","SHOT_OU2-TO":"Total Over(%s) for Team2 - Shots on goal","SHOT_OU2-TU":"Total Under(%s) for Team2 - Shots on goal","SUBS_OU-TO":"Total Over(%s) - Subs","SUBS_OU-TU":"Total Under(%s) - Subs","SUBS_OU1-TO":"Total Over(%s) for Team1 - Subs","SUBS_OU1-TU":"Total Under(%s) for Team1 - Subs","SUBS_OU2-TO":"Total Over(%s) for Team2 - Subs","SUBS_OU2-TU":"Total Under(%s) for Team1 - Subs","SWS-N":"A sub will score - no","SWS-Y":"A sub will score - yes","TB-TO":"Total Over(%s) - Tie Break","TB-TU":"Total Under(%s) - Tie Break","TIME_FG-1":"1st goal - 1 half","TIME_FG-2":"1st goal - 2 half","TIME_FG-X":"No goal","TIME_SUBS-1":"1st substitution - 1 half","TIME_SUBS-2":"1st substitution - 2 half","TIME_SUBS-X":"1st substitution - intermission","TOX1-N":"1X and Total Over 2.5 - no","TOX1-Y":"1X and Total Over 2.5 - yes","TOX2-N":"X2 and Total Over 2.5 - no","TOX2-Y":"X2 and Total Over 2.5 - yes","TUX1-N":"1X and Total Under 2.5 - no","TUX1-Y":"1X and Total Under 2.5 - yes","TUX2-N":"X2 and Total Under 2.5 - no","TUX2-Y":"X2 and Total Under 2.5 - yes","W1G1-N":"Team1 to win by exactly 1 goal - no","W1G1-Y":"Team1 to win by exactly 1 goal - yes","W1G2-N":"Team2 to win by exactly 1 goal - no","W1G2-Y":"Team2 to win by exactly 1 goal - yes","W2G1-N":"Team1 to win by exactly 2 goals - no","W2G1-Y":"Team1 to win by exactly 2 goals - yes","W2G2-N":"Team2 to win by exactly 2 goals - no","W2G2-Y":"Team2 to win by exactly 2 goals - yes","W3G1-N":"Team1 to win by exactly 3 goals - no","W3G1-Y":"Team1 to win by exactly 3 goals - yes","W3G2-N":"Team2 to win by exactly 3 goals - no","W3G2-Y":"Team2 to win by exactly 3 goals - yes","WBH1-N":"Team1 to win in both halves - no","WBH1-Y":"Team1 to win in both halves - yes","WBH2-N":"Team2 to win in both halves - no","WBH2-Y":"Team2 to win in both halves - yes","WEH1-N":"Team1 to win either halves - no","WEH1-Y":"Team1 to win either halves - yes","WEH2-N":"Team2 to win either halves - no","WEH2-Y":"Team2 to win either halves - yes","WFB-N":"Win From Behind - no","WFB-Y":"Win From Behind - yes","WFB1-N":"Team1 to Win From Behind - no","WFB1-Y":"Team1 to Win From Behind - yes","WFB2-N":"Team2 to Win From Behind - no","WFB2-Y":"Team2 to Win From Behind - yes","WTN1-N":"Team1 to win to Nil - no","WTN1-Y":"Team1 to win to Nil - yes","WTN2-N":"Team2 to win to Nil - no","WTN2-Y":"Team2 to win to Nil - yes","WTO1-N":"Team1 to win and Total Over 2.5 - no","WTO1-Y":"Team1 to win and Total Over 2.5 - yes","WTO2-N":"Team2 to win and Total Over 2.5 - no","WTO2-Y":"Team2 to win and Total Over 2.5 - yes","WTU1-N":"Team1 to win and Total Under 2.5 - no","WTU1-Y":"Team1 to win and Total Under 2.5 - yes","WTU2-N":"Team2 to win and Total Under 2.5 - no","WTU2-Y":"Team2 to win and Total Under 2.5 - yes","YC_1X2-1":"1 - Yellow Cards","YC_1X2-2":"2 - Yellow Cards","YC_1X2-X":"X - Yellow Cards","YC_DC-12":"12 - Yellow Cards","YC_DC-1X":"1X - Yellow Cards","YC_DC-X2":"X2 - Yellow Cards","YC_F-F1":"Asian Handicap1(%s) - Yellow Cards","YC_F-F2":"Asian Handicap2(%s) - Yellow Cards","YC_OE-EVEN":"Even - Yellow Cards","YC_OE-ODD":"Odd - Yellow Cards","YC_OU-TO":"Total Over(%s) - Yellow Cards","YC_OU-TU":"Total Under(%s) - Yellow Cards","YC_OU1-TO":"Total Over(%s) for Team1 - Yellow Cards","YC_OU1-TU":"Total Under(%s) for Team1 - Yellow Cards","YC_OU2-TO":"Total Over(%s) for Team2 - Yellow Cards","YC_OU2-TU":"Total Under(%s) for Team2 - Yellow Cards"},"markets":{"1":{"-1 F":"Asian Handicaps","-1 F more":"More Asian Handicaps","-1 ML":"Moneyline","-1 OU":"Total","-1 OU more":"More Totals","-1 OU1":"Total Home Team","-1 OU1 more":"more Total Home Team","-1 OU2":"Total Away Team","-1 OU2 more":"more Total Away Team","-100 ML":"To Qualify","0 1X2":"1X2","1 1X2":"1X2[1-st set]","1 F":"Asian Handicaps[1-st inning]","1 F more":"more Asian Handicaps [1-st inning]","1 OU":"Total [1-st inning]","1 OU more":"more total [1-st inning]","2 1X2":"1X2[2-nd set]","2 F":"Asian Handicaps[2-nd inning]","2 F more":"more Asian Handicaps [2-nd inning]","2 OU":"Total [2-nd inning]","2 OU more":"more total [2-nd inning]","3 1X2":"1X2[3-rd set]","3 F":"Asian Handicaps[3-rd inning]","3 F more":"more Asian Handicaps [3-rd inning]","3 OU":"Total [3-nd inning]","3 OU more":"more total [3-rd inning]"},"11":{"0 CS":"Correct Score","0 F":"Asian Handicaps","0 F more":"More Asian Handicaps","0 ML":"Moneyline","0 OU":"Total","0 OU more":"More Totals","1 ML":"Moneyline 1-st Frame","2 ML":"Moneyline 2-nd Frame","3 ML":"Moneyline 3-rd Frame"},"12":{"0 CS":"Correct Score","0 F":"Asian Handicaps","0 F more":"More Asian Handicaps","0 ML":"Moneyline","0 OU":"Total","0 OU more":"More Totals","0 OU1":"Total Home Team","0 OU2":"Total Away Team","1 ML":"Moneyline 1-st Set","2 ML":"Moneyline 2-nd Set","3 ML":"Moneyline 3-rd Set"},"13":{"-1 CS":"Correct Score","-1 F":"Asian Handicaps","-1 F more":"More Asian Handicaps","-1 ML":"Moneyline","-1 OU":"Total","-1 OU more":"More Totals","1 ML":"Moneyline 1-st Set","2 ML":"Moneyline 2-nd Set","3 ML":"Moneyline 3-rd Set"},"14":{"0 CS":"Correct Score","0 F":"Asian Handicaps","0 F more":"more Asian Handicaps","0 ML":"Moneyline","0 OU":"Total","0 OU more":"More Totals","1 ML":"Moneyline 1-st Set","2 ML":"Moneyline 2-nd Set","3 ML":"Moneyline 3-rd Set"},"15":{"-100 ML":"To Qualify","0 1X2":"1-X-2","0 F":"Asian Handicaps","0 F more":"More Asian Handicaps","0 OU":"Total","0 OU more":"More Totals","0 OU1":"Total Home Team","0 OU1 more":"More Total Home Team","0 OU2":"Total Away Team","0 OU2 more":"More Total Away Team","1 1X2":"1X2[1-st half]","1 F":"Asian Handicaps [1-st half]","1 F more":"More Asian Handicaps [1-st half]","1 OU":"Total [1-st half]","1 OU more":"more total [1-st half]","2 1X2":"1X2[2-nd half]","2 F":"Asian Handicaps [2-nd half]","2 F more":"More Asian Handicaps [1-st half]","2 OU":"Total [2-nd half]","2 OU more":"more total [2-nd half]"},"16":{"-100 ML":"To Qualify","0 1X2":"1-X-2","0 F":"Asian Handicaps","0 F more":"more Asian Handicaps","0 OU":"Total","0 OU more":"More Totals","0 OU1":"Home Total Goals","0 OU1 more":"Home More Total Goals","0 OU2":"Total Away Team","0 OU2 more":"More Total Away Team","1 1X2":"1X2[1-st half]","1 F":"Asian Handicaps [1-st half]","1 F more":"more Asian Handicaps [1-st half]","1 OU":"Total [1-st half]","1 OU more":"more total [1-st half]","2 1X2":"1X2[2-nd half]","2 F":"Asian Handicaps [2-nd half]","2 F more":"more Asian Handicaps [2-nd half]","2 OU":"Total [2-nd half]","2 OU more":"more total [2-nd half]"},"17":{"-100 ML":"To Qualify","0 1X2":"1-X-2","0 F":"Asian Handicaps","0 F more":"More Asian Handicaps","0 OU":"Total","0 OU more":"More Totals","0 OU1":"Home Total Goals","0 OU1 more":"Home More Total Goals","0 OU2":"Total Away Team","0 OU2 more":"More Total Away Team","1 1X2":"1X2[1-st half]","1 F":"Asian Handicaps [1-st half]","1 F more":"More Asian Handicaps [1-st half]","1 OU":"Total [1-st half]","1 OU more":"More Total [1-st half]","2 1X2":"1X2[2-nd half]","2 F":"Asian Handicaps [2-nd half]","2 F more":"More Asian Handicaps [2-nd half]","2 OU":"Total [2-nd half]","2 OU more":"More Total [2-nd half]"},"18":{"0 1X2":"1-X-2","0 ML":"Moneyline","0 OU":"Total","0 OU more":"More Totals"},"19":{"-100 ML":"To Qualify","0 1X2":"1-X-2","0 F":"Asian Handicaps","0 F more":"more Asian Handicaps","0 OU":"Total","0 OU more":"More Totals","0 OU1":"Total Home Team","0 OU1 more":"more Total Home Team","0 OU2":"Total Away Team","0 OU2 more":"more Total Away Team","1 1X2":"1X2[1-st half]","1 F":"Asian Handicaps [1-st half]","1 F more":"more Asian Handicaps [1-st half]","1 OU":"Total [1-st half]","1 OU more":"more total [1-st half]","2 1X2":"1X2[2-st half]","2 F":"Asian Handicaps [2-nd half]","2 F more":"more Asian Handicaps [2-nd half]","2 OU":"Total [2-nd half]","2 OU more":"more total [2-nd half]"},"1ACE":"1st Ace","1BR":"1st Break","1CNR":"First Corner","1DBF":"1st Double Fault","1OFS":"First offside","1SER_F":"Spread - 1st Serve Pct","1SER_OU1":"Total for Team1 - 1st Serve Pct","1SER_OU2":"Total for Team2 - 1st Serve Pct","1SUBS":"First substitution","1X2":"1X2","1YC":"First yellow card","2":{"-1 F":"Asian Handicaps","-1 F more":"more Asian Handicaps","-1 ML":"Moneyline","-1 OU":"Total","-1 OU more":"More Totals","-1 OU1":"Total Home Team","-1 OU1 more":"More Total Home Team","-1 OU2":"Total Away Team","-1 OU2 more":"More Total Away Team","-100 ML":"To Qualify","0 1X2":"1-X-2","1 1X2":"1X2 [1-st quarter]","1 F":"Asian Handicaps [1-st quarter]","1 F more":"More Asian Handicaps [1-st quarter]","1 OU":"Total [1-st quarter]","1 OU more":"More total [1-st quarter]","10 1X2":"1X2[1-st half]","10 F":"Asian Handicaps [1-st half]","10 F more":"More Asian Handicaps [1-st half]","10 OU":"Total [1-st half]","10 OU more":"More Total [1-st half]","2 1X2":"1X2 [2-nd quarter]","2 F":"Asian Handicaps [2-nd quarter]","2 F more":"More Asian Handicaps [2-nd quarter]","2 OU":"Total [2-nd quarter]","2 OU more":"More total [2-nd quarter]","20 1X2":"1X2[2-nd half]","20 F":"Asian Handicaps [2-nd half]","20 F more":"More Asian Handicaps [2-nd half]","20 OU":"Total [2-nd half]","20 OU more":"More total [2-nd half]","3 1X2":"1X2 [3-rd quarter]","3 F":"Asian Handicaps[3-rd quarter]","3 F more":"More Asian Handicaps [3-rd quarter]","3 OU":"Total [3-nd quarter]","3 OU more":"More total [3-nd quarter]","4 1X2":"1X2 [4-th quarter]","4 F":"Asian Handicaps [4-th quarter]","4 F OU":"Total [4-rd quarter]","4 F OU more":"More total [4-rd quarter]","4 F more":"More Asian Handicaps [4-th quarter]","4 OU":"Total [4-nd quarter]","4 OU more":"More total [4-nd quarter]"},"23":{"-100 ML":"To Qualify","0 1X2":"1-X-2","0 F":"Asian Handicaps","0 F more":"More Asian Handicaps","0 OU":"Total","0 OU more":"More Totals","0 OU1":"Home Total Goals","0 OU1 more":"Home More Total Goals","0 OU2":"Total Away Team","0 OU2 more":"More Total Away Team","1 1X2":"1X2[1-st half]","1 F":"Asian Handicaps [1-st half]","1 F more":"more Asian Handicaps [1-st half]","1 OU":"Total [1-st half]","1 OU more":"more total [1-st half]","2 1X2":"1X2[2-nd half]","2 F":"Asian Handicaps [2-nd half]","2 F more":"more Asian Handicaps [2-nd half]","2 OU":"Total [2-nd half]","2 OU more":"more total [2-nd half]"},"25":{"0 HH":"Head to Head","0 PL1":"1st Place","0 PL1_3":"1-3 Place"},"29":{"-1 CS":"Correct Score","-1 F":"Asian Handicaps","-1 F more":"more Asian Handicaps","-1 ML":"Moneyline","-1 OU":"Total","-1 OU more":"more Totals","1 F":"Asian Handicaps [1-st set]","1 F more":"more Asian Handicaps [1-st set]","1 ML":"Moneyline[1-st set]","1 OU":"Total [1-st set]","1 OU more":"more total [1-st set]","2 F":"Asian Handicaps [2-nd set]","2 F more":"more Asian Handicaps [2-nd set]","2 ML":"Moneyline[2-nd set]","2 OU":"Total [2-nd set]","2 OU more":"more total [2-nd set]","3 F":"Asian Handicaps [3-rd set]","3 F more":"more Asian Handicaps [3-rd set]","3 ML":"Moneyline[3-rd set]","3 OU":"Total [3-rd set]","3 OU more":"more total [3-rd half]"},"30":{"0 ML":"1st Place"},"31":{"0 HH":"Head to Head","0 PL1":"1st Place","0 PL1_3":"1-3 Place"},"4":{"-100 ML":"To Qualify","0 1X2":"1-X-2","0 F":"Asian Handicaps","0 F more":"More Asian Handicaps","0 OU":"Total","0 OU more":"More Totals","0 OU1":"Home Total Goals","0 OU1 more":"Home More Total Goals","0 OU2":"Total Away Team","0 OU2 more":"More Total Away Team","1 1X2":"1X2[1-st half]","1 F":"Asian Handicaps [1-st half]","1 F more":"more Asian Handicaps [1-st half]","1 OU":"Total [1-st half]","1 OU more":"more total [1-st half]","2 1X2":"1X2[2-nd half]","2 F":"Asian Handicaps [2-nd half]","2 F more":"more Asian Handicaps [2-nd half]","2 OU":"Total [2-nd half]","2 OU more":"more total [2-nd half]"},"5":{"-100 ML":"To Qualify","0 1X2":"1-X-2","0 F":"Asian Handicaps","0 F more":"More Asian Handicaps","0 OU":"Total","0 OU more":"More Totals","0 OU1":"Total Home Team","0 OU1 more":"More Total Home Team","0 OU2":"Total Away Team","0 OU2 more":"More Away Home Team","1 1X2":"1X2[1-st half]","1 F":"Asian Handicaps [1-st half]","1 F more":"more Asian Handicaps [1-st half]","1 OU":"Total [1-st half]","1 OU more":"more total [1-st half]","2 1X2":"1X2[2-nd half]","2 F":"Asian Handicaps [2-nd half]","2 F more":"more Asian Handicaps [2-nd half]","2 OU":"Total [2-nd half]","2 OU more":"more total [2-nd half]"},"6":{"-100 ML":"To Qualify","-2 EH":"Euro Handicap(with OT)","-2 EH more":"Euro Handicap(with OT)","-2 F":"Asian Handicaps(with OT)","-2 F more":"more Asian Handicaps(with OT)","-2 ML":"Winner","-2 OU":"Total(with OT)","-2 OU more":"More Totals(with OT)","-2 OU1":"Total Home Team(with OT)","-2 OU1 more":"more Total Home Team(with OT)","-2 OU2":"Total Away Team(with OT)","-2 OU2 more":"more Total Away Team(with OT)","0 1X2":"1-X-2","0 BTS":"Both to score","0 CS":"Correct Score","0 DC":"Double Chance","0 EH":"Euro Handicap","0 EH more":"More Euro Handicap","0 F":"Asian Handicaps","0 F more":"More Asian Handicaps","0 OU":"Total","0 OU more":"More Totals","0 OU1":"Home Total Goals","0 OU1 more":"Home More Total Goals","0 OU2":"Total Away Team","0 OU2 more":"More Total Away Team","1 1X2":"1X2[1-st period]","1 F":"Asian Handicaps [1-st period]","1 F more":"more Asian Handicaps [1-st period]","1 OU":"Total [1-st period]","1 OU more":"more Total [1-st period]","2 1X2":"1X2[2-nd period]","2 F":"Asian Handicaps [2-nd period]","2 F more":"more Asian Handicaps [2-nd period]","2 OU":"Total [2-nd period]","2 OU more":"more Total [2-nd period]","3 1X2":"1X2[3-rd period]","3 F":"Asian Handicaps [3-rd period]","3 F more":"more Asian Handicaps [3-rd period]","3 OU":"Total [3-rd period]","3 OU more":"more Total [3-rd period]"},"60SET":"6-0 Set","7":{"-100 ML":"To Qualify","0 1X2":"Full Time Result","0 BTS":"Both Team To Score","0 CNR_1X2":"Corners","0 CNR_DC":"Corner Double Chance","0 CNR_F":"Asian Handicap Corners","0 CNR_F more":"More Asian Handicap Corners","0 CNR_OU":"Asian Total Corners","0 CNR_OU more":"More Asian Total Corners","0 CNR_OU1":"Corner Over/Under Team 1","0 CNR_OU2":"Corner Over/Under Team 2","0 CS":"More Correct Score","0 DC":"Double Chance","0 DNB":"Draw No Bet","0 EH":"European Handicaps","0 EH more":"More European Handicaps","0 F":"Asian Handicaps","0 F more":"More Asian Handicaps","0 NG":"First Team To Score","0 OE":"Goals Odd/Even","0 OU":"Goals","0 OU more":"More Goals","0 OU1":"Home Total Goals","0 OU1 more":"Home More Total Goals","0 OU2":"Away Total Goals","0 OU2 more":"Away More Total Goals","0 WTN1":"Home To Win To Nil","0 WTN2":"Away To Win To Nil","1 1X2":"1st Half Result","1 CNR_1X2":"1st Half Corners","1 CNR_F":"1st Half Asian Corners","1 CNR_OU":"1st Half Asian Total Corners","1 CS":"More 1st Half  Correct Score","1 DC":"1st Half Double Chance","1 EH":"1st Half European Handicaps","1 EH more":"1st Half More European Handicaps","1 F":"1st Half Asian Handicaps","1 F more":"1st Half More Asian Handicaps","1 OU":"1st Half Goals","1 OU more":"1st Half More Goals","2 1X2":"2nd Half Result","2 CS":"More 2nd Half Correct Score","2 DC":"2nd Half Double Chance","2 EH":"2nd Half European Handicaps","2 EH more":"2nd Half More European Handicaps","2 F":"2nd Half Asian Handicaps","2 F more":"2nd Half More Asian Handicaps","2 OU":"2nd Half Goals","2 OU more":"2nd Half More Goals"},"8":{"-1 CS":"Correct Score","-1 F":"Handicaps","-1 F more":"More Handicaps","-1 ML":"Winner","-1 OU":"Total","-1 OU more":"More Totals","1 F":"1-st Set Handicaps","1 F more":"More 1-st Set Handicaps","1 ML":"1-st Set Winner","1 OU":"1-st Set Total","1 OU more":"More 1-st Set Totals","2 F":"2-nd Set Handicaps","2 F more":"More 2-nd Set Handicaps","2 ML":"2-nd Set Winner","2 OU":"2-nd Set Total","2 OU more":"More 2-nd Set Totals"},"9":{"-100 ML":"To Qualify","0 CS":"Correct Score","0 F":"Asian Handicaps","0 F more":"More Asian Handicaps","0 ML":"Moneyline","0 OU":"Total","0 OU more":"More Totals","1 F":"Asian Handicaps [1-st set]","1 F more":"more Asian Handicaps [1-st set]","1 ML":"Moneyline[1-st set]","1 OU":"Total [1-st set]","1 OU more":"more total [1-st set]","2 F":"Asian Handicaps [2-nd set]","2 F more":"more Asian Handicaps [2-nd set]","2 ML":"Moneyline[2-st set]","2 OU":"Total [2-nd set]","2 OU more":"more total [2-nd set]","3 F":"Asian Handicaps [3-rd set]","3 F more":"more Asian Handicaps [3-rd set]","3 ML":"Moneyline[3-rd set]","3 OU":"Total [3-rd set]","3 OU more":"more total [3-rd set]"},"ACE_F":"Spread - Aces","ACE_OU":"Total - Aces","ACE_OU1":"Total for Team1 - Aces","ACE_OU2":"Total for Team 2 - Aces","ADDED_EG":"Exact - Official added time","ADDED_OU":"Total - Official added time","BHO":"Both halves \u003e 1.5 goals","BHU":"Both halves \u003c 1.5 goals","BTS":"Both to score","BTSD":"Both to score and draw","BTSW1":"Both to score and Team1 win","BTSW2":"Both to score and Team2 win","CNR_1X2":"Corners","CNR_DC":"Double Chance - Corners","CNR_F":"Spread - Corners","CNR_OE":"Odd/even - Corners","CNR_OU":"Total - Corners","CNR_OU1":"Total for Team1 - Corners","CNR_OU2":"Total for Team2 - Corners","CS":"Correct Score","DBF_F":"Spread - Double Faults","DBF_OU":"Total - Double Faults","DBF_OU1":"Total for Team1 - Double Faults","DBF_OU2":"Total for Team2 - Double Faults","DBH":"Draw in both half","DBL":"Double","DC":"Double Chance","DEH":"Draw in either half","DNB":"Draw no bet","DTO":"Draw and Total Over 2.5","DTU":"Draw and Total Under 2.5","EG":"Exact Goals","EG1":"Exact Goals for Team1","EG2":"Exact Goals for Team2","EH":"Euro Handicap","ERR_OU":"Total - Errors","F":"Spread","FG":"First Goal","FOUL_1X2":"Fouls","FOUL_DC":"Double Chance - Fouls","FOUL_F":"Spread - Fouls","FOUL_OE":"Odd/Even - Fouls","FOUL_OU":"Total - Fouls","FOUL_OU1":"Total for Team1 - Fouls","FOUL_OU2":"Total for Team2 - Fouls","GBH":"Goals in both halves","GBH1":"Team1 to score in both halves","GBH2":"Team2 to score in both halves","HIT_1X2":"Hits","HIT_F":"Spread - Hits","HIT_OU":"Total - Hits","HIT_OU1":"Total for Team1 - Hits","HIT_OU2":"Total for Team2 - Hits","HMG":"Half With Most Goals","HTFT":"Half Time/Full Time","HTR":"Hattrick","LCNR":"Last Corner","LG":"Last Goal","LOFS":"Last offside","LSUBS":"Last substitution","LYC":"Last Yellow Card","ML":"Moneyline","NB1":"Home No Bet","NB2":"Away No Bet","NG":"Next Goal","OE":"Odd/Even","OFS_1X2":"Offsides","OFS_DC":"Double Chance - Offsides","OFS_F":"Spread - Offsides","OFS_OE":"Odd/Even - Offsides","OFS_OU":"Total - Offsides","OFS_OU1":"Total for Team1 - Offsides","OFS_OU2":"Total for Team2 - Offsides","OG":"Own goal","OT":"Overtime","OU":"Total","OU1":"Total for Team1","OU2":"Total for Team2","PEN":"Penalty","POS_1X2":"Ball Possession","POS_DC":"Double Chance - Ball Possession","POS_F":"Spread - Ball Possession","POS_OU1":"Total for Team1 - Ball Possession","POS_OU2":"Total for Team2 - Ball Possession","RACE10":"Race to 10","RACE15":"Race to 15","RACE2":"Race to 2","RACE20":"Race to 20","RACE3":"Race to 3","RACE4":"Race to 4","RACE5":"Race to 5","RC":"Red cards","RHE_OU":"Total - Hits+Errors+Runs","SD":"Score Draw","SET_CS":"Correct Score - Sets","SET_EG":"Total Sets","SET_F":"Spread - Sets","SET_OU":"Total - Sets","SHOT_1X2":"Shots on goal","SHOT_DC":"Double Chance - Shots on goal","SHOT_F":"Spread - Shots on goal","SHOT_OE":"Odd/Even - Shots on goal","SHOT_OU":"Total - Shots on goal","SHOT_OU1":"Total for Team1 - Shots on goal","SHOT_OU2":"Total for Team2 - Shots on goal","SUBS_OU":"Total - Substitutions","SUBS_OU1":"Total for Team1 - Substitutions","SUBS_OU2":"Total for Team2 - Substitutions","SWS":"A sub will score","TB":"Tie Break","TIME_FG":"Time of 1st goal","TIME_SUBS":"Time of 1st substitution","TOX1":"1X and Total Over 2.5","TOX2":"X2 and Total Over 2.5","TUX1":"1X and Total Under 2.5","TUX2":"X2 and Total Under 2.5","W1G1":"Team1 to win by exactly 1 goal","W1G2":"Team2 to win by exactly 1 goal","W2G1":"Team1 to win by exactly 2 goals","W2G2":"Team2 to win by exactly 2 goals","W3G1":"Team1 to win by exactly 3 goals","W3G2":"Team2 to win by exactly 3 goals","WBH1":"Team1 to win in both halves","WBH2":"Team2 to win in both halves","WEH1":"Team1 to win either halves","WEH2":"Team2 to win either halves","WFB":"Win From Behind","WFB1":"Team1 to Win From Behind","WFB2":"Team2 to Win From Behind","WTN1":"Team1 to win to Nil","WTN2":"Team2 to win to Nil","WTO1":"Team1 to win and Total Over 2.5","WTO2":"Team2 to win and Total Over 2.5","WTU1":"Team1 to win and Total Under 2.5","WTU2":"Team2 to win and Total Under 2.5","YC_1X2":"Yellow Cards","YC_DC":"Double Chance - Yellow Cards","YC_F":"Spread - Yellow Cards","YC_OE":"Odd/Even - Yellow Cards","YC_OU":"Total - Yellow Cards","YC_OU1":"Total for Team1 - Yellow Cards","YC_OU2":"Total for Team2 - Yellow Cards"},"modal":{"Choose Bookmakers":"Choose Bookmakers"},"no_found":{"markets_message":"No active odds on selected markets","message":"unfortunately there is no event for now"},"number":{"currency":{"format":{"delimiter":",","format":"%u%n","precision":2,"separator":".","significant":false,"strip_insignificant_zeros":false,"unit":"$"}},"format":{"delimiter":",","precision":3,"separator":".","significant":false,"strip_insignificant_zeros":false},"human":{"decimal_units":{"format":"%n %u","units":{"billion":"Billion","million":"Million","quadrillion":"Quadrillion","thousand":"Thousand","trillion":"Trillion","unit":""}},"format":{"delimiter":"","precision":3,"significant":true,"strip_insignificant_zeros":true},"storage_units":{"format":"%n %u","units":{"byte":{"one":"Byte","other":"Bytes"},"eb":"EB","gb":"GB","kb":"KB","mb":"MB","pb":"PB","tb":"TB"}}},"percentage":{"format":{"delimiter":"","format":"%n%"}},"precision":{"format":{"delimiter":""}}},"recaptcha":{"errors":{"failed":"There was an error with the recaptcha code below. Please re-enter the code.","recaptcha_unreachable":"Oops, we failed to validate your reCAPTCHA response. Please try again.","reenter":"Please complete captcha","verification_failed":"reCAPTCHA verification failed, please try again."}},"seo":{"/":{"description":"Online service to track changes and compare odds on sport events from 79 bookmakers. Best betting odds comparison service!","keywords":"comparison service, compare sports odds, sports odds, sports bets","title":"Odds comparison service, compare sports odds – OddsFan"},"/about_bookmakers":{"description":"All necessary info on the bookmakers shops we cooperate with. ","title":"About our bookies | OddsFan.com"},"/about_us":{"description":"About our bookmakers odds comparison service.","title":"About us | OddsFan.com"},"/account":{"description":"","title":"Personal info"},"/account/bookmakers":{"description":"","title":"My bookmakers"},"/advanced":{"description":"Qualified tips and recommendations for newbies from professional gamblers.","title":"Qualified tips and recommendations | OddsFan.com"},"/advertising":{"description":"Questions about cooperation and publicity on our website. ","title":"Publicity | OddsFan.com"},"/betting_guide":{"description":"How to bet at bookmakers shops: a step-by-step guide for newbies. ","title":"How to bet at bookmakers shops? | OddsFan.com"},"/contact_us":{"description":"Contact the site administration of OddsFan.com","title":"Contact us| OddsFan.com"},"/content_solution":{"description":"The OddsFan.com content decision","title":"Content decision | OddsFan.com"},"/country":{"description":"Comparison %s %s odds! Compare, choose the best bookmaker offers and win with OddsFan!","keywords":"%s, %s, odds, bets, compare","title":"%s %s odds for betting"},"/country/teams":{"description":"%s teams from %s: event calendar and schedule for %s. The best bookmaker odds on any sport event you like.","keywords":"%s teams from %s, odds, bookmakers, calendar, matches","title":"%s teams from %s - event calendar"},"/disclaimer":{"description":"The OddsFan.com disclaimer","title":"Disclaimer | OddsFan.com"},"/event":{"description":"%s: Bookmakers odds on %s %s.","keywords":"%s, %s, %s, betting, odds, bookmakers, match","title":"%s betting odds for %s %s"},"/getting_started":{"description":"How to get started with the odds comparison.","title":"Get started using our service | OddsFan.com"},"/league":{"description":"%s: The best bookmakers odds on %s events from 79 bookies.","keywords":"%s, bookmakers, prices, odds, best, comparison","title":"%s betting odds"},"/legal_status":{"description":"The OddsFan.com legal status","title":"Legal Status | OddsFan.com"},"/live_odds":{"description":"Best Live %s odds from 70+ bookmakers! OddsFan.com – odds comparison service for %s.","keywords":"%s, live odds, bookmaker odds, odds, comparison service","title":"Live odds: Live %s odds"},"/next_matches":{"description":"Best Prematch %s odds from 70+ bookmakers! OddsFan.com – odds comparison service for %s.","keywords":"%s, prematch odds, bookmaker odds, odds, comparison service","title":"Prematch odds: Prematch %s odds for upcoming %s"},"/online-gambling-support":{"description":"GamCare — Online Gambling Support for people having problems with gambling.","keywords":"GamCare","title":"Online Gambling Support | OddsFan.com"},"/popular":{"description":"%s: Here are the odds on popular %s from 70+ bookmakers. OddsFan.com - the best odds on popular events.","keywords":"%s, popular, bookmaker odds, comparison service","title":"%s: bookmaker odds on popular %s"},"/privacy":{"description":"The OddsFan.com privacy policy","title":"Privacy Policy | OddsFan.com"},"/sign_in":{"description":"Authorization at OddsFan.com","title":"Log in | OddsFan.com"},"/sign_up":{"description":"Registration at OddsFan.com","title":"Sign up | OddsFan.com"},"/sport/id":{"description":"Comparison service: only the best bets on %s. Compare %s odds, choose the best bookmaker offers and make profitable bets! OddsFan – best betting odds comparison service.","keywords":"%s odds, bets on %s, comparison %s odds","title":"%s betting odds – compare bets on %s"},"/standings-fifa-world-cup-2018":{"description":"Standings — we present to your attention the standings of the final stage of the FIFA World Cup 2018 in Russia. OddsFan™","title":"Standings FIFA World Cup 2018 Russia"},"/terms":{"description":"The OddsFan.com terms and conditions","title":"Terms and Conditions | OddsFan.com"},"/what_is_oddsfan":{"description":"All necessary information on OddsFan.com - odds comparison service.   ","title":"What is OddsFan?"},"/widget/new":{"description":"Widgets - Next Matches.","title":"Widgets - Next Matches | OddsFan"}},"sidebar":{"Dark":"Dark","Light":"Light"},"sport":{"Choose League":"Choose League","Live":"Live","Most popular League data_live":"Most popular League Live","Most popular League data_prematch":"Most popular League","Most popular Matches data_live":"Most Popular Matches Live","Most popular Matches data_prematch":"Most popular Matches","No leagues with active matches":"No leagues with active matches","Prematch":"Prematch","Statistics":"Statistics","The number of":"The number of","back":"Back","bookmakers":"Bookmakers","countries_groups":{"africa":"Africa","asia":"Asia","australia":"Australia and Oceania","europe":"Europe","north_america":"North and Central America","south_america":"South America","world":"International championships"},"events":"Events","league":"League","match":"Match","other":"Other","page_desc":"Our online comparison service will help you to compare and choose the most profitable %s odds. Compare, choose the best offers from bookmakers and place favorable bets on %s.","page_h1":"%s odds","score":"Score","started at":"Started at","stats":{"bookmakers_count":"scanned bookies","countries_count":"scanned countries","events_count":"events","leagues_count":"scanned leagues","teams_count":"participating teams"},"type_1_1":"match","type_1_2":"matches","type_1_3":"matches","type_1_4":"matches","type_1_5":"matches","type_2_1":"race","type_2_2":"races","type_2_3":"races","type_2_4":"races","type_2_5":"races","type_3_1":"fight","type_3_2":"fights","type_3_3":"fights","type_3_4":"fights","type_3_5":"fights","type_4_1":"race","type_4_2":"races","type_4_3":"races","type_4_4":"races","type_4_5":"races","type_5_1":"race","type_5_2":"races","type_5_3":"races","type_5_4":"races","type_5_5":"races"},"sports":{"AFL":"AFL","American Football":"Am. Football","Athletics":"Athletics","Badminton":"Badminton","Bandy":"Bandy","Baseball":"Baseball","Basketball":"Basketball","Beach Soccer":"Beach Soccer","Beach Volleyball":"Beach Volley","Biathlon":"Biathlon","Boxing/MMA":"Boxing/MMA","Chess":"Chess","Cricket":"Cricket","Curling":"Curling","Cycling":"Cycling","Darts":"Darts","E-Sports":"E-Sports","Field Hockey":"Field Hockey","Formula 1":"Formula 1","Futsal":"Futsal","Gaelic Sport":"Gaelic Sport","Handball":"Handball","Hockey":"Hockey","Horse Racing":"Horse Racing","Motorcycling":"Motorcycling","Netball":"Netball","Rugby":"Rugby","Snooker":"Snooker","Soccer":"Soccer","Squash":"Squash","Table Tennis":"Table Tennis","Tennis":"Tennis","Volleyball":"Volleyball","Water Polo":"Water Polo","full":{"AFL":"AFL","American Football":"American Football","Athletics":"Athletics","Badminton":"Badminton","Bandy":"Bandy","Baseball":"Baseball","Basketball":"Basketball","Beach Soccer":"Beach Soccer","Beach Volleyball":"Beach Volley","Boxing/MMA":"Boxing/MMA","Chess":"Chess","Cricket":"Cricket","Curling":"Curling","Cycling":"Cycling","Darts":"Darts","E-Sports":"E-Sports","Field Hockey":"Field Hockey","Formula 1":"Formula 1","Futsal":"Futsal","Gaelic Sport":"Gaelic Sport","Handball":"Handball","Hockey":"Hockey","Horse Racing":"Horse Racing","Motorcycling":"Motorcycling","Netball":"Netball","Rugby":"Rugby","Snooker":"Snooker","Soccer":"Soccer","Squash":"Squash","Table Tennis":"Table Tennis","Tennis":"Tennis","Volleyball":"Volleyball","Water Polo":"Water Polo"}},"static_pages":{"nav":{"links":{"About Us":"About Us","About our bookmakers":"About our bookmakers","Advanced Tips \u0026 Tricks":"Advanced Tips \u0026 Tricks","Advertising":"Advertising","Bet responsibly":"18 + Gamble Responsible","Betting Guide":"Betting Guide","Contact us":"Contact us","Content Solution":"Content Solution","Disclaimer":"Disclaimer","Getting started":"Getting started","Getting started betting and":"Getting started betting and","HELP \u0026 SUPPORT":"HELP \u0026 SUPPORT","Legal Status":"Legal Status","Legal information":"Legal information","Online Gambling Support":"Online Gambling Support","Privacy Policy":"Privacy Policy","Terms and conditions":"Terms and conditions","What is OddsFan?":"What is OddsFan?","blog":"Blog","business partnership":"business partnership","odds comparison":"odds comparison","widget":"Widgets"}}},"support":{"array":{"last_word_connector":", and ","two_words_connector":" and ","words_connector":", "}},"time":{"am":"am","formats":{"default":"%a, %d %b %Y %H:%M:%S %z","long":"%B %d, %Y %H:%M","short":"%d %b %H:%M"},"pm":"pm"},"timezones":{"Abu Dhabi":"Abu Dhabi","Adelaide":"Adelaide","Alaska":"Alaska","Almaty":"Almaty","American Samoa":"American Samoa","Amsterdam":"Amsterdam","Arizona":"Arizona","Astana":"Astana","Athens":"Athens","Atlantic Time (Canada)":"Atlantic Time (Canada)","Auckland":"Auckland","Azores":"Azores","Baghdad":"Baghdad","Baku":"Baku","Bangkok":"Bangkok","Beijing":"Beijing","Belgrade":"Belgrade","Berlin":"Berlin","Bern":"Bern","Bogota":"Bogota","Brasilia":"Brasilia","Bratislava":"Bratislava","Brisbane":"Brisbane","Brussels":"Brussels","Bucharest":"Bucharest","Budapest":"Budapest","Buenos Aires":"Buenos Aires","Cairo":"Cairo","Canberra":"Canberra","Cape Verde Is":"Cape Verde Is.","Cape Verde Is.":"Cape Verde Is.","Caracas":"Caracas","Casablanca":"Casablanca","Central America":"Central America","Central Time (US \u0026 Canada)":"Central Time (US \u0026 Canada)","Chatham Is":"Chatham Is","Chennai":"Chennai","Chihuahua":"Chihuahua","Chongqing":"Chongqing","Copenhagen":"Copenhagen","Darwin":"Darwin","Dhaka":"Dhaka","Dublin":"Dublin","Eastern Time (US \u0026 Canada)":"Eastern Time (US \u0026 Canada)","Edinburgh":"Edinburgh","Ekaterinburg":"Ekaterinburg","Fiji":"Fiji","Georgetown":"Georgetown","Greenland":"Greenland","Guadalajara":"Guadalajara","Guam":"Guam","Hanoi":"Hanoi","Harare":"Harare","Hawaii":"Hawaii","Helsinki":"Helsinki","Hobart":"Hobart","Hong Kong":"Hong Kong","Indiana (East)":"Indiana (East)","International Date Line West":"International Date Line West","Irkutsk":"Irkutsk","Islamabad":"Islamabad","Istanbul":"Istanbul","Jakarta":"Jakarta","Jerusalem":"Jerusalem","Kabul":"Kabul","Kaliningrad":"Kaliningrad","Kamchatka":"Kamchatka","Karachi":"Karachi","Kathmandu":"Kathmandu","Kolkata":"Kolkata","Krasnoyarsk":"Krasnoyarsk","Kuala Lumpur":"Kuala Lumpur","Kuwait":"Kuwait","Kyiv":"Kyiv","La Paz":"La Paz","Lima":"Lima","Lisbon":"Lisbon","Ljubljana":"Ljubljana","London":"London","Madrid":"Madrid","Magadan":"Magadan","Marshall Is":"Marshall Is.","Marshall Is.":"Marshall Is.","Mazatlan":"Mazatlan","Melbourne":"Melbourne","Mexico City":"Mexico City","Mid-Atlantic":"Mid-Atlantic","Midway Island":"Midway Island","Minsk":"Minsk","Monrovia":"Casablanca","Monterrey":"Monterrey","Montevideo":"Montevideo","Moscow":"Moscow","Mountain Time (US \u0026 Canada)":"Mountain Time (US \u0026 Canada)","Mumbai":"Mumbai","Muscat":"Muscat","Nairobi":"Nairobi","New Caledonia":"New Caledonia","New Delhi":"New Delhi","Newfoundland":"Newfoundland","Novosibirsk":"Novosibirsk","Nuku'alofa":"Nuku'alofa","Osaka":"Osaka","Pacific Time (US \u0026 Canada)":"Pacific Time (US \u0026 Canada)","Paris":"Paris","Perth":"Perth","Port Moresby":"Port Moresby","Prague":"Prague","Pretoria":"Pretoria","Quito":"Quito","Rangoon":"Rangoon","Riga":"Riga","Riyadh":"Riyadh","Rome":"Rome","Samara":"Samara","Samoa":"Samoa","Santiago":"Santiago","Sapporo":"Sapporo","Sarajevo":"Sarajevo","Saskatchewan":"Saskatchewan","Seoul":"Seoul","Singapore":"Singapore","Skopje":"Skopje","Sofia":"Sofia","Solomon Is":"Solomon Is.","Solomon Is.":"Solomon Is.","Srednekolymsk":"Srednekolymsk","Sri Jayawardenepura":"Sri Jayawardenepura","St":{" Petersburg":"St. Petersburg"},"St. Petersburg":"St. Petersburg","Stockholm":"Stockholm","Sydney":"Sydney","Taipei":"Taipei","Tallinn":"Tallinn","Tashkent":"Tashkent","Tbilisi":"Tbilisi","Tehran":"Tehran","Tijuana":"Tijuana","Tokelau Is":"Tokelau Is.","Tokelau Is.":"Tokelau Is.","Tokyo":"Tokyo","UTC":"UTC","Ulaan Bataar":"Ulaan Bataar","Ulaanbaatar":"Ulaanbaatar","Urumqi":"Urumqi","Vienna":"Vienna","Vilnius":"Vilnius","Vladivostok":"Vladivostok","Volgograd":"Volgograd","Warsaw":"Warsaw","Wellington":"Wellington","West Central Africa":"West Central Africa","Yakutsk":"Yakutsk","Yerevan":"Yerevan","Zagreb":"Zagreb"},"tournament":{"A":"A","Beginning time":"Beginning time","D":"D","F":"F","L":"L","P":"P","Pts":"Pts","Score":"Score","Team":"Team","W":"W","final":"%s Final","final_1":"Final","final_3":"Third place play-off","group":"Group %s","wc2018_h1":"World Cup 2018","wc2018_h1_seo":"World Cup 2018 Standings"},"wc_seo":{"Argentina_Croatia":"\u003cp\u003eThere's no doubt, the Argentina national team won't easily fight with Croatia, although the bookmakers' odds are clearly in favor of the Sampaoli team.\u003c/p\u003e","Brazil_Switzerland":"\u003cp\u003eSetting odds on the match Brazil-Switzerland, bookmakers made it clear that they do not believe in the success of the Swiss.\u003c/p\u003e\u003cp\u003eHowever, the Brazilians obviously shouldn't expect an easy game, as Switzerland have repeatedly proved they can adequately compete with big-name opponents.\u003c/p\u003e","Denmark_France":"\u003cp\u003eWill the Danish team be able to get a victory in the fight with eminent France? We'll see it. In any case, bookmakers' odds are clearly not in favor of the nominal home team.\u003c/p\u003e","England_Belgium":"\u003cp\u003eVery interesting confrontation without obvious favorite and outsider. The same opinion is shared by bookmakers that put their odds on this meeting.\u003c/p\u003e","France_Australia":"\u003cp\u003eAustralian team is the undisputed underdog in the confrontation with France. It’s difficult to imagine in what way Bert van Marwijk's wards could beat such an eminent rival.\u003c/p\u003e\u003cp\u003eBookmakers don't believe in the success of Australia as well. Odds for the victory of nominal away team exceeded the mark of 10 to 1.\u003c/p\u003e","Germany_Mexico":"\u003cp\u003eMexico has a great chance to take revenge on the German national team for the defeat in the semi-finals of the Confederations Cup, but the bookmakers' odds are not in favor of nominal away team.\u003c/p\u003e","Germany_Sweden":"\u003cp\u003eFor all football fans, the favorite in this match is absolutely obvious and it’s the German national team. No wonder the odds for the victory of Lev's team in most bookmakers do not exceed 1.5 to 1.\u003c/p\u003e\u003cp\u003eHowever, the Swedish national team has repeatedly proved that it is able to take points from famous rivals, so that it may well present a nasty surprise to the current World Champion.\u003c/p\u003e","Mexico_Sweden":"\u003cp\u003eIn the match Mexico-Sweden won’t be pronounced a clear favorite, as in the face-to-face confrontation play almost equal level teams.\u003c/p\u003e\u003cp\u003eThis is well understood by bookmakers, so the odds of winning the Swedes and Mexicans in this meeting are almost equal.\u003c/p\u003e","Poland_Colombia":"\u003cp\u003ePoland and Colombia are rivals of approximately the same level, so we are likely to have a very interesting match.\u003c/p\u003e\u003cp\u003eEven experienced bookmakers failed to identify a favorite in this pair and therefore odds for the victory of these national teams in face-to-face match are almost equal.\u003c/p\u003e","Portugal_Spain":"\u003cp\u003eThe match Portugal-Spain is rightly one of the most interesting and expected confrontations of the group stage of the 2018 World Cup.\u003c/p\u003e\u003cp\u003eIn this case, bookmakers' odds are in favor of the Spaniards but do not forget that Portugal is the current winner of the European Championship.\u003c/p\u003e","Russia_Egypt":"\u003cp\u003eThe Russian national team is called the unconditional favorite in the match with Egypt, and it is clearly shown by bookmakers’ odds.\u003c/p\u003e\u003cp\u003eSuch experts opinion is true, but Cherchesov's wards need to be very careful, as the Egyptians have a tangible trump card in the face of Mohammed Salah.\u003c/p\u003e","Russia_Saudi_Arabia":"\u003cp\u003eIn the match Russia-Saudi Arabia, many experts consider the home team to be the unconditional favorite, and the odds of bookmakers confirm this once again.\u003c/p\u003e\u003cp\u003eBut for Cherchesov's team, it's very important to prevent underestimation of the rival, as it may play a dirty trick.\u003c/p\u003e","Uruguay_Russia":"\u003cp\u003eUruguay is considered Russia's main rival for leadership in the group, and if we talk about the upcoming meeting of these teams, betting odds are in favor of the nominal home team.\u003c/p\u003e\u003cp\u003eCertainly, the Russians have a chance to win, but in this case Cherchesov's squad have to do the best possible to achieve a positive result.\u003c/p\u003e","header":"A few words about the match %s"},"widget_plugin":{"1":1,"2":2,"F1":"Odds","F2":"Odds","Highest odds":"Highest odds","Next Matches":"Next Matches","No active events":"No active events","TO":"Over","TU":"Under","X":"X","button":{"generate_code":"Generate HTML code","reset":"Reset Changes"},"form":{"all_sports":"Select All","background":"Background","bold_header":"Bold header","bold_label":"Bold label","border":"Border","color_settings":"Color Settings","color_text":"Text","font":"Font","fonts":"Fonts \u0026 Size","footer_link":"Footer link","general":"General Settings","generate":" 2. Generate HTML code","get_html":"Get HTML","header_bg":"Header background","header_text":"Header text","height":"Widget height","high_odds":"Highest odds","insert_html":"insert this in the end of \u003ccode\u003e\u0026lt;body\u0026gt;\u003c/code\u003e tag:","insert_html_2":"insert this in \u003ccode\u003e\u0026lt;body\u0026gt;\u003c/code\u003e tag, in place where you want to see widget: \u003ccode\u003e\u0026lt;div id='oddsfan-widget'\u0026gt;\u003c/code\u003e\u003ccode\u003e\u0026lt;/div\u0026gt;\u003c/code\u003e","label_bg":"Label background","label_font":"Label Font","label_name":"Label name","lang":"Language","line_height":"Line Height","link":"Link","matches":"Number of matches","odds_displayed":"Odds displayed","odds_type":{"1x2":"1X2","handicap":"Handicap","over_under":"Over/Under"},"prev":"Preview","put":" 3. Put on your website","select_bk":"Selected bookmakers odds","select_sports":"Select sports","setup":"1. Setup Widget","show_label":"Show label","size":"Size","table_1":"Table 1","table_2":"Table 2","time_zone":"Time zone","title":"Prematch odds widget","type":"Odds type","width":"Widget width","with_logo":"With bookmaker logos","without_logo":"Without bookmaker logos"},"powered by":"powered by","tabs":{"live":"Live odds","prematch":"Prematch odds","surebets":"Surebets","valuebets":"Valuebets"},"valF1":"H1","valF2":"H2","valT":"Total"}},"es":{"account":{"Bookmakers":"Casas de apuestas","Change Password":"Modificar la contraseña","Changes saved":"Modificaciones son guardadas","E-mail address":"Correo electrónico","Live":"Live","Live bookmakers":"Casas de apuestas – régimen Live","My bookmakers":"Mis casas de apuestas","Personal info":"Información personal","Prematch":"Prematch","Prematch bookmakers":"Casas de apuestas – régimen Prematch","Time zone":"Fuso horario","and":"y","bookmakers clones":"Clones de las casas de apuestas","label":{"confirm":"¿Usted está seguro?","delete_account":"Borrar la cuenta "},"new password":"Contraseña nueva","old password":"Contraseña vieja","repeat new password":"Reintroducir la contraseña nueva","submit":{"save":"Guardar","save my changes":"Guardar las modificaciones"},"success":"actualizado exitosamente"},"activerecord":{"errors":{"messages":{"record_invalid":"La validación falló: %{errors}","restrict_dependent_destroy":{"has_many":"No se puede eliminar el registro porque existen %{record} dependientes","has_one":"No se puede eliminar el registro porque existe un %{record} dependiente"}},"models":{"bb_user":{"attributes":{"reset_password_token":{"blank":"link de borradura no es actual","invalid":"link de borradura no es actual"}}}}}},"bet":{"%s set, %s game":"%s set, %s game","1 frame":"1st frame","1 half":"1st half","1 inning":"1st inning","1 period":"1st per","1 quarter":"1st qtr","1 set":"1st set","1 time":"1st half","10 set":"10th set","11 set":"11th set","12 set":"12th set","13 set":"13th set","2 frame":"2nd frame","2 half":"2nd half","2 inning":"2nd inning","2 period":"2nd per","2 quarter":"2nd qtr","2 set":"2nd set","2 time":"2nd half","3 frame":"3rd frame","3 inning":"3rd inning","3 period":"3rd per","3 quarter":"3rd qtr","3 set":"3rd set","4 frame":"4th frame","4 inning":"4th inning","4 quarter":"4th qtr","4 set":"4th set","5 frame":"5th frame","5 inning":"5th inning","5 set":"5th set","6 frame":"6th frame","6 inning":"6th inning","6 set":"6th set","60 mins":"60 mins","7 frame":"7th frame","7 inning":"7th inning","7 set":"7th set","8 frame":"8th frame","8 inning":"8th inning","8 set":"8th set","9 inning":"9th inning","9 set":"9th set","match":"match","match (doubles)":"match (doubles)","next round":"next round","no_desc":"","regular time":"regular time","with overtime":"with OT","with overtime and shootouts":"with OT \u0026 SO"},"breadscrump":{"Home":"Principal","Soccer":"Fútbol"},"contact_us":{"Email":"Correo electrónico","Hello":"¡Hola!","If you have any questions you can write to us":"Contacte con nosotros si Usted tiene las preguntas","Message":"Notificación","Name":"Nombre","Send":"Enviar","Wrong captcha verification":"Captcha erróneo","contact_us_form_error":"Usted ha introducido los datos erróneos. ¡Tente una vez más!","contact_us_form_success":"Su notificación ha sido enviada. Nosotros Le contactaremos.¡Gracias!"},"countries":{"AC":"Isla de la Ascensión","AD":"Andorra","AE":"Emiratos Árabes Unidos","AF":"Afganistán","AFGHANISTAN":"Afghanistan","AFRICA":"Africa","AG":"Antigua y Barbuda","AI":"Anguila","AL":"Albania","ALBANIA":"Albania","ALGERIA":"Algeria","AM":"Armenia","AMERICAN_SAMOA":"American Samoa","AN":"Antillas Neerlandesas","ANDORRA":"Andorra","ANGOLA":"Angola","ANGUILLA":"Anguilla","ANTIGUA_AND_BARBUDA":"Antigua and Barbuda","AO":"Angola","AQ":"Antártida","AR":"Argentina","ARGENTINA":"Argentina","ARMENIA":"Armenia","ARUBA":"Aruba","AS":"Samoa Americana","ASIA":"Asia","AT":"Austria","AU":"Australia","AUSTRALIA":"Australia","AUSTRIA":"Austria","AW":"Aruba","AX":"Islas Åland","AZ":"Azerbaiyán","AZERBAIJAN":"Azerbaijan","BA":"Bosnia-Herzegovina","BAHAMAS":"Bahamas","BAHRAIN":"Bahrain","BANGLADESH":"Bangladesh","BARBADOS":"Barbados","BB":"Barbados","BD":"Bangladés","BE":"Bélgica","BELARUS":"Belarus","BELGIUM":"Belgium","BELIZE":"Belize","BENIN":"Benin","BERMUDA":"Bermuda","BF":"Burkina Faso","BG":"Bulgaria","BH":"Baréin","BHUTAN":"Bhutan","BI":"Burundi","BJ":"Benín","BL":"San Bartolomé","BM":"Bermudas","BN":"Brunéi","BO":"Bolivia","BOLIVIA":"Bolivia","BOSNIA_HERZEGOVINA":"Bosnia-Herzegovina","BOTSWANA":"Botswana","BQ":"Caribe neerlandés","BR":"Brasil","BRAZIL":"Brazil","BRITISH_VIRGIN_ISLANDS":"British Virgin Islands","BRUNEI_DARUSSALAM":"Brunei Darussalam","BS":"Bahamas","BT":"Bután","BULGARIA":"Bulgaria","BURKINA_FASO":"Burkina Faso","BURUNDI":"Burundi","BV":"Isla Bouvet","BW":"Botsuana","BY":"Bielorrusia","BZ":"Belice","CA":"Canadá","CAMBODIA":"Cambodia","CAMEROON":"Cameroon","CANADA":"Canada","CAPE_VERDE_ISLANDS":"Cape Verde Islands","CAYMAN_ISLANDS":"Cayman Islands","CC":"Islas Cocos","CD":"República Democrática del Congo","CENTRAL_AFRICAN_REPUBLIC":"Central African Republic","CF":"República Centroafricana","CG":"República del Congo","CH":"Suiza","CHAD":"Chad","CHILE":"Chile","CHINA_PR":"China PR","CHINESE_TAIPEI":"Chinese Taipei","CI":"Costa de Marfil","CK":"Islas Cook","CL":"Chile","CM":"Camerún","CN":"China","CO":"Colombia","COLOMBIA":"Colombia","COMOROS":"Comoros","CONCACAF":"CONCACAF","CONGO":"Congo","CONGO_DR":"Congo DR","COOK_ISLANDS":"Cook Islands","COSTA_RICA":"Costa Rica","COTE_D_IVOIRE":"Côte d'Ivoire","CP":"Isla Clipperton","CR":"Costa Rica","CROATIA":"Croatia","CU":"Cuba","CUBA":"Cuba","CURACAO":"Curaçao","CV":"Cabo Verde","CW":"Curazao","CX":"Isla Christmas","CY":"Chipre","CYPRUS":"Cyprus","CZ":"República Checa","CZECH_REPUBLIC":"Czech Republic","DE":"Alemania","DENMARK":"Denmark","DG":"Diego García","DJ":"Yibuti","DJIBOUTI":"Djibouti","DK":"Dinamarca","DM":"Dominica","DO":"República Dominicana","DOMINICA":"Dominica","DOMINICAN_REPUBLIC":"Dominican Republic","DZ":"Argelia","EA":"Ceuta y Melilla","EC":"Ecuador","ECUADOR":"Ecuador","EE":"Estonia","EG":"Egipto","EGYPT":"Egypt","EH":"Sáhara Occidental","EL_SALVADOR":"El Salvador","ENGLAND":"England","EQUATORIAL_GUINEA":"Equatorial Guinea","ER":"Eritrea","ERITREA":"Eritrea","ES":"España","ESTONIA":"Estonia","ET":"Etiopía","ETHIOPIA":"Ethiopia","EU":"Unión Europea","EUROPE":"Europe","FAROE_ISLANDS":"Faroe Islands","FI":"Finlandia","FIJI":"Fiji","FINLAND":"Finland","FJ":"Fiyi","FK":"Islas Malvinas","FM":"Micronesia","FO":"Islas Feroe","FR":"Francia","FRANCE":"France","FRENCH_GUIANA":"French Guiana","GA":"Gabón","GABON":"Gabon","GAMBIA":"Gambia","GB":"Reino Unido","GD":"Granada","GE":"Georgia","GEORGIA":"Georgia","GERMANY":"Germany","GF":"Guayana Francesa","GG":"Guernesey","GH":"Ghana","GHANA":"Ghana","GI":"Gibraltar","GIBRALTAR":"Gibraltar","GL":"Groenlandia","GM":"Gambia","GN":"Guinea","GP":"Guadalupe","GQ":"Guinea Ecuatorial","GR":"Grecia","GREAT_BRITAIN":"Great Britain","GREECE":"Greece","GRENADA":"Grenada","GS":"Islas Georgia del Sur y Sandwich del Sur","GT":"Guatemala","GU":"Guam","GUADELOUPE":"Guadeloupe","GUAM":"Guam","GUATEMALA":"Guatemala","GUINEA":"Guinea","GUINEA_BISSAU":"Guinea-Bissau","GUYANA":"Guyana","GW":"Guinea-Bisáu","GY":"Guyana","HAITI":"Haiti","HK":"RAE de Hong Kong (China)","HM":"Islas Heard y McDonald","HN":"Honduras","HONDURAS":"Honduras","HONG_KONG":"Hong Kong","HR":"Croacia","HT":"Haití","HU":"Hungría","HUNGARY":"Hungary","IC":"Islas Canarias","ICELAND":"Iceland","ID":"Indonesia","IE":"Irlanda","IL":"Israel","IM":"Isla de Man","IN":"India","INDIA":"India","INDONESIA":"Indonesia","IO":"Territorio Británico del Océano Índico","IQ":"Iraq","IR":"Irán","IRAN":"Iran","IRAQ":"Iraq","IRELAND_REPUBLIC":"Ireland Republic","IS":"Islandia","ISRAEL":"Israel","IT":"Italia","ITALY":"Italy","JAMAICA":"Jamaica","JAPAN":"Japan","JE":"Jersey","JM":"Jamaica","JO":"Jordania","JORDAN":"Jordan","JP":"Japón","KAZAKHSTAN":"Kazakhstan","KE":"Kenia","KENYA":"Kenya","KG":"Kirguistán","KH":"Camboya","KI":"Kiribati","KIRIBATI":"Kiribati","KM":"Comoras","KN":"San Cristóbal y Nieves","KOREA_DPR":"Korea DPR","KOREA_REPUBLIC":"Korea Republic","KOSOVO":"Kosovo","KP":"Corea del Norte","KR":"Corea del Sur","KUWAIT":"Kuwait","KW":"Kuwait","KY":"Islas Caimán","KYRGYZSTAN":"Kyrgyzstan","KZ":"Kazajistán","LA":"Laos","LAOS":"Laos","LATVIA":"Latvia","LB":"Líbano","LC":"Santa Lucía","LEBANON":"Lebanon","LESOTHO":"Lesotho","LI":"Liechtenstein","LIBERIA":"Liberia","LIBYA":"Libya","LIECHTENSTEIN":"Liechtenstein","LITHUANIA":"Lithuania","LK":"Sri Lanka","LR":"Liberia","LS":"Lesoto","LT":"Lituania","LU":"Luxemburgo","LUXEMBOURG":"Luxembourg","LV":"Letonia","LY":"Libia","MA":"Marruecos","MACAO":"Macao","MACEDONIA_FYR":"Macedonia FYR","MADAGASCAR":"Madagascar","MALAWI":"Malawi","MALAYSIA":"Malaysia","MALDIVES":"Maldives","MALI":"Mali","MALTA":"Malta","MARTINIQUE":"Martinique","MAURITANIA":"Mauritania","MAURITIUS":"Mauritius","MAYOTTE":"Mayotte","MC":"Mónaco","MD":"Moldavia","ME":"Montenegro","MEXICO":"Mexico","MF":"San Martín","MG":"Madagascar","MH":"Islas Marshall","MK":"Macedonia","ML":"Mali","MM":"Myanmar (Birmania)","MN":"Mongolia","MO":"RAE de Macao (China)","MOLDOVA":"Moldova","MONACO":"Monaco","MONGOLIA":"Mongolia","MONTENEGRO":"Montenegro","MONTSERRAT":"Montserrat","MOROCCO":"Morocco","MOZAMBIQUE":"Mozambique","MP":"Islas Marianas del Norte","MQ":"Martinica","MR":"Mauritania","MS":"Montserrat","MT":"Malta","MU":"Mauricio","MV":"Maldivas","MW":"Malaui","MX":"México","MY":"Malasia","MYANMAR":"Myanmar","MZ":"Mozambique","NA":"Namibia","NAMIBIA":"Namibia","NC":"Nueva Caledonia","NE":"Níger","NEPAL":"Nepal","NETHERLANDS":"Netherlands","NETHERLANDS_ANTILLES":"Netherlands Antilles","NEW_CALEDONIA":"New Caledonia","NEW_ZEALAND":"New Zealand","NF":"Isla Norfolk","NG":"Nigeria","NI":"Nicaragua","NICARAGUA":"Nicaragua","NIGER":"Niger","NIGERIA":"Nigeria","NL":"Países Bajos","NO":"Noruega","NORTHERN IRELAND":"Northern Ireland","NORTHERN_IRELAND":"Northern Ireland","NORTHERN_MARIANA_ISLANDS":"Northern Mariana Islands","NORTH_AMERICA":"North America","NORWAY":"Norway","NP":"Nepal","NR":"Nauru","NU":"Isla Niue","NZ":"Nueva Zelanda","OM":"Omán","OMAN":"Oman","PA":"Panamá","PAKISTAN":"Pakistan","PALESTINE":"Palestine","PANAMA":"Panama","PAPUA_NEW_GUINEA":"Papua New Guinea","PARAGUAY":"Paraguay","PE":"Perú","PERU":"Peru","PF":"Polinesia Francesa","PG":"Papúa Nueva Guinea","PH":"Filipinas","PHILIPPINES":"Philippines","PK":"Pakistán","PL":"Polonia","PM":"San Pedro y Miquelón","PN":"Islas Pitcairn","POLAND":"Poland","PORTUGAL":"Portugal","PR":"Puerto Rico","PS":"Territorios Palestinos","PT":"Portugal","PUERTO_RICO":"Puerto Rico","PW":"Palau","PY":"Paraguay","QA":"Catar","QATAR":"Qatar","QO":"Territorios alejados de Oceanía","RE":"Reunion","REUNION":"Reunion","RO":"Rumanía","ROMANIA":"Romania","RS":"Serbia","RS_AND_M":"Serbia and Macedonia","RU":"Rusia","RUSSIA":"Russia","RW":"Ruanda","RWANDA":"Rwanda","SA":"Arabia Saudí","SAINT_MARTIN":"Saint Martin","SAMOA":"Samoa","SAN_MARINO":"San Marino","SAO_TOME_AND_PRINCIPE":"Sao Tome and Principe","SAUDI_ARABIA":"Saudi Arabia","SB":"Islas Salomón","SC":"Seychelles","SCOTLAND":"Scotland","SD":"Sudán","SE":"Suecia","SENEGAL":"Senegal","SERBIA":"Serbia","SEYCHELLES":"Seychelles","SG":"Singapur","SH":"Santa Elena","SI":"Eslovenia","SIERRA_LEONE":"Sierra Leone","SINGAPORE":"Singapore","SINT_MAARTEN":"Sint Maarten","SJ":"Svalbard y Jan Mayen","SK":"Eslovaquia","SL":"Sierra Leona","SLOVAKIA":"Slovakia","SLOVENIA":"Slovenia","SM":"San Marino","SN":"Senegal","SO":"Somalia","SOLOMON_ISLANDS":"Solomon Islands","SOMALIA":"Somalia","SOUTH_AFRICA":"South Africa","SOUTH_AMERICA":"South America","SOUTH_SUDAN":"South Sudan","SPAIN":"Spain","SR":"Surinam","SRI_LANKA":"Sri Lanka","SS":"Sudán del Sur","ST":"Sao Tome \u0026 Principe","ST_KITTS_AND_NEVIS":"St. Kitts and Nevis","ST_LUCIA":"St. Lucia","ST_VINCENT_AND_THE_GRENADINES":"St. Vincent and the Grenadines","SUDAN":"Sudan","SURINAME":"Suriname","SV":"El Salvador","SWAZILAND":"Swaziland","SWEDEN":"Sweden","SWITZERLAND":"Switzerland","SX":"Sint Maarten","SY":"Siria","SYRIA":"Syria","SZ":"Suazilandia","TA":"Tristán da Cunha","TAHITI":"Tahiti","TAIWAN":"Taiwan","TAJIKISTAN":"Tajikistan","TANZANIA":"Tanzania","TC":"Islas Turcas y Caicos","TD":"Chad","TF":"Territorios Australes Franceses","TG":"Togo","TH":"Tailandia","THAILAND":"Thailand","TIMOR_LESTE":"Timor-Leste","TJ":"Tayikistán","TK":"Tokelau","TL":"Timor Oriental","TM":"Turkmenistán","TN":"Túnez","TO":"Tonga","TOGO":"Togo","TONGA":"Tonga","TR":"Turquía","TRINIDAD_AND_TOBAGO":"Trinidad and Tobago","TT":"Trinidad y Tobago","TUNISIA":"Tunisia","TURKEY":"Turkey","TURKMENISTAN":"Turkmenistan","TURKS_AND_CAICOS_ISLANDS":"Turks and Caicos Islands","TUVALU":"Tuvalu","TV":"Tuvalu","TW":"Taiwán","TZ":"Tanzania","UA":"Ucrania","UAE":"UAE","UG":"Uganda","UGANDA":"Uganda","UKRAINE":"Ukraine","UM":"Islas menores alejadas de EE. UU.","URUGUAY":"Uruguay","US":"Estados Unidos","USA":"USA","US_VIRGIN_ISLANDS":"US Virgin Islands","UY":"Uruguay","UZ":"Uzbekistán","UZBEKISTAN":"Uzbekistan","VA":"Ciudad del Vaticano","VANUATU":"Vanuatu","VC":"San Vicente y las Granadinas","VE":"Venezuela","VENEZUELA":"Venezuela","VG":"Islas Vírgenes Británicas","VI":"Islas Vírgenes de EE. UU.","VIETNAM":"Vietnam","VN":"Vietnam","VU":"Vanuatu","WALES":"Wales","WF":"Wallis y Futuna","WORLD":"World","WS":"Samoa","XK":"Kosovo","YE":"Yemen","YEMEN":"Yemen","YT":"Mayotte","ZA":"Sudáfrica","ZAMBIA":"Zambia","ZANZIBAR":"Zanzibar","ZIMBABWE":"Zimbabwe","ZM":"Zambia","ZW":"Zimbabue"},"countries_at":{"AC":"о-ва Вознесения","AD":"Андорры","AE":"ОАЭ","AF":"Афганистана","AFRICA":"Африки","AG":"Антигуа и Барбуды","AI":"Антигильи","AL":"Албании","AM":"Армении","AN":"Нидерландских Антильских о-вов","AO":"Анголы","AQ":"Антарктиды","AR":"Аргентины","AS":"Американского Самоа","ASIA":"Азии","AT":"Австрии","AU":"Австралии","AW":"Арубы","AX":"Аландских о-вов","AZ":"Азербайджана","BA":"Босния и Герцеговины","BB":"Барбадоса","BD":"Бангладеш","BE":"Бельгии","BF":"Буркина-Фасо","BG":"Болгарии","BH":"Бахрейна","BI":"Бурунди","BJ":"Бенина","BL":"Сен-Бартельми","BM":"Бермудских о-вов","BN":"Бруней-Даруссалама","BO":"Боливии","BQ":"Бонэйра, Синт-Эстатиуса и Сабы","BR":"Бразилии","BS":"Багамских о-вов","BT":"Бутана","BV":"о-ва Буве","BW":"Ботсваны","BY":"Беларуси","BZ":"Белиза","CA":"Канады","CC":"Кокосовых о-вов","CD":"Конго - Киншасы","CF":"ЦАР","CG":"Конго - Браззавиля","CH":"Швейцарии","CHINESE TAIPEI":"Китайского Тайбэя","CI":"Кот-д’Ивуара","CK":"о-вов Кука","CL":"Чили","CM":"Камеруна","CN":"Китая","CO":"Колумбии","CONCACAF":"КОНКАКАФ","CP":"о-ва Клиппертона","CR":"Коста-Рики","CU":"Кубы","CV":"Кабо-Верде","CW":"Кюрасао","CX":"о-ва Рождества","CY":"Кипра","CZ":"Чехии","DE":"Германии","DG":"Диего-Гарсия","DJ":"Джибути","DK":"Дании","DM":"Доминики","DO":"Доминиканской Республики","DZ":"Алжира","EA":"Сеуты и Мелильи","EC":"Эквадора","EE":"Эстонии","EG":"Египта","EH":"Западной Сахары","ENGLAND":"Англии","ER":"Эритреи","ES":"Испании","ET":"Эфиопии","EU":"Европейского союза","EUROPE":"Европы","FI":"Финляндии","FJ":"Фиджи","FK":"Фолклендских о-вов","FM":"Федеративных Штатов Микронезии","FO":"Фарерских о-вов","FR":"Франции","GA":"Габона","GB":"Великобритании","GD":"Гренады","GE":"Грузии","GF":"Французской Гвианы","GG":"Гернси","GH":"Ганы","GI":"Гибралтара","GL":"Гренландии","GM":"Гамбии","GN":"Гвинеи","GP":"Гваделупы","GQ":"Экваториальной Гвинеи","GR":"Греции","GS":"Южной Георгии и Южных Сандвичевых о-вов","GT":"Гватемалы","GU":"Гуама","GW":"Гвинеи-Бисау","GY":"Гайаны","HK":"Гонконга (особый район)","HM":"о-вов Херд и Макдональд","HN":"Гондураса","HR":"Хорватии","HT":"Гаити","HU":"Венгрии","IC":"Канарских о-вов","ID":"Индонезии","IE":"Ирландии","IL":"Израиля","IM":"О-ва Мэн","IN":"Индии","IO":"Британской территории в Индийском океане","IQ":"Ирака","IR":"Ирана","IS":"Исландии","IT":"Италии","JE":"Джерси","JM":"Ямайки","JO":"Иордании","JP":"Японии","KE":"Кении","KG":"Киргизии","KH":"Камбоджи","KI":"Кирибати","KM":"Коморских о-вов","KN":"Сент-Китс и Невис","KOSOVO":"Косово","KP":"КНДР","KR":"Республики Корея","KW":"Кувейта","KY":"Каймановых о-вов","KZ":"Казахстана","LA":"Лаоса","LAOS":"Лаоса","LB":"Ливана","LC":"Сент-Люсии","LI":"Лихтенштейна","LK":"Шри-Ланки","LR":"Либерии","LS":"Лесото","LT":"Литвы","LU":"Люксембурга","LV":"Латвии","LY":"Ливии","MA":"Марокко","MC":"Монако","MD":"Молдовы","ME":"Черногории","MF":"Сен-Мартена","MG":"Мадагаскара","MH":"Маршалловых о-вов","MK":"Македонии","ML":"Мали","MM":"Мьянмы (Бирмы)","MN":"Монголии","MO":"Макао (особый район)","MP":"Северных Марианских о-вов","MQ":"Мартиники","MR":"Мавритании","MS":"Монтсеррата","MT":"Мальты","MU":"Маврикия","MV":"Мальдивских о-вов","MW":"Малави","MX":"Мексики","MY":"Малайзии","MZ":"Мозамбика","NA":"Намибии","NC":"Новой Каледонии","NE":"Нигера","NF":"о-ва Норфолк","NG":"Нигерии","NI":"Никарагуа","NL":"Нидерландов","NO":"Норвегии","NORTH AMERICA":"Северной Америки","NORTHERN IRELAND":"Северной Ирландии","NP":"Непала","NR":"Науру","NU":"Ниуэ","NZ":"Новой Зеландии","N_IRELAND":"Северной Ирландии","OM":"Омана","PA":"Панамы","PE":"Перу","PF":"Французской Полинезии","PG":"Папуа – Новой Гвинеи","PH":"Филиппин","PK":"Пакистана","PL":"Польши","PM":"Сен-Пьера и Микелона","PN":"Питкэрна","PR":"Пуэрто-Рико","PS":"Палестинских территорий","PT":"Португалии","PW":"Палау","PY":"Парагвая","QA":"Катара","QO":"Внешней Океании","RE":"Sao Tome \u0026 Principe","REUNION":"Реюниона","RO":"Румынии","RS":"Сербии","RS_AND_M":"Сербии и Македонии","RU":"России","RW":"Руанды","SA":"Саудовской Аравии","SAINT MARTIN":"Сан-Мартина","SB":"Соломоновых о-вов","SC":"Сейшельских о-вов","SCOTLAND":"Шотландии","SD":"Судана","SE":"Швеции","SG":"Сингапура","SH":"О-ва Св. Елены","SI":"Словении","SJ":"Шпицбергена и Ян-Майена","SK":"Словакии","SL":"Сьерра-Леоне","SM":"Сан-Марино","SN":"Сенегала","SO":"Сомали","SOUTH AMERICA":"Южной Америки","SR":"Суринама","SS":"Южного Судана","ST":"Сан-Томе и Принсипи","SV":"Сальвадора","SX":"Синт-Мартена","SY":"Сирии","SZ":"Свазиленда","TA":"Тристан-да-Куньи","TAHITI":"Таити","TC":"О-вов Тёркс и Кайкос","TD":"Чада","TF":"Французских Южных Территорий","TG":"Того","TH":"Таиланда","THAILAND":"Таиланда","TJ":"Таджикистана","TK":"Токелау","TL":"Восточного Тимора","TM":"Туркменистана","TN":"Туниса","TO":"Тонги","TR":"Турции","TT":"Тринидада и Тобаго","TV":"Тувалу","TW":"Тайваня","TZ":"Танзании","UA":"Украины","UG":"Уганды","UM":"Внешних малых о-вов (США)","US":"Соединенных Штатов","UY":"Уругвая","UZ":"Узбекистана","VA":"Ватикана","VC":"Сент-Винсента и Гренадин","VE":"Венесуэлы","VG":"Виргинских о-вов (Британских)","VI":"Виргинских о-вов (США)","VN":"Вьетнама","VU":"Вануату","WALES":"Уэльса","WF":"Уоллиса и Футуны","WORLD":"Мира","WS":"Самоа","XK":"Косово","YE":"Йемена","YT":"Майотты","ZA":"ЮАР","ZANZIBAR":"Занзибара","ZM":"Замбии","ZW":"Зимбабве","ZZ":"Неизвестного региона"},"country":{"Active teams":"Equipos que toman parte en el evento","No active leagues":"No hay ligas activas","No active teams":"No hay órdenes activas","Watch all coefficients":"Ver todos los coeficientes","country_page_leagues_text":"Para comparar los coeficientes de las casas de apuestas, tomando en consideración las tasas de %s, Usted debe escoger la liga que Le interesa en el menu del lado derecho. Después de eso se abre la página con la lista de los partidos y los coeficientes actuales que se refieren a los partidos.","country_page_teams_text":"Calendario de los partidos que deben jugar los partidos %s. Para ver y comparar los coeficientes de los próximos partidos abre la lista emergente con el nombre del equipo que Le interesa.","h1_leagues_text":"Ligas %s %s","h1_teams_text":"Equipos %s %s","leagues":"Ligas %s","show more":"Visualizar más","table":{"Bookmakers count":"Cantidad de las casas de apuestas","Date":"Fecha","Event name":"Nombre del partido","Events count":"Cantidad de eventos","First event":"Primer partido","League":"Liga","Play date":"Fecha del partido","Play time":"Hora del inicio","Score":"Tanteo","Start time":"Inicio del partido"},"teams":"Equipos %s"},"date":{"abbr_day_names":["dom","lun","mar","mié","jue","vie","sáb"],"abbr_month_names":[null,"ene","feb","mar","abr","may","jun","jul","ago","sep","oct","nov","dic"],"day_names":["domingo","lunes","martes","miércoles","jueves","viernes","sábado"],"formats":{"default":"%Y-%m-%d","long":"%-d de %B de %Y","short":"%-d de %b"},"month_names":[null,"enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"],"order":["day","month","year"]},"datetime":{"distance_in_words":{"about_x_hours":{"one":"alrededor de 1 hora","other":"alrededor de %{count} horas"},"about_x_months":{"one":"alrededor de 1 mes","other":"alrededor de %{count} meses"},"about_x_years":{"one":"alrededor de 1 año","other":"alrededor de %{count} años"},"almost_x_years":{"one":"casi 1 año","other":"casi %{count} años"},"half_a_minute":"medio minuto","less_than_x_minutes":{"one":"menos de 1 minuto","other":"menos de %{count} minutos"},"less_than_x_seconds":{"one":"menos de 1 segundo","other":"menos de %{count} segundos"},"over_x_years":{"one":"más de 1 año","other":"más de %{count} años"},"x_days":{"one":"1 día","other":"%{count} días"},"x_minutes":{"one":"1 minuto","other":"%{count} minutos"},"x_months":{"one":"1 mes","other":"%{count} meses"},"x_seconds":{"one":"1 segundo","other":"%{count} segundos"},"x_years":{"one":"1 año","other":"%{count} años"}},"prompts":{"day":"Día","hour":"Hora","minute":"Minutos","month":"Mes","second":"Segundos","year":"Año"}},"devise":{"Change my password":"Modificar la contraseña.","Change your password":"Modificar la contraseña.","Didn't receive confirmation instructions?":"¿Usted no ha recibido las instrucciones relativas a la confirmación de Su contraseña?","Forgot your password?":"¿Usted ha olvidado Su contraseña?","Login":"Entrada.","Remember me":"Memorizarme.","Resend confirmation instructions":"Enviar una vez más las instrucciones relativas a la confirmación de Su contraseña?","Send me reset password instructions":"¡Mandar las instrucciones relativas a la confirmación de Su contraseña!","Sign up":"Registro.","characters minimum":"Número mínimo de las palabras.","confirm new password":"Confirmar la contraseña.","confirmations":{"confirmed":"La dirección de Su correo electrónico ha sido confirmada con éxito.","send_instructions":"Dentro de algunos minutos Usted va a recibir un mensaje enviado a la dirección de Su correo electrónico con las indicaciones relativas a la confirmación de la dirección de Su correo electrónico.","send_paranoid_instructions":"Si Su correo electrónico está incluído en nuestra base de datos, Usted va a recibir una carta con las instrucciones relativas a la confirmación de la dirección de Su correo electrónico."},"email":"Correo.","failure":{"already_authenticated":"Usted ya ha entrado.","deleted_account":"Account with this email address was deleted. If you want recover it please connect with support.","inactive":"Su account todavía no ha sido activada.","invalid":"El login o la contraseña no es valido/a.","last_attempt":"Usted puede probar una vez más antes de que Su account esté bloqueado.","locked":"Su cuenta está bloqueada.","need_to_sign_in":"¡Entre en el sistema para ver esta página!","not_found_in_database":"El login o la contraseña no es valido/a.","timeout":"La conexión ha sido interrumpida. ¡Entre una vez más para continuar!","unauthenticated":"¡Usted debe entrar o efectuar el proceso de registro para poder contunuar!","unconfirmed":"¡Usted debe confirmar la dirección de Su correo electrónico para poder continuar!"},"mailer":{"Change my password":"Modificar la contraseña.","Confirm my account":"¡Confirmar mi cuenta!","Hello":"¡Hola!","If you did not request this, please ignore this email":"Si Usted no lo ha hecho, Usted debe ignorar esta carta.","Someone has requested a link to change your password, and you can do this through the link below":"Alguien (tal vez Usted) ha solicitado el link relativo a la modificación de la contraseña y ahora Usted puede modificarla, empleando el link presentado más abajo.","Welcome":"¡Bienvenidos!","You can confirm your account email through the link below":"Usted puede confirmar Su cuenta, empleando el link presentado.","Your password will not change until you access the link above and create a new one":"Su contraseña no puede ser modificada hasta que Usted no pase, empleando el link presentado abajo, y no cree una contraseña nueva.","confirmation_instructions":{"subject":"Confirmación de los datos"},"password_change":{"subject":"Modificación de la contraseña."},"reset_password_instructions":{"subject":"Instrucciones relativas a la renovación de la contraseña."},"unlock_instructions":{"subject":"Instrucciones relativas al desbloqueo."}},"new password":"Contraseña nueva.","omniauth_callbacks":{"failure":"Usted no puede ser autentificado %{kind} porque \"%{reason}\".","success":"¡Autentificación de la cuenta ha sido efectuada con éxito!"},"password":"Contraseña.","password confirmation":"Confirmación de la contraseña.","passwords":{"no_token":"Usted no puede acceder a esta página si no procede desde la carta de correo electrónico con la contraseña emitida para un reset nuevo. Si Usted procede desde la carta de correo electrónico con la contraseña emitida para un reset nuevo, Usted debe asegurarse de que Usted ha usado en la medida completa el URL integro establecido.","send_instructions":"Dentro de algunos minutos Usted va a recibir una carta, enviada a la dirección de Su  correo electrónico, con las instrucciones relativas a la renovación de Su contraseña.","send_paranoid_instructions":"Si Su correo electrónico está incluído en nuestra base de datos, Usted va a recibir una carta, enviada a la dirección de Su  correo electrónico, con las instrucciones relativas a la renovación de Su contraseña.","updated":"¡Su contraseña de Usted ha sido modificada con éxito!  Ahora Usted ha entrado en el sistema.","updated_not_active":"¡Su contraseña de Usted ha sido modificada con éxito!"},"registrations":{"destroyed":"¡Hasta la próxima! Su account/cuenta ha sido borrado/a. ¡Esperamos que Le reveremos aquí!","signed_up":"¡Bienvenido! Usted ha efectuado con exito Su registro.","signed_up_but_inactive":"¡Usted ha efectuado Su registro con exito, mas Usted no puede entrar, ya que Su cuenta no está activada!","signed_up_but_locked":"¡Usted ha efectuado Su registro con exito, mas nosotros no podemos registrarLe, ya que Su cuenta  está bloqueada!","signed_up_but_unconfirmed":"Acabamos de enviarLe, a Su correo electrónico una carta con el link emitido para la confirmación. ¡Presione el link para confirmar Su cuenta!","update_needs_confirmation":"Usted ha efectuado con exito la actualización de Su cuenta, mas nosotros debemos verificar la  dirección  nueva de Su correo electrónico. Controle Su correo electrónico y siga el link de confirmación para confirmar la dirección  nueva de Su correo electrónico.","updated":"¡Su cuenta de Usted ha sido renovada con éxito!"},"sessions":{"already_signed_out":"¡Usted ha quitado el sistema con éxito!","signed_in":"¡Usted ha entrado en el sistema con éxito!","signed_out":"¡Usted ha quitado el sistema con éxito!"},"unlocks":{"send_instructions":"Dentro de algunos minutos Usted va a recibir una carta, enviada a la dirección de Su  correo electrónico,con las instrucciones relativas a la renovación de Su cuenta.","send_paranoid_instructions":"Si la dirección de Su correo electrónico está incluída en nuestra base de datos, dentro de algunos minutos Usted va a recibir una carta con el link para la renovación de Su cuenta","unlocked":"¡Su cienta ha sido desbloqueada con éxito! ¡Entre para continuar!"}},"errors":{"format":"%{attribute} %{message}","messages":{"accepted":"debe ser aceptado","already_confirmed":"ya ha sido confirmada. ¡Tente a entrar!","blank":"no puede estar en blanco","changes_saved":"Modificaciones son guardadas","confirmation":"no coincide","confirmation_period_expired":"debe ser confirmada dentro de  %{period}, haga la solicitud de una nueva","empty":"no puede estar vacío","entered_email":"La dirección del  correo electrónico ha sido usada para acceder a la cuenta que había sido borrada. ¡Contacte con nosotros para renovar Su cuenta! ","equal_to":"debe ser igual a %{count}","even":"debe ser par","exclusion":"está reservado","expired":"ha caducado, haga la solicitud de una nueva","greater_than":"debe ser mayor que %{count}","greater_than_or_equal_to":"debe ser mayor que o igual a %{count}","inclusion":"no está incluido en la lista","invalid":"no es válido","less_than":"debe ser menor que %{count}","less_than_or_equal_to":"debe ser menor que o igual a %{count}","model_invalid":"La validación falló: %{errors}","not_a_number":"no es un número","not_an_integer":"debe ser un entero","not_found":"no ha sido encontrada","not_locked":"no ha sido bloqueada","not_saved":{"one":"1 error no ha permitido a este  %{resource} ser guardada:","other":"%{count} errores no han permitido a este   %{resource} ser guardada:"},"odd":"debe ser impar","other_than":"debe ser distinto de %{count}","please_select_bk":"Seleccione por lo menos una casa de apuestas","present":"debe estar en blanco","required":"debe existir","send_instruction_reset_pass":"¡Usted va a recibir una carta electrónica con las instrucciones acerca de como efectuar un envío de la contraseña dentro de algunos minutos!","taken":"ya está en uso","too_long":{"one":"es demasiado largo (1 carácter máximo)","other":"es demasiado largo (%{count} caracteres máximo)"},"too_short":{"one":"es demasiado corto (1 carácter mínimo)","other":"es demasiado corto (%{count} caracteres mínimo)"},"wrong_length":{"one":"no tiene la longitud correcta (1 carácter exactos)","other":"no tiene la longitud correcta (%{count} caracteres exactos)"}},"template":{"body":"Se encontraron problemas con los siguientes campos:","header":{"one":"No se pudo guardar este/a %{model} porque se encontró 1 error","other":"No se pudo guardar este/a %{model} porque se encontraron %{count} errores"}}},"event":{"Close":"Close","Colorful labels":"Etiquetas coloradas","Draw":"Partido empatado","Highest":"El más alto","Matrix":"Matriz","Open":"Open","Value bets":"Apuestas con desbalances","Valuebets":"Apuestas con desbalances","Visit it":"Pasar a los coeficientes live","event-page-description":"Coeficientes propuestos por las casas de apuestas a los resultados diferentes \u003cspan class=bold\u003e%s\u003c/span\u003e con más de 79 casas de apuestas.","match":"del partido","match ended":"Partido ha sido acabado %s","match is in live":"Partido ha sido iniciado","match_18":"del encuentro de lospúgiles o de los atletas","match_25":"de la carrera","match_30":"de la carrera de los atletas","match_31":"de la carrera","nav":{"11_s":{"correct_score":"Tanteo exacto","frames":"Partida","handicaps":"Hándicaps","main":"Principal","totals":"Totales"},"12_s":{"correct_score":"Tanteo exacto","handicaps":"Hándicaps","main":"Principal","sets":"Sets","totals":"Totales"},"13_s":{"correct_score":"Tanteo exacto","handicaps":"Hándicaps","main":"Principal","sets":"Sets","totals":"Totales"},"14_s":{"correct_score":"Tanteo exacto","handicaps":"Hándicaps","main":"Principal","sets":"Sets","totals":"Total"},"15_s":{"halfs":"Mitad","handicaps":"Hándicaps","main":"Principal","totals":"Totales"},"16_s":{"halfs":"Mitades","handicaps":"Hándicaps","main":"Principal","totals":"Totales"},"17_s":{"halfs":"Mitad","handicaps":"Hándicaps","main":"Principal","totals":"Totales"},"18_s":{"main":"Principal","totals":"Totales"},"19_s":{"halfs":"Mitad","handicaps":"Hándicaps","main":"Principal","totals":"Total"},"1_s":{"half":"Mitad","handicaps":"Hándicaps","innings":"Entrada","main":"Principal","totals":"Totales"},"23_s":{"halfs":"Mitad","handicaps":"Hándicaps","main":"Principal","totals":"Total"},"29_s":{"correct_score":"Tanteo exacto","halfs":"Mitad","handicaps":"Hándicaps","main":"Principal","totals":"Total"},"2_s":{"halfs":"Mitades","handicaps":"Hándicaps","innings":"Entrada","main":"Principal","quarters":"Cuartos","totals":"Totales"},"30_s":{"winner":"Ganador"},"31_s":{"head_to_head":"Head to Head","podium":"Podium","winner":"Winner"},"4_s":{"halfs":"Mitad","handicaps":"Hándicaps","main":"Principal","totals":"Totales"},"5_s":{"halfs":"Mitad","handicaps":"Hándicaps","main":"Principal","totals":"Totales"},"6_s":{"correct_score":"Tanteo exacto","handicaps":"Hándicaps","main":"Principal","periods":"Periodos","totals":"Totales"},"7_s":{"goals":"Goles","half":"Mitad","halfs":"Mitad","handicaps":"Hándicaps","main":"Principal","statistics":"Estadística"},"8_s":{"correct_score":"Tanteo exacto","handicaps":"Puntos de ventaja","home_away":"Ganador","sets":"Sets","totals":"Totales"},"9_s":{"correct_score":"Tanteo exacto","handicaps":"Hándicaps","main":"Principal","sets":"Sets","totals":"Totales"},"close":"Cerrar","open":"Abrir"},"not lay":"Por.","with a score":"con el tanteo","with lay":"Contra.","Лучшие коэффициенты":"Coeficientes mejores"},"events":{"Live Odds":"Coeficientes live","Next Matches":"Próximos partidos","Popular Matches":"Partidos populares","Surebets":"Apuestas cruzadas en el régimen prematch"},"events_grid":{"1":1,"2":2,"F1":1,"F2":2,"Hand":"Puntos de ventaja","ML1":1,"ML2":2,"PL1-N":"PL1-N","PL1-Y":"PL1-Y","PL1_3-N":"PL1_3-N","PL1_3-Y":"PL1_3-Y","TO":"Más","TU":"Menos","Total":"Total","X":"X","events":"EVENTOS","score":"TANTEO","valF1":"Puntos de ventaja","valF2":"Puntos de ventaja","valT":"Total"},"footer":{"bookmakers":"de las casas de apuestas","legal_info":"Copyright © 2019 Oddsfan, todos los derechos son reservados. Este programa es ofrecido en forma de un acto de buena voluntad, pues todo tipo de ultraje es castigado en conformidad con las normas de la legislación internacional vigente.","sport markets":"de los mercados","sports":"de los deportes"},"global":{"Get the best odds Kick-off at":"Recibir los coeficientes mejores. Inicio a las","Home":"Home","Login":"Entrada","Logout":"Quitar","My account":"Mi cuenta","PAYOUT":"Pago","Register":"Proceso de registro","Soccer":"Fútbol","Today":"Hoy","Toggle Menu":"Menu","Tomorrow":"Mañana","Yesterday":"Ayer","anonces":"Match previews","betting odds comparison":"odds comparison service","bookmakers":"casas de apuestas","calendar":"Event Calendar","check_all_bk":"Seleccionar todo","coming soon":"dentro de poco en el sitio","country_page_text":"Aquí Usted encontrará los coeficientes mejores propuestos por las casas de apuestas para un montón de partidos de fútbol %s con más de  %s de las casas de apuestas.","horizontal mode":"en el régimen horizontal de visualización","koefs":"Odds","league_h1_text":"%s","league_page_text":"%s: aquí Usted encontrará una lista de todos los partidos accesibles de la liga seleccionada a los cuales se puede apostar en las 78 casas de apuestas presentes. Para comparar los coeficientes pasar a la página de comparación, haciendo un click en el nombre del evento que Le interesa.","open":"abrir","or":"o","please":"Porfavor,","return the phone":"gire el teléfono","sports":"Disciplinas deportivas","standings":"Standings","successfully saved":"Modificaciones son guardadas","world_champions":"WC 2018"},"header":{"SEARCH":"Eventos, rivales...","choose_bookmakers":"Seleccionar las casas de apuestas","choose_league":"Seleccionar la liga","mail_subject":"Pregunta de"},"helpers":{"select":{"prompt":"Por favor seleccione"},"submit":{"create":"Crear %{model}","submit":"Guardar %{model}","update":"Actualizar %{model}"}},"languages":{"de":"DE","en":"ENG","esr":"ESP","fra":"FRA","lang":"Idioma","language":"Idioma","ru":"RUS"},"market_variation_full_name":{"1ACE-ML1":"Player1 - 1st Ace","1ACE-ML2":"Player2 - 1st Ace","1BR-1":"Player1 - 1st Break","1BR-2":"Player2 - 1st Break","1BR-ML1":"Player1 - 1st Break","1BR-ML2":"Player2 - 1st Break","1BR-X":"No break - 1st Break","1CNR-1":"Team1 - 1st corner","1CNR-2":"Team2 - 1st corner","1CNR-ML1":"Team1 - 1st corner","1CNR-ML2":"Team2 - 1st corner","1CNR-X":"No corners","1DBF-ML1":"Player1 - 1st Double Fault","1DBF-ML2":"Player2 - 1st Double Fault","1OFS-1":"Team1 - 1st offside","1OFS-2":"Team2 - 1st offside","1OFS-ML1":"Team1 - 1st offside","1OFS-ML2":"Team2 - 1st offside","1OFS-X":"No offsides","1SER_F-F1":"Asian Handicap1(%s) - 1st Serve","1SER_F-F2":"Asian Handicap2(%s) - 1st Serve","1SER_OU1-TO":"Total Over(%s) for Team1 - 1st Serve","1SER_OU1-TU":"Total Under(%s) for Team1 - 1st Serve","1SER_OU2-TO":"Total Over(%s) for Team2 - 1st Serve","1SER_OU2-TU":"Total Under(%s) for Team2 - 1st Serve","1SUBS-ML1":"Team1 - 1st subs","1SUBS-ML2":"Team2 - 1st subs","1X2-1":"1","1X2-2":"2","1X2-X":"X","1YC-1":"Team1 - 1st Yellow Card","1YC-2":"Team2 - 1st Yellow Card","1YC-ML1":"Team1 - 1st Yellow Card","1YC-ML2":"Team2 - 1st Yellow Card","1YC-X":"No Yellow Card","60SET-N":"6-0 Set - no","60SET-Y":"6-0 Set - yes","ACE_F-F1":"Asian Handicap1(%s) - Aces","ACE_F-F2":"Asian Handicap2(%s) - Aces","ACE_OU-TO":"Total Over(%s) - Aces","ACE_OU-TU":"Total Under(%s) - Aces","ACE_OU1-TO":"Total Over(%s) for Team1 - Aces","ACE_OU1-TU":"Total Under(%s) for Team1 - Aces","ACE_OU2-TO":"Total Over(%s) for Team2 - Aces","ACE_OU2-TU":"Total Under(%s) for Team2 - Aces","ADDED_EG-EG":"Exact (%s) - Added time","ADDED_EG-EG_N":"Exact (%s) - Added time - no","ADDED_OU-TO":"Total Over(%s) - Added time","ADDED_OU-TU":"Total Under(%s) - Added time","BHO-N":"Both halves \u003e 1.5 goals - no","BHO-Y":"Both halves \u003e 1.5 goals - yes","BHU-N":"Both halves \u003c 1.5 goals - no","BHU-Y":"Both halves \u003c 1.5 goals - yes","BTS-N":"One scoreless","BTS-OTS_Y":"Only one to score","BTS-Y":"Ambos equipos anotan","BTSD-N":"Both To Score and Draw - no","BTSD-Y":"Both To Score and Draw - yes","BTSW1-N":"Both To Score and W1 - no","BTSW1-Y":"Both To Score and W1 - yes","BTSW2-N":"Both To Score and W2 - no","BTSW2-Y":"Both To Score and W2 - yes","CNR_1X2-1":"1 - Corners","CNR_1X2-2":"2 - Corners","CNR_1X2-X":"X - Corners","CNR_DC-12":"12 - Corners","CNR_DC-1X":"1X - Corners","CNR_DC-X2":"X2 - Corners","CNR_F-F1":"Handicap 1(%s) - Corners","CNR_F-F2":"Handicap 2(%s) - Corners","CNR_OE-EVEN":"Par - Corners","CNR_OE-ODD":"Impar - Corners","CNR_OU-TO":"Total Más de(%s) - Corners","CNR_OU-TU":"Total Menos de(%s) - Corners","CNR_OU1-TO":"Total Más de(%s) equipo 1 - Corners","CNR_OU1-TU":"Total Menos de(%s) equipo 1 - Corners","CNR_OU2-TO":"Total Más de(%s) equipo 2 - Corners","CNR_OU2-TU":"Total Menos de(%s) equipo 2 - Corners","CS-CS":"Marcador correcto (%s)","CS-CS_N":"Marcador correcto (%s) - ni","DBF_F-F1":"Asian Handicap1(%s) - Double Faults","DBF_F-F2":"Asian Handicap2(%s) - Double Faults","DBF_OU-TO":"Total Over(%s) - Double Faults","DBF_OU-TU":"Total Under(%s) - Double Faults","DBF_OU1-TO":"Total Over(%s) for Team1 - Double Faults","DBF_OU1-TU":"Total Under(%s) for Team1 - Double Faults","DBF_OU2-TO":"Total Over(%s) for Team2 - Double Faults","DBF_OU2-TU":"Total Under(%s) for Team2 - Double Faults","DBH-N":"empate en dos mitades - ni","DBH-Y":"empate en dos mitades - tan","DBL-N":"Double - no","DBL-Y":"Double - yes","DC-12":"12","DC-1X":"1X","DC-X2":"X2","DEH-N":"Draw in either half - no","DEH-Y":"Draw in either half - yes","DNB-DNB1":"Handicap 1(0)/Empate apuesta no valida","DNB-DNB2":"Handicap 2(0)/Empate apuesta no valida","DTO-N":"empate y Total Más de(2.5) - ni","DTO-Y":"empate y Total Más de(2.5) - tan","DTU-N":"empate y Total Menos de(2.5) - ni","DTU-Y":"empate y Total Menos de(2.5) - tan","EG-EG":"Exact (%s)","EG-EG_N":"Exact (%s) - no","EG1-EG":"Exact (%s) for Team1","EG1-EG_N":"Exact (%s) for Team1 - no","EG2-EG":"Exact (%s) for Team2","EG2-EG_N":"Exact (%s) for Team2 - no","EH-EH1":"European Handicap1(%s)","EH-EH2":"European Handicap2(%s)","EH-EHX":"European HandicapX(%s)","ERR_OU-TO":"Total Más de(%s) - Errores","ERR_OU-TU":"Total Menos de(%s) - Errores","F-F1":"Handicap 1(%s)","F-F2":"Handicap 2(%s)","FG-1":"Team1 - 1st goal","FG-2":"Team2 - 1st goal","FG-ML1":"Team1 - 1st goal (draw no bet)","FG-ML2":"Team2 - 1st goal (draw no bet)","FG-X":"No goal","FOUL_1X2-1":"1 - Falta","FOUL_1X2-2":"2 - Falta","FOUL_1X2-X":"X - Falta","FOUL_DC-12":"12 - Falta","FOUL_DC-1X":"1X - Falta","FOUL_DC-X2":"X2 - Falta","FOUL_F-F1":"Handicap 1(%s) - Falta","FOUL_F-F2":"Handicap 2(%s) - Falta","FOUL_OE-EVEN":"Par - Falta","FOUL_OE-ODD":"Impar - Falta","FOUL_OU-TO":"Total Más de(%s) - Falta","FOUL_OU-TU":"Total Menos de(%s) - Falta","FOUL_OU1-TO":"Total Más de(%s) equipo 1 - Falta","FOUL_OU1-TU":"Total Menos de(%s) equipo 1 - Falta","FOUL_OU2-TO":"Total Más de(%s) equipo 2 - Falta","FOUL_OU2-TU":"Total Menos de(%s) equipo 2 - Falta","GBH-N":"Goals in both halves - no","GBH-Y":"Goals in both halves - yes","GBH1-N":"Equipo 1 - Anotará en ambas mitades - ni","GBH1-Y":"Equipo 1 - Anotará en ambas mitades - tan","GBH2-N":"Equipo 2 - Anotará en ambas mitades - ni","GBH2-Y":"Equipo 2 - Anotará en ambas mitades - tan","HH-ML1":"Ganador del partido equipo 1","HH-ML2":"Ganador del partido equipo 2","HIT_1X2-1":"1 - Hits","HIT_1X2-2":"2 - Hits","HIT_1X2-X":"X - Hits","HIT_F-F1":"Handicap 1(%s) - Hits","HIT_F-F2":"Handicap 2(%s) - Hits","HIT_OU-TO":"Total Más de(%s) - Hits","HIT_OU-TU":"Total Menos de(%s) - Hits","HIT_OU1-TO":"Total Más de(%s) equipo 1 - Hits","HIT_OU1-TU":"Total Menos de(%s) equipo 1 - Hits","HIT_OU2-TO":"Total Más de(%s) equipo 2 - Hits","HIT_OU2-TU":"Total Menos de(%s) equipo 2 - Hits","HMG-1":"More goals in the 1st half","HMG-2":"More goals in the 2nd half","HMG-ML1":"1 half most goals (draw no bet)","HMG-ML2":"2 half most goals (draw no bet)","HMG-X":"Equal goals in halves","HTFT-1_1":"01.янв","HTFT-1_1_N":"1/1 - ni","HTFT-1_2":"01.фев","HTFT-1_2_N":"1/2 - ni","HTFT-1_X":"1/X","HTFT-1_X_N":"1/X - ni","HTFT-2_1":"02.янв","HTFT-2_1_N":"2/1 - ni","HTFT-2_2":"02.фев","HTFT-2_2_N":"2/2 - ni","HTFT-2_X":"2/X","HTFT-2_X_N":"2/X - ni","HTFT-X_1":"X/1","HTFT-X_1_N":"X/1 - ni","HTFT-X_2":"X/2","HTFT-X_2_N":"X/2 - ni","HTFT-X_X":"X/X","HTFT-X_X_N":"X/X - ni","HTR-N":"Hattrick - no","HTR-Y":"Hattrick - yes","LCNR-1":"Team1 - Last corner","LCNR-2":"Team2 - Last corner","LCNR-ML1":"Team1 - Last corner","LCNR-ML2":"Team2 - Last corner","LCNR-X":"No corners","LG-1":"Team1 - Last goal","LG-2":"Team2 - Last goal","LG-ML1":"Team1 - Last goal (draw no bet)","LG-ML2":"Team2 - Last goal (draw no bet)","LG-X":"No goal","LOFS-1":"Team1 - Last offside","LOFS-2":"Team2 - Last offside","LOFS-ML1":"Team1 - Last offside","LOFS-ML2":"Team2 - Last offside","LOFS-X":"No offsides","LSUBS-ML1":"Team1 - Last subs","LSUBS-ML2":"Team2 - Last subs","LYC-1":"Team1 - Last Yellow Card","LYC-2":"Team2 - Last Yellow Card","LYC-ML1":"Team1 - Last Yellow Card","LYC-ML2":"Team2 - Last Yellow Card","LYC-X":"No Yellow Card","ML-ML1":"Ganador del partido equipo 1","ML-ML1-30":"1er lugar - tan","ML-ML2":"Ganador del partido equipo 2","ML-ML2-30":"1er lugar - ni","NB1-ML1":"Home No Bet - No W2","NB1-ML2":"Home No Bet - W2","NB1-MLX":"Home No Bet - Draw","NB1-MLX_N":"Home No Bet - No Draw","NB2-ML1":"Away No Bet - W1","NB2-ML2":"Away No Bet - No W1","NB2-MLX":"Away No Bet - Draw","NB2-MLX_N":"Away No Bet - No Draw","NG-1":"Team1 - Next goal","NG-2":"Team2 - Next goal","NG-ML1":"Team1 - Next goal (draw no bet)","NG-ML2":"Team2 - Next goal (draw no bet)","NG-X":"No next goal","OE-EVEN":"Par","OE-ODD":"Impar","OFS_1X2-1":"1 - Offsides","OFS_1X2-2":"2 - Offsides","OFS_1X2-X":"X - Offsides","OFS_DC-12":"12 - Offsides","OFS_DC-1X":"1X - Offsides","OFS_DC-X2":"X2 - Offsides","OFS_F-F1":"Handicap 1(%s) - Offsides","OFS_F-F2":"Handicap 2(%s) - Offsides","OFS_OE-EVEN":"Par - Offsides","OFS_OE-ODD":"Impar - Offsides","OFS_OU-TO":"Total Más de(%s) - Offsides","OFS_OU-TU":"Total Menos de(%s) - Offsides","OFS_OU1-TO":"Total Más de(%s) equipo 1 - Offsides","OFS_OU1-TU":"Total Menos de(%s) equipo 1 - Offsides","OFS_OU2-TO":"Total Más de(%s) equipo 2 - Offsides","OFS_OU2-TU":"Total Menos de(%s) equipo 2 - Offsides","OG-N":"Gol en propia meta ni","OG-Y":"Gol en propia meta - tan","OT-N":"El partido irá a la prórroga - ni","OT-Y":"El partido irá a la prórroga - tan","OU-TO":"Total Más de(%s)","OU-TU":"Total Menos de(%s)","OU1-TO":"Total Más de(%s) equipo 1","OU1-TU":"Total Menos de(%s) equipo 1","OU2-TO":"Total Más de(%s) equipo 2","OU2-TU":"Total Menos de(%s) equipo 2","PEN-N":"penalti - ni","PEN-Y":"penalti - tan","PL1-N":"1er lugar - ni","PL1-Y":"1er lugar - tan","PL1_3-N":"1 -3er lugar - ni","PL1_3-Y":"1 -3er lugar - tan","POS_1X2-1":"1 - Control del balón","POS_1X2-2":"2 - Control del balón","POS_1X2-X":"X - Control del balón","POS_DC-12":"12 - Control del balón","POS_DC-1X":"1X - Control del balón","POS_DC-X2":"X2 - Control del balón","POS_F-F1":"Handicap 1(%s) - Control del balón","POS_F-F2":"Handicap 2(%s) - Control del balón","POS_OU1-TO":"Total Más de(%s) equipo 1 - Control del balón","POS_OU1-TU":"Total Menos de(%s) equipo 1 - Control del balón","POS_OU2-TO":"Total Más de(%s) equipo 2 - Control del balón","POS_OU2-TU":"Total Menos de(%s) equipo 2 - Control del balón","RACE10-1":"Gara ai 10 punti - equipo 1","RACE10-2":"Gara ai 10 punti - equipo 2","RACE10-ML1":"Gara ai 10 punti - equipo 1","RACE10-ML2":"Gara ai 10 punti - equipo 2","RACE10-X":"Gara ai 10 punti - nadie","RACE15-1":"Gara ai 15 punti - equipo 1","RACE15-2":"Gara ai 15 punti - equipo 2","RACE15-ML1":"Gara ai 15 punti - equipo 1","RACE15-ML2":"Gara ai 15 punti - equipo 2","RACE15-X":"Gara ai 15 punti - nadie","RACE2-1":"Gara ai 2 punti - equipo 1","RACE2-2":"Gara ai 2 punti - equipo 2","RACE2-ML1":"Gara ai 2 punti - equipo 1","RACE2-ML2":"Gara ai 2 punti - equipo 2","RACE2-X":"Gara ai 2 punti - nadie","RACE20-1":"Gara ai 20 punti - equipo 1","RACE20-2":"Gara ai 20 punti - equipo 2","RACE20-ML1":"Gara ai 20 punti - equipo 1","RACE20-ML2":"Gara ai 20 punti - equipo 2","RACE20-X":"Gara ai 20 punti - nadie","RACE3-1":"Gara ai 3 punti - equipo 1","RACE3-2":"Gara ai 3 punti - equipo 2","RACE3-ML1":"Gara ai 3 punti - equipo 1","RACE3-ML2":"Gara ai 3 punti - equipo 2","RACE3-X":"Gara ai 3 punti - nadie","RACE4-1":"Gara ai 4 punti - equipo 1","RACE4-2":"Gara ai 4 punti - equipo 2","RACE4-ML1":"Gara ai 4 punti - equipo 1","RACE4-ML2":"Gara ai 4 punti - equipo 2","RACE4-X":"Gara ai 4 punti - nadie","RACE5-1":"Gara ai 5 punti - equipo 1","RACE5-2":"Gara ai 5 punti - equipo 2","RACE5-ML1":"Gara ai 5 punti - equipo 1","RACE5-ML2":"Gara ai 5 punti - equipo 2","RACE5-X":"Gara ai 5 punti - nadie","RC-N":"roja obtenida - ni","RC-Y":"roja obtenida - tan","RHE_OU-TO":"Total Más de(%s) - Hits+Errores+Runs","RHE_OU-TU":"Total Menos de(%s) - Hits+Errores+Runs","SD-N":"Score Draw - no","SD-Y":"Score Draw - yes","SET_CS-SET_CS":"Marcador correcto (%s) - Set","SET_CS-SET_CS_N":"Marcador correcto (%s) - Set - ni","SET_EG-EG":"Exact (%s) - Sets","SET_EG-EG_N":"Exact (%s) - Sets - no","SET_F-SET_F1":"Handicap 1(%s) - Set","SET_F-SET_F2":"Handicap 2(%s) - Set","SET_OU-SET_TO":"Total Más de(%s) - Set","SET_OU-SET_TU":"Total Menos de(%s) - Set","SHOT_1X2-1":"1 - Tiros a puerta","SHOT_1X2-2":"2 - Tiros a puerta","SHOT_1X2-X":"X - Tiros a puerta","SHOT_DC-12":"12 - Tiros a puerta","SHOT_DC-1X":"1X - Tiros a puerta","SHOT_DC-X2":"X2 - Tiros a puerta","SHOT_F-F1":"Handicap 1(%s) - Tiros a puerta","SHOT_F-F2":"Handicap 2(%s) - Tiros a puerta","SHOT_OE-EVEN":"Par - Tiros a puerta","SHOT_OE-ODD":"Impar - Tiros a puerta","SHOT_OU-TO":"Total Más de(%s) - Tiros a puerta","SHOT_OU-TU":"Total Menos de(%s) - Tiros a puerta","SHOT_OU1-TO":"Total Más de(%s) equipo 1 - Tiros a puerta","SHOT_OU1-TU":"Total Menos de(%s) equipo 1 - Tiros a puerta","SHOT_OU2-TO":"Total Más de(%s) equipo 2 - Tiros a puerta","SHOT_OU2-TU":"Total Menos de(%s) equipo 2 - Tiros a puerta","SUBS_OU-TO":"Total Over(%s) - Subs","SUBS_OU-TU":"Total Under(%s) - Subs","SUBS_OU1-TO":"Total Over(%s) for Team1 - Subs","SUBS_OU1-TU":"Total Under(%s) for Team1 - Subs","SUBS_OU2-TO":"Total Over(%s) for Team2 - Subs","SUBS_OU2-TU":"Total Under(%s) for Team1 - Subs","SWS-N":"A sub will score - no","SWS-Y":"A sub will score - yes","TB-TO":"Total Más de(%s) - Tie break","TB-TU":"Total Menos de(%s) - Tie break","TIME_FG-1":"1st goal - 1 half","TIME_FG-2":"1st goal - 2 half","TIME_FG-X":"No goal","TIME_SUBS-1":"1st substitution - 1 half","TIME_SUBS-2":"1st substitution - 2 half","TIME_SUBS-X":"1st substitution - intermission","TOX1-N":"1X y Total Más de(2.5) - ni","TOX1-Y":"1X y Total Más de(2.5) - tan","TOX2-N":"X2 y Total Más de(2.5) - ni","TOX2-Y":"X2 y Total Más de(2.5) - tan","TUX1-N":"1X y Total Menos de(2.5) - ni","TUX1-Y":"1X y Total Menos de(2.5) - tan","TUX2-N":"X2 y Total Menos de(2.5) - ni","TUX2-Y":"X2 y Total Menos de(2.5) - tan","W1G1-N":"Victoria por delante 1 Goles- equipo 1 - ni","W1G1-Y":"Victoria por delante 1 Goles- equipo 1 - tan","W1G2-N":"Victoria por delante 1 Goles- equipo 2 - ni","W1G2-Y":"Victoria por delante 1 Goles- equipo 2 - tan","W2G1-N":"Victoria por delante 2 Goles- equipo 1 - ni","W2G1-Y":"Victoria por delante 2 Goles- equipo 1 - tan","W2G2-N":"Victoria por delante 2 Goles- equipo 2 - ni","W2G2-Y":"Victoria por delante 2 Goles - equipo 2 - tan","W3G1-N":"Victoria por delante 3 Goles- equipo 1 - ni","W3G1-Y":"Victoria por delante 3 Goles - equipo 1 - tan","W3G2-N":"Victoria por delante 3 Goles- equipo 2 - ni","W3G2-Y":"Victoria por delante 3 Goles- equipo 2 - tan","WBH1-N":"Ganador del partido equipo 1 Ganará ambas mitades - ni","WBH1-Y":"Ganador del partido equipo 1 Ganará ambas mitades - tan","WBH2-N":"Ganador del partido equipo 2 Ganará ambas mitades - ni","WBH2-Y":"Ganador del partido equipo 2 Ganará ambas mitades - tan","WEH1-N":"Equipo 1 Ganará cualquier mitad - ni","WEH1-Y":"Equipo 1 Ganará cualquier mitad - tan","WEH2-N":"Equipo 2 Ganará cualquier mitad - ni","WEH2-Y":"Equipo 2 Ganará cualquier mitad - tan","WFB-N":"Win From Behind - no","WFB-Y":"Win From Behind - yes","WFB1-N":"Team1 to Win From Behind - no","WFB1-Y":"Team1 to Win From Behind - yes","WFB2-N":"Team2 to Win From Behind - no","WFB2-Y":"Team2 to Win From Behind - yes","WTN1-N":"Equipo 1 ganará a cero - ni","WTN1-Y":"Equipo 1 ganará a cero - tan","WTN2-N":"Equipo 2 ganará a cero - ni","WTN2-Y":"Equipo 2 ganará a cero - tan","WTO1-N":"Ganador del partido equipo 1 y Total Más de(2.5) - ni","WTO1-Y":"Ganador del partido equipo 1 y Total Más de(2.5) - tan","WTO2-N":"Ganador del partido equipo 2 y Total Más de(2.5) - ni","WTO2-Y":"Ganador del partido equipo 2 y Total Más de(2.5) - tan","WTU1-N":"Ganador del partido equipo 1 y Total Menos de(2.5) - ni","WTU1-Y":"Ganador del partido equipo 1 y Total Menos de(2.5) - tan","WTU2-N":"Ganador del partido equipo 2 y Total Menos de(2.5) - ni","WTU2-Y":"Ganador del partido equipo 2 y Total Menos de(2.5) - tan","YC_1X2-1":"1 - Las tarjetas amarillas","YC_1X2-2":"2 - Las tarjetas amarillas","YC_1X2-X":"X - Las tarjetas amarillas","YC_DC-12":"12 - Las tarjetas amarillas","YC_DC-1X":"1X - Las tarjetas amarillas","YC_DC-X2":"X2 - Las tarjetas amarillas","YC_F-F1":"Handicap 1(%s) - Las tarjetas amarillas","YC_F-F2":"Handicap 2(%s) - Las tarjetas amarillas","YC_OE-EVEN":"Par - Las tarjetas amarillas","YC_OE-ODD":"Impar - Las tarjetas amarillas","YC_OU-TO":"Total Más de(%s) - Las tarjetas amarillas","YC_OU-TU":"Total Menos de(%s) - Las tarjetas amarillas","YC_OU1-TO":"Total Más de(%s) equipo 1 - Las tarjetas amarillas","YC_OU1-TU":"Total Menos de(%s) equipo 1 - Las tarjetas amarillas","YC_OU2-TO":"Total Más de(%s) equipo 2 - Las tarjetas amarillas","YC_OU2-TU":"Total Menos de(%s) equipo 2 - Las tarjetas amarillas"},"markets":{"1":{"-1 F":"Handicap","-1 F more":"Handicap (adicional)","-1 ML":"Ganador del partido","-1 OU":"Más de/ Menos de","-1 OU more":"Más de/ Menos de (adicional)","-1 OU1":"Equipo 1 - Total de goles","-1 OU1 more":"Equipo 1 - Total de goles (adicional)","-1 OU2":"Equipo 2 - Total de goles","-1 OU2 more":"Equipo 2 - Total de goles (adicional)","-100 ML":"Se clasificara","0 1X2":"1X2","1 1X2":"1X2 [1 entrada]","1 F":"Handicap [1 entrada]","1 F more":"Handicap [1 entrada] (adicional)","1 OU":"Más de/ Menos de [1 entrada]","1 OU more":"Más de/ Menos de [1 entrada] (adicional)","2 1X2":"1X2 [2 entrada]","2 F":"Handicap [2 entrada]","2 F more":"Handicap [2 entrada] (adicional)","2 OU":"Más de/ Menos de [2 entrada]","2 OU more":"Más de/ Menos de [2 entrada] (adicional)","3 1X2":"1X2 [3 entrada]","3 F":"Handicap [3 entrada]","3 F more":"Handicap [3 entrada] (adicional)","3 OU":"Más de/ Menos de [3 entrada]","3 OU more":"Más de/ Menos de [3 entrada] (adicional)"},"11":{"0 CS":"Marcador correcto","0 F":"Handicap","0 F more":"Handicap (adicional)","0 ML":"Ganador del partido","0 OU":"Más de/ Menos de","0 OU more":"Más de/ Menos de (adicional)","1 ML":"Ganador del partido [1 partida]","2 ML":"Ganador del partido [2 partida]","3 ML":"Ganador del partido [3 partida]"},"12":{"0 CS":"Marcador correcto","0 F":"Handicap","0 F more":"Handicap (adicional)","0 ML":"Ganador del partido","0 OU":"Más de/ Menos de","0 OU more":"Más de/ Menos de (adicional)","0 OU1":"Equipo 1 - Total de goles","0 OU2":"Equipo 2 - Total de goles","1 ML":"Ganador del partido [1 set]","2 ML":"Ganador del partido [2 set]","3 ML":"Ganador del partido [3 set]"},"13":{"-1 CS":"Marcador correcto","-1 F":"Handicap","-1 F more":"Handicap (adicional)","-1 ML":"Ganador del partido","-1 OU":"Más de/ Menos de","-1 OU more":"Más de/ Menos de (adicional)","1 ML":"Ganador del partido [1 set]","2 ML":"Ganador del partido [2 set]","3 ML":"Ganador del partido [3 set]"},"14":{"0 CS":"Marcador correcto","0 F":"Handicap","0 F more":"Handicap (adicional)","0 ML":"Ganador del partido","0 OU":"Más de/ Menos de","0 OU more":"Más de/ Menos de (adicional)","1 ML":"Ganador del partido [1 set]","2 ML":"Ganador del partido [2 set]","3 ML":"Ganador del partido [3 set]"},"15":{"-100 ML":"Se clasificara","0 1X2":"1X2","0 F":"Handicap","0 F more":"Handicap (adicional)","0 OU":"Más de/ Menos de","0 OU more":"Más de/ Menos de (adicional)","0 OU1":"Equipo 1 - Total de goles","0 OU1 more":"Equipo 1 - Total de goles (adicional)","0 OU2":"Equipo 2 - Total de goles","0 OU2 more":"Equipo 2 - Total de goles (adicional)","1 1X2":"1X2[1 mitad]","1 F":"Handicap [1 mitad]","1 F more":"Handicap [1 mitad](adicional)","1 OU":"Más de/ Menos de [1 mitad]","1 OU more":"Más de/ Menos de [1 mitad] (adicional)","2 1X2":"1X2[2 mitad]","2 F":"Handicap [2 mitad]","2 F more":"Handicap [2 mitad](adicional)","2 OU":"Más de/ Menos de [2 mitad]","2 OU more":"Más de/ Menos de [2 mitad] (adicional)"},"16":{"-100 ML":"Se clasificara","0 1X2":"1X2","0 F":"Handicap","0 F more":"Handicap (adicional)","0 OU":"Más de/ Menos de","0 OU more":"Más de/ Menos de (adicional)","0 OU1":"Equipo 1 - Total de goles","0 OU1 more":"Equipo 1 - Total de goles (adicional)","0 OU2":"Equipo 2 - Total de goles","0 OU2 more":"Equipo 2 - Total de goles (adicional)","1 1X2":"1X2[1 mitad]","1 F":"Handicap [1 mitad]","1 F more":"Handicap [1 mitad](adicional)","1 OU":"Más de/ Menos de [1 mitad]","1 OU more":"Más de/ Menos de [1 mitad] (adicional)","2 1X2":"1X2[2 mitad]","2 F":"Handicap [2 mitad]","2 F more":"Handicap [2 mitad](adicional)","2 OU":"Más de/ Menos de [2 mitad]","2 OU more":"Más de/ Menos de [2 mitad] (adicional)"},"17":{"-100 ML":"Se clasificara","0 1X2":"1X2","0 F":"Handicap","0 F more":"Handicap (adicional)","0 OU":"Más de/ Menos de","0 OU more":"Más de/ Menos de (adicional)","0 OU1":"Equipo 1 - Total de goles","0 OU1 more":"Equipo 1 - Total de goles (adicional)","0 OU2":"Equipo 2 - Total de goles","0 OU2 more":"Equipo 2 - Total de goles (adicional)","1 1X2":"1X2[1 mitad]","1 F":"Handicap [1 mitad]","1 F more":"Handicap [1 mitad](adicional)","1 OU":"Más de/ Menos de [1 mitad]","1 OU more":"Más de/ Menos de [1 mitad] (adicional)","2 1X2":"1X2[2 mitad]","2 F":"Handicap [2 mitad]","2 F more":"Handicap [2 mitad](adicional)","2 OU":"Más de/ Menos de [2 mitad]","2 OU more":"Más de/ Menos de [2 mitad] (adicional)"},"18":{"0 1X2":"1X2","0 ML":"Ganador del partido","0 OU":"Más de/ Menos de","0 OU more":"Más de/ Menos de (adicional)"},"19":{"-100 ML":"Se clasificara","0 1X2":"1X2","0 F":"Handicap","0 F more":"Handicap (adicional)","0 OU":"Más de/ Menos de","0 OU more":"Más de/ Menos de (adicional)","0 OU1":"Equipo 1 - Total de goles","0 OU1 more":"Equipo 1 - Total de goles (adicional)","0 OU2":"Equipo 2 - Total de goles","0 OU2 more":"Equipo 2 - Total de goles (adicional)","1 1X2":"1X2[1 mitad]","1 F":"Handicap [1 mitad]","1 F more":"Handicap [1 mitad](adicional)","1 OU":"Más de/ Menos de [1 mitad]","1 OU more":"Más de/ Menos de [1 mitad] (adicional)","2 1X2":"1X2[2 mitad]","2 F":"Handicap [2 mitad]","2 F more":"Handicap [2 mitad](adicional)","2 OU":"Más de/ Menos de [2 mitad]","2 OU more":"Más de/ Menos de [2 mitad] (adicional)"},"2":{"-1 F":"Handicap","-1 F more":"Handicap (adicional)","-1 ML":"Ganador del partido","-1 OU":"Más de/ Menos de","-1 OU more":"Más de/ Menos de (adicional)","-1 OU1":"Equipo 1 - Total de goles","-1 OU1 more":"Equipo 1 - Total de goles (adicional)","-1 OU2":"Equipo 2 - Total de goles","-1 OU2 more":"Equipo 2 - Total de goles (adicional)","-100 ML":"Se clasificara","0 1X2":"1X2","1 1X2":"1X2[1 cuarto]","1 F":"Handicap [1 cuarto]","1 F more":"Handicap [1 cuarto](adicional)","1 OU":"Más de/ Menos de [1 cuarto]","1 OU more":"Más de/ Menos de [1 cuarto] (adicional)","10 1X2":"1X2[1 mitad]","10 F":"Handicap [1 mitad]","10 F more":"Handicap [1 mitad](adicional)","10 OU":"Más de/ Menos de [1 mitad]","10 OU more":"Más de/ Menos de [1 mitad] (adicional)","2 1X2":"1X2[2 cuarto]","2 F":"Handicap [2 cuarto]","2 F more":"Handicap [2 cuarto](adicional)","2 OU":"Más de/ Menos de [2 cuarto]","2 OU more":"Más de/ Menos de [2 cuarto] (adicional)","20 1X2":"1X2[2 mitad]","20 F":"Handicap [2 mitad]","20 F more":"Handicap [2 mitad](adicional)","20 OU":"Más de/ Menos de [2 mitad]","20 OU more":"Más de/ Menos de [2 mitad] (adicional)","3 1X2":"1X2[3 cuarto]","3 F":"Handicap [3 cuarto]","3 F more":"Handicap [3 cuarto](adicional)","3 OU":"Más de/ Menos de [3 cuarto]","3 OU more":"Más de/ Menos de [3 cuarto] (adicional)","4 1X2":"1X2[4 cuarto]","4 F":"Handicap [4 cuarto]","4 F OU":"Más de/ Menos de [4 cuarto]","4 F OU more":"Más de/ Menos de [4 cuarto] (adicional)","4 F more":"Handicap [4 cuarto](adicional)","4 OU":"Más de/ Menos de [4 cuarto]","4 OU more":"Más de/ Menos de [4 cuarto] (adicional)"},"23":{"-100 ML":"Se clasificara","0 1X2":"1X2","0 F":"Handicap","0 F more":"Handicap (adicional)","0 OU":"Más de/ Menos de","0 OU more":"Más de/ Menos de (adicional)","0 OU1":"Equipo 1 - Total de goles","0 OU1 more":"Equipo 1 - Total de goles (adicional)","0 OU2":"Equipo 2 - Total de goles","0 OU2 more":"Equipo 2 - Total de goles (adicional)","1 1X2":"1X2[1 mitad]","1 F":"Handicap [1 mitad]","1 F more":"Handicap [1 mitad](adicional)","1 OU":"Más de/ Menos de [1 mitad]","1 OU more":"Más de/ Menos de [1 mitad] (adicional)","2 1X2":"1X2[2 mitad]","2 F":"Handicap [2 mitad]","2 F more":"Handicap [2 mitad](adicional)","2 OU":"Más de/ Menos de [2 mitad]","2 OU more":"Más de/ Menos de [2 mitad] (adicional)"},"25":{"0 HH":"Кто выше","0 PL1":"1er lugar","0 PL1_3":"1-3 lugar"},"29":{"-1 CS":"Marcador correcto","-1 F":"Handicap","-1 F more":"Handicap (adicional)","-1 ML":"Ganador del partido","-1 OU":"Más de/ Menos de","-1 OU more":"Más de/ Menos de (adicional)","1 F":"Handicap [1 set]","1 F more":"Handicap [1 set] (adicional)","1 ML":"Ganador del partido [1 set]","1 OU":"Más de/ Menos de [1 set]","1 OU more":"Más de/ Menos de [1 set] (adicional)","2 F":"Handicap [2 set]","2 F more":"Handicap [2 set] (adicional)","2 ML":"Ganador del partido [2 set]","2 OU":"Más de/ Menos de [2 set]","2 OU more":"Más de/ Menos de [2 set] (adicional)","3 F":"Handicap [3 set]","3 F more":"Handicap [3 set] (adicional)","3 ML":"Ganador del partido [3 set]","3 OU":"Más de/ Menos de [3 set]","3 OU more":"Más de/ Menos de [3 set] (adicional)"},"30":{"0 ML":"1er lugar"},"31":{"0 HH":"Кто выше","0 PL1":"1er lugar","0 PL1_3":"1-3 lugar"},"4":{"-100 ML":"Se clasificara","0 1X2":"1X2","0 F":"Handicap","0 F more":"Handicap (adicional)","0 OU":"Más de/ Menos de","0 OU more":"Más de/ Menos de (adicional)","0 OU1":"Equipo 1 - Total de goles","0 OU1 more":"Equipo 1 - Total de goles (adicional)","0 OU2":"Equipo 2 - Total de goles","0 OU2 more":"Equipo 2 - Total de goles (adicional)","1 1X2":"1X2[1 mitad]","1 F":"Handicap [1 mitad]","1 F more":"Handicap [1 mitad](adicional)","1 OU":"Más de/ Menos de [1 mitad]","1 OU more":"Más de/ Menos de [1 mitad] (adicional)","2 1X2":"1X2[2 mitad]","2 F":"Handicap [2 mitad]","2 F more":"Handicap [2 mitad](adicional)","2 OU":"Más de/ Menos de [2 mitad]","2 OU more":"Más de/ Menos de [2 mitad] (adicional)"},"5":{"-100 ML":"Se clasificara","0 1X2":"1X2","0 F":"Handicap","0 F more":"Handicap (adicional)","0 OU":"Más de/ Menos de","0 OU more":"Más de/ Menos de (adicional)","0 OU1":"Equipo 1 - Total de goles","0 OU1 more":"Equipo 1 - Total de goles (adicional)","0 OU2":"Equipo 2 - Total de goles","0 OU2 more":"Equipo 2 - Total de goles (adicional)","1 1X2":"1X2[1 mitad]","1 F":"Handicap [1 mitad]","1 F more":"Handicap [1 mitad](adicional)","1 OU":"Más de/ Menos de [1 mitad]","1 OU more":"Más de/ Menos de [1 mitad] (adicional)","2 1X2":"1X2[2 mitad]","2 F":"Handicap [2 mitad]","2 F more":"Handicap [2 mitad](adicional)","2 OU":"Más de/ Menos de [2 mitad]","2 OU more":"Más de/ Menos de [2 mitad] (adicional)"},"6":{"-100 ML":"Se clasificara","-2 EH":"Europeo handicap (con prórroga)","-2 EH more":"Europeo handicap (adicional) (con prórroga)","-2 F":"Handicap (con prórroga)","-2 F more":"Handicap (adicional) (mit verlängerung)","-2 ML":"Ganador del partido","-2 OU":"Más de/ Menos de (con prórroga)","-2 OU more":"Más de/ Menos de (adicional) (con prórroga)","-2 OU1":"Equipo 1 - Total de goles (con prórroga)","-2 OU1 more":"Equipo 1 - Total de goles (adicional) (con prórroga)","-2 OU2":"Equipo 2 - Total de goles (con prórroga)","-2 OU2 more":"Equipo 2 - Total de goles (adicional) (con prórroga)","0 1X2":"1X2","0 BTS":"Ambos equipos anotan","0 CS":"Marcador correcto","0 DC":"Doble oportunidad","0 EH":"Europeo handicap","0 EH more":"Europeo handicap (adicional)","0 F":"Handicap","0 F more":"Handicap (adicional)","0 OU":"Más de/ Menos de","0 OU more":"Más de/ Menos de (adicional)","0 OU1":"Equipo 1 - Total de goles","0 OU1 more":"Equipo 1 - Total de goles (adicional)","0 OU2":"Equipo 2 - Total de goles","0 OU2 more":"Equipo 2 - Total de goles (adicional)","1 1X2":"1X2 [1 periodo]","1 F":"Handicap [1 periodo]","1 F more":"Handicap [1 periodo] (adicional)","1 OU":"Más de/ Menos de [1 periodo]","1 OU more":"Más de/ Menos de [1 periodo] (adicional)","2 1X2":"1X2 [2 periodo]","2 F":"Handicap [2 periodo]","2 F more":"Handicap [2 periodo] (adicional)","2 OU":"Más de/ Menos de [2 periodo]","2 OU more":"Más de/ Menos de [2 periodo] (adicional)","3 1X2":"1X2 [3 periodo]","3 F":"Handicap [3 periodo]","3 F more":"Handicap [3 periodo] (adicional)","3 OU":"Más de/ Menos de [3 periodo]","3 OU more":"Más de/ Menos de [3 periodo] (adicional)"},"7":{"-100 ML":"Se clasificara","0 1X2":"1X2","0 BTS":"Ambos equipos anotarán","0 CNR_1X2":"1X2 Corners","0 CNR_DC":"Corners Más de/ Menos de (adicional)","0 CNR_F":"Corners handicap asiatico","0 CNR_F more":"Corners handicap asiatico (adicional)","0 CNR_OU":"Corners Más de/ Menos de","0 CNR_OU more":"Corners Más de/ Menos de (adicional)","0 CNR_OU1":"Corners Equipo 1 - Total de goles","0 CNR_OU2":"Corners Equipo 2 - Total de goles","0 DC":"Doble oportunidad","0 DNB":"Empate apuesta no valida","0 EH":"Europeo handicap","0 EH more":"Europeo handicap (adicional)","0 F":"Handicap asiatico","0 F more":"Handicap asiatico (adicional)","0 NG":"Primer equipo que anotara","0 OE":"Impar/Par","0 OU":"Más de/ Menos de","0 OU more":"Más de/ Menos de (adicional)","0 OU1":"Equipo 1 - Total de goles","0 OU1 more":"Equipo 1 - Total de goles (adicional)","0 OU2":"Equipo 2 - Total de goles","0 OU2 more":"Equipo 2 - Total de goles (adicional)","0 WTN1":"Equipo 1 ganará a cero","0 WTN2":"Equipo 2 ganará a cero","1 1X2":"1X2 [1 mitad]","1 CNR_1X2":"1X2 [1 mitad] Corners","1 CNR_F":"Corners handicap asiatico [1 mitad]","1 CNR_OU":"Corners Más de/ Menos de [1 mitad]","1 DC":"Doble oportunidad [1 mitad]","1 EH":"Europeo handicap [1 mitad]","1 EH more":"Europeo handicap (adicional) [1 mitad]","1 F":"Handicap asiatico [1 mitad]","1 F more":"Handicap asiatico (adicional) [1 mitad]","1 OU":"Más de/ Menos de [1 mitad]","1 OU more":"Más de/ Menos de [1 mitad] (adicional)","2 1X2":"1X2 [2 mitad]","2 DC":"Doble oportunidad [2 mitad]","2 EH":"Europeo handicap [2 mitad]","2 EH more":"Europeo handicap (adicional) [2 mitad]","2 F":"Handicap asiatico [2 mitad]","2 F more":"Handicap asiatico (adicional) [2 mitad]","2 OU":"Más de/ Menos de [2 mitad]","2 OU more":"Más de/ Menos de [2 mitad] (adicional)"},"8":{"-1 CS":"Marcador correcto","-1 F":"Handicap","-1 F more":"Handicap (adicional)","-1 ML":"Ganador del partido","-1 OU":"Más de/ Menos de","-1 OU more":"Más de/ Menos de (adicional)","1 F":"Handicap [1 set]","1 F more":"Handicap [1 set] (adicional)","1 ML":"Ganador del partido [1 set]","1 OU":"Más de/ Menos de [1 set]","1 OU more":"Más de/ Menos de [1 set] (adicional)","2 F":"Handicap [2 set]","2 F more":"Handicap [2 set] (adicional)","2 ML":"Ganador del partido [2 set]","2 OU":"Más de/ Menos de [2 set]","2 OU more":"Más de/ Menos de [2 set] (adicional)"},"9":{"-100 ML":"Se clasificara","0 CS":"Marcador correcto","0 F":"Handicap","0 F more":"Handicap (adicional)","0 ML":"Ganador del partido","0 OU":"Más de/ Menos de","0 OU more":"Más de/ Menos de (adicional)","1 F":"Handicap [1 set]","1 F more":"Handicap [1 set] (adicional)","1 ML":"Ganador del partido [1 set]","1 OU":"Más de/ Menos de [1 set]","1 OU more":"Más de/ Menos de [1 set] (adicional)","2 F":"Handicap [2 set]","2 F more":"Handicap [2 set] (adicional)","2 ML":"Ganador del partido [2 set]","2 OU":"Más de/ Menos de [2 set]","2 OU more":"Más de/ Menos de [2 set] (adicional)","3 F":"Handicap [3 set]","3 F more":"Handicap [3 set] (adicional)","3 ML":"Ganador del partido [3 set]","3 OU":"Más de/ Menos de [3 set]","3 OU more":"Más de/ Menos de [3 set] (adicional)"}},"modal":{"Choose Bookmakers":"Seleccionar las casas de apuestas"},"no_found":{"markets_message":"no hay coeficientes activos en los mercados de este tipo","message":"Desafortunadamente, por el momento no hay eventos"},"number":{"currency":{"format":{"delimiter":".","format":"%n %u","precision":2,"separator":",","significant":false,"strip_insignificant_zeros":false,"unit":"€"}},"format":{"delimiter":".","precision":3,"separator":",","significant":false,"strip_insignificant_zeros":false},"human":{"decimal_units":{"format":"%n %u","units":{"billion":"mil millones","million":{"one":"millón","other":"millones"},"quadrillion":"mil billones","thousand":"mil","trillion":{"one":"billón","other":"billones"},"unit":""}},"format":{"delimiter":"","precision":1,"significant":true,"strip_insignificant_zeros":true},"storage_units":{"format":"%n %u","units":{"byte":{"one":"Byte","other":"Bytes"},"gb":"GB","kb":"KB","mb":"MB","tb":"TB"}}},"percentage":{"format":{"delimiter":"","format":"%n %"}},"precision":{"format":{"delimiter":""}}},"recaptcha":{"errors":{"failed":"Recaptcha – Verificación no ha sido pasada","reenter":"Rellene el capcha, ¡por favor!"}},"seo":{"/es/":{"description":"¡Coeficientes  propuestos por 79 casas de apuestas para los eventos deportivos actuales en los regimens Live y Prematch. !Compare, apueste y gane con el OddsFan!","keywords":"online, servicio, comparación, coeficientes propuestos por las casas de apuestas","title":"Servicio de comparación de los coeficientes propuestos por las casas de apuestas – OddsFan.com"},"/es/about_bookmakers":{"description":"Toda la información necesaria acerca de las casas de apuestas con las cuales colaboramos.","keywords":"OddsFan","title":"Información acerca de nuestras casas de apuestas"},"/es/about_us":{"description":"Nuestro servicio de comparación de los coeficientes propuestos por las casas de apuestas.","keywords":"OddsFan","title":"Quines somos | OddsFan.com"},"/es/account":{"description":"Información personal.","keywords":"OddsFan","title":"Información personal"},"/es/account/bookmakers":{"description":"Información personal.","keywords":"OddsFan","title":"Mis Casas de apuestas"},"/es/advanced":{"description":"Consejos profesionales y recomendaciones de los jugadores con experiencia para los jugadores principiantes.","keywords":"OddsFan","title":"Consejos profesionales y recomendaciones | OddsFan.com"},"/es/advertising":{"description":"Todas las preguntas relativas a la posibilidad de colaboración y de la publicidad colocada en nuestro sitio.","keywords":"OddsFan","title":"Publicidad | OddsFan.com"},"/es/betting_guide":{"description":"¿Como se hacen las apuestas en las casas de apuestas? Descripción detallada (paso por paso) para los principiantes.","keywords":"OddsFan","title":"¿Como se hacen las apuestas en las casas de apuestas? | OddsFan.com"},"/es/contact_us":{"description":"Feedback con la administración del sitio OddsFan.com","keywords":"OddsFan","title":"Contactos | OddsFan.com"},"/es/content_solution":{"description":"Content resolución del OddsFan.com","keywords":"OddsFan","title":"Content resolución del OddsFan.com"},"/es/country":{"description":"Ofrecemos los mejores coeficientes propuestos por las casas de apuestas a %s! ¡Compare, seleccione las propuestas mejores de las casas de apuestas y haga las apuestas convenientes para Usted! %s","keywords":"%s, %s, coeficientes, propuestos por las casas de apuestas, comparación.","title":"Ligas %s – comparar los coeficientes de las casas de apuestas con %s"},"/es/country/teams":{"description":"%s calendario de los partidos a  %s. Ofrecemos los mejores coeficientes propuestos por las casas de apuestas para cualquier tipo de los eventos deportivos que Le  interesan %s.","keywords":"%s, coeficientes, propuestos por las casas de apuestas, calendario, partidos. %s","title":"Equipos %s – calendario de los partidos %s"},"/es/disclaimer":{"description":"Declinación de responsabilidad OddsFan.com","keywords":"OddsFan","title":"Declinación de responsabilidad | OddsFan.com"},"/es/event":{"description":"%s: coeficientes propuestos por las casas de apuestas para el partido %s.","keywords":"%s, %s, %s, coeficientes, propuestos por las casas de apuestas, para el partido","title":"%s - coeficientes propuestos por las casas de apuestas para el partido"},"/es/getting_started":{"description":"¿Con qué es posible iniciar el trabajo con nuestro servicio de comparación de los  coeficientes propuestos por las casas de apuestas?","keywords":"OddsFan","title":"¿Como iniciar el trabajo con nuestro servicio? | OddsFan.com"},"/es/league":{"description":"%s: mejores coeficientes propuestos por las casas de apuestas para los eventos a que se puede apostar en las 79 casas de apuestas presentes. Compare, seleccione las variants mejores y gane con nosotros!","keywords":"%s, propuestos por las casas de apuestas, coeficientes, mejores, comparación","title":"%s – comparación, coeficientes propuestos por las casas de apuestas con %s %s"},"/es/legal_status":{"description":"Status jurídico OddsFan.com","keywords":"OddsFan","title":"Status jurídico | OddsFan.com"},"/es/live_odds":{"description":"¡Mejores coeficientes propuestos por más de 170 casas de apuestas para los partidos de %s en el régimen Live! OddsFan.com – servicio de comparación de los coeficientes propuestos por las casas de apuestas.","keywords":"%s, Coeficientes en el régimen Live, coeficientes propuestos por las casas de apuestas, servicio de comparación","title":"Live, coeficientes propuestos por las casas de apuestas, coeficientes propuestos por las casas de apuestas para los partidos de %s en el régimen Live"},"/es/next_matches":{"description":"¡Coeficientes propuestos por más de 170 casas de apuestas para los partidos próximos! OddsFan.com – sólo los mejores coeficientes propuestos por las casas de apuestas para los partidos de %s!","keywords":"%s, Partidos próximos, coeficientes propuestos por las casas de apuestas, servicio de comparación","title":"Próximos partidos, coeficientes propuestos por las casas de apuestas para los partidos de %s próximos"},"/es/popular":{"description":"Aquí son recogidos los coeficientes relativos a los partidos de %s populares que proponen más de 170 casas de apuestas. ¡Sólo los mejores coeficientes relativos a los partidos populares escogidos por el servicio OddsFan.com!","keywords":"%s, partidos populares, coeficientes propuestos por las casas de apuestas, servicio de comparación","title":"Partidos populares, coeficientes propuestos por las casas de apuestas relativos a los partidos de %s populares"},"/es/privacy":{"description":"Política de confidencialidad OddsFan.com","keywords":"OddsFan","title":"Política de confidencialidad | OddsFan.com"},"/es/sign_in":{"description":"Autorización en el sitio OddsFan.com","keywords":"OddsFan","title":"Autorización en el sitio | OddsFan.com"},"/es/sign_up":{"description":"Proceso de registro efectuable en el sitio OddsFan.com","keywords":"OddsFan","title":"Proceso de registro efectuable en el sitio | OddsFan.com"},"/es/sport/id":{"description":"Ofrecemos los mejores coeficientes propuestos por las casas de apuestas que Usted puede usar para Sus apuestas a %s! ¡Compare, seleccione las propuestas mejores de las casas de apuestas y haga las apuestas convenientes para Usted!","keywords":"%s, coeficientes propuestos por las casas de apuestas, comparación, apuestas.","title":"Apuestas a %s – los mejores coeficientes propuestos por las casas de apuestas a %s"},"/es/terms":{"description":"Condiciones y requisitos OddsFan.com","keywords":"OddsFan","title":"Condiciones y requisitos | OddsFan.com"},"/es/what_is_oddsfan":{"description":"Toda la información necesaria relativa al OddsFan.com – servicio de comparación de los coeficientes propuestos por las casas de apuestas.","keywords":"OddsFan","title":"Qué es el OddsFan?"},"/es/widget/new":{"description":"Widget para los sitios con la visualización de los mejores coeficientes propuestos por las casas de apuestas para los próximos partidos.","keywords":"OddsFan","title":"Widget – los próximos partidos | OddsFan.com"}},"sidebar":{"Dark":"Oscuro","Light":"Claro"},"sport":{"Choose League":"Ligas","Live":"Live","Most popular League data_live":"Ligaspopulares Live","Most popular League data_prematch":"Ligaspopulares","Most popular Matches data_live":"Partidos populares Live","Most popular Matches data_prematch":"Partidos populares","No leagues with active matches":"No hay ligas con los partidos activos","Prematch":"Prematch","Statistics":"Estadística","The number of":"Cantidad","back":"Atrás","bookmakers":"de las casas de apuestas","countries_groups":{"africa":"Africa","asia":"Asia","australia":"Australia","europe":"Europe","north_america":"North America","south_america":"South America","world":"World"},"events":"de los eventos","league":"Liga","match":"Partido","other":"Other","page_desc":"Nuestro servicios online Le ayudará a comparar y a seleccionar los coeficientes más convenientes propuestos por las casas de apuestas para que Usted pueda apostar los montantes que ascienden hasta el %s. ¡Compare, seleccione las propuestas mejores de las casas de apuestas y haga las apuestas máximamente convenientes para Usted!","page_h1":"Coeficientes para %s","score":"Tanteo del partido","started at":"Fecha del inicio","stats":{"bookmakers_count":"Casas de apuestas sometidas a la investigación","countries_count":"de los países investigados","events_count":"de los eventos","leagues_count":"Ligas sometidas a la investigación","teams_count":"de los equipos que toman parte"}},"sports":{"AFL":"Fútbol Au.","American Football":"Fútbol Am.","Athletics":"Atletismo","Badminton":"Bádminton","Bandy":"Bandy","Baseball":"Béisbol","Basketball":"Baloncesto","Beach Soccer":"Beach Soccer","Beach Volleyball":"Voleibol de playa","Biathlon":"Biatlon","Boxing/MMA":"Pugilato/combates","Chess":"Ajedrez","Cricket":"Críquet","Cycling":"Ciclismo","Darts":"Darts","E-Sports":"Ciberdeporte","Field Hockey":"Hockey hierba","Formula 1":"Fórmula  1","Futsal":"Fútbol sala","Gaelic Sport":"Deporte gaélico","Handball":"Balonmano","Hockey":"Hockey","Horse Racing":"Carreras de caballos","Motorcycling":"Motodeporte","Netball":"Netball","Rugby":"Rugby","Snooker":"Snooker","Soccer":"Fútbol","Squash":"Squash","Table Tennis":"Tenis de mesa","Tennis":"Tenis","Volleyball":"Voleibol","Water Polo":"Polo acuático","full":{"AFL":"Fútbol australiano","American Football":"Fútbol Americano","Athletics":"Atletismo","Badminton":"Bádminton","Bandy":"Bandy","Baseball":"Béisbol","Basketball":"Baloncesto","Beach Soccer":"Beach Soccer","Beach Volleyball":"Voleibol de playa","Boxing/MMA":"Pugilato/combates","Chess":"Ajedrez","Cricket":"Críquet","Cycling":"Ciclismo","Darts":"Darts","E-Sports":"Ciberdeporte","Field Hockey":"Hockey hierba","Formula 1":"Fórmula 1","Futsal":"Fútbol sala","Gaelic Sport":"Deporte gaélico","Handball":"Balonmano","Hockey":"Hockey","Horse Racing":"Carreras de caballos","Motorcycling":"Motodeporte","Netball":"Netball","Rugby":"Fútbol rugby","Snooker":"Snooker","Soccer":"Fútbol","Squash":"Squash","Table Tennis":"Tenis de mesa","Tennis":"Tenis","Volleyball":"Voleibol","Water Polo":"Polo acuático"}},"static_pages":{"nav":{"links":{"About Us":"Quines somos","About our bookmakers":"Casas de apuestas","Advanced Tips \u0026 Tricks":"Consejos profesionales y recomendaciones","Advertising":"Publicidad","Bet responsibly":"18 + Gamble Responsible","Betting Guide":"¿Como apostar?","Contact us":"¡Escríbanos!","Content Solution":"Content resolución","Disclaimer":"Declinación de responsabilidad","Getting started":"¿Como iniciar?","Getting started betting and":"Como es posible iniciar a apostar y","HELP \u0026 SUPPORT":"AYUDA y SOPORTE","Legal Status":"Status jurídico","Legal information":"Información jurídica","Privacy Policy":"Política de privacidad","Terms and conditions":"Acuerdo de usuario","What is OddsFan?":"¿Quées el OddsFan?","blog":"Blog","business partnership":"coparticipación de negocios","odds comparison":"comparación de los coeficientes","widget":"Al webmaster"}}},"support":{"array":{"last_word_connector":" y ","two_words_connector":" y ","words_connector":", "}},"time":{"am":"am","formats":{"default":"%A, %-d de %B de %Y %H:%M:%S %z","long":"%-d de %B de %Y %H:%M","short":"%-d de %b %H:%M"},"pm":"pm"},"timezones":{"Abu Dhabi":"Abu Dhabi","Adelaide":"Adelaide","Alaska":"Alaska","Almaty":"Almaty","American Samoa":"American Samoa","Amsterdam":"Amsterdam","Arizona":"Arizona","Astana":"Astana","Athens":"Athens","Atlantic Time (Canada)":"Atlantic Time (Canada)","Auckland":"Auckland","Azores":"Azores","Baghdad":"Baghdad","Baku":"Baku","Bangkok":"Bangkok","Beijing":"Beijing","Belgrade":"Belgrade","Berlin":"Berlin","Bern":"Bern","Bogota":"Bogota","Brasilia":"Brasilia","Bratislava":"Bratislava","Brisbane":"Brisbane","Brussels":"Brussels","Bucharest":"Bucharest","Budapest":"Budapest","Buenos Aires":"Buenos Aires","Cairo":"Cairo","Canberra":"Canberra","Cape Verde Is":"Cape Verde Is.","Cape Verde Is.":"Cape Verde Is.","Caracas":"Caracas","Casablanca":"Casablanca","Central America":"Central America","Central Time (US \u0026 Canada)":"Central Time (US \u0026 Canada)","Chatham Is":"Chatham Is","Chennai":"Chennai","Chihuahua":"Chihuahua","Chongqing":"Chongqing","Copenhagen":"Copenhagen","Darwin":"Darwin","Dhaka":"Dhaka","Dublin":"Dublin","Eastern Time (US \u0026 Canada)":"Eastern Time (US \u0026 Canada)","Edinburgh":"Edinburgh","Ekaterinburg":"Ekaterinburg","Fiji":"Fiji","Georgetown":"Georgetown","Greenland":"Greenland","Guadalajara":"Guadalajara","Guam":"Guam","Hanoi":"Hanoi","Harare":"Harare","Hawaii":"Hawaii","Helsinki":"Helsinki","Hobart":"Hobart","Hong Kong":"Hong Kong","Indiana (East)":"Indiana (East)","International Date Line West":"International Date Line West","Irkutsk":"Irkutsk","Islamabad":"Islamabad","Istanbul":"Istanbul","Jakarta":"Jakarta","Jerusalem":"Jerusalem","Kabul":"Kabul","Kaliningrad":"Kaliningrad","Kamchatka":"Kamchatka","Karachi":"Karachi","Kathmandu":"Kathmandu","Kolkata":"Kolkata","Krasnoyarsk":"Krasnoyarsk","Kuala Lumpur":"Kuala Lumpur","Kuwait":"Kuwait","Kyiv":"Kyiv","La Paz":"La Paz","Lima":"Lima","Lisbon":"Lisbon","Ljubljana":"Ljubljana","London":"London","Madrid":"Madrid","Magadan":"Magadan","Marshall Is":"Marshall Is.","Marshall Is.":"Marshall Is.","Mazatlan":"Mazatlan","Melbourne":"Melbourne","Mexico City":"Mexico City","Mid-Atlantic":"Mid-Atlantic","Midway Island":"Midway Island","Minsk":"Minsk","Monrovia":"Casablanca","Monterrey":"Monterrey","Montevideo":"Montevideo","Moscow":"Moscow","Mountain Time (US \u0026 Canada)":"Mountain Time (US \u0026 Canada)","Mumbai":"Mumbai","Muscat":"Muscat","Nairobi":"Nairobi","New Caledonia":"New Caledonia","New Delhi":"New Delhi","Newfoundland":"Newfoundland","Novosibirsk":"Novosibirsk","Nuku'alofa":"Nuku'alofa","Osaka":"Osaka","Pacific Time (US \u0026 Canada)":"Pacific Time (US \u0026 Canada)","Paris":"Paris","Perth":"Perth","Port Moresby":"Port Moresby","Prague":"Prague","Pretoria":"Pretoria","Quito":"Quito","Rangoon":"Rangoon","Riga":"Riga","Riyadh":"Riyadh","Rome":"Rome","Samara":"Samara","Samoa":"Samoa","Santiago":"Santiago","Sapporo":"Sapporo","Sarajevo":"Sarajevo","Saskatchewan":"Saskatchewan","Seoul":"Seoul","Singapore":"Singapore","Skopje":"Skopje","Sofia":"Sofia","Solomon Is":"Solomon Is.","Solomon Is.":"Solomon Is.","Srednekolymsk":"Srednekolymsk","Sri Jayawardenepura":"Sri Jayawardenepura","St":{" Petersburg":"St. Petersburg"},"St. Petersburg":"St. Petersburg","Stockholm":"Stockholm","Sydney":"Sydney","Taipei":"Taipei","Tallinn":"Tallinn","Tashkent":"Tashkent","Tbilisi":"Tbilisi","Tehran":"Tehran","Tijuana":"Tijuana","Tokelau Is":"Tokelau Is.","Tokelau Is.":"Tokelau Is.","Tokyo":"Tokyo","UTC":"UTC","Ulaan Bataar":"Ulaan Bataar","Ulaanbaatar":"Ulaanbaatar","Urumqi":"Urumqi","Vienna":"Vienna","Vilnius":"Vilnius","Vladivostok":"Vladivostok","Volgograd":"Volgograd","Warsaw":"Warsaw","Wellington":"Wellington","West Central Africa":"West Central Africa","Yakutsk":"Yakutsk","Yerevan":"Yerevan","Zagreb":"Zagreb"},"tournament":{"A":"A","Beginning time":"Beginning time","D":"D","F":"F","L":"L","P":"P","Pts":"Pts","Score":"Score","Team":"Team","W":"W","final":"%s Final","final_1":"Final","final_3":"Third place play-off","group":"Group %s","wc2018_h1":"World Cup 2018","wc2018_h1_seo":"World Cup 2018 Standings"},"wc_seo":{"Argentina_Croatia":"\u003cp\u003eThere's no doubt, the Argentina national team won't easily fight with Croatia, although the bookmakers' odds are clearly in favor of the Sampaoli team.\u003c/p\u003e","Brazil_Switzerland":"\u003cp\u003eSetting odds on the match Brazil-Switzerland, bookmakers made it clear that they do not believe in the success of the Swiss.\u003c/p\u003e\u003cp\u003eHowever, the Brazilians obviously shouldn't expect an easy game, as Switzerland have repeatedly proved they can adequately compete with big-name opponents.\u003c/p\u003e","Denmark_France":"\u003cp\u003eWill the Danish team be able to get a victory in the fight with eminent France? We'll see it. In any case, bookmakers' odds are clearly not in favor of the nominal home team.\u003c/p\u003e","England_Belgium":"\u003cp\u003eVery interesting confrontation without obvious favorite and outsider. The same opinion is shared by bookmakers that put their odds on this meeting.\u003c/p\u003e","France_Australia":"\u003cp\u003eAustralian team is the undisputed underdog in the confrontation with France. It’s difficult to imagine in what way Bert van Marwijk's wards could beat such an eminent rival.\u003c/p\u003e\u003cp\u003eBookmakers don't believe in the success of Australia as well. Odds for the victory of nominal away team exceeded the mark of 10 to 1.\u003c/p\u003e","Germany_Mexico":"\u003cp\u003eMexico has a great chance to take revenge on the German national team for the defeat in the semi-finals of the Confederations Cup, but the bookmakers' odds are not in favor of nominal away team.\u003c/p\u003e","Germany_Sweden":"\u003cp\u003eFor all football fans, the favorite in this match is absolutely obvious and it’s the German national team. No wonder the odds for the victory of Lev's team in most bookmakers do not exceed 1.5 to 1.\u003c/p\u003e\u003cp\u003eHowever, the Swedish national team has repeatedly proved that it is able to take points from famous rivals, so that it may well present a nasty surprise to the current World Champion.\u003c/p\u003e","Mexico_Sweden":"\u003cp\u003eIn the match Mexico-Sweden won’t be pronounced a clear favorite, as in the face-to-face confrontation play almost equal level teams.\u003c/p\u003e\u003cp\u003eThis is well understood by bookmakers, so the odds of winning the Swedes and Mexicans in this meeting are almost equal.\u003c/p\u003e","Poland_Colombia":"\u003cp\u003ePoland and Colombia are rivals of approximately the same level, so we are likely to have a very interesting match.\u003c/p\u003e\u003cp\u003eEven experienced bookmakers failed to identify a favorite in this pair and therefore odds for the victory of these national teams in face-to-face match are almost equal.\u003c/p\u003e","Portugal_Spain":"\u003cp\u003eThe match Portugal-Spain is rightly one of the most interesting and expected confrontations of the group stage of the 2018 World Cup.\u003c/p\u003e\u003cp\u003eIn this case, bookmakers' odds are in favor of the Spaniards but do not forget that Portugal is the current winner of the European Championship.\u003c/p\u003e","Russia_Egypt":"\u003cp\u003eThe Russian national team is called the unconditional favorite in the match with Egypt, and it is clearly shown by bookmakers’ odds.\u003c/p\u003e\u003cp\u003eSuch experts opinion is true, but Cherchesov's wards need to be very careful, as the Egyptians have a tangible trump card in the face of Mohammed Salah.\u003c/p\u003e","Russia_Saudi_Arabia":"\u003cp\u003eIn the match Russia-Saudi Arabia, many experts consider the home team to be the unconditional favorite, and the odds of bookmakers confirm this once again.\u003c/p\u003e\u003cp\u003eBut for Cherchesov's team, it's very important to prevent underestimation of the rival, as it may play a dirty trick.\u003c/p\u003e","Uruguay_Russia":"\u003cp\u003eUruguay is considered Russia's main rival for leadership in the group, and if we talk about the upcoming meeting of these teams, betting odds are in favor of the nominal home team.\u003c/p\u003e\u003cp\u003eCertainly, the Russians have a chance to win, but in this case Cherchesov's squad have to do the best possible to achieve a positive result.\u003c/p\u003e","header":"A few words about the match %s"},"widget_plugin":{"1":1,"2":2,"F1":"Кф","F2":"Кф","Highest odds":"Los coeficientes más altos","Next Matches":"Próximos partidos","No active events":"No hay eventos activos","TO":"Больше","TU":"Меньше","X":"X","button":{"generate_code":"Crear un código HTML","reset":"Borrar las prorgamaciones previamente efectuadas"},"form":{"all_sports":"Todas las disciplinas deportivas","background":"Fondo","bold_header":"El título señalado","bold_label":"El nombre señalado","border":"Límites","color_settings":"Reglaje del color","color_text":"Nombre","font":"Carácteres","fonts":"Reglaje de los carácteres","footer_link":"Link (enlace) del título bajo","general":"Programaciones generales","generate":"2. Crear un código HTML","get_html":"Recibir HTML","header_bg":"Fondo del título","header_text":"Texto del título","height":"Altura del widget","high_odds":"Coeficientes más altos","insert_html":"introducir en \u003ccode\u003e\u0026lt;body\u0026gt;\u003c/code\u003e teg","insert_html_2":"introducir en \u003ccode\u003e\u0026lt;body\u0026gt;\u003c/code\u003e teg, donde Usted quiere ver el widget \u003ccode\u003e \u0026lt;div id=' oddsfan-widget'\u0026gt;\u003c/code\u003e\u003ccode\u003e\u0026lt;/div\u0026gt;\u003c/code\u003e","label_bg":"Fondo del nombre","label_font":"Carácteres del nombre","label_name":"Nombre","lang":"Idioma","line_height":"Altura de la línea","link":"Link (enlace)","matches":"Cantidad de partidos","odds_displayed":"Coeficientes usados","odds_type":{"1x2":"Resultado del partido","handicap":"Puntos de ventaja","over_under":"Total del partido"},"prev":"Preview (visualización anticipada)","put":"3. Colocar en el proprio sitio","select_bk":"Coeficientes propuestos por las casas de apuestas seleccionadas ","select_sports":"Tipo del deporte","setup":"1.Installar el widget","show_label":"Visualizar el nombre","size":"Dimensiones","table_1":"Tabla 1","table_2":"Tabla 2","time_zone":"Fuso horário","title":"Widget prematch coeficientes","type":"Tipo de coeficiente","width":"Anchura del widget","with_logo":"Visualizar el logo en la casa de apuestas ","without_logo":"No visualizar el logo en la casa de apuestas"},"powered by":"ha sido elaborado","tabs":{"live":"Coeficientes en el régimen Live","prematch":"Coeficientes en el régimen Prematch","surebets":"apuestas cruzadas en el régimen Prematch","valuebets":"Apuestas con desbalance"},"valF1":"Ф1","valF2":"Ф2","valT":"Тотал"}},"it":{"account":{"Bookmakers":"bookmaker","Change Password":"cambiare il password","Changes saved":"le modifiche sono conservate","E-mail address":"l'indirizzo di posta elettronica","Live":"live","Live bookmakers":"live bookmaker","My bookmakers":"mio bookmaker","Personal info":"l'informazione personale","Prematch":"pre partita","Prematch bookmakers":"pre partita bookmaker","Time zone":"fuso orario","and":"e","bookmakers clones":"clone di bookmaker","label":{"confirm":"Siete sicuri?","delete_account":"cancellare l'account"},"new password":"nuovo password","old password":"vecchio password","repeat new password":"ripetere nuovo password","submit":{"save":"conservare","save my changes":"conservare le modifiche"},"success":"aggiornato con successo"},"activerecord":{"errors":{"messages":{"record_invalid":"Validazione fallita: %{errors}","restrict_dependent_destroy":{"has_many":"Il record non può essere cancellato perchè esistono %{record} dipendenti","has_one":"Il record non può essere cancellato perchè esiste un %{record} dipendente"}},"models":{"bb_user":{"attributes":{"reset_password_token":{"blank":"il link per lo scarico non è attuale","invalid":"il link per lo scarico non è attuale"}}}}}},"bet":{"%s set, %s game":"%s set, %s game","1 frame":"1st frame","1 half":"1st half","1 inning":"1st inning","1 period":"1st per","1 quarter":"1st qtr","1 set":"1st set","1 time":"1st half","10 set":"10th set","11 set":"11th set","12 set":"12th set","13 set":"13th set","2 frame":"2nd frame","2 half":"2nd half","2 inning":"2nd inning","2 period":"2nd per","2 quarter":"2nd qtr","2 set":"2nd set","2 time":"2nd half","3 frame":"3rd frame","3 inning":"3rd inning","3 period":"3rd per","3 quarter":"3rd qtr","3 set":"3rd set","4 frame":"4th frame","4 inning":"4th inning","4 quarter":"4th qtr","4 set":"4th set","5 frame":"5th frame","5 inning":"5th inning","5 set":"5th set","6 frame":"6th frame","6 inning":"6th inning","6 set":"6th set","60 mins":"60 mins","7 frame":"7th frame","7 inning":"7th inning","7 set":"7th set","8 frame":"8th frame","8 inning":"8th inning","8 set":"8th set","9 inning":"9th inning","9 set":"9th set","match":"match","match (doubles)":"match (doubles)","next round":"next round","no_desc":"","regular time":"regular time","with overtime":"with OT","with overtime and shootouts":"with OT \u0026 SO"},"breadscrump":{"Home":"Principale","Soccer":"Calcio"},"contact_us":{"Email":"Posta elettronica","Hello":"Buongiorno","If you have any questions you can write to us":"Contattarci se avete le domande","Message":"Messaggio","Name":"Nome","Send":"Inviare","Wrong captcha verification":"Errore di captcha","contact_us_form_error":"Avete inserito i dati sbagliati","contact_us_form_success":"Il vostro messaggio è inviato. Vi contattiamo. Grazie!"},"countries":{"AC":"Isola di Ascensione","AD":"Andorra","AE":"Emirati Arabi Uniti","AF":"Afghanistan","AFGHANISTAN":"Afghanistan","AFRICA":"Africa","AG":"Antigua e Barbuda","AI":"Anguilla","AL":"Albania","ALBANIA":"Albania","ALGERIA":"Algeria","AM":"Armenia","AMERICAN_SAMOA":"American Samoa","AN":"Antille Olandesi","ANDORRA":"Andorra","ANGOLA":"Angola","ANGUILLA":"Anguilla","ANTIGUA_AND_BARBUDA":"Antigua and Barbuda","AO":"Angola","AQ":"Antartide","AR":"Argentina","ARGENTINA":"Argentina","ARMENIA":"Armenia","ARUBA":"Aruba","AS":"Samoa Americane","ASIA":"Asia","AT":"Austria","AU":"Australia","AUSTRALIA":"Australia","AUSTRIA":"Austria","AW":"Aruba","AX":"Isole Aland","AZ":"Azerbaigian","AZERBAIJAN":"Azerbaijan","BA":"Bosnia-Erzegovina","BAHAMAS":"Bahamas","BAHRAIN":"Bahrain","BANGLADESH":"Bangladesh","BARBADOS":"Barbados","BB":"Barbados","BD":"Bangladesh","BE":"Belgio","BELARUS":"Belarus","BELGIUM":"Belgium","BELIZE":"Belize","BENIN":"Benin","BERMUDA":"Bermuda","BF":"Burkina Faso","BG":"Bulgaria","BH":"Bahrein","BHUTAN":"Bhutan","BI":"Burundi","BJ":"Benin","BL":"Saint-Barthélemy","BM":"Bermuda","BN":"Brunei","BO":"Bolivia","BOLIVIA":"Bolivia","BOSNIA_HERZEGOVINA":"Bosnia-Herzegovina","BOTSWANA":"Botswana","BQ":"Caraibi Olandesi","BR":"Brasile","BRAZIL":"Brazil","BRITISH_VIRGIN_ISLANDS":"British Virgin Islands","BRUNEI_DARUSSALAM":"Brunei Darussalam","BS":"Bahamas","BT":"Bhutan","BULGARIA":"Bulgaria","BURKINA_FASO":"Burkina Faso","BURUNDI":"Burundi","BV":"Isola Bouvet","BW":"Botswana","BY":"Bielorussia","BZ":"Belize","CA":"Canada","CAMBODIA":"Cambodia","CAMEROON":"Cameroon","CANADA":"Canada","CAPE_VERDE_ISLANDS":"Cape Verde Islands","CAYMAN_ISLANDS":"Cayman Islands","CC":"Isole Cocos","CD":"Congo - Kinshasa","CENTRAL_AFRICAN_REPUBLIC":"Central African Republic","CF":"Repubblica Centrafricana","CG":"Congo-Brazzaville","CH":"Svizzera","CHAD":"Chad","CHILE":"Chile","CHINA_PR":"China PR","CHINESE_TAIPEI":"Chinese Taipei","CI":"Costa d’Avorio","CK":"Isole Cook","CL":"Cile","CM":"Camerun","CN":"Cina","CO":"Colombia","COLOMBIA":"Colombia","COMOROS":"Comoros","CONCACAF":"CONCACAF","CONGO":"Congo","CONGO_DR":"Congo DR","COOK_ISLANDS":"Cook Islands","COSTA_RICA":"Costa Rica","COTE_D_IVOIRE":"Côte d'Ivoire","CP":"Isola di Clipperton","CR":"Costa Rica","CROATIA":"Croatia","CU":"Cuba","CUBA":"Cuba","CURACAO":"Curaçao","CV":"Capo Verde","CW":"Curaçao","CX":"Isola di Christmas","CY":"Cipro","CYPRUS":"Cyprus","CZ":"Repubblica Ceca","CZECH_REPUBLIC":"Czech Republic","DE":"Germania","DENMARK":"Denmark","DG":"Diego Garcia","DJ":"Gibuti","DJIBOUTI":"Djibouti","DK":"Danimarca","DM":"Dominica","DO":"Repubblica Dominicana","DOMINICA":"Dominica","DOMINICAN_REPUBLIC":"Dominican Republic","DZ":"Algeria","EA":"Ceuta e Melilla","EC":"Ecuador","ECUADOR":"Ecuador","EE":"Estonia","EG":"Egitto","EGYPT":"Egypt","EH":"Sahara Occidentale","EL_SALVADOR":"El Salvador","ENGLAND":"England","EQUATORIAL_GUINEA":"Equatorial Guinea","ER":"Eritrea","ERITREA":"Eritrea","ES":"Spagna","ESTONIA":"Estonia","ET":"Etiopia","ETHIOPIA":"Ethiopia","EU":"Unione Europea","EUROPE":"Europe","FAROE_ISLANDS":"Faroe Islands","FI":"Finlandia","FIJI":"Fiji","FINLAND":"Finland","FJ":"Figi","FK":"Isole Falkland","FM":"Micronesia","FO":"Isole Faroe","FR":"Francia","FRANCE":"France","FRENCH_GUIANA":"French Guiana","GA":"Gabon","GABON":"Gabon","GAMBIA":"Gambia","GB":"Regno Unito","GD":"Grenada","GE":"Georgia","GEORGIA":"Georgia","GERMANY":"Germany","GF":"Guiana Francese","GG":"Guernsey","GH":"Ghana","GHANA":"Ghana","GI":"Gibilterra","GIBRALTAR":"Gibraltar","GL":"Groenlandia","GM":"Gambia","GN":"Guinea","GP":"Guadalupa","GQ":"Guinea Equatoriale","GR":"Grecia","GREAT_BRITAIN":"Great Britain","GREECE":"Greece","GRENADA":"Grenada","GS":"Georgia del Sud e isole Sandwich meridionali","GT":"Guatemala","GU":"Guam","GUADELOUPE":"Guadeloupe","GUAM":"Guam","GUATEMALA":"Guatemala","GUINEA":"Guinea","GUINEA_BISSAU":"Guinea-Bissau","GUYANA":"Guyana","GW":"Guinea-Bissau","GY":"Guyana","HAITI":"Haiti","HK":"RAS di Hong Kong","HM":"Isole Heard ed Isole McDonald","HN":"Honduras","HONDURAS":"Honduras","HONG_KONG":"Hong Kong","HR":"Croazia","HT":"Haiti","HU":"Ungheria","HUNGARY":"Hungary","IC":"Isole Canarie","ICELAND":"Iceland","ID":"Indonesia","IE":"Irlanda","IL":"Israele","IM":"Isola di Man","IN":"India","INDIA":"India","INDONESIA":"Indonesia","IO":"Territorio Britannico dell’Oceano Indiano","IQ":"Iraq","IR":"Iran","IRAN":"Iran","IRAQ":"Iraq","IRELAND_REPUBLIC":"Ireland Republic","IS":"Islanda","ISRAEL":"Israel","IT":"Italia","ITALY":"Italy","JAMAICA":"Jamaica","JAPAN":"Japan","JE":"Jersey","JM":"Giamaica","JO":"Giordania","JORDAN":"Jordan","JP":"Giappone","KAZAKHSTAN":"Kazakhstan","KE":"Kenya","KENYA":"Kenya","KG":"Kirghizistan","KH":"Cambogia","KI":"Kiribati","KIRIBATI":"Kiribati","KM":"Comore","KN":"Saint Kitts e Nevis","KOREA_DPR":"Korea DPR","KOREA_REPUBLIC":"Korea Republic","KOSOVO":"Kosovo","KP":"Corea del Nord","KR":"Corea del Sud","KUWAIT":"Kuwait","KW":"Kuwait","KY":"Isole Cayman","KYRGYZSTAN":"Kyrgyzstan","KZ":"Kazakistan","LA":"Laos","LAOS":"Laos","LATVIA":"Latvia","LB":"Libano","LC":"Saint Lucia","LEBANON":"Lebanon","LESOTHO":"Lesotho","LI":"Liechtenstein","LIBERIA":"Liberia","LIBYA":"Libya","LIECHTENSTEIN":"Liechtenstein","LITHUANIA":"Lithuania","LK":"Sri Lanka","LR":"Liberia","LS":"Lesotho","LT":"Lituania","LU":"Lussemburgo","LUXEMBOURG":"Luxembourg","LV":"Lettonia","LY":"Libia","MA":"Marocco","MACAO":"Macao","MACEDONIA_FYR":"Macedonia FYR","MADAGASCAR":"Madagascar","MALAWI":"Malawi","MALAYSIA":"Malaysia","MALDIVES":"Maldives","MALI":"Mali","MALTA":"Malta","MARTINIQUE":"Martinique","MAURITANIA":"Mauritania","MAURITIUS":"Mauritius","MAYOTTE":"Mayotte","MC":"Monaco","MD":"Moldavia","ME":"Montenegro","MEXICO":"Mexico","MF":"Saint Martin","MG":"Madagascar","MH":"Isole Marshall","MK":"Repubblica di Macedonia","ML":"Mali","MM":"Myanmar (Birmania)","MN":"Mongolia","MO":"RAS di Macao","MOLDOVA":"Moldova","MONACO":"Monaco","MONGOLIA":"Mongolia","MONTENEGRO":"Montenegro","MONTSERRAT":"Montserrat","MOROCCO":"Morocco","MOZAMBIQUE":"Mozambique","MP":"Isole Marianne Settentrionali","MQ":"Martinica","MR":"Mauritania","MS":"Montserrat","MT":"Malta","MU":"Mauritius","MV":"Maldive","MW":"Malawi","MX":"Messico","MY":"Malesia","MYANMAR":"Myanmar","MZ":"Mozambico","NA":"Namibia","NAMIBIA":"Namibia","NC":"Nuova Caledonia","NE":"Niger","NEPAL":"Nepal","NETHERLANDS":"Netherlands","NETHERLANDS_ANTILLES":"Netherlands Antilles","NEW_CALEDONIA":"New Caledonia","NEW_ZEALAND":"New Zealand","NF":"Isola Norfolk","NG":"Nigeria","NI":"Nicaragua","NICARAGUA":"Nicaragua","NIGER":"Niger","NIGERIA":"Nigeria","NL":"Paesi Bassi","NO":"Norvegia","NORTHERN IRELAND":"Northern Ireland","NORTHERN_IRELAND":"Northern Ireland","NORTHERN_MARIANA_ISLANDS":"Northern Mariana Islands","NORTH_AMERICA":"North America","NORWAY":"Norway","NP":"Nepal","NR":"Nauru","NU":"Niue","NZ":"Nuova Zelanda","OM":"Oman","OMAN":"Oman","PA":"Panamá","PAKISTAN":"Pakistan","PALESTINE":"Palestine","PANAMA":"Panama","PAPUA_NEW_GUINEA":"Papua New Guinea","PARAGUAY":"Paraguay","PE":"Perù","PERU":"Peru","PF":"Polinesia Francese","PG":"Papua Nuova Guinea","PH":"Filippine","PHILIPPINES":"Philippines","PK":"Pakistan","PL":"Polonia","PM":"Saint Pierre e Miquelon","PN":"Isole Pitcairn","POLAND":"Poland","PORTUGAL":"Portugal","PR":"Portorico","PS":"Territori palestinesi","PT":"Portogallo","PUERTO_RICO":"Puerto Rico","PW":"Palau","PY":"Paraguay","QA":"Qatar","QATAR":"Qatar","QO":"Oceania lontana","RE":"Reunion","REUNION":"Reunion","RO":"Romania","ROMANIA":"Romania","RS":"Serbia","RS_AND_M":"Serbia and Macedonia","RU":"Federazione Russa","RUSSIA":"Russia","RW":"Ruanda","RWANDA":"Rwanda","SA":"Arabia Saudita","SAINT_MARTIN":"Saint Martin","SAMOA":"Samoa","SAN_MARINO":"San Marino","SAO_TOME_AND_PRINCIPE":"Sao Tome and Principe","SAUDI_ARABIA":"Saudi Arabia","SB":"Isole Solomon","SC":"Seychelles","SCOTLAND":"Scotland","SD":"Sudan","SE":"Svezia","SENEGAL":"Senegal","SERBIA":"Serbia","SEYCHELLES":"Seychelles","SG":"Singapore","SH":"Sant’Elena","SI":"Slovenia","SIERRA_LEONE":"Sierra Leone","SINGAPORE":"Singapore","SINT_MAARTEN":"Sint Maarten","SJ":"Svalbard e Jan Mayen","SK":"Slovacchia","SL":"Sierra Leone","SLOVAKIA":"Slovakia","SLOVENIA":"Slovenia","SM":"San Marino","SN":"Senegal","SO":"Somalia","SOLOMON_ISLANDS":"Solomon Islands","SOMALIA":"Somalia","SOUTH_AFRICA":"South Africa","SOUTH_AMERICA":"South America","SOUTH_SUDAN":"South Sudan","SPAIN":"Spain","SR":"Suriname","SRI_LANKA":"Sri Lanka","SS":"Sudan del Sud","ST":"Sao Tome \u0026 Principe","ST_KITTS_AND_NEVIS":"St. Kitts and Nevis","ST_LUCIA":"St. Lucia","ST_VINCENT_AND_THE_GRENADINES":"St. Vincent and the Grenadines","SUDAN":"Sudan","SURINAME":"Suriname","SV":"El Salvador","SWAZILAND":"Swaziland","SWEDEN":"Sweden","SWITZERLAND":"Switzerland","SX":"Sint Maarten","SY":"Siria","SYRIA":"Syria","SZ":"Swaziland","TA":"Tristan da Cunha","TAHITI":"Tahiti","TAIWAN":"Taiwan","TAJIKISTAN":"Tajikistan","TANZANIA":"Tanzania","TC":"Isole Turks e Caicos","TD":"Ciad","TF":"Territori australi francesi","TG":"Togo","TH":"Tailandia","THAILAND":"Thailand","TIMOR_LESTE":"Timor-Leste","TJ":"Tagikistan","TK":"Tokelau","TL":"Timor Est","TM":"Turkmenistan","TN":"Tunisia","TO":"Tonga","TOGO":"Togo","TONGA":"Tonga","TR":"Turchia","TRINIDAD_AND_TOBAGO":"Trinidad and Tobago","TT":"Trinidad e Tobago","TUNISIA":"Tunisia","TURKEY":"Turkey","TURKMENISTAN":"Turkmenistan","TURKS_AND_CAICOS_ISLANDS":"Turks and Caicos Islands","TUVALU":"Tuvalu","TV":"Tuvalu","TW":"Taiwan","TZ":"Tanzania","UA":"Ucraina","UAE":"UAE","UG":"Uganda","UGANDA":"Uganda","UKRAINE":"Ukraine","UM":"Isole minori lontane dagli USA","URUGUAY":"Uruguay","US":"Stati Uniti","USA":"USA","US_VIRGIN_ISLANDS":"US Virgin Islands","UY":"Uruguay","UZ":"Uzbekistan","UZBEKISTAN":"Uzbekistan","VA":"Città del Vaticano","VANUATU":"Vanuatu","VC":"Saint Vincent e Grenadines","VE":"Venezuela","VENEZUELA":"Venezuela","VG":"Isole Vergini Britanniche","VI":"Isole Vergini Americane","VIETNAM":"Vietnam","VN":"Vietnam","VU":"Vanuatu","WALES":"Wales","WF":"Wallis e Futuna","WORLD":"World","WS":"Samoa","XK":"Kosovo","YE":"Yemen","YEMEN":"Yemen","YT":"Mayotte","ZA":"Sudafrica","ZAMBIA":"Zambia","ZANZIBAR":"Zanzibar","ZIMBABWE":"Zimbabwe","ZM":"Zambia","ZW":"Zimbabwe"},"country":{"Active teams":"Squadre partecipanti","No active leagues":"Non ci sono le leghe attive","No active teams":"Non ci sono le squadre attive","Watch all coefficients":"Osservare tutti i coefficienti","country_page_leagues_text":"Per confrontare i coefficienti di bookmaker è necessario scegliere la lega di quale siete interessati in menu laterale a destra. Dopo di questo comparirà la pagina con la lista delle partite e coefficienti attuali per loro.","country_page_teams_text":"Il calendario con l'orario delle partite di squadre %s. Per osservare e confrontare i coefficienti delle partite più vicini, aprite il menu a tendine con la squadra di quale siete interessati.","h1_leagues_text":"Leghe %s %s","h1_teams_text":"Squadre %s %s","leagues":"Leghe %s","show more":"Far vedere di più","table":{"Bookmakers count":"il numero di bookmaker","Date":"Data","Event name":"il nome della partita","Events count":"il numero degli eventi","First event":"La prima partita","League":"La lega","Play date":"Data della partita","Play time":"L'ora dell'inizio","Score":"il punteggio","Start time":"L'inizio della partita"},"teams":"Squadre %s"},"date":{"abbr_day_names":["dom","lun","mar","mer","gio","ven","sab"],"abbr_month_names":[null,"gen","feb","mar","apr","mag","giu","lug","ago","set","ott","nov","dic"],"day_names":["domenica","lunedì","martedì","mercoledì","giovedì","venerdì","sabato"],"formats":{"default":"%Y-%m-%d","long":"%d %B %Y","short":"%d %b"},"month_names":[null,"gennaio","febbraio","marzo","aprile","maggio","giugno","luglio","agosto","settembre","ottobre","novembre","dicembre"],"order":["day","month","year"]},"datetime":{"distance_in_words":{"about_x_hours":{"one":"circa un'ora","other":"circa %{count} ore"},"about_x_months":{"one":"circa un mese","other":"circa %{count} mesi"},"about_x_years":{"one":"circa un anno","other":"circa %{count} anni"},"almost_x_years":{"one":"circa 1 anno","other":"circa %{count} anni"},"half_a_minute":"mezzo minuto","less_than_x_minutes":{"one":"meno di un minuto","other":"meno di %{count} minuti"},"less_than_x_seconds":{"one":"meno di un secondo","other":"meno di %{count} secondi"},"over_x_years":{"one":"oltre un anno","other":"oltre %{count} anni"},"x_days":{"one":"1 giorno","other":"%{count} giorni"},"x_minutes":{"one":"1 minuto","other":"%{count} minuti"},"x_months":{"one":"1 mese","other":"%{count} mesi"},"x_seconds":{"one":"1 secondo","other":"%{count} secondi"},"x_years":{"one":"1 anno","other":"%{count} anni"}},"prompts":{"day":"Giorno","hour":"Ora","minute":"Minuto","month":"Mese","second":"Secondi","year":"Anno"}},"devise":{"Change my password":"Cambiare il password","Change your password":"Cambiare il password","Didn't receive confirmation instructions?":"Non avete ricevuto le istruzioni sulla conferma di password?","Forgot your password?":"Avete dimenticato il password?","Login":"Login","Remember me":"Ricordarmi","Resend confirmation instructions":"Mandare ancora una volta l'istruzione sulla conferma di password","Send me reset password instructions":"Mandare l'istruzione sul recupero di password","Sign up":"Registrazione","characters minimum":"Minimum di simboli","confirm new password":"Confermare il nuovo password","confirmations":{"confirmed":"Il vostro email è confermato con successo","send_instructions":"Tra qualche minuto riceverete il messaggio con le istruzioni come confermare il Vostro indirizzo elettronico","send_paranoid_instructions":"Если ваш электронный адрес есть в нашей базе данных, вы получите сообщение на почту с указаниями как подтвердить свой электронный адрес."},"email":"Posta elettronica","failure":{"already_authenticated":"Avete già accesso","deleted_account":"Account with this email address was deleted. If you want recover it please connect with support.","inactive":"Il Vostro account non è ancora attivato.","invalid":"Login o password è invalido.","last_attempt":"Avete ancora un tentativo e il vostro account sarà sbloccato.","locked":"Il Vostro account è bloccato.","need_to_sign_in":"Login, per favore, per vedere questa pagina.","not_found_in_database":"Login o password è invalido.","timeout":"Il collegamento è stato interrotto. Login, per favore, ancora una volta per continuare.","unauthenticated":"Dovete login o registrarvi per continuare.","unconfirmed":"Dovete confermare il Vostro e-mail per continuare."},"mailer":{"Change my password":"Cambiare il password","Confirm my account":"Confermare il mio account","Hello":"Buongiorno","If you did not request this, please ignore this email":"Se non l'avete fatto - semplicemente ignorate questa lettera","Someone has requested a link to change your password, and you can do this through the link below":"Qualcuno (forse, Voi) ha chiesto link per cambiare il password, Voi potete cambiarlo usando più in giù.","Welcome":"Benvenuto","You can confirm your account email through the link below":"Potete confermare il vostro account,cliccando il link","Your password will not change until you access the link above and create a new one":"Il vostro password non sarà cambiato finora non cliccate il link più in giù e non create il nuovo.","confirmation_instructions":{"subject":"Conferma dei dati"},"password_change":{"subject":"Cambiamento di password"},"reset_password_instructions":{"subject":"L'istruzione sul recupero di password"},"unlock_instructions":{"subject":"L'istruzione sullo sblocco"}},"new password":"Nuovo password","omniauth_callbacks":{"failure":"Non potete essere autenticati %{kind} perchè \"%{reason}\".","success":"L'autenticazione dell'account è compiuta con successo %{kind}."},"password":"Password","password confirmation":"Conferma di password","passwords":{"no_token":"Voi non avete l'accesso di questa pagina senza il passaggio dal messaggio sul recupero. Se passate dal messaggio sul recupero, per favore, convincervi nell'integrità dell'URL appropriato.","send_instructions":"Tra qualche minuto riceverete il messaggio con le istruzioni come eseguire il recupero di password.","send_paranoid_instructions":"Se il vostro e-mail c'è nella nostra data base, tra qualche minuto riceverete il messaggio con il link per il recupero del vostro password.","updated":"Il vostro password è stato cambiato con successo. Avete fatto login.","updated_not_active":"Il vostro password è stato cambiato con successo."},"registrations":{"destroyed":"Arrividerci! Il vostro account è stato cancellato con successo. Speriamo di rivedervi.","signed_up":"Benvenuti! La vostra registrazione è eseguita con successo.","signed_up_but_inactive":"La vostra registrazione è eseguita con successo, ma non potete login perchè il vostro account non è attivato.","signed_up_but_locked":"La vostra registrazione è eseguita con successo, ma non potete login perchè il vostro account è bloccato.","signed_up_but_unconfirmed":"Il messaggio con il link per la conferma è stato inviato al vostro e-mail. Per favore, cliccate il link per confermare il vostro account.","update_needs_confirmation":"Avete aggiornato con successo il vostro account, ma dobbiamo controllare il vostro e-mail nuovo. Verificate i vostri messaggi, cliccate il link per confermare il vostro e-mail nuovo.","updated":"Il vostro account è stato aggiornato con successo."},"sessions":{"already_signed_out":"Avete fatto log out con successo.","signed_in":"Avete fatto log in con successo.","signed_out":"Avete fatto log out con successo."},"unlocks":{"send_instructions":"Tra qualche minuto riceverete il messaggio con le istruzioni come riattivare il vostro account.","send_paranoid_instructions":"Se il vostro e-mail c'è nella nostra data base, tra qualche minuto riceverete il messaggio con il link per il recupero del vostro account.","unlocked":"Il vostro account è stato sbloccato con successo. Log in per continuare."}},"errors":{"format":"%{attribute} %{message}","messages":{"accepted":"deve essere accettata","already_confirmed":"é già confermato, per favore, provate di log in","blank":"non può essere lasciato in bianco","changes_saved":"i cambiamenti sono conservati","confirmation":"non coincide con %{attribute}","confirmation_period_expired":"deve essere confermato durante %{period}, per favore, fate la richiasta per il nuovo","empty":"non può essere vuoto","entered_email":"E-mail è stato usato per log in all'account cancellato. Per favore, contattarci per attivare il vostro account.","equal_to":"deve essere uguale a %{count}","even":"deve essere pari","exclusion":"è riservato","expired":"è scaduto, per favore, fate la richiesta per il nuovo","greater_than":"deve essere maggiore di %{count}","greater_than_or_equal_to":"deve essere maggiore o uguale a %{count}","inclusion":"non è compreso tra le opzioni disponibili","invalid":"non è valido","less_than":"deve essere minore di %{count}","less_than_or_equal_to":"deve essere minore o uguale a %{count}","not_a_number":"non è un numero","not_an_integer":"non è un numero intero","not_found":"non è trovato","not_locked":"non è stato bloccato","not_saved":{"one":"1 errore ha proibito conservare questo %{resource}:","other":" %{count} errori hanno proibito conservare questo %{resource}:"},"odd":"deve essere dispari","other_than":"devono essere di numero diverso da %{count}","please_select_bk":"Per favore, scegliete almeno uno bookmaker","present":"deve essere lasciato in bianco","required":"deve esistere","send_instruction_reset_pass":"Voi riceverete un e-mail con le istruzioni come azzerare il password durante qualche minuto","taken":"è già presente","too_long":{"one":"è troppo lungo (il massimo è 1 carattere)","other":"è troppo lungo (il massimo è %{count} caratteri)"},"too_short":{"one":"è troppo corto (il minimo è 1 carattere)","other":"è troppo corto (il minimo è %{count} caratteri)"},"wrong_length":{"one":"è della lunghezza sbagliata (deve essere di 1 carattere)","other":"è della lunghezza sbagliata (deve essere di %{count} caratteri)"}},"template":{"body":"Ricontrolla i seguenti campi:","header":{"one":"Non posso salvare questo %{model}: 1 errore","other":"Non posso salvare questo %{model}: %{count} errori."}}},"event":{"Close":"Close","Colorful labels":"Cartellini a colori","Draw":"Pareggio","Highest":"Piu alta","Matrix":"Matrice","Open":"Open","Value bets":"Scommesse con le value bet","Valuebets":"Scommesse con le value bet","Visit it":"Passare a live coefficienti","event-live-page-description":"Coefficienti di bookmaker per diversi risultati \u003cspan class=bold\u003e%s\u003c/span\u003e tra piu di 79 uffici di bookmaker.","event-page-description":"Coefficienti di bookmaker per diversi risultati \u003cspan class=bold\u003e%s\u003c/span\u003e tra piu di 79 uffici di bookmaker che si sarà svolto %s alle %s.","match":"Partita","match ended":"La partita è finita %s","match is in live":"La partita è iniziata","match_18":"Combattimento","match_25":"Corsa","match_30":"Batteria","match_31":"Corsa","nav":{"11_s":{"correct_score":"Punteggio esatto","frames":"Frame","handicaps":"Abbuoni","main":"Principale","totals":"Importi"},"12_s":{"correct_score":"Punteggio esatto","handicaps":"Abbuoni","main":"Principale","sets":"Set","totals":"Importi"},"13_s":{"correct_score":"Punteggio esatto","handicaps":"Abbuoni","main":"Principale","sets":"Set","totals":"Importi"},"14_s":{"correct_score":"Punteggio esatto","handicaps":"Abbuoni","main":"Principale","sets":"Set","totals":"Importi"},"15_s":{"halfs":"Tempi","handicaps":"Abbuoni","main":"Principale","totals":"Importi"},"16_s":{"halfs":"Metà","handicaps":"Abbuoni","main":"Principale","totals":"Importi"},"17_s":{"halfs":"Tempi","handicaps":"Abbuoni","main":"Principale","totals":"Importi"},"18_s":{"main":"Principale","totals":"Importi"},"19_s":{"halfs":"Tempi","handicaps":"Abbuoni","main":"Principale","totals":"Importi"},"1_s":{"half":"Tempi","handicaps":"Abbuoni","innings":"Innings","main":"Principale","totals":"Importi"},"23_s":{"halfs":"Tempi","handicaps":"Abbuoni","main":"Principale","totals":"Importi"},"29_s":{"correct_score":"Punteggio esatto","halfs":"Tempi","handicaps":"Abbuoni","main":"Principale","totals":"Importi"},"2_s":{"halfs":"Metà","handicaps":"Abbuoni","innings":"Innings","main":"Principale","quarters":"Quarti","totals":"Importi"},"30_s":{"winner":"Vincitore"},"31_s":{"head_to_head":"Head to Head","podium":"Podium","winner":"Winner"},"4_s":{"halfs":"Tempi","handicaps":"Abbuoni","main":"Principale","totals":"Importi"},"5_s":{"halfs":"Tempi","handicaps":"Abbuoni","main":"Principale","totals":"Importi"},"6_s":{"correct_score":"Punteggio esatto","handicaps":"Abbuoni","main":"Principale","periods":"Tempi","totals":"Importi"},"7_s":{"goals":"Reti","half":"Tempi","halfs":"Tempi","handicaps":"Abbuoni","main":"Principale","statistics":"Statistica"},"8_s":{"correct_score":"Punteggio esatto","handicaps":"Vantaggi","home_away":"Vincitore","sets":"Set","totals":"Importi"},"9_s":{"correct_score":"Punteggio esatto","handicaps":"Abbuoni","main":"Principale","sets":"Set","totals":"Importi"},"close":"Chiudere","open":"Aprire"},"not lay":"Pro","with a score":"Con punteggio","with lay":"Contro","Лучшие коэффициенты":"Migliori coefficienti"},"events":{"Live Odds":"Live coefficienti","Next Matches":"Prossime partite","Popular Matches":"Partite popolari","Surebets":"Surebet"},"events_grid":{"1":1,"2":2,"F1":1,"F2":2,"Hand":"Vantaggio","ML1":1,"ML2":2,"PL1-N":"PL1-N","PL1-Y":"PL1-Y","PL1_3-N":"PL1_3-N","PL1_3-Y":"PL1_3-Y","TO":"Di più","TU":"Meno","Total":"Importo","X":"X","events":"EVENTI","score":"PUNTEGGIO","valF1":"Vantaggio","valF2":"Vantaggio","valT":"Importo"},"footer":{"bookmakers":"bookmaker","legal_info":"Copyright © 2019 Oddsfan, tutti i diritti sono protetti. Questo programma è proposto a buona volontà e qualsiasi tipo di offesa è punibile secondo le norme della legge internazionale.","sport markets":"mercati","sports":"sport"},"global":{"Get the best odds Kick-off at":"Ottenere i migliori coefficienti. L'inizio alle","Home":"Home","Login":"Login","Logout":"Uscire","My account":"Mio account","PAYOUT":"Pagamento","Register":"Registrazione","Soccer":"Calcio","Today":"Oggi","Toggle Menu":"Menu","Tomorrow":"Domani","Yesterday":"Ieri","anonces":"Match previews","betting odds comparison":"odds comparison service","bookmakers":"Bookmaker","calendar":"Event Calendar","check_all_bk":"Scegliere tutto","coming soon":"Tra poco sul sito","country_page_text":"Li troverete i migliori coefficienti di bookmaker per la grande quantità delle partite di calcio %s da piu di %s uffici di bookmaker.","horizontal mode":"nel regime orizzontale di visione","koefs":"Odds","league_h1_text":"%s","league_page_text":"%s Li troverete la lista di tutte le partite disponibili della scelta lega tra 79 uffici di bookmaker. Per confrontare i coefficienti, passate alla pagina di confronto, cliccando il nome dell'evento in cui siete interessati.","open":"Aprire","or":"o","please":"Per favore,","return the phone":"Qirare il cellulare","sports":"Tipi di sport","standings":"Standings","successfully saved":"I cambiamenti sono conservati","world_champions":"WC 2018"},"header":{"SEARCH":"Eventi, antagonista...","choose_bookmakers":"Scegliere bookmaker","choose_league":"Scegliere la lega","mail_subject":"Questione da"},"helpers":{"select":{"prompt":"Seleziona..."},"submit":{"create":"Crea %{model}","submit":"Invia %{model}","update":"Aggiorna %{model}"}},"languages":{"de":"DE","en":"ENG","esr":"ESP","fra":"FRA","lang":"Lingua","language":"Lingua","ru":"RUS"},"market_variation_full_name":{"1ACE-ML1":"Player1 - 1st Ace","1ACE-ML2":"Player2 - 1st Ace","1BR-1":"Player1 - 1st Break","1BR-2":"Player2 - 1st Break","1BR-ML1":"Player1 - 1st Break","1BR-ML2":"Player2 - 1st Break","1BR-X":"No break - 1st Break","1CNR-1":"Team1 - 1st corner","1CNR-2":"Team2 - 1st corner","1CNR-ML1":"Team1 - 1st corner","1CNR-ML2":"Team2 - 1st corner","1CNR-X":"No corners","1DBF-ML1":"Player1 - 1st Double Fault","1DBF-ML2":"Player2 - 1st Double Fault","1OFS-1":"Team1 - 1st offside","1OFS-2":"Team2 - 1st offside","1OFS-ML1":"Team1 - 1st offside","1OFS-ML2":"Team2 - 1st offside","1OFS-X":"No offsides","1SER_F-F1":"Asian Handicap1(%s) - 1st Serve","1SER_F-F2":"Asian Handicap2(%s) - 1st Serve","1SER_OU1-TO":"Total Over(%s) for Team1 - 1st Serve","1SER_OU1-TU":"Total Under(%s) for Team1 - 1st Serve","1SER_OU2-TO":"Total Over(%s) for Team2 - 1st Serve","1SER_OU2-TU":"Total Under(%s) for Team2 - 1st Serve","1SUBS-ML1":"Team1 - 1st subs","1SUBS-ML2":"Team2 - 1st subs","1X2-1":"1","1X2-2":"2","1X2-X":"X","1YC-1":"Team1 - 1st Yellow Card","1YC-2":"Team2 - 1st Yellow Card","1YC-ML1":"Team1 - 1st Yellow Card","1YC-ML2":"Team2 - 1st Yellow Card","1YC-X":"No Yellow Card","60SET-N":"6-0 Set - no","60SET-Y":"6-0 Set - yes","ACE_F-F1":"Asian Handicap1(%s) - Aces","ACE_F-F2":"Asian Handicap2(%s) - Aces","ACE_OU-TO":"Total Over(%s) - Aces","ACE_OU-TU":"Total Under(%s) - Aces","ACE_OU1-TO":"Total Over(%s) for Team1 - Aces","ACE_OU1-TU":"Total Under(%s) for Team1 - Aces","ACE_OU2-TO":"Total Over(%s) for Team2 - Aces","ACE_OU2-TU":"Total Under(%s) for Team2 - Aces","ADDED_EG-EG":"Exact (%s) - Added time","ADDED_EG-EG_N":"Exact (%s) - Added time - no","ADDED_OU-TO":"Total Over(%s) - Added time","ADDED_OU-TU":"Total Under(%s) - Added time","BHO-N":"Both halves \u003e 1.5 goals - no","BHO-Y":"Both halves \u003e 1.5 goals - yes","BHU-N":"Both halves \u003c 1.5 goals - no","BHU-Y":"Both halves \u003c 1.5 goals - yes","BTS-N":"One scoreless","BTS-OTS_Y":"Only one to score","BTS-Y":"Entrambe le squadre segnano","BTSD-N":"Both To Score and Draw - no","BTSD-Y":"Both To Score and Draw - yes","BTSW1-N":"Both To Score and W1 - no","BTSW1-Y":"Both To Score and W1 - yes","BTSW2-N":"Both To Score and W2 - no","BTSW2-Y":"Both To Score and W2 - yes","CNR_1X2-1":"1 - Calci d'angolo","CNR_1X2-2":"2 - Calci d'angolo","CNR_1X2-X":"X - Calci d'angolo","CNR_DC-12":"12 - Calci d'angolo","CNR_DC-1X":"1X - Calci d'angolo","CNR_DC-X2":"X2 - Calci d'angolo","CNR_F-F1":"Handicap 1(%s) - Calci d'angolo","CNR_F-F2":"Handicap 2(%s) - Calci d'angolo","CNR_OE-EVEN":"Pari - Calci d'angolo","CNR_OE-ODD":"Dispari - Calci d'angolo","CNR_OU-TO":"Totale Over(%s) - Calci d'angolo","CNR_OU-TU":"Totale Under(%s) - Calci d'angolo","CNR_OU1-TO":"Totale Over(%s) squadra 1 - Calci d'angolo","CNR_OU1-TU":"Totale Under(%s) squadra 1 - Calci d'angolo","CNR_OU2-TO":"Totale Over(%s) squadra 2 - Calci d'angolo","CNR_OU2-TU":"Totale Under(%s) squadra 2 - Calci d'angolo","CS-CS":"Risultato esatto (%s)","CS-CS_N":"Risultato esatto (%s) - né","DBF_F-F1":"Asian Handicap1(%s) - Double Faults","DBF_F-F2":"Asian Handicap2(%s) - Double Faults","DBF_OU-TO":"Total Over(%s) - Double Faults","DBF_OU-TU":"Total Under(%s) - Double Faults","DBF_OU1-TO":"Total Over(%s) for Team1 - Double Faults","DBF_OU1-TU":"Total Under(%s) for Team1 - Double Faults","DBF_OU2-TO":"Total Over(%s) for Team2 - Double Faults","DBF_OU2-TU":"Total Under(%s) for Team2 - Double Faults","DBH-N":"pareggio entrambi i tempi - né","DBH-Y":"pareggio entrambi i tempi - così","DBL-N":"Double - no","DBL-Y":"Double - yes","DC-12":"12","DC-1X":"1X","DC-X2":"X2","DEH-N":"Draw in either half - no","DEH-Y":"Draw in either half - yes","DNB-DNB1":"Handicap 1(0)/Rimborso in caso di parita","DNB-DNB2":"Handicap 2(0)/Rimborso in caso di parita","DTO-N":"pareggio e Totale Over(2.5) - né","DTO-Y":"pareggio e Totale Over(2.5) - così","DTU-N":"pareggio e Totale Under(2.5) - né","DTU-Y":"pareggio e Totale Under(2.5) - così","EG-EG":"Exact (%s)","EG-EG_N":"Exact (%s) - no","EG1-EG":"Exact (%s) for Team1","EG1-EG_N":"Exact (%s) for Team1 - no","EG2-EG":"Exact (%s) for Team2","EG2-EG_N":"Exact (%s) for Team2 - no","EH-EH1":"European Handicap1(%s)","EH-EH2":"European Handicap2(%s)","EH-EHX":"European HandicapX(%s)","ERR_OU-TO":"Totale Over(%s) - Errori","ERR_OU-TU":"Totale Under(%s) - Errori","F-F1":"Handicap 1(%s)","F-F2":"Handicap 2(%s)","FG-1":"Team1 - 1st goal","FG-2":"Team2 - 1st goal","FG-ML1":"Team1 - 1st goal (draw no bet)","FG-ML2":"Team2 - 1st goal (draw no bet)","FG-X":"No goal","FOUL_1X2-1":"1 - Fallo","FOUL_1X2-2":"2 - Fallo","FOUL_1X2-X":"X - Fallo","FOUL_DC-12":"12 - Fallo","FOUL_DC-1X":"1X - Fallo","FOUL_DC-X2":"X2 - Fallo","FOUL_F-F1":"Handicap 1(%s) - Fallo","FOUL_F-F2":"Handicap 2(%s) - Fallo","FOUL_OE-EVEN":"Pari - Fallo","FOUL_OE-ODD":"Dispari - Fallo","FOUL_OU-TO":"Totale Over(%s) - Fallo","FOUL_OU-TU":"Totale Under(%s) - Fallo","FOUL_OU1-TO":"Totale Over(%s) squadra 1 - Fallo","FOUL_OU1-TU":"Totale Under(%s) squadra 1 - Fallo","FOUL_OU2-TO":"Totale Over(%s) equipo 2 - Fallo","FOUL_OU2-TU":"Totale Under(%s) equipo 2 - Fallo","GBH-N":"Goals in both halves - no","GBH-Y":"Goals in both halves - yes","GBH1-N":"Squadra 1 - Segna in entrambi i tempi - né","GBH1-Y":"Squadra 1 - Segna in entrambi i tempi - così","GBH2-N":"Squadra 2 - Segna in entrambi i tempi - né","GBH2-Y":"Squadra 2 - Segna in entrambi i tempi - così","HH-ML1":"Vincitore della partita squadra 1","HH-ML2":"Vincitore della partita squadra 2","HIT_1X2-1":"1 - Battute valide","HIT_1X2-2":"2 - Battute valide","HIT_1X2-X":"X - Battute valide","HIT_F-F1":"Handicap 1(%s) - Battute valide","HIT_F-F2":"Handicap 2(%s) - Battute valide","HIT_OU-TO":"Totale Over(%s) - Battute valide","HIT_OU-TU":"Totale Under(%s) - Battute valide","HIT_OU1-TO":"Totale Over(%s) squadra 1 - Battute valide","HIT_OU1-TU":"Totale Under(%s) squadra 1 - Battute valide","HIT_OU2-TO":"Totale Over(%s) squadra 2 - Battute valide","HIT_OU2-TU":"Totale Under(%s) squadra 2 - Battute valide","HMG-1":"More goals in the 1st half","HMG-2":"More goals in the 2nd half","HMG-ML1":"1 half most goals (draw no bet)","HMG-ML2":"2 half most goals (draw no bet)","HMG-X":"Equal goals in halves","HTFT-1_1":"01.янв","HTFT-1_1_N":"1/1 - né","HTFT-1_2":"01.фев","HTFT-1_2_N":"1/2 - né","HTFT-1_X":"1/X","HTFT-1_X_N":"1/X - né","HTFT-2_1":"02.янв","HTFT-2_1_N":"2/1 - né","HTFT-2_2":"02.фев","HTFT-2_2_N":"2/2 - né","HTFT-2_X":"2/X","HTFT-2_X_N":"2/X - né","HTFT-X_1":"X/1","HTFT-X_1_N":"X/1 - né","HTFT-X_2":"X/2","HTFT-X_2_N":"X/2 - né","HTFT-X_X":"X/X","HTFT-X_X_N":"X/X - né","HTR-N":"Hattrick - no","HTR-Y":"Hattrick - yes","LCNR-1":"Team1 - Last corner","LCNR-2":"Team2 - Last corner","LCNR-ML1":"Team1 - Last corner","LCNR-ML2":"Team2 - Last corner","LCNR-X":"No corners","LG-1":"Team1 - Last goal","LG-2":"Team2 - Last goal","LG-ML1":"Team1 - Last goal (draw no bet)","LG-ML2":"Team2 - Last goal (draw no bet)","LG-X":"No goal","LOFS-1":"Team1 - Last offside","LOFS-2":"Team2 - Last offside","LOFS-ML1":"Team1 - Last offside","LOFS-ML2":"Team2 - Last offside","LOFS-X":"No offsides","LSUBS-ML1":"Team1 - Last subs","LSUBS-ML2":"Team2 - Last subs","LYC-1":"Team1 - Last Yellow Card","LYC-2":"Team2 - Last Yellow Card","LYC-ML1":"Team1 - Last Yellow Card","LYC-ML2":"Team2 - Last Yellow Card","LYC-X":"No Yellow Card","ML-ML1":"Vincitore della partita squadra 1","ML-ML1-30":"1 ° posto - così","ML-ML2":"Vincitore della partita squadra 2","ML-ML2-30":"1 ° posto - né","NB1-ML1":"Home No Bet - No W2","NB1-ML2":"Home No Bet - W2","NB1-MLX":"Home No Bet - Draw","NB1-MLX_N":"Home No Bet - No Draw","NB2-ML1":"Away No Bet - W1","NB2-ML2":"Away No Bet - No W1","NB2-MLX":"Away No Bet - Draw","NB2-MLX_N":"Away No Bet - No Draw","NG-1":"Team1 - Next goal","NG-2":"Team2 - Next goal","NG-ML1":"Team1 - Next goal (draw no bet)","NG-ML2":"Team2 - Next goal (draw no bet)","NG-X":"No next goal","OE-EVEN":"Pari","OE-ODD":"Dispari","OFS_1X2-1":"1 - Fuorigioco","OFS_1X2-2":"2 - Fuorigioco","OFS_1X2-X":"X - Fuorigioco","OFS_DC-12":"12 - Fuorigioco","OFS_DC-1X":"1X - Fuorigioco","OFS_DC-X2":"X2 - Fuorigioco","OFS_F-F1":"Handicap 1(%s) - Fuorigioco","OFS_F-F2":"Handicap 2(%s) - Fuorigioco","OFS_OE-EVEN":"Pari - Fuorigioco","OFS_OE-ODD":"Dispari - Fuorigioco","OFS_OU-TO":"Totale Over(%s) - Fuorigioco","OFS_OU-TU":"Totale Under(%s) - Fuorigioco","OFS_OU1-TO":"Totale Over(%s) squadra 1 - Fuorigioco","OFS_OU1-TU":"Totale Under(%s) squadra 1 - Fuorigioco","OFS_OU2-TO":"Totale Over(%s) equipo 2 - Fuorigioco","OFS_OU2-TU":"Totale Under(%s) equipo 2 - Fuorigioco","OG-N":"Autogol - né","OG-Y":"Autogol - così","OT-N":"L'incontro va ai tempi supplementari - né","OT-Y":"L'incontro va ai tempi supplementari - così","OU-TO":"Totale Over(%s)","OU-TU":"Totale Under(%s)","OU1-TO":"Totale Over(%s) squadra 1","OU1-TU":"Totale Under(%s) squadra 1","OU2-TO":"Totale Over(%s) equipo 2","OU2-TU":"Totale Under(%s) equipo 2","PEN-N":"di rigore - né","PEN-Y":"di rigore - cosi","PL1-N":"1 ° posto - né","PL1-Y":"1 ° posto - così","PL1_3-N":"1-3 posto - né","PL1_3-Y":"1-3 posto - così","POS_1X2-1":"1 - Controllo di palla","POS_1X2-2":"2 - Controllo di palla","POS_1X2-X":"X - Controllo di palla","POS_DC-12":"12 - Controllo di palla","POS_DC-1X":"1X - Controllo di palla","POS_DC-X2":"X2 - Controllo di palla","POS_F-F1":"Handicap 1(%s) - Controllo di palla","POS_F-F2":"Handicap 2(%s) - Controllo di palla","POS_OU1-TO":"Totale Over(%s) squadra 1 - Controllo di palla","POS_OU1-TU":"Totale Under(%s) squadra 1 - Controllo di palla","POS_OU2-TO":"Totale Over(%s) equipo 2 - Controllo di palla","POS_OU2-TU":"Totale Under(%s) equipo 2 - Controllo di palla","RACE10-1":"Primero en anotar 10 puntos - squadra 1","RACE10-2":"Primero en anotar 10 puntos - squadra 2","RACE10-ML1":"Primero en anotar 10 puntos - squadra 1","RACE10-ML2":"Primero en anotar 10 puntos - squadra 2","RACE10-X":"Primero en anotar 10 puntos - nessuno","RACE15-1":"Primero en anotar 15 puntos - squadra 1","RACE15-2":"Primero en anotar 15 puntos - squadra 2","RACE15-ML1":"Primero en anotar 15 puntos - squadra 1","RACE15-ML2":"Primero en anotar 15 puntos - squadra 2","RACE15-X":"Primero en anotar 15 puntos - nessuno","RACE2-1":"Primero en anotar 2 puntos - squadra 1","RACE2-2":"Primero en anotar 2 puntos - squadra 2","RACE2-ML1":"Primero en anotar 2 puntos - squadra 1","RACE2-ML2":"Primero en anotar 2 puntos - squadra 2","RACE2-X":"Primero en anotar 2 puntos - nessuno","RACE20-1":"Primero en anotar 20 puntos - squadra 1","RACE20-2":"Primero en anotar 20 puntos - squadra 2","RACE20-ML1":"Primero en anotar 20 puntos - squadra 1","RACE20-ML2":"Primero en anotar 20 puntos - squadra 2","RACE20-X":"Primero en anotar 20 puntos - nessuno","RACE3-1":"Primero en anotar 3 puntos - squadra 1","RACE3-2":"Primero en anotar 3 puntos - squadra 2","RACE3-ML1":"Primero en anotar 3 puntos - squadra 1","RACE3-ML2":"Primero en anotar 3 puntos - squadra 2","RACE3-X":"Primero en anotar 3 puntos - nessuno","RACE4-1":"Primero en anotar 4 puntos - squadra 1","RACE4-2":"Primero en anotar 4 puntos - squadra 2","RACE4-ML1":"Primero en anotar 4 puntos - squadra 1","RACE4-ML2":"Primero en anotar 4 puntos - squadra 2","RACE4-X":"Primero en anotar 4 puntos - nessuno","RACE5-1":"Primero en anotar 5 puntos - squadra 1","RACE5-2":"Primero en anotar 5 puntos - squadra 2","RACE5-ML1":"Primero en anotar 5 puntos - squadra 1","RACE5-ML2":"Primero en anotar 5 puntos - squadra 2","RACE5-X":"Primero en anotar 5 puntos - nessuno","RC-N":"cartellino rosso - né","RC-Y":"cartellino rosso - cosi","RHE_OU-TO":"Totale Over(%s) - Battute valide+Errori+Punti","RHE_OU-TU":"Totale Under(%s) - Battute valide+Errori+Punti","SD-N":"Score Draw - no","SD-Y":"Score Draw - yes","SET_CS-SET_CS":"Risultato esatto (%s) - Set","SET_CS-SET_CS_N":"Risultato esatto (%s) - Set - né","SET_EG-EG":"Exact (%s) - Sets","SET_EG-EG_N":"Exact (%s) - Sets - no","SET_F-SET_F1":"Handicap 1(%s) - Set","SET_F-SET_F2":"Handicap 2(%s) - Set","SET_OU-SET_TO":"Totale Over(%s) - Set","SET_OU-SET_TU":"Totale Under(%s) - Set","SHOT_1X2-1":"1 - Tiri in porta","SHOT_1X2-2":"2 - Tiri in porta","SHOT_1X2-X":"X - Tiri in porta","SHOT_DC-12":"12 - Tiri in porta","SHOT_DC-1X":"1X - Tiri in porta","SHOT_DC-X2":"X2 - Tiri in porta","SHOT_F-F1":"Handicap 1(%s) - Tiri in porta","SHOT_F-F2":"Handicap 2(%s) - Tiri in porta","SHOT_OE-EVEN":"Pari - Tiri in porta","SHOT_OE-ODD":"Dispari - Tiri in porta","SHOT_OU-TO":"Totale Over(%s) - Tiri in porta","SHOT_OU-TU":"Totale Under(%s) - Tiri in porta","SHOT_OU1-TO":"Totale Over(%s) squadra 1 - Tiri in porta","SHOT_OU1-TU":"Totale Under(%s) squadra 1 - Tiri in porta","SHOT_OU2-TO":"Totale Over(%s) equipo 2 - Tiri in porta","SHOT_OU2-TU":"Totale Under(%s) equipo 2 - Tiri in porta","SUBS_OU-TO":"Total Over(%s) - Subs","SUBS_OU-TU":"Total Under(%s) - Subs","SUBS_OU1-TO":"Total Over(%s) for Team1 - Subs","SUBS_OU1-TU":"Total Under(%s) for Team1 - Subs","SUBS_OU2-TO":"Total Over(%s) for Team2 - Subs","SUBS_OU2-TU":"Total Under(%s) for Team1 - Subs","SWS-N":"A sub will score - no","SWS-Y":"A sub will score - yes","TB-TO":"Totale Over(%s) - Tie break","TB-TU":"Totale Under(%s) - Tie break","TIME_FG-1":"1st goal - 1 half","TIME_FG-2":"1st goal - 2 half","TIME_FG-X":"No goal","TIME_SUBS-1":"1st substitution - 1 half","TIME_SUBS-2":"1st substitution - 2 half","TIME_SUBS-X":"1st substitution - intermission","TOX1-N":"1X e Totale Over(2.5) - né","TOX1-Y":"1X e Totale Over(2.5) - così","TOX2-N":"X2 e Totale Over(2.5) - né","TOX2-Y":"X2 e Totale Over(2.5) - così","TUX1-N":"1X e Totale Under(2.5) - né","TUX1-Y":"1X e Totale Under(2.5) - così","TUX2-N":"X2 e Totale Under(2.5) - né","TUX2-Y":"X2 e Totale Under(2.5) - così","W1G1-N":"Vittoria davanti 1 Goal - squadra 1 - né","W1G1-Y":"Vittoria davanti 1 Goal - squadra 1 - cosi","W1G2-N":"Vittoria davanti 1 Goal - squadra 2 - né","W1G2-Y":"Vittoria davanti 1 Goal - squadra 2 - cosi","W2G1-N":"Vittoria davanti 2 Goal - squadra 1 - né","W2G1-Y":"Vittoria davanti 2 Goal - squadra 1 - cosi","W2G2-N":"Vittoria davanti 2 Goal - squadra 2 - né","W2G2-Y":"Vittoria davanti 2 Goal - squadra 2 - cosi","W3G1-N":"Vittoria davanti 3 Goal - squadra 1 - né","W3G1-Y":"Vittoria davanti 3 Goal - squadra 1 - cosi","W3G2-N":"Vittoria davanti 3 Goal - squadra 2 - né","W3G2-Y":"Vittoria davanti 3 Goal - squadra 2 - cosi","WBH1-N":"Squadra 1  Vincente di entrambi i tempi - né","WBH1-Y":"Squadra 1  Vincente di entrambi i tempi - così","WBH2-N":"Squadra 2  Vincente di entrambi i tempi - né","WBH2-Y":"Squadra 2  Vincente di entrambi i tempi - così","WEH1-N":"Squadra 1 Vincente di uno dei tempi - né","WEH1-Y":"Squadra 1 Vincente di uno dei tempi - così","WEH2-N":"Squadra 2 Vincente di uno dei tempi - né","WEH2-Y":"Squadra 2 Vincente di uno dei tempi - così","WFB-N":"Win From Behind - no","WFB-Y":"Win From Behind - yes","WFB1-N":"Team1 to Win From Behind - no","WFB1-Y":"Team1 to Win From Behind - yes","WFB2-N":"Team2 to Win From Behind - no","WFB2-Y":"Team2 to Win From Behind - yes","WTN1-N":"Squadra 1 vincente a zero - né","WTN1-Y":"Squadra 1 vincente a zero - così","WTN2-N":"Squadra 2 vincente a zero - né","WTN2-Y":"Squadra 2 vincente a zero - così","WTO1-N":"Vincitore della partita squadra 1 e Totale Over(2.5) - né","WTO1-Y":"Vincitore della partita squadra 1 e Totale Over(2.5) - così","WTO2-N":"Vincitore della partita squadra 2 e Totale Over(2.5) - né","WTO2-Y":"Vincitore della partita squadra 2 e Totale Over(2.5) - così","WTU1-N":"Vincitore della partita squadra 1 e Totale Under(2.5) - né","WTU1-Y":"Vincitore della partita squadra 1 e Totale Under(2.5) - così","WTU2-N":"Vincitore della partita squadra 2 e Totale Under(2.5) - né","WTU2-Y":"Vincitore della partita squadra 2 e Totale Under(2.5) - così","YC_1X2-1":"1 - cartellino giallo","YC_1X2-2":"2 - cartellino giallo","YC_1X2-X":"X - cartellino giallo","YC_DC-12":"12 - cartellino giallo","YC_DC-1X":"1X - cartellino giallo","YC_DC-X2":"X2 - cartellino giallo","YC_F-F1":"Handicap 1(%s) - cartellino giallo","YC_F-F2":"Handicap 2(%s) - cartellino giallo","YC_OE-EVEN":"Pari - cartellino giallo","YC_OE-ODD":"Dispari - cartellino giallo","YC_OU-TO":"Totale Over(%s) - cartellino giallo","YC_OU-TU":"Totale Under(%s) - cartellino giallo","YC_OU1-TO":"Totale Over(%s) squadra 1 - cartellino giallo","YC_OU1-TU":"Totale Under(%s) squadra 1 - cartellino giallo","YC_OU2-TO":"Totale Over(%s) equipo 2 - cartellino giallo","YC_OU2-TU":"Totale Under(%s) equipo 2 - cartellino giallo"},"markets":{"1":{"-1 F":"Handicap","-1 F more":"Handicap (aggiuntivo)","-1 ML":"Vincitore della partita","-1 OU":"Under/Over","-1 OU more":"Under/Over (aggiuntivo)","-1 OU1":"Totale goal squadra 1","-1 OU1 more":"Totale goal squadra 1 (aggiuntivo)","-1 OU2":"Totale goal squadra 2","-1 OU2 more":"Totale goal squadra 2 (aggiuntivo)","-100 ML":"Qualificazione","0 1X2":"1X2","1 1X2":"1X2 [1 inning]","1 F":"Handicap [1 inning]","1 F more":"Handicap [1 inning](aggiuntivo)","1 OU":"Under/Over [1 inning]","1 OU more":"Under/Over [1 inning] (aggiuntivo)","2 1X2":"1X2 [2 inning]","2 F":"Handicap [2 inning]","2 F more":"Handicap [2 inning](aggiuntivo)","2 OU":"Under/Over [2 inning]","2 OU more":"Under/Over [2 inning] (aggiuntivo)","3 1X2":"1X2 [3 inning]","3 F":"Handicap [3 inning]","3 F more":"Handicap [3 inning](aggiuntivo)","3 OU":"Under/Over [3 inning]","3 OU more":"Under/Over [3 inning] (aggiuntivo)"},"11":{"0 CS":"Risultato esatto","0 F":"Handicap","0 F more":"Handicap (aggiuntivo)","0 ML":"Vincitore della partita","0 OU":"Under/Over","0 OU more":"Under/Over (aggiuntivo)","0 OU1":"Totale goal squadra 1","0 OU2":"Totale goal squadra 2","1 ML":"Vincitore della partita [1 set]","12":null,"2 ML":"Vincitore della partita [2 set]","3 ML":"Vincitore della partita [3 set]"},"13":{"-1 CS":"Risultato esatto","-1 F":"Handicap","-1 F more":"Handicap (aggiuntivo)","-1 ML":"Vincitore della partita","-1 OU":"Under/Over","-1 OU more":"Under/Over (aggiuntivo)","1 ML":"Vincitore della partita [1 set]","2 ML":"Vincitore della partita [2 set]","3 ML":"Vincitore della partita [3 set]"},"14":{"0 CS":"Risultato esatto","0 F":"Handicap","0 F more":"Handicap (aggiuntivo)","0 ML":"Vincitore della partita","0 OU":"Under/Over","0 OU more":"Under/Over (aggiuntivo)","1 ML":"Vincitore della partita [1 set]","2 ML":"Vincitore della partita [2 set]","3 ML":"Vincitore della partita [3 set]"},"15":{"-100 ML":"Qualificazione","0 1X2":"1X2","0 F":"Handicap","0 F more":"Handicap (aggiuntivo)","0 OU":"Under/Over","0 OU more":"Under/Over (aggiuntivo)","0 OU1":"Totale goal squadra 1","0 OU1 more":"Totale goal squadra 1 (aggiuntivo)","0 OU2":"Totale goal squadra 2","0 OU2 more":"Totale goal squadra 2 (aggiuntivo)","1 1X2":"1X2[1 tempo]","1 F":"Handicap [1 tempo]","1 F more":"Handicap [1 tempo](aggiuntivo)","1 OU":"Under/Over [1 tempo]","1 OU more":"Under/Over [1 tempo] (aggiuntivo)","2 1X2":"1X2[2 tempo]","2 F":"Handicap [2 tempo]","2 F more":"Handicap [2 tempo](aggiuntivo)","2 OU":"Under/Over [2 tempo]","2 OU more":"Under/Over [2 tempo] (aggiuntivo)"},"16":{"-100 ML":"Qualificazione","0 1X2":"1X2","0 F":"Handicap","0 F more":"Handicap (aggiuntivo)","0 OU":"Under/Over","0 OU more":"Under/Over (aggiuntivo)","0 OU1":"Totale goal squadra 1","0 OU1 more":"Totale goal squadra 1 (aggiuntivo)","0 OU2":"Totale goal squadra 2","0 OU2 more":"Totale goal squadra 2 (aggiuntivo)","1 1X2":"1X2[1 tempo]","1 F":"Handicap [1 tempo]","1 F more":"Handicap [1 tempo](aggiuntivo)","1 OU":"Under/Over [1 tempo]","1 OU more":"Under/Over [1 tempo] (aggiuntivo)","2 1X2":"1X2[2 tempo]","2 F":"Handicap [2 tempo]","2 F more":"Handicap [2 tempo](aggiuntivo)","2 OU":"Under/Over [2 tempo]","2 OU more":"Under/Over [2 tempo] (aggiuntivo)"},"17":{"-100 ML":"Qualificazione","0 1X2":"1X2","0 F":"Handicap","0 F more":"Handicap (aggiuntivo)","0 OU":"Under/Over","0 OU more":"Under/Over (aggiuntivo)","0 OU1":"Totale goal squadra 1","0 OU1 more":"Totale goal squadra 1 (aggiuntivo)","0 OU2":"Totale goal squadra 2","0 OU2 more":"Totale goal squadra 2 (aggiuntivo)","1 1X2":"1X2[1 tempo]","1 F":"Handicap [1 tempo]","1 F more":"Handicap [1 tempo](aggiuntivo)","1 OU":"Under/Over [1 tempo]","1 OU more":"Under/Over [1 tempo] (aggiuntivo)","2 1X2":"1X2[2 tempo]","2 F":"Handicap [2 tempo]","2 F more":"Handicap [2 tempo](aggiuntivo)","2 OU":"Under/Over [2 tempo]","2 OU more":"Under/Over [2 tempo] (aggiuntivo)"},"18":{"0 1X2":"1X2","0 ML":"Vincitore della partita","0 OU":"Under/Over","0 OU more":"Under/Over (aggiuntivo)"},"19":{"-100 ML":"Qualificazione","0 1X2":"1X2","0 F":"Handicap","0 F more":"Handicap (aggiuntivo)","0 OU":"Under/Over","0 OU more":"Under/Over (aggiuntivo)","0 OU1":"Totale goal squadra 1","0 OU1 more":"Totale goal squadra 1 (aggiuntivo)","0 OU2":"Totale goal squadra 2","0 OU2 more":"Totale goal squadra 2 (aggiuntivo)","1 1X2":"1X2[1 tempo]","1 F":"Handicap [1 tempo]","1 F more":"Handicap [1 tempo](aggiuntivo)","1 OU":"Under/Over [1 tempo]","1 OU more":"Under/Over [1 tempo] (aggiuntivo)","2 1X2":"1X2[2 tempo]","2 F":"Handicap [2 tempo]","2 F more":"Handicap [2 tempo](aggiuntivo)","2 OU":"Under/Over [2 tempo]","2 OU more":"Under/Over [2 tempo] (aggiuntivo)"},"2":{"-1 F":"Handicap","-1 F more":"Handicap (aggiuntivo)","-1 ML":"Vincitore della partita","-1 OU":"Under/Over","-1 OU more":"Under/Over (aggiuntivo)","-1 OU1":"Totale goal squadra 1","-1 OU1 more":"Totale goal squadra 1 (aggiuntivo)","-1 OU2":"Totale goal squadra 2","-1 OU2 more":"Totale goal squadra 2 (aggiuntivo)","-100 ML":"Qualificazione","0 1X2":"1X2","1 1X2":"1X2[1 quarto]","1 F":"Handicap [1 quarto]","1 F more":"Handicap [1 quarto](aggiuntivo)","1 OU":"Under/Over [1 quarto]","1 OU more":"Under/Over [1 quarto] (aggiuntivo)","10 1X2":"1X2[1 tempo]","10 F":"Handicap [1 tempo]","10 F more":"Handicap [1 tempo](aggiuntivo)","10 OU":"Under/Over [1 tempo]","10 OU more":"Under/Over [1 tempo] (aggiuntivo)","2 1X2":"1X2[2 quarto]","2 F":"Handicap [2 quarto]","2 F more":"Handicap [2 quarto](aggiuntivo)","2 OU":"Under/Over [2 quarto]","2 OU more":"Under/Over [2 quarto] (aggiuntivo)","20 1X2":"1X2[2 tempo]","20 F":"Handicap [2 tempo]","20 F more":"Handicap [2 tempo](aggiuntivo)","20 OU":"Under/Over [2 tempo]","20 OU more":"Under/Over [2 tempo] (aggiuntivo)","3 1X2":"1X2[3 quarto]","3 F":"Handicap [3 quarto]","3 F more":"Handicap [3 quarto](aggiuntivo)","3 OU":"Under/Over [3 quarto]","3 OU more":"Under/Over [3 quarto] (aggiuntivo)","4 1X2":"1X2[4 quarto]","4 F":"Handicap [4 quarto]","4 F OU":"Under/Over [4 quarto]","4 F OU more":"Under/Over [4 quarto] (aggiuntivo)","4 F more":"Handicap [4 quarto](aggiuntivo)","4 OU":"Under/Over [4 quarto]","4 OU more":"Under/Over [4 quarto] (aggiuntivo)"},"23":{"-100 ML":"Qualificazione","0 1X2":"1X2","0 F":"Handicap","0 F more":"Handicap (aggiuntivo)","0 OU":"Under/Over","0 OU more":"Under/Over (aggiuntivo)","0 OU1":"Totale goal squadra 1","0 OU1 more":"Totale goal squadra 1 (aggiuntivo)","0 OU2":"Totale goal squadra 2","0 OU2 more":"Totale goal squadra 2 (aggiuntivo)","1 1X2":"1X2[1 tempo]","1 F":"Handicap [1 tempo]","1 F more":"Handicap [1 tempo](aggiuntivo)","1 OU":"Under/Over [1 tempo]","1 OU more":"Under/Over [1 tempo] (aggiuntivo)","2 1X2":"1X2[2 tempo]","2 F":"Handicap [2 tempo]","2 F more":"Handicap [2 tempo](aggiuntivo)","2 OU":"Under/Over [2 tempo]","2 OU more":"Under/Over [2 tempo] (aggiuntivo)"},"25":{"0 HH":"Кто выше","0 PL1":"1 ° posto","0 PL1_3":"1-3 posto"},"29":{"-1 CS":"Risultato esatto","-1 F":"Handicap","-1 F more":"Handicap (aggiuntivo)","-1 ML":"Vincitore della partita","-1 OU":"Under/Over","-1 OU more":"Under/Over (aggiuntivo)","1 F":"Handicap [1 set]","1 F more":"Handicap [1 set](aggiuntivo)","1 ML":"Vincitore della partita [1 set]","1 OU":"Under/Over [1 set]","1 OU more":"Under/Over [1 set] (aggiuntivo)","2 F":"Handicap [2 set]","2 F more":"Handicap [2 set](aggiuntivo)","2 ML":"Vincitore della partita [2 set]","2 OU":"Under/Over [2 set]","2 OU more":"Under/Over [2 set] (aggiuntivo)","3 F":"Handicap [3 set]","3 F more":"Handicap [3 set](aggiuntivo)","3 ML":"Vincitore della partita [3 set]","3 OU":"Under/Over [3 set]","3 OU more":"Under/Over [3 set] (aggiuntivo)"},"30":{"0 ML":"1 ° posto"},"31":{"0 HH":"Кто выше","0 PL1":"1 ° posto","0 PL1_3":"1-3 posto"},"4":{"-100 ML":"Qualificazione","0 1X2":"1X2","0 F":"Handicap","0 F more":"Handicap (aggiuntivo)","0 OU":"Under/Over","0 OU more":"Under/Over (aggiuntivo)","0 OU1":"Totale goal squadra 1","0 OU1 more":"Totale goal squadra 1 (aggiuntivo)","0 OU2":"Totale goal squadra 2","0 OU2 more":"Totale goal squadra 2 (aggiuntivo)","1 1X2":"1X2[1 tempo]","1 F":"Handicap [1 tempo]","1 F more":"Handicap [1 tempo](aggiuntivo)","1 OU":"Under/Over [1 tempo]","1 OU more":"Under/Over [1 tempo] (aggiuntivo)","2 1X2":"1X2[2 tempo]","2 F":"Handicap [2 tempo]","2 F more":"Handicap [2 tempo](aggiuntivo)","2 OU":"Under/Over [2 tempo]","2 OU more":"Under/Over [2 tempo] (aggiuntivo)"},"5":{"-100 ML":"Qualificazione","0 1X2":"1X2","0 F":"Handicap","0 F more":"Handicap (aggiuntivo)","0 OU":"Under/Over","0 OU more":"Under/Over (aggiuntivo)","0 OU1":"Totale goal squadra 1","0 OU1 more":"Totale goal squadra 1 (aggiuntivo)","0 OU2":"Totale goal squadra 2","0 OU2 more":"Totale goal squadra 2 (aggiuntivo)","1 1X2":"1X2[1 tempo]","1 F":"Handicap [1 tempo]","1 F more":"Handicap [1 tempo](aggiuntivo)","1 OU":"Under/Over [1 tempo]","1 OU more":"Under/Over [1 tempo] (aggiuntivo)","2 1X2":"1X2[2 tempo]","2 F":"Handicap [2 tempo]","2 F more":"Handicap [2 tempo](aggiuntivo)","2 OU":"Under/Over [2 tempo]","2 OU more":"Under/Over [2 tempo] (aggiuntivo)"},"6":{"-100 ML":"Qualificazione","-2 EH":"Europeo handicap (tempi supplementari)","-2 EH more":"Europeo handicap (aggiuntivo) (tempi supplementari)","-2 F":"Handicap (tempi supplementari)","-2 F more":"Handicap (aggiuntivo) (mit verlängerung)","-2 ML":"Vincitore della partita","-2 OU":"Under/Over (tempi supplementari)","-2 OU more":"Under/Over (aggiuntivo) (tempi supplementari)","-2 OU1":"Totale goal squadra 1 (tempi supplementari)","-2 OU1 more":"Totale goal squadra 1 (aggiuntivo) (tempi supplementari)","-2 OU2":"Totale goal squadra 2 (tempi supplementari)","-2 OU2 more":"Totale goal squadra 2 (aggiuntivo) (tempi supplementari)","0 1X2":"1X2","0 BTS":"Entrambe le squadre segnano","0 CS":"Risultato esatto","0 DC":"Doppia chance","0 EH":"Europeo handicap","0 EH more":"Europeo handicap (aggiuntivo)","0 F":"Handicap","0 F more":"Handicap (aggiuntivo)","0 OU":"Under/Over","0 OU more":"Under/Over (aggiuntivo)","0 OU1":"Totale goal squadra 1","0 OU1 more":"Totale goal squadra 1 (aggiuntivo)","0 OU2":"Totale goal squadra 2","0 OU2 more":"Totale goal squadra 2 (aggiuntivo)","1 1X2":"1X2 [1 periodo]","1 F":"Handicap [1 periodo]","1 F more":"Handicap [1 periodo](aggiuntivo)","1 OU":"Under/Over [1 periodo]","1 OU more":"Under/Over [1 periodo] (aggiuntivo)","2 1X2":"1X2 [2 periodo]","2 F":"Handicap [2 periodo]","2 F more":"Handicap [2 periodo](aggiuntivo)","2 OU":"Under/Over [2 periodo]","2 OU more":"Under/Over [2 periodo] (aggiuntivo)","3 1X2":"1X2 [3 periodo]","3 F":"Handicap [3 periodo]","3 F more":"Handicap [3 periodo](aggiuntivo)","3 OU":"Under/Over [3 periodo]","3 OU more":"Under/Over [3 periodo] (aggiuntivo)"},"7":{"-100 ML":"Qualificazione","0 1X2":"1X2","0 BTS":"Entrambe le squadre segnano","0 CNR_1X2":"1X2 Calci d'angolo","0 CNR_DC":"Calci d'angolo Under/Over (aggiuntivo)","0 CNR_F":"Calci d'angolo handicap asiatico","0 CNR_F more":"Calci d'angolo handicap asiatico (aggiuntivo)","0 CNR_OU":"Calci d'angolo Under/Over","0 CNR_OU more":"Calci d'angolo Under/Over (aggiuntivo)","0 CNR_OU1":"Calci d'angolo Totale goal squadra 1","0 CNR_OU2":"Calci d'angolo Totale goal squadra 2","0 DC":"Doppia chance","0 DNB":"Rimborso in caso di parita","0 EH":"Europeo handicap","0 EH more":"Europeo handicap (aggiuntivo)","0 F":"Handicap asiatico","0 F more":"Handicap asiatico (aggiuntivo)","0 NG":"Prima squadra a segnare","0 OE":"Dispari/Pari","0 OU":"Under/Over","0 OU more":"Under/Over (aggiuntivo)","0 OU1":"Totale goal squadra 1","0 OU1 more":"Totale goal squadra 1 (aggiuntivo)","0 OU2":"Totale goal squadra 2","0 OU2 more":"Totale goal squadra 2 (aggiuntivo)","0 WTN1":"Squadra 1 vincente a zero","0 WTN2":"Squadra 2 vincente a zero","1 1X2":"1X2 [1 tempo]","1 CNR_1X2":"1X2 [1 tempo] Calci d'angolo","1 CNR_F":"Calci d'angolo handicap asiatico [1 tempo]","1 CNR_OU":"Calci d'angolo Under/Over [1 tempo]","1 DC":"Doppia chance [1 tempo]","1 EH":"Europeo handicap [1 tempo]","1 EH more":"Europeo handicap (aggiuntivo) [1 tempo]","1 F":"Handicap asiatico [1 tempo]","1 F more":"Handicap asiatico (aggiuntivo) [1 tempo]","1 OU":"Under/Over [1 tempo]","1 OU more":"Under/Over [1 tempo] (aggiuntivo)","2 1X2":"1X2 [2 tempo]","2 DC":"Doppia chance [2 tempo]","2 EH":"Europeo handicap [2 tempo]","2 EH more":"Europeo handicap (aggiuntivo) [2 tempo]","2 F":"Handicap asiatico [2 tempo]","2 F more":"Handicap asiatico (aggiuntivo) [2 tempo]","2 OU":"Under/Over [2 tempo]","2 OU more":"Under/Over [2 tempo] (aggiuntivo)"},"8":{"-1 CS":"Risultato esatto","-1 F":"Handicap","-1 F more":"Handicap (aggiuntivo)","-1 ML":"Vincitore della partita","-1 OU":"Under/Over","-1 OU more":"Under/Over (aggiuntivo)","1 F":"Handicap [1 set]","1 F more":"Handicap [1 set](aggiuntivo)","1 ML":"Vincitore della partita [1 set]","1 OU":"Under/Over [1 set]","1 OU more":"Under/Over [1 set] (aggiuntivo)","2 F":"Handicap [2 set]","2 F more":"Handicap [2 set](aggiuntivo)","2 ML":"Vincitore della partita [2 set]","2 OU":"Under/Over [2 set]","2 OU more":"Under/Over [2 set] (aggiuntivo)"},"9":{"-100 ML":"Qualificazione","0 CS":"Risultato esatto","0 F":"Handicap","0 F more":"Handicap (aggiuntivo)","0 ML":"Vincitore della partita","0 OU":"Under/Over","0 OU more":"Under/Over (aggiuntivo)","1 F":"Handicap [1 set]","1 F more":"Handicap [1 set](aggiuntivo)","1 ML":"Vincitore della partita [1 set]","1 OU":"Under/Over [1 set]","1 OU more":"Under/Over [1 set] (aggiuntivo)","2 F":"Handicap [2 set]","2 F more":"Handicap [2 set](aggiuntivo)","2 ML":"Vincitore della partita [2 set]","2 OU":"Under/Over [2 set]","2 OU more":"Under/Over [2 set] (aggiuntivo)","3 F":"Handicap [3 set]","3 F more":"Handicap [3 set](aggiuntivo)","3 ML":"Vincitore della partita [3 set]","3 OU":"Under/Over [3 set]","3 OU more":"Under/Over [3 set] (aggiuntivo)"}},"modal":{"Choose Bookmakers":"Scegliere bookmaker"},"no_found":{"markets_message":"Non ci sono i coefficienti attivi ai mercati di questo tipo","message":"Purtroppo, non ci sono gli eventi per il momento."},"number":{"currency":{"format":{"delimiter":".","format":"%n %u","precision":2,"separator":",","significant":false,"strip_insignificant_zeros":false,"unit":"€"}},"format":{"delimiter":".","precision":2,"separator":",","significant":false,"strip_insignificant_zeros":false},"human":{"decimal_units":{"format":"%n %u","units":{"billion":"Miliardi","million":"Milioni","quadrillion":"Biliardi","thousand":"Mila","trillion":"Bilioni","unit":""}},"format":{"delimiter":"","precision":3,"significant":true,"strip_insignificant_zeros":true},"storage_units":{"format":"%n %u","units":{"byte":{"one":"Byte","other":"Byte"},"gb":"GB","kb":"KB","mb":"MB","tb":"TB"}}},"percentage":{"format":{"delimiter":"","format":"%n%"}},"precision":{"format":{"delimiter":""}}},"recaptcha":{"errors":{"failed":"Recaptcha - la prova non è fatta","reenter":"Per favore, compilate la captcha"}},"seo":{"/it/":{"description":"I coefficienti da 79 uffici di bookmaker per gli eventi di sport attuali in Live e Prematch! Confrontate, Puntate e Vincete con OddsFan!","keywords":"online, servizio, confronto, bookmaker, coefficienti","title":"Il servizio per il confronto degli uffici di bookmaker – OddsFan.com"},"/it/about_bookmakers":{"description":"Tutta l'informazione necessaria sugli uffici di bookmaker con quali collaboriamo.","keywords":"OddsFan","title":"Sui nostri bookmaker | OddsFan.com"},"/it/about_us":{"description":"sul nostro servizio del confronto dei coefficienti di bookmaker.","keywords":"OddsFan","title":"su di noi | OddsFan.com"},"/it/account":{"description":"L'informazione privata","keywords":"OddsFan","title":"L'informazione privata"},"/it/account/bookmakers":{"description":"Mio bookmaker","keywords":"OddsFan","title":"Mio bookmaker"},"/it/advanced":{"description":"I consigli professionali e raccomandazioni da scommettitori esperti per i principianti.","keywords":"OddsFan","title":"I consigli professionali e raccomandazioni | OddsFan.com"},"/it/advertising":{"description":"Tutte le questioni  sulla collaborazione e pubblicità sul nostro sito.","keywords":"OddsFan","title":"Pubblicità | OddsFan.com"},"/it/betting_guide":{"description":"Come puntare negli uffici di bookmaker manuale passo a passo per i principianti.","keywords":"OddsFan","title":"Come puntare negli uffici di bookmaker? | OddsFan.com"},"/it/contact_us":{"description":"Il feedback dell'amministrazione del sito.","keywords":"OddsFan","title":"I contatti| OddsFan.com"},"/it/content_solution":{"description":"Decisione di content da OddsFan.com","keywords":"OddsFan","title":"Decisione di content | OddsFan.com"},"/it/country":{"description":"Abbiamo i migliori coefficienti di bookmaker su %s! confrontate, scegliete le migliori proposte da bookmaker e puntate con vantaggi!%s","keywords":"%s, %s, coefficienti, bookmaker, confronto","title":"Leghe %s - confrontare i coefficienti di bookmaker su %s"},"/it/country/teams":{"description":"%s il calendario e l'orario di partite su %s. Abbiamo i migliori coefficienti di bookmaker per i diversi eventi di sport in cui siete interessati%s.","keywords":"%s, coefficienti, bookmaker, calendario, partite. %s","title":"Squadre %s - il calendario di partite su %s"},"/it/disclaimer":{"description":"l'esclusione della responsabilità OddsFan.com","keywords":"OddsFan","title":"l'esclusione della responsabilità | OddsFan.com"},"/it/event":{"description":"%s coefficienti di bookmaker per la partita %s","keywords":"%s, %s, %s, coefficienti, bookmaker, partita","title":"%s - coefficienti di bookmaker per la partita"},"/it/getting_started":{"description":"Con che cosa iniziare il lavoro con il nostro servizio del confronto dei coefficienti di bookmaker.","keywords":"OddsFan","title":"Come iniziare il lavoro con il nostro servizio? | OddsFan.com"},"/it/league":{"description":"%s: I migliori coefficienti di bookmaker per gli eventi da 79 uffici di bookmaker. Confrontate, scegliete i migliori e vincete con noi!","keywords":"%s, bookmaker, coefficienti, migliori, confronto","title":"%s – confronto di coefficienti di bookmaker per %s %s"},"/it/legal_status":{"description":"Stato giuridico OddsFan.com","keywords":"OddsFan","title":"Stato giuridico | OddsFan.com"},"/it/live_odds":{"description":"I migliori coefficienti di bookmaker in regime live per le partite di %s da piu di 170 uffici di bookmaker!OddsFan.com –il servizio del confronto dei coefficienti.","keywords":"%s, live coefficienti, coefficienti di bookmaker, il servizio di confronto","title":"Live coefficienti coefficienti di bookmaker per le partite di %s in regime live"},"/it/next_matches":{"description":"I coefficienti di bookmaker per le prossime partite da piu di 170 uffici!OddsFan.com – solo i migliori coefficienti di bookmaker per le partite di %s.","keywords":"%s, le prossime partite, coefficienti di bookmaker, servizio di confronto","title":"Le prossime partite coefficienti di bookmaker per le prossime partite di %s"},"/it/popular":{"description":"Li sono raccolti i coefficienti di bookmaker per le partite di %s popolari da piu di 170 uffici. Solo i migliori coefficienti per le partite popolari con OddsFan.com","keywords":"%s, partite popolari, coefficienti di bookmaker, il servizio del confronto","title":"Le partite popolari coefficienti di bookmaker per le partite di %s popolari"},"/it/privacy":{"description":"Politica di confidenzialità OddsFan.com","keywords":"OddsFan","title":"Politica di confidenzialità | OddsFan.com"},"/it/sign_in":{"description":"L'autorizzazione sul sito OddsFan.com","keywords":"OddsFan","title":"L'autorizzazione sul sito | OddsFan.com"},"/it/sign_up":{"description":"Registrazione sul sito  OddsFan.com","keywords":"OddsFan","title":"Registrazione sul sito | OddsFan.com"},"/it/sport/id":{"description":"Abbiamo i migliori coefficienti di bookmaker su %s! confrontate, scegliete le migliori proposte da bookmaker e puntate con vantaggi!%s","keywords":"%s, coefficienti, bookmaker, confronto","title":"Scommesse su %s – i migliori coefficienti di bookmaker su %s"},"/it/terms":{"description":"I condizioni e requisiti OddsFan.com","keywords":"OddsFan","title":"I condizioni e requisiti | OddsFan.com"},"/it/what_is_oddsfan":{"description":"Tutta l'informazione necessaria sul servizio del confronto dei coefficienti di bookmaker oddsFan.","keywords":"OddsFan","title":"Сhe cos'è OddsFan?"},"/it/widget/new":{"description":"Widget per i siti con la visualizzazione dei migliori coefficienti di bookmaker per le prossime partite.","keywords":"OddsFan","title":"Widget - prossime partite | OddsFan.com"}},"sidebar":{"Dark":"Scuro","Light":"Chiaro"},"sport":{"Choose League":"Leghe","Live":"Live","Most popular League data_live":"Leghe popolari Live","Most popular League data_prematch":"Leghe popolari","Most popular Matches data_live":"Partite popolari Live","Most popular Matches data_prematch":"Partite popolari","No leagues with active matches":"Non ci sono le leghe con le partite attive","Prematch":"Prepartita","Statistics":"Statistica","The number of":"Quantità","back":"Dietro","bookmakers":"Bookmaker","countries_groups":{"africa":"Africa","asia":"Asia","australia":"Australia","europe":"Europe","north_america":"North America","south_america":"South America","world":"World"},"events":"Eventi","league":"Lega","match":"Partita","other":"Other","page_desc":"Il nostro servizio online Vi aiuterà di confrontere e scegliere i coefficienti di bookmaker piu vantaggiosi per le scommesse %s. Confrontate, scegliete le proposte piu profittevoli e puntate con vantaggi.","page_h1":"Coefficienti su %s","score":"Punteggio di partita","started at":"Data dell'inizio","stats":{"bookmakers_count":"dei bookmaker analizzati","countries_count":"dei paesi analizzati","events_count":"degli eventi","leagues_count":"delle leghe analizzate","teams_count":"delle squadre partecipanti"}},"sports":{"AFL":"Calcio australiano","American Football":"Calcio Am.","Athletics":"Atletica leggera","Badminton":"Badminton","Bandy":"Bandy","Baseball":"Baseball","Basketball":"Pallacanestro","Beach Soccer":"Beach Soccer","Beach Volleyball":"Pallavolo da spiaggia","Biathlon":"Biathlon","Boxing/MMA":"Pugilato/mma","Chess":"Scacchi","Cricket":"Pallamaglio","Cycling":"Ciclismo","Darts":"Darts","E-Sports":"E-sports","Field Hockey":"Hockey su prato","Formula 1":"Formula 1","Futsal":"Calcio da sala","Gaelic Sport":"Gaelic Sport","Handball":"Pallamano","Hockey":"Hockey","Horse Racing":"Cavalcata","Motorcycling":"Motociclismo","Netball":"Netball","Rugby":"Rugby","Snooker":"Snooker","Soccer":"Calcio","Squash":"Squash","Table Tennis":"Tennis da tavola","Tennis":"Tennis","Volleyball":"Pallavolo","Water Polo":"Pallanuoto","full":{"AFL":"Calcio australiano","American Football":"Calcio Am.","Athletics":"Atletica leggera","Badminton":"Badminton","Bandy":"Bandy","Baseball":"Baseball","Basketball":"Pallacanestro","Beach Soccer":"Beach Soccer","Beach Volleyball":"Pallavolo da spiaggia","Biathlon":"Biathlon","Boxing/MMA":"Pugilato/mma","Chess":"Scacchi","Cricket":"Pallamaglio","Cycling":"Ciclismo","Darts":"Darts","E-Sports":"E-sports","Field Hockey":"Hockey su prato","Formula 1":"Formula 1","Futsal":"Calcio da sala","Gaelic Sport":"Gaelic Sport","Handball":"Pallamano","Hockey":"Hockey","Horse Racing":"Cavalcata","Motorcycling":"Motociclismo","Netball":"Netball","Rugby":"Rugby","Snooker":"Snooker","Soccer":"Calcio","Squash":"Squash","Table Tennis":"Tennis da tavola","Tennis":"Tennis","Volleyball":"Pallavolo","Water Polo":"Pallanuoto"}},"static_pages":{"nav":{"links":{"About Us":"Su di noi","About our bookmakers":"Bookmaker","Advanced Tips \u0026 Tricks":"I consigli e raccomandazioni professionali","Advertising":"Pubblicità","Bet responsibly":"18 + Gamble Responsible","Betting Guide":"Come puntare?","Contact us":"Scriveteci","Content Solution":"Soluzione di content","Disclaimer":"L'esclusione di responsabilità","Getting started":"Come iniziare?","Getting started betting and":"Come iniziare di puntare e","HELP \u0026 SUPPORT":"L'aiuto e supporto","Legal Status":"Lo stato giuridico","Legal information":"L'informazione giuridica","Privacy Policy":"Politica di privatezza","Terms and conditions":"L'accordo per gli utenti","What is OddsFan?":"Che cos'è oddsfan?","blog":"Blog","business partnership":"I rapporti d'affari","odds comparison":"Confronto di coefficienti","widget":"Widget"}}},"support":{"array":{"last_word_connector":" e ","two_words_connector":" e ","words_connector":", "}},"time":{"am":"am","formats":{"default":"%a %d %b %Y, %H:%M:%S %z","long":"%d %B %Y %H:%M","short":"%d %b %H:%M"},"pm":"pm"},"tournament":{"A":"A","Beginning time":"Beginning time","D":"D","F":"F","L":"L","P":"P","Pts":"Pts","Score":"Score","Team":"Team","W":"W","final":"%s Final","final_1":"Final","final_3":"Third place play-off","group":"Group %s","wc2018_h1":"World Cup 2018","wc2018_h1_seo":"World Cup 2018 Standings"},"wc_seo":{"Argentina_Croatia":"\u003cp\u003eThere's no doubt, the Argentina national team won't easily fight with Croatia, although the bookmakers' odds are clearly in favor of the Sampaoli team.\u003c/p\u003e","Brazil_Switzerland":"\u003cp\u003eSetting odds on the match Brazil-Switzerland, bookmakers made it clear that they do not believe in the success of the Swiss.\u003c/p\u003e\u003cp\u003eHowever, the Brazilians obviously shouldn't expect an easy game, as Switzerland have repeatedly proved they can adequately compete with big-name opponents.\u003c/p\u003e","Denmark_France":"\u003cp\u003eWill the Danish team be able to get a victory in the fight with eminent France? We'll see it. In any case, bookmakers' odds are clearly not in favor of the nominal home team.\u003c/p\u003e","England_Belgium":"\u003cp\u003eVery interesting confrontation without obvious favorite and outsider. The same opinion is shared by bookmakers that put their odds on this meeting.\u003c/p\u003e","France_Australia":"\u003cp\u003eAustralian team is the undisputed underdog in the confrontation with France. It’s difficult to imagine in what way Bert van Marwijk's wards could beat such an eminent rival.\u003c/p\u003e\u003cp\u003eBookmakers don't believe in the success of Australia as well. Odds for the victory of nominal away team exceeded the mark of 10 to 1.\u003c/p\u003e","Germany_Mexico":"\u003cp\u003eMexico has a great chance to take revenge on the German national team for the defeat in the semi-finals of the Confederations Cup, but the bookmakers' odds are not in favor of nominal away team.\u003c/p\u003e","Germany_Sweden":"\u003cp\u003eFor all football fans, the favorite in this match is absolutely obvious and it’s the German national team. No wonder the odds for the victory of Lev's team in most bookmakers do not exceed 1.5 to 1.\u003c/p\u003e\u003cp\u003eHowever, the Swedish national team has repeatedly proved that it is able to take points from famous rivals, so that it may well present a nasty surprise to the current World Champion.\u003c/p\u003e","Mexico_Sweden":"\u003cp\u003eIn the match Mexico-Sweden won’t be pronounced a clear favorite, as in the face-to-face confrontation play almost equal level teams.\u003c/p\u003e\u003cp\u003eThis is well understood by bookmakers, so the odds of winning the Swedes and Mexicans in this meeting are almost equal.\u003c/p\u003e","Poland_Colombia":"\u003cp\u003ePoland and Colombia are rivals of approximately the same level, so we are likely to have a very interesting match.\u003c/p\u003e\u003cp\u003eEven experienced bookmakers failed to identify a favorite in this pair and therefore odds for the victory of these national teams in face-to-face match are almost equal.\u003c/p\u003e","Portugal_Spain":"\u003cp\u003eThe match Portugal-Spain is rightly one of the most interesting and expected confrontations of the group stage of the 2018 World Cup.\u003c/p\u003e\u003cp\u003eIn this case, bookmakers' odds are in favor of the Spaniards but do not forget that Portugal is the current winner of the European Championship.\u003c/p\u003e","Russia_Egypt":"\u003cp\u003eThe Russian national team is called the unconditional favorite in the match with Egypt, and it is clearly shown by bookmakers’ odds.\u003c/p\u003e\u003cp\u003eSuch experts opinion is true, but Cherchesov's wards need to be very careful, as the Egyptians have a tangible trump card in the face of Mohammed Salah.\u003c/p\u003e","Russia_Saudi_Arabia":"\u003cp\u003eIn the match Russia-Saudi Arabia, many experts consider the home team to be the unconditional favorite, and the odds of bookmakers confirm this once again.\u003c/p\u003e\u003cp\u003eBut for Cherchesov's team, it's very important to prevent underestimation of the rival, as it may play a dirty trick.\u003c/p\u003e","Uruguay_Russia":"\u003cp\u003eUruguay is considered Russia's main rival for leadership in the group, and if we talk about the upcoming meeting of these teams, betting odds are in favor of the nominal home team.\u003c/p\u003e\u003cp\u003eCertainly, the Russians have a chance to win, but in this case Cherchesov's squad have to do the best possible to achieve a positive result.\u003c/p\u003e","header":"A few words about the match %s"},"widget_plugin":{"1":1,"2":2,"F1":"Кф","F2":"Кф","Highest odds":"I coefficienti piu alti","Next Matches":"Le prossime partite","No active events":"Non ci sono gli eventi attivi","TO":"Maggiore","TU":"Meno","X":"X","button":{"generate_code":"Creare HTML codice","reset":"Reimpostare"},"form":{"all_sports":"Tutti i tipi di sport","background":"Sfondo","bold_header":"Il titolo messo in rilievo","bold_label":"Il nome messo in rilievo","border":"Limiti","color_settings":"Impostazioni di colore","color_text":"Testo","font":"Caratteri","fonts":"Impostazioni di caratteri","footer_link":"Link del piè di pagina","general":"Impostazioni generali","generate":"2. creare HTML codice","get_html":"Ricevere HTML","header_bg":"Sfondo del titolo","header_text":"Testo del titolo","height":"Altezza di widget","high_odds":"I coefficienti piu alti","insert_html":"Inserire nel \u003ccode\u003e\u0026lt;body\u0026gt;\u003c/code\u003e il tag:","insert_html_2":"Inserire nel \u003ccode\u003e\u0026lt;head\u0026gt;\u003c/code\u003e il tag, al posto dove volete di vedere il widget \u003ccode\u003e\u0026lt;div id='oddsfan-widget'\u0026gt;\u003c/code\u003e\u003ccode\u003e\u0026lt;/div\u0026gt;\u003c/code\u003e","label_bg":"Sfondo del nome","label_font":"Caratteri del nome","label_name":"Nome","lang":"Lingua","line_height":"Altezza di riga","link":"Link","matches":"Quantità di partite","odds_displayed":"Coefficienti usati","odds_type":{"1x2":"Risultato di partita","handicap":"Vantaggio","over_under":"Importo di partita"},"prev":"Prevista","put":"3. collocare sul sito","select_bk":"I coefficienti di bookmaker scelti","select_sports":"Tipi di sport","setup":"1. installare widget","show_label":"Mostrare il nome","size":"Grandezza","table_1":"Tabella 1","table_2":"Tabella 2","time_zone":"Fuso orario","title":"Widget: Prematch coefficienti","type":"Tipo di coefficiente","width":"Largezza di widget","with_logo":"Mostrare il logo di bookmaker","without_logo":"Non mostrare il logo di bookmaker"},"powered by":"elaborato da","tabs":{"live":"Live coefficienti","prematch":"Prematch coefficienti","surebets":"Surebet","valuebets":"Scommesse con value bet"},"valF1":"Ф1","valF2":"Ф2","valT":"Importi"}},"ru":{"account":{"Bookmakers":"Букмекеры","Change Password":"Изменить пароль","Changes saved":"Изменения сохранены","E-mail address":"Электронный адрес","Live":"Лайв","Live bookmakers":"Лайв Букмекеры","My bookmakers":"Мои Букмекеры","Personal info":"Личная информация","Prematch":"Прематч","Prematch bookmakers":"Прематч Букмекеры","Time zone":"Часовой пояс","and":"и","bookmakers clones":"клоны букмекеров","label":{"confirm":"Вы уверены?","delete_account":"Удалить аккаунт"},"new password":"новый пароль","old password":"старый пароль","repeat new password":"повторите новый пароль","submit":{"save":"сохранить","save my changes":"сохранить изменения"}},"activerecord":{"errors":{"messages":{"record_invalid":"Возникли ошибки: %{errors}","restrict_dependent_destroy":{"has_many":"Невозможно удалить запись, так как существуют зависимости: %{record}","has_one":"Невозможно удалить запись, так как существует зависимость: %{record}"}},"models":{"bb_user":{"attributes":{"reset_password_token":{"blank":"ссылка для сброса не актуальна","invalid":"ссылка для сброса не актуальна"}}}}}},"bet":{"%s set, %s game":"%s сет, %s игра","1 frame":"1й фрейм","1 half":"1 пол","1 inning":"1й иннинг","1 period":"1й пер","1 quarter":"1 чт","1 set":"1й сет","1 time":"1 тайм","10 set":"10й сет","11 set":"11й сет","12 set":"12й сет","13 set":"13й сет","2 frame":"2й фрейм","2 half":"2 пол","2 inning":"2й иннинг","2 period":"2й пер","2 quarter":"2 чт","2 set":"2й сет","2 time":"2 тайм","3 frame":"3й фрейм","3 inning":"3й иннинг","3 period":"3й пер","3 quarter":"3 чт","3 set":"3й сет","4 frame":"4й фрейм","4 inning":"4й иннинг","4 quarter":"4 чт","4 set":"4й сет","5 frame":"5й фрейм","5 inning":"5й иннинг","5 set":"5й сет","6 frame":"6й фрейм","6 inning":"6й иннинг","6 set":"6й сет","60 mins":"60 мин","7 frame":"7й фрейм","7 inning":"7й иннинг","7 set":"7й сет","8 frame":"8й фрейм","8 inning":"8й иннинг","8 set":"8й сет","9 inning":"9й иннинг","9 set":"9й сет","At least one team does not score":"Хотя бы одна команда не забьет","Away team total over":"Индивидуальный тотал второй команды больше","Away team total under":"Индивидуальный тотал второй команды меньше","Away team wins":"Победа второй команды","Away team wins (draw no bet)":"Победа второй команды (без ничьи)","Away team wins (with overtime)":"Победа второй команды (с учетом доп. времени)","Away team wins with asian handicap":"Победа второй команды с форой (азиатский гандикап)","Away team wins with spread (euro handicap)":"Победа второй команды с форой (европейский гандикап)","Both teams to score":"Обе команды забьют","Change sign":"Сменить знак","Commission":"Комиссия","Corners away team wins with spread":"Угловых больше у второй команды с форой","Corners home team wins with spread":"Угловых больше у первой команды с форой","Corners over":"Угловых больше","Corners under":"Угловых меньше","Correct Score":"Точный счет","Correct Score - not":"Точный счет - нет","Draw":"Ничья","Draw or away team":"Ничья или победа второй команды","Draw with spread (euro handicap)":"Ничья с форой для первой команды (европейский гандикап)","Exclude":"Исключить","Home or away team, no draw":"Победа первой или второй команды, не ничья","Home team or draw":"Победа первой команды или ничья","Home team total over":"Индивидуальный тотал первой команды больше","Home team total under":"Индивидуальный тотал первой команды меньше","Home team wins (draw no bet)":"Победа первой команды (без ничьи)","Home team wins (with overtime)":"Победа первой команды (с учетом доп. времени)","Home team wins with asian handicap":"Победа первой команды с форой (азиатский гандикап)","Home team wins with spread (euro handicap)":"Победа первой команды с форой (европейский гандикап)","Home wins":"Победа первой команды","Included in sum":"Включена в сумму","Input your current pinnaclesports domain here":"Введите сюда Ваш текущий домен для pinnaclesports, например \u003cspan class=\"bold\"\u003ewww13\u003c/span\u003e","Input your current sbobet domain here":"Введите сюда Ваш текущий домен для sbobet, например \u003cspan class=\"bold\"\u003e1vy0356q1smw\u003c/span\u003e","No red cards":"Красной карточки не будет","Only one to score":"Только одна команда забьет","Original Value":"Исходное значение","Penalty no":"Пенальти не будет","Penalty yes":"Пенальти будет","Period":"Период","Red card":"Красная карточка будет","Restore":"Восстановить","Reverse Bet":"Обратная ставка","Set Correct Score":"Точный счет по сетам","Set Correct Score - not":"Точный счет по сетам - нет","Sets Over":"Тотал сетов больше","Sets Under":"Тотал сетов меньше","Sets away team wins with spread":"Победа второй команды по сетам с учетом форы","Sets home team wins with spread":"Победа первой команды по сетам с учетом форы","Sign":"Знак","Total even":"Чет","Total odd":"Нечет","Total over":"Тотал матча больше","Total under":"Тотал матча меньше","Variation":"Вариант исхода","Yellow cards away team wins with spread":"Желтых карточек больше у второй команды с форой","Yellow cards home team wins with spread":"Желтых карточек больше у первой команды с форой","Yellow cards total over":"Желтых карточек больше","Yellow cards total under":"Желтых карточек меньше","against":"против","false":"Нет","match":"матч","match (doubles)":"матч (пары)","next round":"проход","no_desc":"","regular time":"основное время","true":"Да","with overtime":"с ОТ","with overtime and shootouts":"с ОТ и бул"},"breadscrump":{"Home":"Главная","Soccer":"Футбол"},"contact_us":{"Email":"Электронная почта","Hello":"Здравствуйте","If you have any questions you can write to us":"Свяжитесь с нами если у вас есть вопросы","Message":"Сообщение","Name":"Имя","Send":"Отправить","Wrong captcha verification":"ошибка капчи","contact_us_form_error":"Вы ввели неверные данные, попробуйте еще раз","contact_us_form_success":"Ваше сообщение отправлено. Мы свяжемся с вами. Спасибо!"},"countries":{"AC":"о-в Вознесения","AD":"Андорра","AE":"ОАЭ","AF":"Афганистан","AFGHANISTAN":"Афганистан","AFRICA":"Африка","AG":"Антигуа и Барбуда","AI":"Ангилья","AL":"Албания","ALBANIA":"Албания","ALGERIA":"Алжир","AM":"Армения","AMERICAN_SAMOA":"Американское Самоа","AN":"Нидерландские Антильские о-ва","ANDORRA":"Андорра","ANGOLA":"Ангола","ANGUILLA":"Ангилья","ANTIGUA_AND_BARBUDA":"Анти́гуа и Барбу́да","AO":"Ангола","AQ":"Антарктида","AR":"Аргентина","ARGENTINA":"Аргентина","ARMENIA":"Армения","ARUBA":"Аруба","AS":"Американское Самоа","ASIA":"Азия","AT":"Австрия","AU":"Австралия","AUSTRALIA":"Аруба","AUSTRIA":"Австрия","AW":"Аруба","AX":"Аландские о-ва","AZ":"Азербайджан","AZERBAIJAN":"Азербайджан","BA":"Босния и Герцеговина","BAHAMAS":"Багамские острова","BAHRAIN":"Бахрейн","BANGLADESH":"Бангладеш","BARBADOS":"Барбадос","BB":"Барбадос","BD":"Бангладеш","BE":"Бельгия","BELARUS":"Беларусь","BELGIUM":"Бельгия","BELIZE":"Белиз","BENIN":"Бенин","BERMUDA":"Бермудские острова","BF":"Буркина-Фасо","BG":"Болгария","BH":"Бахрейн","BHUTAN":"Бутан","BI":"Бурунди","BJ":"Бенин","BL":"Сен-Бартельми","BM":"Бермудские о-ва","BN":"Бруней-Даруссалам","BO":"Боливия","BOLIVIA":"Боливия","BOSNIA_HERZEGOVINA":"Босния и Герцеговина","BOTSWANA":"Ботсвана","BQ":"Бонэйр, Синт-Эстатиус и Саба","BR":"Бразилия","BRAZIL":"Бразилия","BRITISH_VIRGIN_ISLANDS":"Виргинские Острова","BRUNEI_DARUSSALAM":"Бруней","BS":"Багамские о-ва","BT":"Бутан","BULGARIA":"Болгария","BURKINA_FASO":"Буркина Фасо","BURUNDI":"Бурунди","BV":"о-в Буве","BW":"Ботсвана","BY":"Беларусь","BZ":"Белиз","CA":"Канада","CAMBODIA":"Камбоджа","CAMEROON":"Камерун","CANADA":"Канада","CAPE_VERDE_ISLANDS":"Кабо-Верде","CAYMAN_ISLANDS":"Каймановы острова","CC":"Кокосовые о-ва","CD":"Конго - Киншаса","CENTRAL_AFRICAN_REPUBLIC":"Центрально-Африканская Республика","CF":"ЦАР","CG":"Конго - Браззавиль","CH":"Швейцария","CHAD":"Чад","CHILE":"Чили","CHINA_PR":"Китай","CHINESE_TAIPEI":"Китайский Тайпей","CI":"Кот-д’Ивуар","CK":"о-ва Кука","CL":"Чили","CM":"Камерун","CN":"Китай","CO":"Колумбия","COLOMBIA":"Колумбия","COMOROS":"Коморы","CONCACAF":"КОНКАКАФ","CONGO":"Конго","CONGO_DR":"Демократическая Республика Конго","COOK_ISLANDS":"Острова Кука","COSTA_RICA":"Коста-Рика","CP":"о-в Клиппертон","CR":"Коста-Рика","CROATIA":"Хорватия","CU":"Куба","CUBA":"Куба","CURA_AO":"Кюрасао","CV":"Кабо-Верде","CW":"Кюрасао","CX":"о-в Рождества","CY":"Кипр","CYPRUS":"Кипр","CZ":"Чехия","CZECH_REPUBLIC":"Чехия","C_TE_D_IVOIRE":"Кот-д’Ивуар","DE":"Германия","DENMARK":"Дания","DG":"Диего-Гарсия","DJ":"Джибути","DJIBOUTI":"Джибути","DK":"Дания","DM":"Доминика","DO":"Доминиканская Республика","DOMINICA":"Доминика","DOMINICAN_REPUBLIC":"Доминиканская Республика","DZ":"Алжир","EA":"Сеута и Мелилья","EC":"Эквадор","ECUADOR":"Эквадор","EE":"Эстония","EG":"Египет","EGYPT":"Египет","EH":"Западная Сахара","EL_SALVADOR":"Сальвадор","ENGLAND":"Англия","EQUATORIAL_GUINEA":"Экваториальная Гвинея","ER":"Эритрея","ERITREA":"Эритрея","ES":"Испания","ESTONIA":"Эстония","ET":"Эфиопия","ETHIOPIA":"Эфиопия","EU":"Европейский союз","EUROPE":"Европа","FAROE_ISLANDS":"Фарерские острова","FI":"Финляндия","FIJI":"Фиджи","FINLAND":"Финляндия","FJ":"Фиджи","FK":"Фолклендские о-ва","FM":"Федеративные Штаты Микронезии","FO":"Фарерские о-ва","FR":"Франция","FRANCE":"Франция","FRENCH_GUIANA":"Французская Гвиана","GA":"Габон","GABON":"Габон","GAMBIA":"Гамбия","GB":"Великобритания","GD":"Гренада","GE":"Грузия","GEORGIA":"Грузия","GERMANY":"Германия","GF":"Французская Гвиана","GG":"Гернси","GH":"Гана","GHANA":"Гана","GI":"Гибралтар","GIBRALTAR":"Гибралтар","GL":"Гренландия","GM":"Гамбия","GN":"Гвинея","GP":"Гваделупа","GQ":"Экваториальная Гвинея","GR":"Греция","GREAT_BRITAIN":"Великобритания","GREECE":"Греция","GRENADA":"Гренада","GS":"Южная Георгия и Южные Сандвичевы о-ва","GT":"Гватемала","GU":"Гуам","GUADELOUPE":"Гваделупа","GUAM":"Гуам","GUATEMALA":"Гватемала","GUINEA":"Гвинея","GUINEA_BISSAU":"Гвинея-Бисау","GUYANA":"Гайана","GW":"Гвинея-Бисау","GY":"Гайана","HAITI":"Гаити","HK":"Гонконг (особый район)","HM":"о-ва Херд и Макдональд","HN":"Гондурас","HONDURAS":"Гондурас","HONG_KONG":"Гонг-Конг","HR":"Хорватия","HT":"Гаити","HU":"Венгрия","HUNGARY":"Венгрия","IC":"Канарские о-ва","ICELAND":"Исландия","ID":"Индонезия","IE":"Ирландия","IL":"Израиль","IM":"О-в Мэн","IN":"Индия","INDIA":"Индия","INDONESIA":"Индонезия","IO":"Британская территория в Индийском океане","IQ":"Ирак","IR":"Иран","IRAN":"Иран","IRAQ":"Ирак","IRELAND_REPUBLIC":"Ирландия","IS":"Исландия","ISRAEL":"Израиль","IT":"Италия","ITALY":"Италия","JAMAICA":"Ямайка","JAPAN":"Япония","JE":"Джерси","JM":"Ямайка","JO":"Иордания","JORDAN":"Иордания","JP":"Япония","KAZAKHSTAN":"Казахстан","KE":"Кения","KENYA":"Кения","KG":"Киргизия","KH":"Камбоджа","KI":"Кирибати","KIRIBATI":"Кирибати","KM":"Коморские о-ва","KN":"Сент-Китс и Невис","KOREA_DPR":"Корейская Народно-Демократическая Республика","KOREA_REPUBLIC":"Республика Корея","KOSOVO":"Косово","KP":"КНДР","KR":"Республика Корея","KUWAIT":"Кувейт","KW":"Кувейт","KY":"Каймановы о-ва","KYRGYZSTAN":"Кыргызстан","KZ":"Казахстан","LA":"Лаос","LAOS":"Лаос","LATVIA":"Латвия","LB":"Ливан","LC":"Сент-Люсия","LEBANON":"Ливан","LESOTHO":"Лесото","LI":"Лихтенштейн","LIBERIA":"Либерия","LIBYA":"Ливия","LIECHTENSTEIN":"Лихтенштейн","LITHUANIA":"Литва","LK":"Шри-Ланка","LR":"Либерия","LS":"Лесото","LT":"Литва","LU":"Люксембург","LUXEMBOURG":"Лихтенштейн","LV":"Латвия","LY":"Ливия","MA":"Марокко","MACAO":"Макао","MACEDONIA_FYR":"Республика Македония","MADAGASCAR":"Мадагаскар","MALAWI":"Малави","MALAYSIA":"Малайзия","MALDIVES":"Мальдивы","MALI":"Мали","MALTA":"Мальта","MARTINIQUE":"Мартиника","MAURITANIA":"Мавритания","MAURITIUS":"Маврикий","MAYOTTE":"Майотта","MC":"Монако","MD":"Молдова","ME":"Черногория","MEXICO":"Мексика","MF":"Сен-Мартен","MG":"Мадагаскар","MH":"Маршалловы о-ва","MK":"Македония","ML":"Мали","MM":"Мьянма (Бирма)","MN":"Монголия","MO":"Макао (особый район)","MOLDOVA":"Молдова","MONACO":"Монако","MONGOLIA":"Монголия","MONTENEGRO":"Черногория","MONTSERRAT":"Монтсеррат","MOROCCO":"Марокко","MOZAMBIQUE":"Мозамбик","MP":"Северные Марианские о-ва","MQ":"Мартиника","MR":"Мавритания","MS":"Монтсеррат","MT":"Мальта","MU":"Маврикий","MV":"Мальдивские о-ва","MW":"Малави","MX":"Мексика","MY":"Малайзия","MYANMAR":"Мьянма","MZ":"Мозамбик","NA":"Намибия","NAMIBIA":"Намибия","NC":"Новая Каледония","NE":"Нигер","NEPAL":"Непал","NETHERLANDS":"Нидерланды","NETHERLANDS_ANTILLES":"Нидерландские Антильские острова","NEW_CALEDONIA":"Новая Каледония","NEW_ZEALAND":"Новая Зеландия","NF":"о-в Норфолк","NG":"Нигерия","NI":"Никарагуа","NICARAGUA":"Никарагуа","NIGER":"Нигер","NIGERIA":"Нигерия","NL":"Нидерланды","NO":"Норвегия","NORTHERN IRELAND":"Северная Ирландия","NORTHERN_IRELAND":"Северная Ирландия","NORTHERN_MARIANA_ISLANDS":"Северные Марианские острова","NORTH_AMERICA":"Северная Америка","NORWAY":"Норвегия","NP":"Непал","NR":"Науру","NU":"Ниуэ","NZ":"Новая Зеландия","OM":"Оман","OMAN":"Оман","PA":"Панама","PAKISTAN":"Пакистан","PALESTINE":"Палестина","PANAMA":"Панама","PAPUA_NEW_GUINEA":"Папуа - Новая Гвинея","PARAGUAY":"Парагвай","PE":"Перу","PERU":"Перу","PF":"Французская Полинезия","PG":"Папуа – Новая Гвинея","PH":"Филиппины","PHILIPPINES":"Филиппины","PK":"Пакистан","PL":"Польша","PM":"Сен-Пьер и Микелон","PN":"Питкэрн","POLAND":"Польша","PORTUGAL":"Португалия","PR":"Пуэрто-Рико","PS":"Палестинские территории","PT":"Португалия","PUERTO_RICO":"Пуэрто-Рико","PW":"Палау","PY":"Парагвай","QA":"Катар","QATAR":"Катар","QO":"Внешняя Океания","RE":"Reunion","REUNION":"Реюньон","RO":"Румыния","ROMANIA":"Румыния","RS":"Сербия","RS_AND_M":"Респ. Сербия и Македония","RU":"Россия","RUSSIA":"Российская Федерация","RW":"Руанда","RWANDA":"Руанда","SA":"Саудовская Аравия","SAINT_MARTIN":"Сен-Мартен","SAMOA":"Самоа","SAN_MARINO":"Сан Марино","SAO_TOME_AND_PRINCIPE":"Сан-Томе и Принсипи","SAUDI_ARABIA":"Саудовская Аравия","SB":"Соломоновы о-ва","SC":"Сейшельские о-ва","SCOTLAND":"Шотландия","SD":"Судан","SE":"Швеция","SENEGAL":"Сенегал","SERBIA":"Сербия","SEYCHELLES":"Сейшельские Острова","SG":"Сингапур","SH":"О-в Св. Елены","SI":"Словения","SIERRA_LEONE":"Сьерра-Леоне","SINGAPORE":"Сингапур","SINT_MAARTEN":"Сен-Мартен","SJ":"Шпицберген и Ян-Майен","SK":"Словакия","SL":"Сьерра-Леоне","SLOVAKIA":"Словакия","SLOVENIA":"Словения","SM":"Сан-Марино","SN":"Сенегал","SO":"Сомали","SOLOMON_ISLANDS":"Соломоновы острова","SOMALIA":"Сомали","SOUTH_AFRICA":"Южно-Африканская Республика","SOUTH_AMERICA":"Южная Америка","SOUTH_SUDAN":"Южный Судан","SPAIN":"Испания","SR":"Суринам","SRI_LANKA":"Шри Ланка","SS":"Южный Судан","ST":"Sao Tome \u0026 Principe","ST_KITTS_AND_NEVIS":"Сент-Китс и Невис","ST_LUCIA":"Сент-Люсия","ST_VINCENT_AND_THE_GRENADINES":"Сент-Винсент и Гренадины","SUDAN":"Судан","SURINAME":"Суринам","SV":"Сальвадор","SWAZILAND":"Свазиленд","SWEDEN":"Швеция","SWITZERLAND":"Швейцария","SX":"Синт-Мартен","SY":"Сирия","SYRIA":"Сирия","SZ":"Свазиленд","TA":"Тристан-да-Кунья","TAHITI":"Таити","TAIWAN":"Тайвань","TAJIKISTAN":"Таджикистан","TANZANIA":"Танзания","TC":"О-ва Тёркс и Кайкос","TD":"Чад","TF":"Французские Южные Территории","TG":"Того","TH":"Таиланд","THAILAND":"Таиланд","TIMOR_LESTE":"Восточный Тимор","TJ":"Таджикистан","TK":"Токелау","TL":"Восточный Тимор","TM":"Туркменистан","TN":"Тунис","TO":"Тонга","TOGO":"Того","TONGA":"Тонга","TR":"Турция","TRINIDAD_AND_TOBAGO":"Тринидад и Тобаго","TT":"Тринидад и Тобаго","TUNISIA":"Тунис","TURKEY":"Турция","TURKMENISTAN":"Туркменистан","TURKS_AND_CAICOS_ISLANDS":"Тёркс и Кайкос","TUVALU":"Тувалу","TV":"Тувалу","TW":"Тайвань","TZ":"Танзания","UA":"Украина","UAE":"Объединённые Арабские Эмираты","UG":"Уганда","UGANDA":"Уганда","UKRAINE":"Украина","UM":"Внешние малые о-ва (США)","URUGUAY":"Уругвай","US":"Соединенные Штаты","USA":"Соединенные штаты Америки","US_VIRGIN_ISLANDS":"Американские Виргинские Острова","UY":"Уругвай","UZ":"Узбекистан","UZBEKISTAN":"Узбекистан","VA":"Ватикан","VANUATU":"Вануату","VC":"Сент-Винсент и Гренадины","VE":"Венесуэла","VENEZUELA":"Венесуэла","VG":"Виргинские о-ва (Британские)","VI":"Виргинские о-ва (США)","VIETNAM":"Вьетнам","VN":"Вьетнам","VU":"Вануату","WALES":"Уэльс","WF":"Уоллис и Футуна","WORLD":"Мир","WS":"Самоа","XK":"Косово","YE":"Йемен","YEMEN":"Йемен","YT":"Майотта","ZA":"ЮАР","ZAMBIA":"Замбия","ZANZIBAR":"Занзибар","ZIMBABWE":"Зимбабве","ZM":"Замбия","ZW":"Зимбабве"},"countries_at":{"AC":"о-ва Вознесения","AD":"Андорры","AE":"ОАЭ","AF":"Афганистана","AFRICA":"Африки","AG":"Антигуа и Барбуды","AI":"Антигильи","AL":"Албании","AM":"Армении","AN":"Нидерландских Антильских о-вов","AO":"Анголы","AQ":"Антарктиды","AR":"Аргентины","AS":"Американского Самоа","ASIA":"Азии","AT":"Австрии","AU":"Австралии","AW":"Арубы","AX":"Аландских о-вов","AZ":"Азербайджана","BA":"Босния и Герцеговины","BB":"Барбадоса","BD":"Бангладеш","BE":"Бельгии","BF":"Буркина-Фасо","BG":"Болгарии","BH":"Бахрейна","BI":"Бурунди","BJ":"Бенина","BL":"Сен-Бартельми","BM":"Бермудских о-вов","BN":"Бруней-Даруссалама","BO":"Боливии","BQ":"Бонэйра, Синт-Эстатиуса и Сабы","BR":"Бразилии","BS":"Багамских о-вов","BT":"Бутана","BV":"о-ва Буве","BW":"Ботсваны","BY":"Беларуси","BZ":"Белиза","CA":"Канады","CC":"Кокосовых о-вов","CD":"Конго - Киншасы","CF":"ЦАР","CG":"Конго - Браззавиля","CH":"Швейцарии","CHINESE TAIPEI":"Китайского Тайбэя","CI":"Кот-д’Ивуара","CK":"о-вов Кука","CL":"Чили","CM":"Камеруна","CN":"Китая","CO":"Колумбии","CONCACAF":"КОНКАКАФ","CP":"о-ва Клиппертона","CR":"Коста-Рики","CU":"Кубы","CV":"Кабо-Верде","CW":"Кюрасао","CX":"о-ва Рождества","CY":"Кипра","CZ":"Чехии","DE":"Германии","DG":"Диего-Гарсия","DJ":"Джибути","DK":"Дании","DM":"Доминики","DO":"Доминиканской Республики","DZ":"Алжира","EA":"Сеуты и Мелильи","EC":"Эквадора","EE":"Эстонии","EG":"Египта","EH":"Западной Сахары","ENGLAND":"Англии","ER":"Эритреи","ES":"Испании","ET":"Эфиопии","EU":"Европейского союза","EUROPE":"Европы","FI":"Финляндии","FJ":"Фиджи","FK":"Фолклендских о-вов","FM":"Федеративных Штатов Микронезии","FO":"Фарерских о-вов","FR":"Франции","GA":"Габона","GB":"Великобритании","GD":"Гренады","GE":"Грузии","GF":"Французской Гвианы","GG":"Гернси","GH":"Ганы","GI":"Гибралтара","GL":"Гренландии","GM":"Гамбии","GN":"Гвинеи","GP":"Гваделупы","GQ":"Экваториальной Гвинеи","GR":"Греции","GS":"Южной Георгии и Южных Сандвичевых о-вов","GT":"Гватемалы","GU":"Гуама","GW":"Гвинеи-Бисау","GY":"Гайаны","HK":"Гонконга (особый район)","HM":"о-вов Херд и Макдональд","HN":"Гондураса","HR":"Хорватии","HT":"Гаити","HU":"Венгрии","IC":"Канарских о-вов","ID":"Индонезии","IE":"Ирландии","IL":"Израиля","IM":"О-ва Мэн","IN":"Индии","IO":"Британской территории в Индийском океане","IQ":"Ирака","IR":"Ирана","IS":"Исландии","IT":"Италии","JE":"Джерси","JM":"Ямайки","JO":"Иордании","JP":"Японии","KE":"Кении","KG":"Киргизии","KH":"Камбоджи","KI":"Кирибати","KM":"Коморских о-вов","KN":"Сент-Китс и Невис","KOSOVO":"Косово","KP":"КНДР","KR":"Республики Корея","KW":"Кувейта","KY":"Каймановых о-вов","KZ":"Казахстана","LA":"Лаоса","LAOS":"Лаоса","LB":"Ливана","LC":"Сент-Люсии","LI":"Лихтенштейна","LK":"Шри-Ланки","LR":"Либерии","LS":"Лесото","LT":"Литвы","LU":"Люксембурга","LV":"Латвии","LY":"Ливии","MA":"Марокко","MC":"Монако","MD":"Молдовы","ME":"Черногории","MF":"Сен-Мартена","MG":"Мадагаскара","MH":"Маршалловых о-вов","MK":"Македонии","ML":"Мали","MM":"Мьянмы (Бирмы)","MN":"Монголии","MO":"Макао (особый район)","MP":"Северных Марианских о-вов","MQ":"Мартиники","MR":"Мавритании","MS":"Монтсеррата","MT":"Мальты","MU":"Маврикия","MV":"Мальдивских о-вов","MW":"Малави","MX":"Мексики","MY":"Малайзии","MZ":"Мозамбика","NA":"Намибии","NC":"Новой Каледонии","NE":"Нигера","NF":"о-ва Норфолк","NG":"Нигерии","NI":"Никарагуа","NL":"Нидерландов","NO":"Норвегии","NORTH AMERICA":"Северной Америки","NORTHERN IRELAND":"Северной Ирландии","NP":"Непала","NR":"Науру","NU":"Ниуэ","NZ":"Новой Зеландии","N_IRELAND":"Северной Ирландии","OM":"Омана","PA":"Панамы","PE":"Перу","PF":"Французской Полинезии","PG":"Папуа – Новой Гвинеи","PH":"Филиппин","PK":"Пакистана","PL":"Польши","PM":"Сен-Пьера и Микелона","PN":"Питкэрна","PR":"Пуэрто-Рико","PS":"Палестинских территорий","PT":"Португалии","PW":"Палау","PY":"Парагвая","QA":"Катара","QO":"Внешней Океании","RE":"Sao Tome \u0026 Principe","REUNION":"Реюниона","RO":"Румынии","RS":"Сербии","RS_AND_M":"Сербии и Македонии","RU":"России","RW":"Руанды","SA":"Саудовской Аравии","SAINT MARTIN":"Сан-Мартина","SB":"Соломоновых о-вов","SC":"Сейшельских о-вов","SCOTLAND":"Шотландии","SD":"Судана","SE":"Швеции","SG":"Сингапура","SH":"О-ва Св. Елены","SI":"Словении","SJ":"Шпицбергена и Ян-Майена","SK":"Словакии","SL":"Сьерра-Леоне","SM":"Сан-Марино","SN":"Сенегала","SO":"Сомали","SOUTH AMERICA":"Южной Америки","SR":"Суринама","SS":"Южного Судана","ST":"Сан-Томе и Принсипи","SV":"Сальвадора","SX":"Синт-Мартена","SY":"Сирии","SZ":"Свазиленда","TA":"Тристан-да-Куньи","TAHITI":"Таити","TC":"О-вов Тёркс и Кайкос","TD":"Чада","TF":"Французских Южных Территорий","TG":"Того","TH":"Таиланда","THAILAND":"Таиланда","TJ":"Таджикистана","TK":"Токелау","TL":"Восточного Тимора","TM":"Туркменистана","TN":"Туниса","TO":"Тонги","TR":"Турции","TT":"Тринидада и Тобаго","TV":"Тувалу","TW":"Тайваня","TZ":"Танзании","UA":"Украины","UG":"Уганды","UM":"Внешних малых о-вов (США)","US":"Соединенных Штатов","UY":"Уругвая","UZ":"Узбекистана","VA":"Ватикана","VC":"Сент-Винсента и Гренадин","VE":"Венесуэлы","VG":"Виргинских о-вов (Британских)","VI":"Виргинских о-вов (США)","VN":"Вьетнама","VU":"Вануату","WALES":"Уэльса","WF":"Уоллиса и Футуны","WORLD":"Мира","WS":"Самоа","XK":"Косово","YE":"Йемена","YT":"Майотты","ZA":"ЮАР","ZANZIBAR":"Занзибара","ZM":"Замбии","ZW":"Зимбабве","ZZ":"Неизвестного региона"},"country":{"Active teams":"Участвующие команды","No active leagues":"Нет активных лиг","No active teams":"Нет активных команд","Watch all coefficients":"Смотреть все коеффициенты","country_page_leagues_text":"Чтобы сравнить коэффициенты букмекеров на %s в %s необходимо выбрать интересующую вас лигу в правом боковом меню. После этого откроется страница со списком %s для ставок на %s в %s и актуальными коэффициентами на них.","country_page_teams_text":"Календарь с расписанием матчей команд %s. Чтобы посмотреть и сравнить коэффициенты ближайших матчей откройте раскрывающийся список с интересующей вас командой.","h1_leagues_text":"%s – коэффициенты на %s","h1_teams_text":"Команды %s","leagues":"Лиги %s","show more":"Show more","table":{"Bookmakers count":"Количество букмекеров","Date":"Дата","Event name":"Название матча","Events count":"Количество событий","First event":"Первый матч","League":"Лига","Play date":"Дата игры","Play time":"Время начала","Score":"Счет","Start time":"Начало матча"},"teams":"Команды %s"},"date":{"abbr_day_names":["Вс","Пн","Вт","Ср","Чт","Пт","Сб"],"abbr_month_names":[null,"янв.","февр.","марта","апр.","мая","июня","июля","авг.","сент.","окт.","нояб.","дек."],"day_names":["воскресенье","понедельник","вторник","среда","четверг","пятница","суббота"],"formats":{"default":"%Y-%m-%d","long":"%-d %B %Y","short":"%-d %b"},"month_names":[null,"января","февраля","марта","апреля","мая","июня","июля","августа","сентября","октября","ноября","декабря"],"order":["day","month","year"]},"datetime":{"distance_in_words":{"about_x_hours":{"few":"около %{count} часов","many":"около %{count} часов","one":"около %{count} часа","other":"около %{count} часа"},"about_x_months":{"few":"около %{count} месяцев","many":"около %{count} месяцев","one":"около %{count} месяца","other":"около %{count} месяца"},"about_x_years":{"few":"около %{count} лет","many":"около %{count} лет","one":"около %{count} года","other":"около %{count} лет"},"almost_x_years":{"few":"почти %{count} года","many":"почти %{count} лет","one":"почти 1 год","other":"почти %{count} лет"},"half_a_minute":"меньше минуты","less_than_x_minutes":{"few":"меньше %{count} минут","many":"меньше %{count} минут","one":"меньше %{count} минуты","other":"меньше %{count} минуты"},"less_than_x_seconds":{"few":"меньше %{count} секунд","many":"меньше %{count} секунд","one":"меньше %{count} секунды","other":"меньше %{count} секунды"},"over_x_years":{"few":"больше %{count} лет","many":"больше %{count} лет","one":"больше %{count} года","other":"больше %{count} лет"},"x_days":{"few":"%{count} дня","many":"%{count} дней","one":"%{count} день","other":"%{count} дня"},"x_minutes":{"few":"%{count} минуты","many":"%{count} минут","one":"%{count} минуту","other":"%{count} минуты"},"x_months":{"few":"%{count} месяца","many":"%{count} месяцев","one":"%{count} месяц","other":"%{count} месяца"},"x_seconds":{"few":"%{count} секунды","many":"%{count} секунд","one":"%{count} секунду","other":"%{count} секунды"},"x_years":{"few":"%{count} года","many":"%{count} лет","one":"%{count} год","other":"%{count} года"}},"prompts":{"day":"День","hour":"Часов","minute":"Минут","month":"Месяц","second":"Секунд","year":"Год"}},"devise":{"Change my password":"Изменить пароль","Change your password":"Изменить пароль","Didn't receive confirmation instructions?":"Не получили инструкций о подтверждении пароля?","Forgot your password?":"Забыли пароль?","Login":"Вход","Remember me":"Запомнить меня","Resend confirmation instructions":"Еще раз выслать инструкцию о подтверждении пароля","Send me reset password instructions":"Выслать инструкцию о восстановлении пароля","Sign up":"Регистрация","characters minimum":"минимум символов","confirm new password":"подтвердить пароль","confirmations":{"confirmed":"Ваш электронный адрес был успешно подтвержден.","send_instructions":"Через несколько минут вы получите сообщение на почту с указаниями как подтвердить свой электронный адрес.","send_paranoid_instructions":"Если ваш электронный адрес есть в нашей базе данных, вы получите сообщение на почту с указаниями как подтвердить свой электронный адрес."},"email":"почта","failure":{"already_authenticated":"Вы уже вошли.","deleted_account":"Аккаунт с таким email адресом был удален. Обратитесь в службу поддержки если желаете восстановить его.","inactive":"Ваш аккаунт еще не активирован.","invalid":"Недействительный логин или пароль.","last_attempt":"У вас есть еще одна попытка и ваш аккаунт будет заблокирован.","locked":"Ваш аккаунт заблокирован.","need_to_sign_in":"Пожалуйста, войдите в систему, чтоб увидеть ету страницу.","not_found_in_database":"Недействительный логин или пароль.","timeout":"Соединение было прервано. Пожалуйста, войдите еще раз чтобы продолжить.","unauthenticated":"Вам нужно войти или зарегестрироваться чтобы продолжить.","unconfirmed":"Вам надо подтвердить ваш электронный адрес чтобы продолжить."},"mailer":{"Change my password":"Изменить пароль","Confirm my account":"Подтвердить мою учётную запись","Hello":"Здравствуйте","If you did not request this, please ignore this email":"Если Вы этого не делали - просто проигнорируйте это письмо","Someone has requested a link to change your password, and you can do this through the link below":"Кто-то (возможно, Вы) запросил ссылку на изменение пароля, и Вы можете сменить его по ссылке ниже.","Welcome":"Добро пожаловать","You can confirm your account email through the link below":"Вы можете подтвердить свою учётную запись, перейдя по ссылке","Your password will not change until you access the link above and create a new one":"Ваш пароль не изменится, пока Вы не перейдете по ссылке ниже и не создадите новый.","confirmation_instructions":{"subject":"Подтверждение данных"},"password_change":{"subject":"Изменение пароля"},"reset_password_instructions":{"subject":"Инструкция по восстановлению пароля"},"unlock_instructions":{"subject":"Инструкция по разблокировке"}},"new password":"новый пароль","omniauth_callbacks":{"failure":"Вы не можете быть аутентифицированы  %{kind} потому что \"%{reason}\".","success":"Аутентификация аккаунта прошла успешно  %{kind}."},"password":"пароль","password confirmation":"подтверждение пароля","passwords":{"no_token":"Вы не имеете доступа к этой странице без перехода с сообщения о восстановлении. Если вы переходите с сообщения о восстановлении, пожалуйста, убедитесь в целосности предоставленного URL.","send_instructions":"Через несколько минут вы получите сообщение на почту с указаниями как восстановить свой пароль.","send_paranoid_instructions":"Если ваш электронный адрес есть в нашей базе данных, через несколько минут вы получите сообщение на почту со ссылкой для восстановления вашего пароля.","updated":"Ваш пароль был успешно изменен. Вы вошли в систему.","updated_not_active":"Ваш пароль был успешно изменен."},"registrations":{"destroyed":"Прощайте! Ваш аккаунт был успешно удален. Надеемся увидеть вас снова.","signed_up":"Приветствуем! Ваша регистрация прошла успешно.","signed_up_but_inactive":"Ваша регистрация прошла успешно. Однако, вы не можете войти так как ваш аккаунт еще не активирован.","signed_up_but_locked":"Ваша регистрация прошла успешно. Однако, вы не можете войти так как ваш аккаунт заблокирован.","signed_up_but_unconfirmed":"Сообщение со ссылкой для подтверждения было выслано вам на электронную почту. Пожалуйста, нажмите на ссылку чтобы подтвердить свой аккаунт.","update_needs_confirmation":"Вы успешно обновили свой аккаунт, но нам надо проверить ваш новый электронный адрес. Проверьте ваши собщения  перейдите по ссылке чтобы подтвердить свой новый электронный адрес.","updated":"Ваш аккаунт был успешно оновлен."},"sessions":{"already_signed_out":"Вы успешно вышли с системы.","signed_in":"Вы успешно вошли в систему.","signed_out":"Вы успешно вышли с системы."},"unlocks":{"send_instructions":"Через несколько минут вы получите сообщение на почту с указаниями как восстановить свой аккаунт.","send_paranoid_instructions":"Если ваш электронный адрес есть в нашей базе данных, через несколько минут вы получите сообщение на почту со ссылкой для восстановления вашего аккаунт.","unlocked":"Ваш аккаунт был успешно разблокирован. Войдите чтобы продолжить."}},"errors":{"format":"%{attribute} %{message}","messages":{"accepted":"нужно подтвердить","already_confirmed":"уже подтвержден, пожалуйста попробуйте войти","blank":"Не может быть пустым","changes_saved":"Изменения сохранены","confirmation":"не совпадает со значением поля %{attribute}","confirmation_period_expired":"должна быть подтверждена на протяжении %{period}, пожалуйста, сделайте запрос на новую","empty":"не может быть пустым","entered_email":"Имейл использовался для входа в аккаунт, который удалили. Пожалуйста, свяжитесь с нами, чтоб возобновить свой аккаунт.","equal_to":"может иметь лишь значение, равное %{count}","even":"может иметь лишь нечетное значение","exclusion":"имеет зарезервированное значение","expired":"истекла, пожалуйста, сделайте запрос на новую","greater_than":"может иметь значение большее %{count}","greater_than_or_equal_to":"может иметь значение большее или равное %{count}","inclusion":"имеет непредусмотренное значение","invalid":"имеет неверное значение","less_than":"может иметь значение меньшее чем %{count}","less_than_or_equal_to":"может иметь значение меньшее или равное %{count}","not_a_number":"не является числом","not_an_integer":"не является целым числом","not_found":"не найден","not_locked":"не был заблокирован","not_saved":{"one":"1 ошибка запретила этому %{resource} сохранится:","other":"%{count} ошибки запретили этому %{resource} сохранится:"},"odd":"может иметь лишь четное значение","other_than":"должно отличаться от %{count}","please_select_bk":"Пожалуйста, выберите хотя бы одного букмекера","present":"нужно оставить пустым","send_instruction_reset_pass":"Вы получите электронное письмо с инструкциями о том, как сбросить пароль в течение нескольких минут","taken":"уже существует","too_long":{"few":"слишком большой длины (не может быть больше чем %{count} символа)","many":"слишком большой длины (не может быть больше чем %{count} символов)","one":"слишком большой длины (не может быть больше чем %{count} символ)","other":"слишком большой длины (не может быть больше чем %{count} символа)"},"too_short":{"few":"недостаточной длины (не может быть меньше %{count} символов)","many":"недостаточной длины (не может быть меньше %{count} символов)","one":"недостаточной длины (не может быть меньше %{count} символа)","other":"недостаточной длины (не может быть меньше %{count} символа)"},"wrong_length":{"few":"неверной длины (может быть длиной ровно %{count} символа)","many":"неверной длины (может быть длиной ровно %{count} символов)","one":"неверной длины (может быть длиной ровно %{count} символ)","other":"неверной длины (может быть длиной ровно %{count} символа)"}},"template":{"body":"Проблемы возникли со следующими полями:","header":{"few":"%{model}: сохранение не удалось из-за %{count} ошибок","many":"%{model}: сохранение не удалось из-за %{count} ошибок","one":"%{model}: сохранение не удалось из-за %{count} ошибки","other":"%{model}: сохранение не удалось из-за %{count} ошибки"}}},"event":{"Close":"Закрыть","Colorful labels":"Цветные ярлыки","Draw":"Ничья","Highest":"Самая высокая","Matrix":"Матрица","Open":"Открыть","Value bets":"Ставки с перевесом","Valuebets":"Ставки с перевесом","Visit it":"Перейти к лайв коэффициентам","event ended":"Событие завершено %s","event-live-page-description":"Букмекерские коэффициенты для ставок на различные исходы %s \u003cspan class='bold'\u003e%s\u003c/span\u003e с более чем 79 букмекерских контор. Выбирайте лучшие коэффициенты и делайте выгодные лайв ставки на %s %s","event-page-description":"Букмекерские коэффициенты для ставок на различные исходы %s \u003cspan class='bold'\u003e%s\u003c/span\u003e с более чем 79 букмекерских контор, который состоится %s в %s. Выбирайте лучшие коэффициенты и делайте выгодные ставки на %s %s","match":"матча","match ended":"Матч завершен %s","match is in live":"Матч начался","match_18":"боя","match_25":"гонки","match_30":"забега","match_31":"гонки","nav":{"11_s":{"correct_score":"Точный Счет","frames":"Фреймы","handicaps":"Гандикапы","main":"Главное","totals":"Тоталы"},"12_s":{"correct_score":"Точный Счет","handicaps":"Гандикапы","main":"Главное","sets":"Сеты","totals":"Тоталы"},"13_s":{"correct_score":"Точный Счет","handicaps":"Гандикапы","main":"Главное","sets":"Сеты","totals":"Тоталы"},"14_s":{"correct_score":"Точный Счет","handicaps":"Гандикапы","main":"Основные","sets":"Сеты","totals":"Тотал"},"15_s":{"halfs":"Таймы","handicaps":"Гандикапы","main":"Главное","totals":"Тоталы"},"16_s":{"halfs":"Половини","handicaps":"Гандикапы","main":"Главное","totals":"Тоталы"},"17_s":{"halfs":"Таймы","handicaps":"Гандикапы","main":"Главное","totals":"Тоталы"},"18_s":{"main":"Главное","totals":"Тоталы"},"19_s":{"halfs":"Таймы","handicaps":"Гандикапы","main":"Основные","totals":"Тотал"},"1_s":{"half":"Таймы","handicaps":"Гандикапы","innings":"Иннинги","main":"Главное","totals":"Тоталы"},"23_s":{"halfs":"Таймы","handicaps":"Гандикапы","main":"Основные","totals":"Тотал"},"25_s":{"head_to_head":"Кто выше","podium":"Подиум","winner":"Победитель"},"29_s":{"correct_score":"Точный Счет","halfs":"Таймы","handicaps":"Гандикапы","main":"Основные","totals":"Тотал"},"2_s":{"halfs":"Половини","handicaps":"Гандикапы","innings":"Иннинги","main":"Главное","quarters":"Четверти","totals":"Тоталы"},"30_s":{"winner":"Победитель"},"31_s":{"head_to_head":"Кто выше","podium":"Подиум","winner":"Победитель"},"4_s":{"halfs":"Таймы","handicaps":"Гандикапы","main":"Главное","totals":"Тоталы"},"5_s":{"halfs":"Таймы","handicaps":"Гандикапы","main":"Главное","totals":"Тоталы"},"6_s":{"correct_score":"Точный Счет","handicaps":"Гандикапы","main":"Главное","periods":"Периоды","totals":"Тоталы"},"7_s":{"correct_score":"Точный Счет","goals":"Голы","half":"Таймы","halfs":"Таймы","handicaps":"Гандикапы","main":"Главное","statistics":"Статистика"},"8_s":{"correct_score":"Точный Счет","handicaps":"Форы","home_away":"Победитель","sets":"Сеты","totals":"Тоталы"},"9_s":{"correct_score":"Точный Счет","handicaps":"Гандикапы","main":"Главное","sets":"Сеты","totals":"Тоталы"},"close":"Закрыть","open":"Открыть"},"not lay":"За","with a score":"со счетом","with lay":"Против","Лучшие коэффициенты":"Лучшие коэффициенты"},"events":{"Live Odds":"Лайв коэффициенты","Next Matches":"Следующие матчи","Popular Matches":"Популярные матчи","Surebets":"Прематч вилки"},"events_grid":{"1":1,"2":2,"F1":1,"F2":2,"Hand":"Фора","ML1":1,"ML2":2,"PL1-N":"PL1-N","PL1-Y":"PL1-Y","PL1_3-N":"PL1_3-N","PL1_3-Y":"PL1_3-Y","TO":"Больше","TU":"Меньше","Total":"Тотал","X":"X","events":"СОБЫТИЯ","score":"СЧЕТ","valF1":"Фора","valF2":"Фора","valT":"Тотал"},"footer":{"bookmakers":"букмекеров","legal_info":"Копирайт © 2016 Oddsfan, все права защищены. Эта програма предлагается доброй волей, и любого рода оскрбление подлежит наказанию согласно нормам международного права.","sport markets":"рынков","sports":"спортов"},"global":{"E-mail confirmed":"E-mail подтвержден","Get the best odds Kick-off at":"Получите лучшие коэффициенты. Начало в","Home":"Home","Login":"Вход","Logout":"Выйти","My account":"Мой аккаунт","PAYOUT":"Выплата","Register":"Регистрация","Soccer":"Футбол","Today":"Сегодня","Toggle Menu":"Меню","Tomorrow":"Завтра","Yesterday":"Вчера","You will be automatically redirected in 10 seconds":"Вы будете автоматически перенаправлены на главную страницу через 10 секунд","anonces":"Анонсы","betting odds comparison":"лучшие коэффициенты","bookmakers":"букмекеры","calendar":"Календарь матчей","check_all_bk":"Выбрать все","coming soon":"скоро на сайте","country_page_text":"Здесь вы найдете лучшие букмекерские коэффициенты на множество футбольных матчей %s с более чем %s букмекерских контор.","horizontal mode":"в горизонтальный режим просмотра","koefs":"Коэффициенты","league_h1_text":"%s","league_page_text":"%s: здесь вы найдете перечень всех доступных %s выбранной лиги от 79 букмекерских контор. Для сравнения коэффициентов перейдите на страницу сравнения, кликнув по названию интересующего вас события.","open":"открыть","or":"или","please":"Пожалуйста,","processing_personal_data":"Я даю свое согласие на сбор, обработку и хранение моих персональных данных","profile_email_me":"Получать уведомления об акциях, скидках и новостях на email","registration_email_me":"Получать уведомления о новостях и скидках на email","return the phone":"поверните телефон","sports":"Виды спорта","standings":"Турнирная таблица","successfully saved":"изменения сохранены","welcome_to_project":"Добро пожаловать на OddsFan","world_champions":"ЧМ 2018"},"header":{"SEARCH":"События, соперники...","choose_bookmakers":"Выбрать букмекеров","choose_league":"Выбрать лигу","mail_subject":"Вопрос от"},"helpers":{"select":{"prompt":"Выберите: "},"submit":{"create":"Создать %{model}","submit":"Сохранить %{model}","update":"Сохранить %{model}"}},"languages":{"de":"НЕМ","en":"АНГЛ","esr":"ИСП","fra":"ФРА","lang":"Язык","language":"Язык","ru":"РУС"},"market_variation_full_name":{"1ACE-ML1":"Игрок1 - 1й Эйс","1ACE-ML2":"Игрок2 - 1й Эйс","1BR-1":"Игрок1 - 1й Брейк","1BR-2":"Игрок2 - 1й Брейк","1BR-ML1":"Игрок1 - 1й Брейк","1BR-ML2":"Игрок2 - 1й Брейк","1BR-X":"Без Брейка","1CNR-1":"Команда 1 - 1-й Угловой","1CNR-2":"Команда 2 - 1-й Угловой","1CNR-ML1":"Команда 1 - 1-й Угловой","1CNR-ML2":"Команда 2 - 1-й Угловой","1CNR-X":"Без угловых","1DBF-ML1":"Игрок1 - 1я Двойная ошибка","1DBF-ML2":"Игрок2 - 1я Двойная ошибка","1OFS-1":"Команда 1 - 1-й Офсайд","1OFS-2":"Команда 2 - 1-й Офсайд","1OFS-ML1":"Команда 1 - 1-й Офсайд","1OFS-ML2":"Команда 1 - 1-й Офсайд","1OFS-X":"Без Офсайдов","1SER_F-F1":"Фора1(%s) - Первая подача","1SER_F-F2":"Фора2(%s) - Первая подача","1SER_OU1-TO":"Тотал больше(%s) для 1-й команды - Первая подача","1SER_OU1-TU":"Тотал меньше(%s) для 1-й команды - Первая подача","1SER_OU2-TO":"Тотал больше(%s) для 2-й команды - Первая подача","1SER_OU2-TU":"Тотал меньше(%s) для 2-й команды - Первая подача","1SUBS-ML1":"Команда 1 - 1-я Замена","1SUBS-ML2":"Команда 2 - 1-я Замена","1X2-1":"1","1X2-2":"2","1X2-X":"X","1YC-1":"Команда 1 - 1-я Желтая Карточка","1YC-2":"Команда 2 - 1-я Желтая Карточка","1YC-ML1":"Команда 1 - 1-я Желтая Карточка","1YC-ML2":"Команда 2 - 1-я Желтая Карточка","1YC-X":"Без Желтых Карточек","60SET-N":"6-0 Сет - нет","60SET-Y":"6-0 Сет - да","ACE_F-F1":"Фора1(%s) - Эйсы","ACE_F-F2":"Фора2(%s) - Эйсы","ACE_OU-TO":"Тотал больше(%s) - Эйсы","ACE_OU-TU":"Тотал меньше(%s) - Эйсы","ACE_OU1-TO":"Тотал больше(%s) для 1-й команды - Эйсы","ACE_OU1-TU":"Тотал меньше(%s) для 1-й команды - Эйсы","ACE_OU2-TO":"Тотал больше(%s) для 2-й команды - Эйсы","ACE_OU2-TU":"Тотал меньше(%s) для 2-й команды - Эйсы","ADDED_EG-EG":"Точно (%s) - Добавочное время","ADDED_EG-EG_N":"Точно (%s) - Добавочное время - нет","ADDED_OU-TO":"Тотал больше(%s) - Добавочное время","ADDED_OU-TU":"Тотал меньше(%s) - Добавочное время","BHO-N":"Оба тайма тотал больше 1.5 - нет","BHO-Y":"Оба тайма тотал больше 1.5 - да","BHU-N":"Оба тайма тотал меньше 1.5 - нет","BHU-Y":"Оба тайма тотал меньше 1.5 - да","BTS-N":"Одна не забьет","BTS-OTS_Y":"Только одна забьет","BTS-Y":"Обе забьют","BTSD-N":"Обе забьют и Ничья - нет","BTSD-Y":"Обе забьют и Ничья - да","BTSW1-N":"Обе забьют и Победа 1-ой команды - нет","BTSW1-Y":"Обе забьют и Победа 1-ой команды - да","BTSW2-N":"Обе забьют и Победа 2-ой команды - нет","BTSW2-Y":"Обе забьют и Победа 2-ой команды - да","CNR_1X2-1":"1 - Угловые","CNR_1X2-2":"2 - Угловые","CNR_1X2-X":"X - Угловые","CNR_DC-12":"12 - Угловые","CNR_DC-1X":"1X - Угловые","CNR_DC-X2":"X2 - Угловые","CNR_F-F1":"Фора1(%s) - Угловые","CNR_F-F2":"Фора2(%s) - Угловые","CNR_OE-EVEN":"Чет - Угловые","CNR_OE-ODD":"Нечет - Угловые","CNR_OU-TO":"Тотал больше(%s) - Угловые","CNR_OU-TU":"Тотал меньше(%s) - Угловые","CNR_OU1-TO":"Тотал больше(%s) для 1-й команды - Угловые","CNR_OU1-TU":"Тотал меньше(%s) для 1-й команды - Угловые","CNR_OU2-TO":"Тотал больше(%s) для 2-й команды - Угловые","CNR_OU2-TU":"Тотал меньше(%s) для 2-й команды - Угловые","CS-CS":"Счет (%s)","CS-CS_N":"Счет (%s) - нет","DBF_F-F1":"Фора1(%s) - Двойные ошибки","DBF_F-F2":"Фора2(%s) - Двойные ошибки","DBF_OU-TO":"Тотал больше(%s) - Двойные ошибки","DBF_OU-TU":"Тотал меньше(%s) - Двойные ошибки","DBF_OU1-TO":"Тотал больше(%s) для 1-й команды - Двойные ошибки","DBF_OU1-TU":"Тотал меньше(%s) для 1-й команды - Двойные ошибки","DBF_OU2-TO":"Тотал больше(%s) для 2-й команды - Двойные ошибки","DBF_OU2-TU":"Тотал меньше(%s) для 2-й команды - Двойные ошибки","DBH-N":"Ничья в обоих таймах - нет","DBH-Y":"Ничья в обоих таймах - да","DBL-N":"Дубль - нет","DBL-Y":"Дубль - да","DC-12":"12","DC-1X":"1X","DC-X2":"X2","DEH-N":"Ничья хотя бы в одном тайме - нет","DEH-Y":"Ничья хотя бы в одном тайме - да","DNB-DNB1":"Фора1(0.0)/Без ничьи","DNB-DNB2":"Фора2(0.0)/Без ничьи","DTO-N":"Ничья и Тотал больше (2.5) - нет","DTO-Y":"Ничья и Тотал больше (2.5) - да","DTU-N":"Ничья и Тотал меньше (2.5) - нет","DTU-Y":"Ничья и Тотал меньше (2.5) - да","EG-EG":"Ровно (%s)","EG-EG_N":"Ровно (%s) - нет","EG1-EG":"Ровно (%s) для 1-й команды","EG1-EG_N":"Ровно (%s) для 1-й команды - нет","EG2-EG":"Ровно (%s) для 2-й команды","EG2-EG_N":"Ровно (%s) для 2-й команды - нет","EH-EH1":"Команда 1 (%s)","EH-EH2":"Команда 2 (%s)","EH-EHX":"Ничья (%s)","ERR_OU-TO":"Тб(%s) - Ошибки","ERR_OU-TU":"Тм(%s) - Ошибки","F-F1":"Фора1(%s)","F-F2":"Фора2(%s)","FG-1":"Команда 1 - 1-й гол","FG-2":"Команда 2 - 1-й гол","FG-ML1":"1 гол - хозяева (без ничьи)","FG-ML2":"1 гол - гости (без ничьи)","FG-X":"Без голов","FOUL_1X2-1":"1 - Фолы","FOUL_1X2-2":"2 - Фолы","FOUL_1X2-X":"X - Фолы","FOUL_DC-12":"12 - Фолы","FOUL_DC-1X":"1X - Фолы","FOUL_DC-X2":"X2 - Фолы","FOUL_F-F1":"Фора1(%s) - Фолы","FOUL_F-F2":"Фора2(%s) - Фолы","FOUL_OE-EVEN":"Чет - Фолы","FOUL_OE-ODD":"Нечет - Фолы","FOUL_OU-TO":"Тотал больше(%s) - Фолы","FOUL_OU-TU":"Тотал меньше(%s) - Фолы","FOUL_OU1-TO":"Тотал больше(%s) для 1-й команды - Фолы","FOUL_OU1-TU":"Тотал меньше(%s) для 1-й команды - Фолы","FOUL_OU2-TO":"Тотал больше(%s) для 2-й команды - Фолы","FOUL_OU2-TU":"Тотал меньше(%s) для 2-й команды - Фолы","GBH-N":"Гол в обоих таймах - нет","GBH-Y":"Гол в обоих таймах - да","GBH1-N":"Команда 1 - гол в обоих таймах - нет","GBH1-Y":"Команда 1 - гол в обоих таймах - да","GBH2-N":"Команда 2 - гол в обоих таймах - нет","GBH2-Y":"Команда 2 - гол в обоих таймах - да","HH-ML1":"П1","HH-ML2":"П2","HIT_1X2-1":"1 - Хиты","HIT_1X2-2":"2 - Хиты","HIT_1X2-X":"X - Хиты","HIT_F-F1":"Ф1(%s) - Хиты","HIT_F-F2":"Ф2(%s) - Хиты","HIT_OU-TO":"Тб(%s) - Хиты","HIT_OU-TU":"Тм(%s) - Хиты","HIT_OU1-TO":"Тб(%s) для 1-й команды - Хиты","HIT_OU1-TU":"Тм(%s) для 1-й команды - Хиты","HIT_OU2-TO":"Тб(%s) для 2-й команды - Хиты","HIT_OU2-TU":"Тм(%s) для 2-й команды - Хиты","HMG-1":"1 тайм больше голов","HMG-2":"2 тайм больше голов","HMG-ML1":"1 тайм больше голов (без ничьи)","HMG-ML2":"2 тайм больше голов (без ничьи)","HMG-X":"Равное кол-во голов","HTFT-1_1":"Победа1/Победа1","HTFT-1_1_N":"Победа1/Победа1 - нет","HTFT-1_2":"Победа1/Победа2","HTFT-1_2_N":"Победа1/Победа2 - нет","HTFT-1_X":"Победа1/Ничья","HTFT-1_X_N":"Победа1/Ничья - нет","HTFT-2_1":"Победа2/Победа1","HTFT-2_1_N":"Победа2/Победа1 - нет","HTFT-2_2":"Победа2/Победа2","HTFT-2_2_N":"Победа2/Победа2 - нет","HTFT-2_X":"Победа2/Ничья","HTFT-2_X_N":"Победа2/Ничья - нет","HTFT-X_1":"Ничья/Победа1","HTFT-X_1_N":"Ничья/Победа1 - нет","HTFT-X_2":"Ничья/Победа2","HTFT-X_2_N":"Ничья/Победа2 - нет","HTFT-X_X":"Ничья/Ничья","HTFT-X_X_N":"Ничья/Ничья - нет","HTR-N":"Хет-трик - нет","HTR-Y":"Хет-трик - да","LCNR-1":"Команда 1 - Последний Угловой","LCNR-2":"Команда 2 - Последний Угловой","LCNR-ML1":"Команда 1 - Последний Угловой","LCNR-ML2":"Команда 2 - Последний Угловой","LCNR-X":"Без угловых","LG-1":"Команда 1 - Последний гол","LG-2":"Команда 2 - Последний гол","LG-ML1":"Команда 1 - Последний гол (без ничьи)","LG-ML2":"Команда 2 - Последний гол (без ничьи)","LG-X":"Без голов","LOFS-1":"Команда 1 - Последний Офсайд","LOFS-2":"Команда 2 - Последний Офсайд","LOFS-ML1":"Команда 2 - Последний Офсайд","LOFS-ML2":"Команда 2 - Последний Офсайд","LOFS-X":"Без Офсайдов","LSUBS-ML1":"Команда 1 - Последняя Замена","LSUBS-ML2":"Команда 1 - Последняя Замена","LYC-1":"Команда 1 - Последняя Желтая Карточка","LYC-2":"Команда 2 - Последняя Желтая Карточка","LYC-ML1":"Команда 1 - Последняя Желтая Карточка","LYC-ML2":"Команда 2 - Последняя Желтая Карточка","LYC-X":"Без Желтых Карточек","ML-ML1":"Победа 1-й команды","ML-ML1-30":"1-е место - да","ML-ML2":"Победа 2-й команды","ML-ML2-30":"1-е место - нет","NB1-ML1":"Без П1 - Не П2","NB1-ML2":"Без П1 - П2","NB1-MLX":"Без П1 - Ничья","NB1-MLX_N":"Без П1 - Не ничья","NB2-ML1":"Без П2 - П1","NB2-ML2":"Без П2 - Не П1","NB2-MLX":"Без П2 - Ничья","NB2-MLX_N":"Без П2 - Не ничья","NG-1":"Команда 1 - Следующий гол","NG-2":"Команда 2 - Следующий гол","NG-ML1":"Команда 1 - Следующий гол (без ничьи)","NG-ML2":"Команда 2 - Следующий гол (без ничьи)","NG-X":"След.гола не будет","OE-EVEN":"Чет","OE-ODD":"Нечет","OFS_1X2-1":"1 - Офсайды","OFS_1X2-2":"2 - Офсайды","OFS_1X2-X":"X - Офсайды","OFS_DC-12":"12 - Офсайды","OFS_DC-1X":"1X - Офсайды","OFS_DC-X2":"X2 - Офсайды","OFS_F-F1":"Фора1(%s) - Офсайды","OFS_F-F2":"Фора2(%s) - Офсайды","OFS_OE-EVEN":"Чет - Офсайды","OFS_OE-ODD":"Нечет - Офсайды","OFS_OU-TO":"Тотал больше(%s) - Офсайды","OFS_OU-TU":"Тотал меньше(%s) - Офсайды","OFS_OU1-TO":"Тотал больше(%s) для 1-й команды - Офсайды","OFS_OU1-TU":"Тотал меньше(%s) для 1-й команды - Офсайды","OFS_OU2-TO":"Тотал больше(%s) для 2-й команды - Офсайды","OFS_OU2-TU":"Тотал меньше(%s) для 2-й команды - Офсайды","OG-N":"Автогол - нет","OG-Y":"Автогол - да","OT-N":"Овертайм - нет","OT-Y":"Овертайм - да","OU-TO":"Тотал больше(%s)","OU-TU":"Тотал меньше(%s)","OU1-TO":"Тотал больше(%s) для 1-й команды","OU1-TU":"Тотал меньше(%s) для 1-й команды","OU2-TO":"Тотал больше(%s) для 2-й команды","OU2-TU":"Тотал меньше(%s) для 2-й команды","PEN-N":"Пенальти не будет","PEN-Y":"Пенальти будет","PL1-N":"1место - нет","PL1-Y":"1место - да","PL1_3-N":"1-3место - нет","PL1_3-Y":"1-3место - да","POS_1X2-1":"1 - Владение мячом","POS_1X2-2":"2 - Владение мячом","POS_1X2-X":"X - Владение мячом","POS_DC-12":"12 - Владение мячом","POS_DC-1X":"1X - Владение мячом","POS_DC-X2":"X2 - Владение мячом","POS_F-F1":"Фора1(%s) - Владение мячом","POS_F-F2":"Фора2(%s) - Владение мячом","POS_OU1-TO":"Тотал больше(%s) для 1-й команды - Владение мячом","POS_OU1-TU":"Тотал меньше(%s) для 1-й команды - Владение мячом","POS_OU2-TO":"Тотал больше(%s) для 2-й команды - Владение мячом","POS_OU2-TU":"Тотал меньше(%s) для 2-й команды - Владение мячом","RACE10-1":"Гонка до 10 - Команда 1","RACE10-2":"Гонка до 10 - Команда 2","RACE10-ML1":"Гонка до 10 - Команда 1","RACE10-ML2":"Гонка до 10 - Команда 2","RACE10-X":"Гонка до 10 - никто","RACE15-1":"Гонка до 15 - Команда 1","RACE15-2":"Гонка до 15 - Команда 2","RACE15-ML1":"Гонка до 15 - Команда 1","RACE15-ML2":"Гонка до 15 - Команда 2","RACE15-X":"Гонка до 15 - никто","RACE2-1":"Гонка до 2 - Команда 1","RACE2-2":"Гонка до 2 - Команда 2","RACE2-ML1":"Гонка до 2 - Команда 1","RACE2-ML2":"Гонка до 2 - Команда 2","RACE2-X":"Гонка до 2 - никто","RACE20-1":"Гонка до 20 - Команда 1","RACE20-2":"Гонка до 20 - Команда 2","RACE20-ML1":"Гонка до 20 - Команда 1","RACE20-ML2":"Гонка до 20 - Команда 2","RACE20-X":"Гонка до 20 - никто","RACE3-1":"Гонка до 3 - Команда 1","RACE3-2":"Гонка до 3 - Команда 2","RACE3-ML1":"Гонка до 3 - Команда 1","RACE3-ML2":"Гонка до 3 - Команда 2","RACE3-X":"Гонка до 3 - никто","RACE4-1":"Гонка до 4 - Команда 1","RACE4-2":"Гонка до 4 - Команда 2","RACE4-ML1":"Гонка до 4 - Команда 1","RACE4-ML2":"Гонка до 4 - Команда 2","RACE4-X":"Гонка до 4 - никто","RACE5-1":"Гонка до 5 - Команда 1","RACE5-2":"Гонка до 5 - Команда 2","RACE5-ML1":"Гонка до 5 - Команда 1","RACE5-ML2":"Гонка до 5 - Команда 2","RACE5-X":"Гонка до 5 - никто","RC-N":"Удаления не будет","RC-Y":"Удаление будет","RHE_OU-TO":"Тб(%s) - Хиты+Ошибки+Пробежки","RHE_OU-TU":"Тм(%s) - Хиты+Ошибки+Пробежки","SD-N":"Результативная ничья - нет","SD-Y":"Результативная ничья - да","SET_CS-SET_CS":"Счет (%s) - Сеты","SET_CS-SET_CS_N":"Счет (%s) - Сеты - нет","SET_EG-EG":"Ровно (%s) - Сеты","SET_EG-EG_N":"Ровно (%s) - Сеты - нет","SET_F-SET_F1":"Фора1(%s) - Сеты","SET_F-SET_F2":"Фора2(%s) - Сеты","SET_OU-SET_TO":"Тотал больше(%s) - Сеты","SET_OU-SET_TU":"Тотал меньше(%s) - Сеты","SHOT_1X2-1":"1 - Удары в створ","SHOT_1X2-2":"2 - Удары в створ","SHOT_1X2-X":"X - Удары в створ","SHOT_DC-12":"12 - Удары в створ","SHOT_DC-1X":"1X - Удары в створ","SHOT_DC-X2":"X2 - Удары в створ","SHOT_F-F1":"Фора1(%s) - Удары в створ","SHOT_F-F2":"Фора2(%s) - Удары в створ","SHOT_OE-EVEN":"Чет - Удары в створ","SHOT_OE-ODD":"Нечет - Удары в створ","SHOT_OU-TO":"Тотал больше(%s) - Удары в створ","SHOT_OU-TU":"Тотал меньше(%s) - Удары в створ","SHOT_OU1-TO":"Тотал больше(%s) для 1-й команды - Удары в створ","SHOT_OU1-TU":"Тотал меньше(%s) для 1-й команды - Удары в створ","SHOT_OU2-TO":"Тотал больше(%s) для 2-й команды - Удары в створ","SHOT_OU2-TU":"Тотал меньше(%s) для 2-й команды - Удары в створ","SUBS_OU-TO":"Тотал больше(%s) - Замены","SUBS_OU-TU":"Тотал меньше(%s) - Замены","SUBS_OU1-TO":"Тотал больше(%s) для 1-й команды - Замены","SUBS_OU1-TU":"Тотал меньше(%s) для 1-й команды - Замены","SUBS_OU2-TO":"Тотал больше(%s) для 2-й команды - Замены","SUBS_OU2-TU":"Тотал меньше(%s) для 2-й команды - Замены","SWS-N":"Забьёт ли игрок, вышедший на замену - нет","SWS-Y":"Забьёт ли игрок, вышедший на замену - да","TB-TO":"Тотал больше(%s) - Тай-Брейк","TB-TU":"Тотал меньше(%s) - Тай-Брейк","TIME_FG-1":"1й Гол - 1тайм","TIME_FG-2":"1й Гол - 2тайм","TIME_FG-X":"Без голов","TIME_SUBS-1":"1я Замена - 1тайм","TIME_SUBS-2":"1я Замена - 2тайм","TIME_SUBS-X":"1я Замена - перерыв","TOX1-N":"1X и Тотал больше (2.5) - нет","TOX1-Y":"1X и Тотал больше (2.5) - да","TOX2-N":"X2 и Тотал больше (2.5) - нет","TOX2-Y":"X2 и Тотал больше (2.5) - да","TUX1-N":"1X и Тотал меньше (2.5) - нет","TUX1-Y":"1X и Тотал меньше (2.5) - да","TUX2-N":"X2 и Тотал меньше (2.5) - нет","TUX2-Y":"X2 и Тотал меньше (2.5) - да","W1G1-N":"Победа 1-й команды ровно в 1 гол - нет","W1G1-Y":"Победа 1-й команды ровно в 1 гол - да","W1G2-N":"Победа 2-й команды ровно в 1 гол - нет","W1G2-Y":"Победа 2-й команды ровно в 1 гол - да","W2G1-N":"Победа 1-й команды ровно в 2 гола - нет","W2G1-Y":"Победа 1-й команды ровно в 2 гола - да","W2G2-N":"Победа 2-й команды ровно в 2 гола - нет","W2G2-Y":"Победа 2-й команды ровно в 2 гола - да","W3G1-N":"Победа 1-й команды ровно в 3 гола - нет","W3G1-Y":"Победа 1-й команды ровно в 3 гола - да","W3G2-N":"Победа 2-й команды ровно в 3 гола - нет","W3G2-Y":"Победа 2-й команды ровно в 3 гола - да","WBH1-N":"Победа 1-й команды в обоих таймах - нет","WBH1-Y":"Победа 1-й команды в обоих таймах - да","WBH2-N":"Победа 2-й команды в обоих таймах - нет","WBH2-Y":"Победа 2-й команды в обоих таймах - да","WEH1-N":"Победа 1-й команды хотя бы в одном тайме - нет","WEH1-Y":"Победа 1-й команды хотя бы в одном тайме - да","WEH2-N":"Победа 2-й команды хотя бы в одном тайме - нет","WEH2-Y":"Победа 2-й команды хотя бы в одном тайме - да","WFB-N":"Волевая победа - нет","WFB-Y":"Волевая победа - да","WFB1-N":"Волевая победа 1-й команды - нет","WFB1-Y":"Волевая победа 1-й команды - да","WFB2-N":"Волевая победа 2-й команды - нет","WFB2-Y":"Волевая победа 2-й команды - да","WTN1-N":"Сухая победа 1-й команды - нет","WTN1-Y":"Сухая победа 1-й команды - да","WTN2-N":"Сухая победа 2-й команды - нет","WTN2-Y":"Сухая победа 2-й команды - да","WTO1-N":"Победа 1 и Тотал больше (2.5) - нет","WTO1-Y":"Победа 1 и Тотал больше (2.5) - да","WTO2-N":"Победа 2 и Тотал больше (2.5) - нет","WTO2-Y":"Победа 2 и Тотал больше (2.5) - да","WTU1-N":"Победа 1 и Тотал меньше (2.5) - нет","WTU1-Y":"Победа 1 и Тотал меньше (2.5) - да","WTU2-N":"Победа 2 и Тотал меньше (2.5) - нет","WTU2-Y":"Победа 2 и Тотал меньше (2.5) - да","YC_1X2-1":"1 - Желтые Карточки","YC_1X2-2":"2 - Желтые Карточки","YC_1X2-X":"X - Желтые Карточки","YC_DC-12":"12 - Желтые Карточки","YC_DC-1X":"1X - Желтые Карточки","YC_DC-X2":"X2 - Желтые Карточки","YC_F-F1":"Фора1(%s) - Желтые Карточки","YC_F-F2":"Фора2(%s) - Желтые Карточки","YC_OE-EVEN":"Чет - Желтые Карточки","YC_OE-ODD":"Нечет - Желтые Карточки","YC_OU-TO":"Тотал больше(%s) - Желтые Карточки","YC_OU-TU":"Тотал меньше(%s) - Желтые Карточки","YC_OU1-TO":"Тотал больше(%s) для 1-й команды - Желтые Карточки","YC_OU1-TU":"Тотал меньше(%s) для 1-й команды - Желтые Карточки","YC_OU2-TO":"Тотал больше(%s) для 2-й команды - Желтые Карточки","YC_OU2-TU":"Тотал меньше(%s) для 2-й команды - Желтые Карточки"},"markets":{"1":{"-1 F":"Гандикап","-1 F more":"Гандикап(дополнительные)","-1 ML":"Победитель","-1 OU":"Тотал","-1 OU more":"Тотал (дополнительные)","-1 OU1":"Тотал 1-ой команды","-1 OU1 more":"Тотал 1-ой команды (дополнительные)","-1 OU2":"Тотал 2-ой команды","-1 OU2 more":"Тотал 2-ой команды (дополнительные)","-100 ML":"Проход","0 1X2":"1X2","1 1X2":"1X2[1-й иннинг]","1 F":"Гандикап [1-й иннинг]","1 F more":"Гандикап [1-й иннинг] (дополнительные)","1 OU":"Тотал [1-й иннинг]","1 OU more":"Тотал [1-й иннинг] (дополнительные)","2 1X2":"1X2[2-й иннинг]","2 F":"Гандикап [2-й иннинг]","2 F more":"Гандикап [2-й иннинг] (дополнительные)","2 OU":"Тотал [2-й иннинг]","2 OU more":"Тотал [2-й иннинг] (дополнительные)","3 1X2":"1X2[3-й иннинг]","3 F":"Гандикап [3-й иннинг]","3 F more":"Гандикап [3-й иннинг] (дополнительные)","3 OU":"Тотал [3-й иннинг]","3 OU more":"Тотал [3-й иннинг] (дополнительные)"},"11":{"0 CS":"Точный Счет","0 F":"Гандикап","0 F more":"Гандикап (дополнительные)","0 ML":"Победитель","0 OU":"Тотал","0 OU more":"Тотал (дополнительные)","1 ML":"Победитель 1-й Фрейм","2 ML":"Победитель 2-й Фрейм","3 ML":"Победитель 3-й Фрейм"},"12":{"0 CS":"Точный Счет","0 F":"Гандикап","0 F more":"Гандикап (дополнительные)","0 ML":"Победитель","0 OU":"Тотал","0 OU more":"Тотал(дополнительные)","0 OU1":"Тотал 1-ой команды","0 OU2":"Тотал 2-ой команды","1 ML":"Победитель 1-й Сет","2 ML":"Победитель 2-й Сет","3 ML":"Победитель 3-й Сет"},"13":{"-1 CS":"Точный Счет","-1 F":"Гандикап","-1 F more":"Гандикап (дополнительные)","-1 ML":"Победитель","-1 OU":"Тотал","-1 OU more":"Тотал (дополнительные)","1 ML":"Победитель 1-й Сет","2 ML":"Победитель 2-й Сет","3 ML":"Победитель 3-й Сет"},"14":{"0 CS":"Точный Счет","0 F":"Гандикап","0 F more":"Гандикап(дополнительные)","0 ML":"Победитель","0 OU":"Тотал","0 OU more":"Тотал (дополнительные)","1 ML":"Победитель 1-й Сет","2 ML":"Победитель 2-й Сет","3 ML":"Победитель 3-й Сет"},"15":{"-100 ML":"Проход","0 1X2":"1-X-2","0 F":"Гандикап","0 F more":"Гандикап (дополнительные)","0 OU":"Тотал","0 OU more":"Тотал (дополнительные)","0 OU1":"Тотал 1-ой команды","0 OU1 more":"Тотал 1-ой команды (дополнительные)","0 OU2":"Тотал 2-ой команды","0 OU2 more":"Тотал 2-ой команды (дополнительные)","1 1X2":"1X2[1-я половина]","1 F":"Гандикап [1-я половина]","1 F more":"Гандикап [1-я половина] (дополнительные)","1 OU":"Тотал [1-я половина]","1 OU more":"Тотал [1-я половина] (дополнительные)","2 1X2":"1X2[2-я половина]","2 F":"Гандикап [2-я половина]","2 F more":"Гандикап [2-я половина] (дополнительные)","2 OU":"Тотал [2-я половина]","2 OU more":"Тотал [1-я половина] (дополнительные)"},"16":{"-100 ML":"Проход","0 1X2":"1-X-2","0 F":"Гандикап","0 F more":"Гандикап (дополнительные)","0 OU":"Тотал","0 OU more":"Тотал (дополнительные)","0 OU1":"Тотал 1-ой команды","0 OU1 more":"Тотал 1-ой команды (дополнительные)","0 OU2":"Тотал 2-ой команды","0 OU2 more":"Тотал 2-ой команды (дополнительные)","1 1X2":"1X2[1-й тайм]","1 F":"Гандикап [1-й тайм]","1 F more":"Гандикап [1-й тайм] (дополнительные)","1 OU":"Тотал [1-й тайм]","1 OU more":"Тотал [1-й тайм] (дополнительные)","2 1X2":"1X2[2-й тайм]","2 F":"Гандикап [2-й тайм]","2 F more":"Гандикап [2-й тайм] (дополнительные)","2 OU":"Тотал [2-й тайм]","2 OU more":"Тотал [2-й тайм] (дополнительные)"},"17":{"-100 ML":"Проход","0 1X2":"1-X-2","0 F":"Гандикап","0 F more":"Гандикап (дополнительные)","0 OU":"Тотал","0 OU more":"Тотал (дополнительные)","0 OU1":"Тотал 1-ой команды","0 OU1 more":"Тотал 1-ой команды (дополнительные)","0 OU2":"Тотал 2-ой команды","0 OU2 more":"Тотал 2-ой команды (дополнительные)","1 1X2":"1X2[1-й тайм]","1 F":"Гандикап","1 F more":"Гандикап [1-я половина] (дополнительные)","1 OU":"Тотал [1-я половина]","1 OU more":"Тотал [1-я половина] (дополнительные)","2 1X2":"1X2 [2-я половина]","2 F":"Гандикап [2-я половина]","2 F more":"Гандикап [2-я половина] (дополнительные)","2 OU":"Тотал [2-я половина]","2 OU more":"Тотал [2-я половина] (дополнительные)"},"18":{"0 1X2":"1-X-2","0 ML":"Победитель","0 OU":"Тотал","0 OU more":"Тотал (дополнительные)"},"19":{"-100 ML":"Проход","0 1X2":"1-X-2","0 F":"Гандикап","0 F more":"Гандикап(дополнительные)","0 OU":"Тотал","0 OU more":"Тотал (дополнительные)","0 OU1":"Тотал 1-ой команды","0 OU1 more":"Тотал 1-ой команды (дополнительные)","0 OU2":"Тотал 2-ой команды","0 OU2 more":"Тотал 2-ой команды (дополнительные)","1 1X2":"1X2[1-й тайм]","1 F":"Гандикап [1-й тайм]","1 F more":"Гандикап [1-й тайм] (дополнительные)","1 OU":"Тотал [1-й тайм]","1 OU more":"Тотал [1-й тайм] (дополнительные)","2 1X2":"1X2[2-й тайм]","2 F":"Гандикап [2-й тайм]","2 F more":"Гандикап [2-й тайм] (дополнительные)","2 OU":"Тотал [2-й тайм]","2 OU more":"Тотал [2-й тайм] (дополнительные)"},"1ACE":"Перв.эйс","1BR":"Перв.брейк","1CNR":"Первый угловой","1DBF":"Перв. дв.ошибка","1OFS":"Первый офсайд","1SER_F":"Перв.подача. Фора","1SER_OU1":"Перв.подача - хозяева","1SER_OU2":"Перв.подача - гости","1SUBS":"Первая замена","1X2":"1X2","1YC":"Первая карточка","2":{"-1 F":"Гандикап","-1 F more":"Гандикап (дополнительные)","-1 ML":"Победитель","-1 OU":"Тотал","-1 OU more":"Тотал (дополнительные)","-1 OU1":"Тотал 1-ой команды","-1 OU1 more":"Тотал 1-ой команды (дополнительные)","-1 OU2":"Тотал 2-ой команды","-1 OU2 more":"Тотал 2-ой команды (дополнительные)","-100 ML":"Проход","0 1X2":"1X2","1 1X2":"1X2 [1-st quarter]","1 F":"Гандикап [1-я четверть]","1 F more":"Гандикап [1-я четверть] (дополнительные)","1 OU":"Тотал [1-я четверть]","1 OU more":"Тотал [1-я четверть] (дополнительные)","10 1X2":"1X2 [1-я половина]","10 F":"Гандикап [1-я половина]","10 F more":"Гандикап [1-я половина] (дополнительные)","10 OU":"Тотал [1-я половина]","10 OU more":"Тотал [1-я половина] (дополнительные)","2 1X2":"1X2 [2-я четверть]","2 F":"Гандикап [2-я четверть]","2 F more":"Гандикап [2-я четверть] (дополнительные)","2 OU":"Тотал [2-я четверть]","2 OU more":"Тотал [2-я четверть] (дополнительные)","20 1X2":"1X2 [2-я половина]","20 F":"Гандикап [2-я половина]","20 F more":"Гандикап [2-я половина] (дополнительные)","20 OU":"Тотал [2-я половина]","20 OU more":"Тотал [2-я половина] (дополнительные)","3 1X2":"1X2[3-я четверть]","3 F":"Гандикап [3-я четверть]","3 F more":"Гандикап [3-я четверть] (дополнительные)","3 OU":"Тотал [3-я четверть]","3 OU more":"Тотал [3-я четверть] (дополнительные)","4 1X2":"1X2 [4-я четверть]","4 F":"Гандикап [4-я четверть]","4 F OU":"Тотал [4-я четверть]","4 F OU more":"Тотал [4-я четверть] (дополнительные)","4 F more":"Гандикап [4-я четверть] (дополнительные)","4 OU":"Тотал [4-я четверть]","4 OU more":"Тотал [4-я четверть] (дополнительные)"},"23":{"-100 ML":"Проход","0 1X2":"1-X-2","0 F":"Гандикап","0 F more":"Гандикап (дополнительные)","0 OU":"Тотал","0 OU more":"Тотал (дополнительные)","0 OU1":"Тотал 1-ой команды","0 OU1 more":"Тотал 1-ой команды (дополнительные)","0 OU2":"Тотал 2-ой команды","0 OU2 more":"Тотал 2-ой команды (дополнительные)","1 1X2":"1X2[1-й тайм]","1 F":"Гандикап [1-й тайм]","1 F more":"Гандикап [1-й тайм] (дополнительные)","1 OU":"Тотал [1-й тайм]","1 OU more":"Тотал [1-й тайм] (дополнительные)","2 1X2":"1X2[2-й тайм]","2 F":"Гандикап [2-й тайм]","2 F more":"Гандикап [2-й тайм] (дополнительные)","2 OU":"Тотал [2-й тайм]","2 OU more":"Тотал [2-й тайм] (дополнительные)"},"25":{"0 HH":"Кто выше","0 PL1":"1-е место","0 PL1_3":"1-3 место"},"29":{"-1 CS":"Точный Счет","-1 F":"Гандикап","-1 F more":"Гандикап(дополнительные)","-1 ML":"Победитель","-1 OU":"Тотал","-1 OU more":"Тотал (дополнительные)","1 F":"Гандикап [1-й сет]","1 F more":"Гандикап [1-й сет] (дополнительные)","1 ML":"Победитель [1-й сет]","1 OU":"Тотал [1-й сет]","1 OU more":"Тотал [1-й сет] (дополнительные)","2 F":"Гандикап [2-й сет]","2 F more":"Гандикап [2-й сет](дополнительные)","2 ML":"Победитель [2-й сет]","2 OU":"Тотал [2-й сет]","2 OU more":"Тотал [2-й сет] (дополнительные)","3 F":"Гандикап [3-й сет]","3 F more":"Гандикап [3-й сет] (дополнительные)","3 ML":"Победитель [3-й сет]","3 OU":"Тотал [3-й сет]","3 OU more":"Тотал [3-й сет] (дополнительные)"},"30":{"0 ML":"1-е место"},"31":{"0 HH":"Кто выше","0 PL1":"1-е место","0 PL1_3":"1-3 место"},"4":{"-100 ML":"Проход","0 1X2":"1-X-2","0 F":"Гандикап","0 F more":"Гандикап (дополнительные)","0 OU":"Тотал","0 OU more":"Тотал (дополнительные)","0 OU1":"Тотал 1-ой команды","0 OU1 more":"Тотал 1-ой команды (дополнительные)","0 OU2":"Тотал 2-ой команды","0 OU2 more":"Тотал 2-ой команды (дополнительные)","1 1X2":"1X2[1-й тайм]","1 F":"Гандикап [1-й тайм]","1 F more":"Гандикап [1-й тайм] (дополнительные)","1 OU":"Тотал [1-й тайм]","1 OU more":"Тотал [1-й тайм] (дополнительные)","2 1X2":"1X2[2-й тайм]","2 F":"Гандикап [2-й тайм]","2 F more":"Гандикап [2-й тайм] (дополнительные)","2 OU":"Тотал [2-й тайм]","2 OU more":"Тотал [2-й тайм] (дополнительные)"},"5":{"-100 ML":"Проход","0 1X2":"1-X-2","0 F":"Гандикап","0 F more":"Гандикап (дополнительные)","0 OU":"Тотал","0 OU more":"Тотал (дополнительные)","0 OU1":"Тотал 1-ой команды","0 OU1 more":"Тотал 1-ой команды (дополнительные)","0 OU2":"Тотал 2-ой команды","0 OU2 more":"Тотал 2-ой команды (дополнительные)","1 1X2":"1X2 [1-я половина]","1 F":"Гандикап [1-я половина]","1 F more":"Гандикап [1-я половина] (дополнительные)","1 OU":"Тотал [1-я половина]","1 OU more":"Тотал [1-я половина] (дополнительные)","2 1X2":"1X2 [2-я половина]","2 F":"Гандикап [2-я половина]","2 F more":"Гандикап [2-я половина] (дополнительные)","2 OU":"Тотал [2-я половина]","2 OU more":"Тотал [2-я половина] (дополнительные)"},"6":{"-100 ML":"Проход","-2 EH":"Европейский гандикап(с ОТ)","-2 EH more":"Европейский гандикап(дополнительные)(с ОТ)","-2 F":"Гандикап(с ОТ)","-2 F more":"Гандикап(дополнительные)(с ОТ)","-2 ML":"Победитель","-2 OU":"Тотал(с ОТ)","-2 OU more":"Тотал (дополнительные)(с ОТ)","-2 OU1":"Тотал 1-ой команды(с ОТ)","-2 OU1 more":"Тотал 1-ой команды (дополнительные)(с ОТ)","-2 OU2":"Тотал 2-ой команды(с ОТ)","-2 OU2 more":"Тотал 2-ой команды (дополнительные)(с ОТ)","0 1X2":"1-X-2","0 BTS":"Обе команды забьют?","0 CS":"Точный Счет","0 DC":"Двойной шанс","0 EH":"Европейский гандикап","0 EH more":"Европейский гандикап (дополнительные)","0 F":"Гандикап","0 F more":"Гандикап (дополнительные)","0 OU":"Тотал","0 OU more":"Тотал (дополнительные)","0 OU1":"Тотал 1-ой команды","0 OU1 more":"Тотал 1-ой команды (дополнительные)","0 OU2":"Тотал 2-ой команды","0 OU2 more":"Тотал 2-ой команды (дополнительные)","1 1X2":"1X2[1-й период]","1 F":"Гандикап [1-й период]","1 F more":"Гандикап [1-й период] (дополнительные)","1 OU":"Тотал [1-й период]","1 OU more":"Тотал [1-й период] (дополнительные)","2 1X2":"1X2[2-й период]","2 F":"Гандикап [2-й период]","2 F more":"Гандикап [2-й период] (дополнительные)","2 OU":"Тотал [2-й период]","2 OU more":"Тотал [2-й период] (дополнительные)","3 1X2":"1X2[3-й период]","3 F":"Гандикап [3-й период]","3 F more":"Гандикап [3-й период] (дополнительные)","3 OU":"Тотал [3-й период]","3 OU more":"Тотал [3-й период] (дополнительные)"},"60SET":"6-0 Сет","7":{"-100 ML":"Проход","0 1X2":"1-X-2","0 BTS":"Обе команды забьют?","0 CNR_1X2":"Угловые","0 CNR_DC":"Угловый Двойной Шанс","0 CNR_F":"Угловые Азиатский гандикап","0 CNR_F more":"Угловые Азиатский гандикап (дополнительные)","0 CNR_OU":"Угловые Тотал","0 CNR_OU more":"Угловые Тотал (дополнительные)","0 CNR_OU1":"УГЛОВЫЕ ТОТАЛ 1-ОЙ КОМАНДЫ","0 CNR_OU2":"УГЛОВЫЕ ТОТАЛ 2-ОЙ КОМАНД","0 CS":"Точный Счет","0 CS more":"Точный Счет (дополнительные)","0 DC":"Двойной шанс","0 DNB":"Без ничьей","0 EH":"Европейский гандикап","0 EH more":"Европейский гандикап (дополнительные)","0 F":"Азиатский гандикап","0 F more":"Азиатский гандикап (дополнительные)","0 NG":"Первый гол","0 OE":"Чет/нечет","0 OU":"Тотал","0 OU more":"Тотал - остальные","0 OU1":"Тотал 1-ой команды","0 OU1 more":"Тотал 1-ой команды (дополнительные)","0 OU2":"Тотал 2-ой команды","0 OU2 more":"Тотал 2-ой команды (дополнительные)","0 WTN1":"Команда 1 выиграет и не пропустит","0 WTN2":"Команда 2 выиграет и не пропустит","1 1X2":"1-X-2 [1-й тайм]","1 CNR_1X2":"Угловые 1-X-2 [1-й тайм]","1 CNR_F":"Угловые Азиатский гандикап [1-й тайм]","1 CNR_OU":"Угловые Тотал [1-й тайм]","1 CS":"1-й тайм Точный Счет","1 CS more":"1-й тайм Точный Счет (дополнительные)","1 DC":"Двойной шанс [1-й тайм]","1 EH":"Европейский гандикап [1-й тайм]","1 EH more":"Европейский гандикап [1-й тайм] (дополнительные)","1 F":"Азиатский гандикап [1-й тайм]","1 F more":"Азиатский гандикап [1-й тайм] (дополнительные)","1 OU":"Тотал [1-й тайм]","1 OU more":"Тотал [1-й тайм] (дополнительные)","2 1X2":"1-X-2 [2-й тайм]","2 CS":"2-й тайм Точный Счет","2 CS more":"2-й тайм Точный Счет (дополнительные)","2 DC":"Двойной шанс [2-й тайм]","2 EH":"Европейский гандикап [2-й тайм]","2 EH more":"Европейский гандикап [2-й тайм] (дополнительные)","2 F":"Азиатский гандикап [2-й тайм]","2 F more":"Азиатский гандикап [2-й тайм] (дополнительные)","2 OU":"Тотал [2-й тайм]","2 OU more":"Тотал [2-й тайм] (дополнительные)"},"8":{"-1 CS":"Точный Счет","-1 F":"Фора","-1 F more":"Фора (дополнительные)","-1 ML":"Победитель","-1 OU":"Тотал","-1 OU more":"Тотал (дополнительные)","1 F":"Фора [1-й сет]","1 F more":"Фора [1-й сет] (дополнительные)","1 ML":"Победитель [1-й сет]","1 OU":"Тотал [1-й сет]","1 OU more":"Тотал [1-й сет] (дополнительные)","2 F":"Фора [2-й сет]","2 F more":"Фора [2-й сет] (дополнительные)","2 ML":"Победитель [2-й сет]","2 OU":"Тотал [2-й сет]","2 OU more":"Тотал [2-й сет] (дополнительные)"},"9":{"-100 ML":"Проход","0 CS":"Точный Счет","0 F":"Гандикап","0 F more":"Гандикап (дополнительные)","0 ML":"Победитель","0 OU":"Тотал","0 OU more":"Тотал (дополнительные)","1 F":"Гандикап [1-й сет]","1 F more":"Гандикап [1-й сет] (дополнительные)","1 ML":"Победитель [1-й сет]","1 OU":"Тотал [1-й сет]","1 OU more":"Тотал [1-й сет] (дополнительные)","2 F":"Гандикап [2-й сет]","2 F more":"Гандикап [2-й сет] (дополнительные)","2 ML":"Победитель [2-й сет]","2 OU":"Тотал [2-й сет]","2 OU more":"Тотал [2-й сет] (дополнительные)","3 F":"Гандикап [3-й сет]","3 F more":"Гандикап [3-й сет] (дополнительные)","3 ML":"Победитель [3-й сет]","3 OU":"Тотал [3-й сет]","3 OU more":"Тотал [3-й сет] (дополнительные)"},"ACE_F":"Эйсы. Фора","ACE_OU":"Эйсы. Тоталы","ACE_OU1":"Эйсы. Тотал хозяева","ACE_OU2":"Эйсы. Тотал гости","ADDED_EG":"Добавленное время, точно","ADDED_OU":"Добавленное время. Тоталы","BHO":"Оба тайма тотал больше 1.5","BHU":"Оба тайма тотал меньше 1.5","BTS":"Обе забьют","BTSD":"Обе забьют и ничья","BTSW1":"Обе забьют и победа хозяев","BTSW2":"Обе забьют и победа гостей","CNR_1X2":"Угловые","CNR_DC":"Угловые. Двойной исход","CNR_F":"Угловые. Фора","CNR_OE":"Угловые. Чет/нечет","CNR_OU":"Угловые. Тоталы","CNR_OU1":"Угловые. Тотал для 1-й команды","CNR_OU2":"Угловые. Тотал для 2-й команды","CS":"Счет","DBF_F":"Дв.ошибки. Фора","DBF_OU":"Дв.ошибки. Тоталы","DBF_OU1":"Дв.ошибки. Тотал хозяева","DBF_OU2":"Дв.ошибки. Тотал гости","DBH":"Ничья в обоих таймах","DBL":"Дубль","DC":"Двойной исход","DEH":"Ничья хотя бы в одном тайме","DNB":"Без ничьей","DTO":"Ничья и Тб (2.5)","DTU":"Ничья и Тм (2.5)","EG":"Точное количество голов","EG1":"Точное количество голов - хозяева","EG2":"Точное количество голов - гости","EH":"ЕвроГандикап","ERR_OU":"Ошибки. Тоталы","F":"Фора","FG":"Первый гол","FOUL_1X2":"Фолы","FOUL_DC":"Фолы. Двойной исход","FOUL_F":"Фолы. Фора","FOUL_OE":"Фолы. Чет/нечет","FOUL_OU":"Фолы. Тоталы","FOUL_OU1":"Фолы. Тотал хозяева","FOUL_OU2":"Фолы. Тотал гости","GBH":"Гол в обоих таймах","GBH1":"Команда 1 - гол в обоих таймах","GBH2":"Команда 2 - гол в обоих таймах","HIT_1X2":"Хиты","HIT_F":"Хиты. Фора","HIT_OU":"Хиты. Тоталы","HIT_OU1":"Хиты. Тотал хозяева","HIT_OU2":"Хиты. Тотал гости","HMG":"Тайм с наибольшим количеством голов","HTFT":"HTFT","HTR":"Хет-трик","LCNR":"Последний угловой","LG":"Последний гол","LOFS":"Последний офсайд","LSUBS":"Последняя замена","LYC":"Последняя карточка","ML":"Победа","NB1":"Home No Bet","NB2":"Away No Bet","NG":"Следующий гол","OE":"Чет/нечет","OFS_1X2":"Офсайды","OFS_DC":"Офсайды. Двойной исход","OFS_F":"Офсайды. Фора","OFS_OE":"Офсайды. Чет/нечет","OFS_OU":"Офсайды. Тоталы","OFS_OU1":"Офсайды. Тотал хозяева","OFS_OU2":"Офсайды. Тотал гости","OG":"Автогол","OT":"Овертайм","OU":"Тоталы","OU1":"Тотал для 1-й команды","OU2":"Тотал для 2-й команды","PEN":"Пенальти","POS_1X2":"Владение мячом","POS_DC":"Владение мячом. Двойной исход","POS_F":"Владение мячом. Фора","POS_OU1":"Владение мячом. Тотал хозяева","POS_OU2":"Владение мячом. Тотал гости","RACE10":"Гонка до 10","RACE15":"Гонка до 15","RACE2":"Гонка до 2","RACE20":"Гонка до 20","RACE3":"Гонка до 3","RACE4":"Гонка до 4","RACE5":"Гонка до 5","RC":"Красные карточки","RHE_OU":"Хиты+Ошибки+Пробежки. Тоталы","SD":"Результативная ничья","SET_CS":"Сеты. Счет","SET_EG":"Всего сетов","SET_F":"Сеты. Фора","SET_OU":"Сеты. Тоталы","SHOT_1X2":"Удары в створ","SHOT_DC":"Удары в створ. Двойной исход","SHOT_F":"Удары в створ. Фора","SHOT_OE":"Удары в створ. Чет/нечет","SHOT_OU":"Удары в створ. Тоталы","SHOT_OU1":"Удары в створ. Тотал хозяева","SHOT_OU2":"Удары в створ. Тотал гости","SUBS_OU":"Замены. Тоталы","SUBS_OU1":"Замены. Тотал хозяева","SUBS_OU2":"Замены. Тотал гости","SWS":"Забьёт ли игрок, вышедший на замену","TB":"Тай-брейк","TIME_FG":"Тайм первого гола","TIME_SUBS":"Тайм первой замены","TOX1":"1X и Тб (2.5)","TOX2":"X2 и Тб (2.5)","TUX1":"1X и Тм (2.5)","TUX2":"X2 и Тм (2.5)","W1G1":"Победа 1-й команды ровно в 1 гол","W1G2":"Победа 2-й команды ровно в 1 гол","W2G1":"Победа 1-й команды ровно в 2 гола","W2G2":"Победа 2-й команды ровно в 2 гола","W3G1":"Победа 1-й команды ровно в 3 гола","W3G2":"Победа 2-й команды ровно в 3 гола","WBH1":"Победа 1-й команды в обоих таймах","WBH2":"Победа 2-й команды в обоих таймах","WEH1":"Победа 1-й команды хотя бы в одном тайме","WEH2":"Победа 2-й команды хотя бы в одном тайме","WFB":"Волевая победа","WFB1":"Волевая победа - хозяева","WFB2":"Волевая победа - гости","WTN1":"Сухая победа 1-й команды","WTN2":"Сухая победа 2-й команды","WTO1":"Победа 1 и Тб (2.5)","WTO2":"Победа 2 и Тб (2.5)","WTU1":"Победа 1 и Тм (2.5)","WTU2":"Победа 2 и Тм (2.5)","YC_1X2":"Желтые карточки","YC_DC":"Желтые карточки. Двойной исход","YC_F":"Желтые карточки. Фора","YC_OE":"Желтые карточки. Чет/нечет","YC_OU":"Желтые карточки. Тоталы","YC_OU1":"Желтые карточки. Тотал для 1-й команды","YC_OU2":"Желтые карточки. Тотал для 2-й команды"},"modal":{"Choose Bookmakers":"Выбрать Букмекеров"},"no_found":{"markets_message":"Нет активных коэффициентов на рынках данного типа","message":"К сожалению, в данный момент событий нет."},"number":{"currency":{"format":{"delimiter":" ","format":"%n %u","precision":2,"separator":",","significant":false,"strip_insignificant_zeros":false,"unit":"руб."}},"format":{"delimiter":" ","precision":3,"separator":",","significant":false,"strip_insignificant_zeros":false},"human":{"decimal_units":{"format":"%n %u","units":{"billion":{"few":"миллиардов","many":"миллиардов","one":"миллиард","other":"миллиардов"},"million":{"few":"миллионов","many":"миллионов","one":"миллион","other":"миллионов"},"quadrillion":{"few":"квадриллионов","many":"квадриллионов","one":"квадриллион","other":"квадриллионов"},"thousand":{"few":"тысяч","many":"тысяч","one":"тысяча","other":"тысяч"},"trillion":{"few":"триллионов","many":"триллионов","one":"триллион","other":"триллионов"},"unit":""}},"format":{"delimiter":"","precision":1,"significant":false,"strip_insignificant_zeros":false},"storage_units":{"format":"%n %u","units":{"byte":{"few":"байта","many":"байт","one":"байт","other":"байта"},"gb":"ГБ","kb":"КБ","mb":"МБ","tb":"ТБ"}}},"percentage":{"format":{"delimiter":"","format":"%n%"}},"precision":{"format":{"delimiter":""}}},"recaptcha":{"errors":{"failed":"Recaptcha - Проверка не пройдена","reenter":"Пожалуйста, заполните капчу"}},"seo":{"/":{"description":"Коэффициенты из 79 букмекерских контор на актуальные спортивные события в Live и Prematch! Сравнивайте, Делайте ставки и Выигрывайте вместе с OddsFan!","keywords":"сравнения букмекерских коэффициентов, сервис сравнения букмекерских коэффициентов, букмекерские коэффициенты","title":"Сервис сравнения коэффициентов букмекерских контор – OddsFan.ru"},"/about_bookmakers":{"description":"Вся необходимая информация о букмекерских конторах, с которыми мы сотрудничаем.","title":"О наших букмекерах | OddsFan.ru"},"/about_us":{"description":"О нашем сервисе сравнения букмекерских коэффициентов.","title":"О нас | OddsFan.ru"},"/account":{"description":"","title":"Личная информация"},"/account/bookmakers":{"description":"","title":"Мои Букмекеры"},"/advanced":{"description":"Профессиональные советы и рекомендации от опытных ставочников для новичков.","title":"Профессиональные советы и рекомендации | OddsFan.ru"},"/advertising":{"description":"Все вопросы касаемо сотрудничества и рекламы на нашем сайте.","title":"Реклама | OddsFan.ru"},"/betting_guide":{"description":"Как делать ставки в букмекерских конторах: пошаговое руководство для новичков.","title":"Как делать ставки в букмекерских конторах? | OddsFan.ru"},"/contact_us":{"description":"Обратная связь с администрацией сайта OddsFan.ru","title":"Контакты | OddsFan.ru"},"/content_solution":{"description":"Контент решение от OddsFan.ru","title":"Контент решение | OddsFan.ru"},"/country":{"description":"У нас лучшие коэффициенты букмекеров на %s в %s! Сравнивайте, выбирайте лучшие предложения от букмекеров и делайте выгодные ставки!","keywords":"%s, %s, коэффициенты букмекеров","title":"%s – коэффициенты букмекеров на %s в %s"},"/country/teams":{"description":"%s: календарь и расписание матчей на %s. У нас лучшие букмекерские коэффициенты на любые интересующие вас спортивные события %s.","keywords":"%s, коэффициенты, букмекеров, календарь, матчи","title":"Команды %s – календарь матчей на %s"},"/disclaimer":{"description":"Исключение ответственности OddsFan.ru","title":"Исключение ответственности | OddsFan.ru"},"/event":{"description":"%s: Букмекерские коэффициенты для ставок на %s %s.","keywords":"%s, %s, %s, коэффициенты, букмекерские, матч","title":"%s коэффициенты букмекеров и ставки на %s %s"},"/getting_started":{"description":"С чего начать работу с нашим сервисом сравнения букмекерских коэффициентов.","title":"Как начать работу с нашим сервисом? | OddsFan.ru"},"/league":{"description":"%s: лучшие букмекерские коэффициенты для ставок на события из 79 букмекерских контор. Сравнивайте, выбирайте лучшие ставки и выигрывайте с нами!","keywords":"%s, %s, букмекерские коэффициенты, сравнение","title":"%s  – букмекерские коэффициенты для ставок"},"/legal_status":{"description":"Правовой статус OddsFan.ru","title":"Правовой статус | OddsFan.ru"},"/live_odds":{"description":"Лучшие букмекерские коэффициенты в режиме лайв на %s с более чем 170 букмекерских контор! OddsFan.ru – сервис сравнения бк коэффициентов на %s.","keywords":"%s, лайв коэффициенты, букмекерские коэффициенты, сервис сравнения","title":"Лайв коэффициенты: букмекерские коэффициенты на %s в режиме лайв"},"/next_matches":{"description":"Лучшие букмекерские коэффициенты на %s с более чем 170 букмекерских контор! OddsFan.ru – сервис сравнения бк коэффициентов на %s.","keywords":"%s, коэффициенты, букмекерские коэффициенты, сервис сравнения","title":"Прематч коэффициенты: букмекерские коэффициенты на %s в предстоящих %s"},"/popular":{"description":"%s: здесь собраны букмекерские коэффициенты на популярные %s из более чем 170 контор. OddsFan.ru – лучшие коэффициенты на популярные события.","keywords":"%s, популярные матчи, букмекерские коэффициенты, сервис сравнения","title":"%s: букмекерские коэффициенты на популярные %s"},"/privacy":{"description":"Политика конфиденциальности OddsFan.ru","title":"Политика конфиденциальности | OddsFan.ru"},"/sign_in":{"description":"Авторизация на сайте OddsFan.ru","keywords":"","title":"Авторизация на сайте | OddsFan.ru"},"/sign_up":{"description":"Регистрация на сайте OddsFan.ru","keywords":null,"title":"Регистрация на сайте | OddsFan.ru"},"/sport/id":{"description":"У нас лучшие букмекерские коэффициенты на %s! Сравнивайте, Выбирайте лучшие предложения от букмекеров и делайте выгодные ставки на %s.","keywords":"%s, букмекерские коэффициенты на %s, ставки на %s","title":"Ставки на %s – сравнить букмекерские коэффициенты на %s"},"/terms":{"description":"Условия и требования OddsFan.ru","title":"Условия и требования | OddsFan.ru"},"/turnirnaya-tablica-2018":{"description":"Турнирная таблица — представляем вашему вниманию турнирную таблицу финальной стадии чемпионата мира по футболу 2018 в России. OddsFan™","title":"Турнирная таблица чемпионата мира по футболу 2018 Россия"},"/what_is_oddsfan":{"description":"Вся необходимая информация о сервисе сравнения букмекерских коэффициентов OddsFan.ru","keywords":"","title":"Что такое OddsFan?"},"/widget/new":{"description":"Виджет для сайтов с отображением лучших букмекерских коэффициентов на предстоящие матчи.","title":"Виджет - предстоящие матчи | OddsFan.ru"}},"sidebar":{"Dark":"Темный","Light":"Светлый"},"sport":{"Choose League":"Лиги","Live":"Лайв","Most popular League data_live":"Популярные лиги Live","Most popular League data_prematch":"Популярные лиги","Most popular Matches data_live":"Популярные матчи Live","Most popular Matches data_prematch":"Популярные события","No leagues with active matches":"Нет лиг с активными матчами","Prematch":"Прематч","Statistics":"Cтатистика","The number of":"Количество","back":"Назад","bookmakers":"Букмекеров","countries_groups":{"africa":"Африка","asia":"Азия","australia":"Австралия и Океания","europe":"Европа","north_america":"Северная и Центральная Америка","south_america":"Южная Америка","world":"Международные чемпионаты"},"events":"Событий","league":"Лига","match":"Матч","other":"Другие","page_desc":"Наш онлайн сервис поможет вам сравнить и выбрать наиболее выгодные букмекерские коэффициенты на %s! Сравнивайте, выбирайте лучшие предложения от букмекеров и делайте выгодные ставки на %s.","page_h1":"Ставки на %s","score":"Счет","started at":"Дата начала","stats":{"bookmakers_count":"сканируемых букмекеров","countries_count":"сканируемых стран","events_count":"событий","leagues_count":"сканируемых лиг","teams_count":"участвующих команд"},"type_1_1":"матч","type_1_2":"матчей","type_1_3":"матча","type_1_4":"матчи","type_1_5":"матчах","type_2_1":"забег","type_2_2":"забегов","type_2_3":"забега","type_2_4":"забеги","type_2_5":"забегах","type_3_1":"бой","type_3_2":"боев","type_3_3":"боя","type_3_4":"бои","type_3_5":"боях","type_4_1":"гонка","type_4_2":"гонок","type_4_3":"гонки","type_4_4":"гонки","type_4_5":"гонках","type_5_1":"заезд","type_5_2":"заездов","type_5_3":"заезда","type_5_4":"заезды","type_5_5":"заездах"},"sports":{"AFL":"Авст. футбол","American Football":"Ам. футбол","Athletics":"Лег.атлетика","Badminton":"Бадминтон","Bandy":"Хок.с мячом","Baseball":"Бейсбол","Basketball":"Баскетбол","Beach Soccer":"Пляжный футбол","Beach Volleyball":"Пляжн.вол","Biathlon":"Биатлон","Boxing/MMA":"Бокс/Бои","Chess":"Шахматы","Cricket":"Крикет","Curling":"Керлинг","Cycling":"Велоспорт","Darts":"Дартс","E-Sports":"Киберспорт","Field Hockey":"Хок.на траве","Formula 1":"Формула 1","Futsal":"Футзал","Gaelic Sport":"Гэл.спорт","Handball":"Гандбол","Hockey":"Хоккей","Horse Racing":"Скачки","Motorcycling":"Мотоспорт","Netball":"Нетбол","Rugby":"Регби","Snooker":"Снукер","Soccer":"Футбол","Squash":"Сквош","Table Tennis":"Наст. теннис","Tennis":"Теннис","Volleyball":"Волейбол","Water Polo":"Вод. поло","full":{"AFL":"Австралийский футбол","American Football":"Американский футбол","Athletics":"Легкая атлетика","Badminton":"Бадминтон","Bandy":"Хокей с мячом","Baseball":"Бейсбол","Basketball":"Баскетбол","Beach Soccer":"Пляжный футбол","Beach Volleyball":"Пляжный волейбол","Boxing/MMA":"Бокс/Бои","Chess":"Шахматы","Cricket":"Крикет","Curling":"Керлинг","Cycling":"Велоспорт","Darts":"Дартс","E-Sports":"Киберспорт","Field Hockey":"Хокей на траве","Formula 1":"Формула 1","Futsal":"Футзал","Gaelic Sport":"Гэльский спорт","Handball":"Гандбол","Hockey":"Хоккей","Horse Racing":"Скачки","Motorcycling":"Мотоспорт","Netball":"Нетбол","Rugby":"Регби","Snooker":"Снукер","Soccer":"Футбол","Squash":"Сквош","Table Tennis":"Настольный теннис","Tennis":"Теннис","Volleyball":"Волейбол","Water Polo":"Водное поло"}},"static_pages":{"nav":{"links":{"About Us":"О нас","About our bookmakers":"Букмекеры","Advanced Tips \u0026 Tricks":"Профессиональные советы и рекомендации","Advertising":"Реклама","Betting Guide":"Как делать ставки?","Contact us":"Напишите нам","Content Solution":"Контент решение","Disclaimer":"Исключение ответственности","Getting started":"Как начать?","Getting started betting and":"Как начать делать ставки и","HELP \u0026 SUPPORT":"ПОМОЩЬ и ПОДДЕРЖКА","Legal Status":"Правовой статус","Legal information":"Правовая информация","Our Contacts":"Наши контакты","Privacy Policy":"Политика приватности","Terms and conditions":"Пользовательское соглашение","What is OddsFan?":"Что такое OddsFan?","blog":"Блог","business partnership":"деловое партнерство","odds comparison":"сравнение коэффициентов","widget":"Вебмастеру"}}},"support":{"array":{"last_word_connector":" и ","two_words_connector":" и ","words_connector":", "}},"time":{"am":"утра","formats":{"default":"%a, %d %b %Y, %H:%M:%S %z","long":"%d %B %Y, %H:%M","short":"%d %b, %H:%M"},"pm":"вечера"},"timezones":{"Abu Dhabi":"Abu Dhabi","Adelaide":"Adelaide","Alaska":"Alaska","Almaty":"Almaty","American Samoa":"American Samoa","Amsterdam":"Amsterdam","Arizona":"Arizona","Astana":"Astana","Athens":"Athens","Atlantic Time (Canada)":"Atlantic Time (Canada)","Auckland":"Auckland","Azores":"Azores","Baghdad":"Baghdad","Baku":"Baku","Bangkok":"Bangkok","Beijing":"Beijing","Belgrade":"Belgrade","Berlin":"Berlin","Bern":"Bern","Bogota":"Bogota","Brasilia":"Brasilia","Bratislava":"Bratislava","Brisbane":"Brisbane","Brussels":"Brussels","Bucharest":"Bucharest","Budapest":"Budapest","Buenos Aires":"Buenos Aires","Cairo":"Cairo","Canberra":"Canberra","Cape Verde Is":"Cape Verde Is.","Cape Verde Is.":"Cape Verde Is.","Caracas":"Caracas","Casablanca":"Casablanca","Central America":"Central America","Central Time (US \u0026 Canada)":"Central Time (US \u0026 Canada)","Chatham Is":"Chatham Is","Chennai":"Chennai","Chihuahua":"Chihuahua","Chongqing":"Chongqing","Copenhagen":"Copenhagen","Darwin":"Darwin","Dhaka":"Dhaka","Dublin":"Dublin","Eastern Time (US \u0026 Canada)":"Eastern Time (US \u0026 Canada)","Edinburgh":"Edinburgh","Ekaterinburg":"Ekaterinburg","Fiji":"Fiji","Georgetown":"Georgetown","Greenland":"Greenland","Guadalajara":"Guadalajara","Guam":"Guam","Hanoi":"Hanoi","Harare":"Harare","Hawaii":"Hawaii","Helsinki":"Helsinki","Hobart":"Hobart","Hong Kong":"Hong Kong","Indiana (East)":"Indiana (East)","International Date Line West":"International Date Line West","Irkutsk":"Irkutsk","Islamabad":"Islamabad","Istanbul":"Istanbul","Jakarta":"Jakarta","Jerusalem":"Jerusalem","Kabul":"Kabul","Kaliningrad":"Kaliningrad","Kamchatka":"Kamchatka","Karachi":"Karachi","Kathmandu":"Kathmandu","Kolkata":"Kolkata","Krasnoyarsk":"Krasnoyarsk","Kuala Lumpur":"Kuala Lumpur","Kuwait":"Kuwait","Kyiv":"Kyiv","La Paz":"La Paz","Lima":"Lima","Lisbon":"Lisbon","Ljubljana":"Ljubljana","London":"London","Madrid":"Madrid","Magadan":"Magadan","Marshall Is":"Marshall Is.","Marshall Is.":"Marshall Is.","Mazatlan":"Mazatlan","Melbourne":"Melbourne","Mexico City":"Mexico City","Mid-Atlantic":"Mid-Atlantic","Midway Island":"Midway Island","Minsk":"Minsk","Monrovia":"Casablanca","Monterrey":"Monterrey","Montevideo":"Montevideo","Moscow":"Moscow","Mountain Time (US \u0026 Canada)":"Mountain Time (US \u0026 Canada)","Mumbai":"Mumbai","Muscat":"Muscat","Nairobi":"Nairobi","New Caledonia":"New Caledonia","New Delhi":"New Delhi","Newfoundland":"Newfoundland","Novosibirsk":"Novosibirsk","Nuku'alofa":"Nuku'alofa","Osaka":"Osaka","Pacific Time (US \u0026 Canada)":"Pacific Time (US \u0026 Canada)","Paris":"Paris","Perth":"Perth","Port Moresby":"Port Moresby","Prague":"Prague","Pretoria":"Pretoria","Quito":"Quito","Rangoon":"Rangoon","Riga":"Riga","Riyadh":"Riyadh","Rome":"Rome","Samara":"Samara","Samoa":"Samoa","Santiago":"Santiago","Sapporo":"Sapporo","Sarajevo":"Sarajevo","Saskatchewan":"Saskatchewan","Seoul":"Seoul","Singapore":"Singapore","Skopje":"Skopje","Sofia":"Sofia","Solomon Is":"Solomon Is.","Solomon Is.":"Solomon Is.","Srednekolymsk":"Srednekolymsk","Sri Jayawardenepura":"Sri Jayawardenepura","St":{" Petersburg":"St. Petersburg"},"St. Petersburg":"St. Petersburg","Stockholm":"Stockholm","Sydney":"Sydney","Taipei":"Taipei","Tallinn":"Tallinn","Tashkent":"Tashkent","Tbilisi":"Tbilisi","Tehran":"Tehran","Tijuana":"Tijuana","Tokelau Is":"Tokelau Is.","Tokelau Is.":"Tokelau Is.","Tokyo":"Tokyo","UTC":"UTC","Ulaan Bataar":"Ulaan Bataar","Ulaanbaatar":"Ulaanbaatar","Urumqi":"Urumqi","Vienna":"Vienna","Vilnius":"Vilnius","Vladivostok":"Vladivostok","Volgograd":"Volgograd","Warsaw":"Warsaw","Wellington":"Wellington","West Central Africa":"West Central Africa","Yakutsk":"Yakutsk","Yerevan":"Yerevan","Zagreb":"Zagreb"},"tournament":{"A":"П","Beginning time":"Начало матча","D":"Н","F":"З","L":"П","P":"И","Pts":"О","Score":"Счет","Team":"Команда","W":"В","final":"%s Финала","final_1":"Финал","final_3":"Матч за 3-е место","group":"Группа %s","wc2018_h1":"Турнирная таблица ЧМ 2018","wc2018_h1_seo":"Турнирная таблица чемпионата мира по футболу 2018"},"wc_seo":{"header":"Несколько слов о матче %s","Англия_Бельгия":"\u003cp\u003eОчень интересное противостояние, в котором не будет очевидного фаворита и аутсайдера. Этого же мнения придерживаются и букмекерские конторы, которые выставили свои коэффициенты на данную встречу.\u003c/p\u003e","Аргентина_Хорватия":"\u003cp\u003eВне всяких сомнений, сборной Аргентины не будет легко в схватке с Хорватией, хотя коэффициенты букмекеров и говорят явно в пользу команды Сампаоли.\u003c/p\u003e","Бразилия_Швейцария":"\u003cp\u003eВыставив коэффициенты на матч Бразилия - Швейцария, букмекеры дали отчетливо понять, что не верят в успех швейцарцев.\u003c/p\u003e\u003cp\u003eВпрочем, бразильцам явно не стоит рассчитывать на легкую прогулку, ведь Швейцария уже не раз доказывала, что может достойно бороться с именитыми соперниками.\u003c/p\u003e","Германия_Мексика":"\u003cp\u003eУ Мексики появился отличный шанс взять реванш у сборной Германии за поражение в полуфинале Кубка Конфедераций, однако коэффициенты букмекеров говорят совсем не в пользу номинальных гостей.\u003c/p\u003e","Германия_Швеция":"\u003cp\u003eДля всех поклонников футбола фаворит в данной встрече абсолютно очевиден и это - сборная Германии. Недаром коэффициенты на победу команды Лёва в большинстве букмекерских контор не превышают 1.5 к 1.\u003c/p\u003e\u003cp\u003eВпрочем, сборная Швеции уже не раз доказывала, что способна отбирать очки у именитых соперников, так что она вполне может преподнести неприятный сюрприз и действующему чемпиону мира.\u003c/p\u003e","Дания_Франция":"\u003cp\u003eУдастся ли сборной Дании добыть победу в схватке с именитой Францией? - покажет лишь время. Во всяком случае, коэффициенты букмекерских контор говорят явно не в пользу номинальных хозяев поля.\u003c/p\u003e","Мексика_Швеция":"\u003cp\u003eВ матче Мексика - Швеция не будет ярко выраженного фаворита, ведь в очном противостоянии сойдутся практически равные по классу национальные сборные.\u003c/p\u003e\u003cp\u003eЭто прекрасно понимают и букмекеры, поэтому и коэффициенты на победу шведов и мексиканцев в этой встрече практически равны.\u003c/p\u003e","Польша_Колумбия":"\u003cp\u003eПольша и Колумбия являются соперниками приблизительно одинакового уровня, так что нас с вами наверняка ждет очень интересная дуэль.\u003c/p\u003e\u003cp\u003eДаже опытным букмекерам не удалось выделить в этой паре фаворита и поэтому коэффициенту на победу этих национальных команд в очном матче практически равны.\u003c/p\u003e","Португалия_Испания":"\u003cp\u003eДуэль Португалия - Испания по праву является одним из самых интересных и ожидаемых противостояний группового этапа ЧМ-2018.\u003c/p\u003e\u003cp\u003eДа, коэффициенты букмекеров в данном случае говорят в пользу испанцев, однако не стоит забывать, что Португалия является действующим победителем Чемпионата Европы.\u003c/p\u003e","Россия_Египет":"\u003cp\u003eПеред матчем с Египтом сборную России называют безоговорочным фаворитом противостояния, что наглядно показывают и коэффициенты букмекерских контор.\u003c/p\u003e\u003cp\u003eТакое мнение экспертов можно назвать оправданным, но подопечным Черчесова нужно быть очень осторожными, ведь у египтян есть ощутимый козырь в лице Мохаммеда Салаха.\u003c/p\u003e","Россия_Сауд_Аравия":"\u003cp\u003eВ матче Россия - Саудовская Аравия многие эксперты считают безоговорочным фаворитом номинальных хозяев поля, и коэффициенты букмекеров это лишний раз подтверждают.\u003c/p\u003e\u003cp\u003eНо для команды Черчесова очень важно не допустить недооценки соперника, ведь она может сыграть с ней злую шутку.\u003c/p\u003e","Уругвай_Россия":"\u003cp\u003eУругвай считается главным соперником России за лидерство в группе, и если говорить о предстоящей встрече этих команд - коэффициенты букмекеров говорят как раз в пользу номинальных хозяев поля.\u003c/p\u003e\u003cp\u003eКонечно, шансы на победу у россиян имеются, но для достижения положительного результата дружине Черчесова нужно выложиться по максимуму.\u003c/p\u003e","Франция_Австралия":"\u003cp\u003eСборная Австралии является безоговорочным аутсайдером в противостоянии со сборной Франции: сложно представить, за счет чего подопечные Ван Марвейка сейчас могут обыграть такого именитого соперника.\u003c/p\u003e\u003cp\u003eНе верят в успех Австралии и букмекерские конторы. Так, коэффициенты на победу номинальных гостей перешагнули далеко за отметку в 10 к 1.\u003c/p\u003e"},"widget_plugin":{"1":1,"2":2,"F1":"Кф","F2":"Кф","Highest odds":"Самые высокие коэффициенты","Next Matches":"Следующие матчи","No active events":"Нет активных событий","TO":"Больше","TU":"Меньше","X":"X","button":{"generate_code":"Создать HTML код","reset":"Сбросить настройки"},"form":{"all_sports":"Все спорты","background":"Фон","bold_header":"Выделенный заголовок","bold_label":"Выделенное название","border":"Границы","color_settings":"Настройки цвета","color_text":"Текст","font":"Шрифт","fonts":"Настройка шрифта","footer_link":"Ссылка нижнего колонтитула","general":"Общие настройки","generate":" 2. Создать HTML код","get_html":"Получить HTML","header_bg":"Фон заголовка","header_text":"Текст заголовка","height":"Высота виджета","high_odds":"Наивысшие коэффициенты","insert_html":"вставить в конце \u003ccode\u003e\u0026lt;body\u0026gt;\u003c/code\u003e тега:","insert_html_2":"вставить в \u003ccode\u003e\u0026lt;body\u0026gt;\u003c/code\u003e тег, в месте где Вы хотите видеть виджет: \u003ccode\u003e\u0026lt;div id='oddsfan-widget'\u0026gt;\u003c/code\u003e\u003ccode\u003e\u0026lt;/div\u0026gt;\u003c/code\u003e","label_bg":"Фон названия","label_font":"Шрифт названия","label_name":"Название","lang":"Язык","line_height":"Высота строки","link":"Ссылка","matches":"Количество матчей","odds_displayed":"Используемые коэффициенты","odds_type":{"1x2":"Исход матча","handicap":"Фора","over_under":"Тотал матча"},"prev":"Превью","put":" 3. Разместить на своем сайте","select_bk":"Коэффициенты выбранных букмекеров","select_sports":"Виды спорта","setup":"1. Установить виджет","show_label":"Показывать название","size":"Размер","table_1":"Таблица 1","table_2":"Таблица 2","time_zone":"Часовой пояс","title":"Виджет: прематч коэффициенты","type":"Тип коэффициента","width":"Ширина виджета","with_logo":"Показывать лого у букмекера","without_logo":"Не показывать лого у букмекера"},"powered by":"разработано","tabs":{"live":"Лайв коэффициенты","prematch":"Прематч коэффициенты","surebets":"Прематч вилки","valuebets":"Ставки с перевесом"},"valF1":"Ф1","valF2":"Ф2","valT":"Тотал"}}};
}));



(function() {
  var checkAllBk, checkAllBkState, checkCheckAllBkClass, checkoutEmailMe, checkoutTimeZone, closeFlash, closeFlashWithTimeOut, deleteAccount, flashTimer, openBkModal, openFlash, resetPassword, savePrematchBookmakers;

  flashTimer = null;

  closeFlash = function() {
    return $('.flash-message').addClass('hide');
  };

  openFlash = function(params) {
    $('.flash-message .flash-message-content').html(params.message);
    $('.flash-message').removeClass('flash-success flash-info flash-danger');
    $('.flash-message').addClass(params.flash_class).removeClass('hide');
    return closeFlashWithTimeOut();
  };

  closeFlashWithTimeOut = function() {
    if (flashTimer) {
      clearTimeout(flashTimer);
    }
    return flashTimer = setTimeout(function() {
      return closeFlash();
    }, 7000);
  };

  checkAllBk = function(e) {
    var el;
    el = $(e.target);
    return el.closest('form').find('[type="checkbox"]').prop('checked', el.prop('checked'));
  };

  checkAllBkState = function(e) {
    var all_checkboxes, all_selected_checkboxes, el;
    el = $(e.target);
    all_checkboxes = el.closest('form').find('[type="checkbox"][id!=check_all_bk_acc]').length;
    all_selected_checkboxes = el.closest('form').find('[type="checkbox"]:checked[id!=check_all_bk_acc]').length;
    if (all_checkboxes === all_selected_checkboxes) {
      return $('#check_all_bk_acc, #check_all_bk').prop('checked', true);
    } else {
      return $('#check_all_bk_acc, #check_all_bk').prop('checked', false);
    }
  };

  checkCheckAllBkClass = function() {
    return $('.bookmakers-checkbox-js').prop('checked', this.checked);
  };

  savePrematchBookmakers = function(e) {
    var data, form, form_with_ladda, ladda, selectedIds, url;
    e.preventDefault();
    form = $(this).closest('form');
    form_with_ladda = form.data('ladda');
    if (form_with_ladda) {
      ladda = Ladda.create(document.querySelector('#' + form.attr('id') + ' [type=submit]'));
      ladda.start();
    }
    url = form.attr('action');
    selectedIds = Object.keys(form.serializeObject()).map(function(value) {
      return parseInt(value.split('[')[1].split(']')[0]);
    });
    data = {
      ids: selectedIds,
      authenticity_token: $('meta[name="csrf-token"]').attr('content')
    };
    return $.ajax({
      url: url,
      type: 'POST',
      dataType: 'JSON',
      data: data,
      success: function(response) {
        var message, message_class;
        if (form_with_ladda) {
          setTimeout(function() {
            return ladda.stop();
          }, 500);
        }
        if (response.flash.success) {
          message = response.flash.success;
          message_class = 'success';
          setTimeout(function() {
            return window.location.reload();
          }, 1500);
        } else if (response.flash.danger) {
          message = response.flash.danger;
          message_class = 'danger';
        }
        return openFlash({
          message: message,
          flash_class: 'flash-' + message_class
        });
      },
      error: function(data) {
        if (form_with_ladda) {
          return setTimeout(function() {
            return ladda.stop();
          }, 500);
        }
      }
    });
  };

  checkoutTimeZone = function(e) {
    var container, el;
    e.preventDefault();
    if ($(e.target).is('a')) {
      el = $(e.target);
    } else {
      el = $(e.target).closest('a');
    }
    container = el.closest('.time-zone-container-js');
    $.ajax({
      url: '/update_time_zone.js',
      type: 'POST',
      dataType: 'JSON',
      data: {
        time_zone_name: el.data('format').split('##')[0]
      },
      headers: {
        'X-Transaction': 'POST Example',
        'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
      },
      success: function(response) {
        container.find('button').html(response.message);
        window.time_zone_offset = response.time_zone_offset;
        return container.find('.help-block').removeClass('hide');
      }
    });
    return container.removeClass('open');
  };

  checkoutEmailMe = function(e) {
    var container, el, form;
    el = $(e.target);
    form = el.parent('form');
    container = el.closest('.email-me-container-js');
    return $.ajax({
      url: '/email_me.js',
      data: {
        email_me: el.prop('checked')
      },
      type: 'POST',
      headers: {
        'X-Transaction': 'POST Example',
        'X-CSRF-Token': $('meta[name=csrf-token]').attr('content')
      },
      success: function(response) {
        return container.find('.help-block').removeClass('hide');
      }
    });
  };

  resetPassword = function(e) {
    var form, form_with_ladda, ladda, url;
    e.preventDefault();
    form = $(this).closest('form');
    form_with_ladda = form.data('ladda');
    if (form_with_ladda) {
      ladda = Ladda.create(document.querySelector('#' + form.attr('id') + ' [type=submit]'));
      ladda.start();
    }
    url = form.attr('action');
    form.find('.help_block').addClass('hide');
    return $.ajax({
      url: url + '.json',
      type: 'PUT',
      data: form.serializeObject(),
      headers: {
        'X-Transaction': 'PUT Example',
        'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
      },
      success: function(response) {
        if (form_with_ladda) {
          setTimeout(function() {
            return ladda.stop();
          }, 500);
        }
        form.find('[type=text], [type=password]').val('');
        return openFlash({
          message: 'successfully updated',
          flash_class: 'flash-success'
        });
      },
      error: function(data) {
        var container, error, message, results;
        if (form_with_ladda) {
          setTimeout(function() {
            return ladda.stop();
          }, 500);
        }
        if (data.responseJSON.errors) {
          results = [];
          for (error in data.responseJSON.errors) {
            message = data.responseJSON.errors[error][0];
            container = form.find('[name="oddsfan_user[' + error + ']"]').closest('.field');
            container.find('.help-block .message').html(message);
            results.push(container.find('.help-block').removeClass('hide'));
          }
          return results;
        }
      }
    });
  };

  deleteAccount = function(e) {
    var confirm;
    confirm = window.confirm(I18n.t("account.label.confirm"));
    if (confirm) {
      return $.ajax({
        url: '/oddsfan_users.json',
        type: 'DELETE',
        headers: {
          'X-Transaction': 'DELETE Example',
          'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
        },
        success: function() {
          return window.location.pathname = '/';
        }
      });
    }
  };

  openBkModal = function(e) {
    var modal;
    modal = $('.bk-modal');
    if (!modal.hasClass('in')) {
      modal.modal('show');
      $('.modal-backdrop.fade').removeClass('modal-backdrop').addClass('backdrop-light');
    }
    return false;
  };

  $(function() {
    $('#check_all_bk_acc').change(checkAllBk);
    $('.info-bookmakers-all [type="checkbox"], .all-bookmakers-list [type="checkbox"]').change(checkAllBkState);
    $('.prematch-bookmakers-js, .bookmakers-list-form').submit(savePrematchBookmakers);
    $('.save-bookmakers-list-form').click(savePrematchBookmakers);
    $('.time-zone-container-js a').click(checkoutTimeZone);
    $('#email_me').change(checkoutEmailMe);
    $('.change-pass-js').submit(resetPassword);
    $('.delete').click(deleteAccount);
    $('#check_all_bk').change(checkCheckAllBkClass);
    return $('.open-bk-modal-js').click(openBkModal);
  });

}).call(this);
(function() {
  var context = this;

  (function() {
    (function() {
      var slice = [].slice;

      this.ActionCable = {
        INTERNAL: {
          "message_types": {
            "welcome": "welcome",
            "ping": "ping",
            "confirmation": "confirm_subscription",
            "rejection": "reject_subscription"
          },
          "default_mount_path": "/cable",
          "protocols": ["actioncable-v1-json", "actioncable-unsupported"]
        },
        WebSocket: window.WebSocket,
        logger: window.console,
        createConsumer: function(url) {
          var ref;
          if (url == null) {
            url = (ref = this.getConfig("url")) != null ? ref : this.INTERNAL.default_mount_path;
          }
          return new ActionCable.Consumer(this.createWebSocketURL(url));
        },
        getConfig: function(name) {
          var element;
          element = document.head.querySelector("meta[name='action-cable-" + name + "']");
          return element != null ? element.getAttribute("content") : void 0;
        },
        createWebSocketURL: function(url) {
          var a;
          if (url && !/^wss?:/i.test(url)) {
            a = document.createElement("a");
            a.href = url;
            a.href = a.href;
            a.protocol = a.protocol.replace("http", "ws");
            return a.href;
          } else {
            return url;
          }
        },
        startDebugging: function() {
          return this.debugging = true;
        },
        stopDebugging: function() {
          return this.debugging = null;
        },
        log: function() {
          var messages, ref;
          messages = 1 <= arguments.length ? slice.call(arguments, 0) : [];
          if (this.debugging) {
            messages.push(Date.now());
            return (ref = this.logger).log.apply(ref, ["[ActionCable]"].concat(slice.call(messages)));
          }
        }
      };

    }).call(this);
  }).call(context);

  var ActionCable = context.ActionCable;

  (function() {
    (function() {
      var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

      ActionCable.ConnectionMonitor = (function() {
        var clamp, now, secondsSince;

        ConnectionMonitor.pollInterval = {
          min: 3,
          max: 30
        };

        ConnectionMonitor.staleThreshold = 6;

        function ConnectionMonitor(connection) {
          this.connection = connection;
          this.visibilityDidChange = bind(this.visibilityDidChange, this);
          this.reconnectAttempts = 0;
        }

        ConnectionMonitor.prototype.start = function() {
          if (!this.isRunning()) {
            this.startedAt = now();
            delete this.stoppedAt;
            this.startPolling();
            document.addEventListener("visibilitychange", this.visibilityDidChange);
            return ActionCable.log("ConnectionMonitor started. pollInterval = " + (this.getPollInterval()) + " ms");
          }
        };

        ConnectionMonitor.prototype.stop = function() {
          if (this.isRunning()) {
            this.stoppedAt = now();
            this.stopPolling();
            document.removeEventListener("visibilitychange", this.visibilityDidChange);
            return ActionCable.log("ConnectionMonitor stopped");
          }
        };

        ConnectionMonitor.prototype.isRunning = function() {
          return (this.startedAt != null) && (this.stoppedAt == null);
        };

        ConnectionMonitor.prototype.recordPing = function() {
          return this.pingedAt = now();
        };

        ConnectionMonitor.prototype.recordConnect = function() {
          this.reconnectAttempts = 0;
          this.recordPing();
          delete this.disconnectedAt;
          return ActionCable.log("ConnectionMonitor recorded connect");
        };

        ConnectionMonitor.prototype.recordDisconnect = function() {
          this.disconnectedAt = now();
          return ActionCable.log("ConnectionMonitor recorded disconnect");
        };

        ConnectionMonitor.prototype.startPolling = function() {
          this.stopPolling();
          return this.poll();
        };

        ConnectionMonitor.prototype.stopPolling = function() {
          return clearTimeout(this.pollTimeout);
        };

        ConnectionMonitor.prototype.poll = function() {
          return this.pollTimeout = setTimeout((function(_this) {
            return function() {
              _this.reconnectIfStale();
              return _this.poll();
            };
          })(this), this.getPollInterval());
        };

        ConnectionMonitor.prototype.getPollInterval = function() {
          var interval, max, min, ref;
          ref = this.constructor.pollInterval, min = ref.min, max = ref.max;
          interval = 5 * Math.log(this.reconnectAttempts + 1);
          return Math.round(clamp(interval, min, max) * 1000);
        };

        ConnectionMonitor.prototype.reconnectIfStale = function() {
          if (this.connectionIsStale()) {
            ActionCable.log("ConnectionMonitor detected stale connection. reconnectAttempts = " + this.reconnectAttempts + ", pollInterval = " + (this.getPollInterval()) + " ms, time disconnected = " + (secondsSince(this.disconnectedAt)) + " s, stale threshold = " + this.constructor.staleThreshold + " s");
            this.reconnectAttempts++;
            if (this.disconnectedRecently()) {
              return ActionCable.log("ConnectionMonitor skipping reopening recent disconnect");
            } else {
              ActionCable.log("ConnectionMonitor reopening");
              return this.connection.reopen();
            }
          }
        };

        ConnectionMonitor.prototype.connectionIsStale = function() {
          var ref;
          return secondsSince((ref = this.pingedAt) != null ? ref : this.startedAt) > this.constructor.staleThreshold;
        };

        ConnectionMonitor.prototype.disconnectedRecently = function() {
          return this.disconnectedAt && secondsSince(this.disconnectedAt) < this.constructor.staleThreshold;
        };

        ConnectionMonitor.prototype.visibilityDidChange = function() {
          if (document.visibilityState === "visible") {
            return setTimeout((function(_this) {
              return function() {
                if (_this.connectionIsStale() || !_this.connection.isOpen()) {
                  ActionCable.log("ConnectionMonitor reopening stale connection on visibilitychange. visbilityState = " + document.visibilityState);
                  return _this.connection.reopen();
                }
              };
            })(this), 200);
          }
        };

        now = function() {
          return new Date().getTime();
        };

        secondsSince = function(time) {
          return (now() - time) / 1000;
        };

        clamp = function(number, min, max) {
          return Math.max(min, Math.min(max, number));
        };

        return ConnectionMonitor;

      })();

    }).call(this);
    (function() {
      var i, message_types, protocols, ref, supportedProtocols, unsupportedProtocol,
        slice = [].slice,
        bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
        indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

      ref = ActionCable.INTERNAL, message_types = ref.message_types, protocols = ref.protocols;

      supportedProtocols = 2 <= protocols.length ? slice.call(protocols, 0, i = protocols.length - 1) : (i = 0, []), unsupportedProtocol = protocols[i++];

      ActionCable.Connection = (function() {
        Connection.reopenDelay = 500;

        function Connection(consumer) {
          this.consumer = consumer;
          this.open = bind(this.open, this);
          this.subscriptions = this.consumer.subscriptions;
          this.monitor = new ActionCable.ConnectionMonitor(this);
          this.disconnected = true;
        }

        Connection.prototype.send = function(data) {
          if (this.isOpen()) {
            this.webSocket.send(JSON.stringify(data));
            return true;
          } else {
            return false;
          }
        };

        Connection.prototype.open = function() {
          if (this.isActive()) {
            ActionCable.log("Attempted to open WebSocket, but existing socket is " + (this.getState()));
            return false;
          } else {
            ActionCable.log("Opening WebSocket, current state is " + (this.getState()) + ", subprotocols: " + protocols);
            if (this.webSocket != null) {
              this.uninstallEventHandlers();
            }
            this.webSocket = new ActionCable.WebSocket(this.consumer.url, protocols);
            this.installEventHandlers();
            this.monitor.start();
            return true;
          }
        };

        Connection.prototype.close = function(arg) {
          var allowReconnect, ref1;
          allowReconnect = (arg != null ? arg : {
            allowReconnect: true
          }).allowReconnect;
          if (!allowReconnect) {
            this.monitor.stop();
          }
          if (this.isActive()) {
            return (ref1 = this.webSocket) != null ? ref1.close() : void 0;
          }
        };

        Connection.prototype.reopen = function() {
          var error;
          ActionCable.log("Reopening WebSocket, current state is " + (this.getState()));
          if (this.isActive()) {
            try {
              return this.close();
            } catch (error1) {
              error = error1;
              return ActionCable.log("Failed to reopen WebSocket", error);
            } finally {
              ActionCable.log("Reopening WebSocket in " + this.constructor.reopenDelay + "ms");
              setTimeout(this.open, this.constructor.reopenDelay);
            }
          } else {
            return this.open();
          }
        };

        Connection.prototype.getProtocol = function() {
          var ref1;
          return (ref1 = this.webSocket) != null ? ref1.protocol : void 0;
        };

        Connection.prototype.isOpen = function() {
          return this.isState("open");
        };

        Connection.prototype.isActive = function() {
          return this.isState("open", "connecting");
        };

        Connection.prototype.isProtocolSupported = function() {
          var ref1;
          return ref1 = this.getProtocol(), indexOf.call(supportedProtocols, ref1) >= 0;
        };

        Connection.prototype.isState = function() {
          var ref1, states;
          states = 1 <= arguments.length ? slice.call(arguments, 0) : [];
          return ref1 = this.getState(), indexOf.call(states, ref1) >= 0;
        };

        Connection.prototype.getState = function() {
          var ref1, state, value;
          for (state in WebSocket) {
            value = WebSocket[state];
            if (value === ((ref1 = this.webSocket) != null ? ref1.readyState : void 0)) {
              return state.toLowerCase();
            }
          }
          return null;
        };

        Connection.prototype.installEventHandlers = function() {
          var eventName, handler;
          for (eventName in this.events) {
            handler = this.events[eventName].bind(this);
            this.webSocket["on" + eventName] = handler;
          }
        };

        Connection.prototype.uninstallEventHandlers = function() {
          var eventName;
          for (eventName in this.events) {
            this.webSocket["on" + eventName] = function() {};
          }
        };

        Connection.prototype.events = {
          message: function(event) {
            var identifier, message, ref1, type;
            if (!this.isProtocolSupported()) {
              return;
            }
            ref1 = JSON.parse(event.data), identifier = ref1.identifier, message = ref1.message, type = ref1.type;
            switch (type) {
              case message_types.welcome:
                this.monitor.recordConnect();
                return this.subscriptions.reload();
              case message_types.ping:
                return this.monitor.recordPing();
              case message_types.confirmation:
                return this.subscriptions.notify(identifier, "connected");
              case message_types.rejection:
                return this.subscriptions.reject(identifier);
              default:
                return this.subscriptions.notify(identifier, "received", message);
            }
          },
          open: function() {
            ActionCable.log("WebSocket onopen event, using '" + (this.getProtocol()) + "' subprotocol");
            this.disconnected = false;
            if (!this.isProtocolSupported()) {
              ActionCable.log("Protocol is unsupported. Stopping monitor and disconnecting.");
              return this.close({
                allowReconnect: false
              });
            }
          },
          close: function(event) {
            ActionCable.log("WebSocket onclose event");
            if (this.disconnected) {
              return;
            }
            this.disconnected = true;
            this.monitor.recordDisconnect();
            return this.subscriptions.notifyAll("disconnected", {
              willAttemptReconnect: this.monitor.isRunning()
            });
          },
          error: function() {
            return ActionCable.log("WebSocket onerror event");
          }
        };

        return Connection;

      })();

    }).call(this);
    (function() {
      var slice = [].slice;

      ActionCable.Subscriptions = (function() {
        function Subscriptions(consumer) {
          this.consumer = consumer;
          this.subscriptions = [];
        }

        Subscriptions.prototype.create = function(channelName, mixin) {
          var channel, params, subscription;
          channel = channelName;
          params = typeof channel === "object" ? channel : {
            channel: channel
          };
          subscription = new ActionCable.Subscription(this.consumer, params, mixin);
          return this.add(subscription);
        };

        Subscriptions.prototype.add = function(subscription) {
          this.subscriptions.push(subscription);
          this.consumer.ensureActiveConnection();
          this.notify(subscription, "initialized");
          this.sendCommand(subscription, "subscribe");
          return subscription;
        };

        Subscriptions.prototype.remove = function(subscription) {
          this.forget(subscription);
          if (!this.findAll(subscription.identifier).length) {
            this.sendCommand(subscription, "unsubscribe");
          }
          return subscription;
        };

        Subscriptions.prototype.reject = function(identifier) {
          var i, len, ref, results, subscription;
          ref = this.findAll(identifier);
          results = [];
          for (i = 0, len = ref.length; i < len; i++) {
            subscription = ref[i];
            this.forget(subscription);
            this.notify(subscription, "rejected");
            results.push(subscription);
          }
          return results;
        };

        Subscriptions.prototype.forget = function(subscription) {
          var s;
          this.subscriptions = (function() {
            var i, len, ref, results;
            ref = this.subscriptions;
            results = [];
            for (i = 0, len = ref.length; i < len; i++) {
              s = ref[i];
              if (s !== subscription) {
                results.push(s);
              }
            }
            return results;
          }).call(this);
          return subscription;
        };

        Subscriptions.prototype.findAll = function(identifier) {
          var i, len, ref, results, s;
          ref = this.subscriptions;
          results = [];
          for (i = 0, len = ref.length; i < len; i++) {
            s = ref[i];
            if (s.identifier === identifier) {
              results.push(s);
            }
          }
          return results;
        };

        Subscriptions.prototype.reload = function() {
          var i, len, ref, results, subscription;
          ref = this.subscriptions;
          results = [];
          for (i = 0, len = ref.length; i < len; i++) {
            subscription = ref[i];
            results.push(this.sendCommand(subscription, "subscribe"));
          }
          return results;
        };

        Subscriptions.prototype.notifyAll = function() {
          var args, callbackName, i, len, ref, results, subscription;
          callbackName = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
          ref = this.subscriptions;
          results = [];
          for (i = 0, len = ref.length; i < len; i++) {
            subscription = ref[i];
            results.push(this.notify.apply(this, [subscription, callbackName].concat(slice.call(args))));
          }
          return results;
        };

        Subscriptions.prototype.notify = function() {
          var args, callbackName, i, len, results, subscription, subscriptions;
          subscription = arguments[0], callbackName = arguments[1], args = 3 <= arguments.length ? slice.call(arguments, 2) : [];
          if (typeof subscription === "string") {
            subscriptions = this.findAll(subscription);
          } else {
            subscriptions = [subscription];
          }
          results = [];
          for (i = 0, len = subscriptions.length; i < len; i++) {
            subscription = subscriptions[i];
            results.push(typeof subscription[callbackName] === "function" ? subscription[callbackName].apply(subscription, args) : void 0);
          }
          return results;
        };

        Subscriptions.prototype.sendCommand = function(subscription, command) {
          var identifier;
          identifier = subscription.identifier;
          return this.consumer.send({
            command: command,
            identifier: identifier
          });
        };

        return Subscriptions;

      })();

    }).call(this);
    (function() {
      ActionCable.Subscription = (function() {
        var extend;

        function Subscription(consumer, params, mixin) {
          this.consumer = consumer;
          if (params == null) {
            params = {};
          }
          this.identifier = JSON.stringify(params);
          extend(this, mixin);
        }

        Subscription.prototype.perform = function(action, data) {
          if (data == null) {
            data = {};
          }
          data.action = action;
          return this.send(data);
        };

        Subscription.prototype.send = function(data) {
          return this.consumer.send({
            command: "message",
            identifier: this.identifier,
            data: JSON.stringify(data)
          });
        };

        Subscription.prototype.unsubscribe = function() {
          return this.consumer.subscriptions.remove(this);
        };

        extend = function(object, properties) {
          var key, value;
          if (properties != null) {
            for (key in properties) {
              value = properties[key];
              object[key] = value;
            }
          }
          return object;
        };

        return Subscription;

      })();

    }).call(this);
    (function() {
      ActionCable.Consumer = (function() {
        function Consumer(url) {
          this.url = url;
          this.subscriptions = new ActionCable.Subscriptions(this);
          this.connection = new ActionCable.Connection(this);
        }

        Consumer.prototype.send = function(data) {
          return this.connection.send(data);
        };

        Consumer.prototype.connect = function() {
          return this.connection.open();
        };

        Consumer.prototype.disconnect = function() {
          return this.connection.close({
            allowReconnect: false
          });
        };

        Consumer.prototype.ensureActiveConnection = function() {
          if (!this.connection.isActive()) {
            return this.connection.open();
          }
        };

        return Consumer;

      })();

    }).call(this);
  }).call(this);

  if (typeof module === "object" && module.exports) {
    module.exports = ActionCable;
  } else if (typeof define === "function" && define.amd) {
    define(ActionCable);
  }
}).call(this);
// Action Cable provides the framework to deal with WebSockets in Rails.
// You can generate new channels where WebSocket features live using the `rails generate channel` command.
//




(function() {
  this.App || (this.App = {});

  App.cable = ActionCable.createConsumer();

}).call(this);
/*
 * This combined file was created by the DataTables downloader builder:
 *   https://datatables.net/download
 *
 * To rebuild or modify this file with the latest versions of the included
 * software please visit:
 *   https://datatables.net/download/#dt/dt-1.10.16
 *
 * Included libraries:
 *   DataTables 1.10.16
 */

/*! DataTables 1.10.16
 * ©2008-2017 SpryMedia Ltd - datatables.net/license
 */

/**
 * @summary     DataTables
 * @description Paginate, search and order HTML tables
 * @version     1.10.16
 * @file        jquery.dataTables.js
 * @author      SpryMedia Ltd
 * @contact     www.datatables.net
 * @copyright   Copyright 2008-2017 SpryMedia Ltd.
 *
 * This source file is free software, available under the following license:
 *   MIT license - http://datatables.net/license
 *
 * This source file is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.
 *
 * For details please refer to: http://www.datatables.net
 */

/*jslint evil: true, undef: true, browser: true */
/*globals $,require,jQuery,define,_selector_run,_selector_opts,_selector_first,_selector_row_indexes,_ext,_Api,_api_register,_api_registerPlural,_re_new_lines,_re_html,_re_formatted_numeric,_re_escape_regex,_empty,_intVal,_numToDecimal,_isNumber,_isHtml,_htmlNumeric,_pluck,_pluck_order,_range,_stripHtml,_unique,_fnBuildAjax,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnAjaxDataSrc,_fnAddColumn,_fnColumnOptions,_fnAdjustColumnSizing,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnVisbleColumns,_fnGetColumns,_fnColumnTypes,_fnApplyColumnDefs,_fnHungarianMap,_fnCamelToHungarian,_fnLanguageCompat,_fnBrowserDetect,_fnAddData,_fnAddTr,_fnNodeToDataIndex,_fnNodeToColumnIndex,_fnGetCellData,_fnSetCellData,_fnSplitObjNotation,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnGetDataMaster,_fnClearTable,_fnDeleteIndex,_fnInvalidate,_fnGetRowElements,_fnCreateTr,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAddOptionsHtml,_fnDetectHeader,_fnGetUniqueThs,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnFilterCreateSearch,_fnEscapeRegex,_fnFilterData,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnInfoMacros,_fnInitialise,_fnInitComplete,_fnLengthChange,_fnFeatureHtmlLength,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnFeatureHtmlTable,_fnScrollDraw,_fnApplyToChildren,_fnCalculateColumnWidths,_fnThrottle,_fnConvertToWidth,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnSortFlatten,_fnSort,_fnSortAria,_fnSortListener,_fnSortAttachListener,_fnSortingClasses,_fnSortData,_fnSaveState,_fnLoadState,_fnSettingsFromNode,_fnLog,_fnMap,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnLengthOverflow,_fnRenderer,_fnDataSource,_fnRowAttributes*/

(function (factory) {
  "use strict";

  if (typeof define === 'function' && define.amd) {
    // AMD
    define(['jquery'], function ($) {
      return factory($, window, document);
    });
  }
  else if (typeof exports === 'object') {
    // CommonJS
    module.exports = function (root, $) {
      if (!root) {
        // CommonJS environments without a window global must pass a
        // root. This will give an error otherwise
        root = window;
      }

      if (!$) {
        $ = typeof window !== 'undefined' ? // jQuery's factory checks for a global window
          require('jquery') :
          require('jquery')(root);
      }

      return factory($, root, root.document);
    };
  }
  else {
    // Browser
    factory(jQuery, window, document);
  }
}
(function ($, window, document, undefined) {
  "use strict";

  /**
   * DataTables is a plug-in for the jQuery Javascript library. It is a highly
   * flexible tool, based upon the foundations of progressive enhancement,
   * which will add advanced interaction controls to any HTML table. For a
   * full list of features please refer to
   * [DataTables.net](href="http://datatables.net).
   *
   * Note that the `DataTable` object is not a global variable but is aliased
   * to `jQuery.fn.DataTable` and `jQuery.fn.dataTable` through which it may
   * be  accessed.
   *
   *  @class
   *  @param {object} [init={}] Configuration object for DataTables. Options
   *    are defined by {@link DataTable.defaults}
   *  @requires jQuery 1.7+
   *
   *  @example
   *    // Basic initialisation
   *    $(document).ready( function {
	 *      $('#example').dataTable();
	 *    } );
   *
   *  @example
   *    // Initialisation with configuration options - in this case, disable
   *    // pagination and sorting.
   *    $(document).ready( function {
	 *      $('#example').dataTable( {
	 *        "paginate": false,
	 *        "sort": false
	 *      } );
	 *    } );
   */
  var DataTable = function (options) {
    /**
     * Perform a jQuery selector action on the table's TR elements (from the tbody) and
     * return the resulting jQuery object.
     *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on
     *  @param {object} [oOpts] Optional parameters for modifying the rows to be included
     *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter
     *    criterion ("applied") or all TR elements (i.e. no filter).
     *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.
     *    Can be either 'current', whereby the current sorting of the table is used, or
     *    'original' whereby the original order the data was read into the table is used.
     *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page
     *    ("current") or not ("all"). If 'current' is given, then order is assumed to be
     *    'current' and filter is 'applied', regardless of what they might be given as.
     *  @returns {object} jQuery object, filtered by the given selector.
     *  @dtopt API
     *  @deprecated Since v1.10
     *
     *  @example
     *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Highlight every second row
		 *      oTable.$('tr:odd').css('backgroundColor', 'blue');
		 *    } );
     *
     *  @example
     *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Filter to rows with 'Webkit' in them, add a background colour and then
		 *      // remove the filter, thus highlighting the 'Webkit' rows only.
		 *      oTable.fnFilter('Webkit');
		 *      oTable.$('tr', {"search": "applied"}).css('backgroundColor', 'blue');
		 *      oTable.fnFilter('');
		 *    } );
     */
    this.$ = function (sSelector, oOpts) {
      return this.api(true).$(sSelector, oOpts);
    };


    /**
     * Almost identical to $ in operation, but in this case returns the data for the matched
     * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes
     * rather than any descendants, so the data can be obtained for the row/cell. If matching
     * rows are found, the data returned is the original data array/object that was used to
     * create the row (or a generated array if from a DOM source).
     *
     * This method is often useful in-combination with $ where both functions are given the
     * same parameters and the array indexes will match identically.
     *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on
     *  @param {object} [oOpts] Optional parameters for modifying the rows to be included
     *  @param {string} [oOpts.filter=none] Select elements that meet the current filter
     *    criterion ("applied") or all elements (i.e. no filter).
     *  @param {string} [oOpts.order=current] Order of the data in the processed array.
     *    Can be either 'current', whereby the current sorting of the table is used, or
     *    'original' whereby the original order the data was read into the table is used.
     *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page
     *    ("current") or not ("all"). If 'current' is given, then order is assumed to be
     *    'current' and filter is 'applied', regardless of what they might be given as.
     *  @returns {array} Data for the matched elements. If any elements, as a result of the
     *    selector, were not TR, TD or TH elements in the DataTable, they will have a null
     *    entry in the array.
     *  @dtopt API
     *  @deprecated Since v1.10
     *
     *  @example
     *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Get the data from the first row in the table
		 *      var data = oTable._('tr:first');
		 *
		 *      // Do something useful with the data
		 *      alert( "First cell is: "+data[0] );
		 *    } );
     *
     *  @example
     *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Filter to 'Webkit' and get all data for
		 *      oTable.fnFilter('Webkit');
		 *      var data = oTable._('tr', {"search": "applied"});
		 *
		 *      // Do something with the data
		 *      alert( data.length+" rows matched the search" );
		 *    } );
     */
    this._ = function (sSelector, oOpts) {
      return this.api(true).rows(sSelector, oOpts).data();
    };


    /**
     * Create a DataTables Api instance, with the currently selected tables for
     * the Api's context.
     * @param {boolean} [traditional=false] Set the API instance's context to be
     *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was
     *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),
     *   or if all tables captured in the jQuery object should be used.
     * @return {DataTables.Api}
     */
    this.api = function (traditional) {
      return traditional ?
        new _Api(
          _fnSettingsFromNode(this[_ext.iApiIndex])
        ) :
        new _Api(this);
    };


    /**
     * Add a single new row or multiple rows of data to the table. Please note
     * that this is suitable for client-side processing only - if you are using
     * server-side processing (i.e. "bServerSide": true), then to add data, you
     * must add it to the data source, i.e. the server-side, through an Ajax call.
     *  @param {array|object} data The data to be added to the table. This can be:
     *    <ul>
     *      <li>1D array of data - add a single row with the data provided</li>
     *      <li>2D array of arrays - add multiple rows in a single call</li>
     *      <li>object - data object when using <i>mData</i></li>
     *      <li>array of objects - multiple data objects when using <i>mData</i></li>
     *    </ul>
     *  @param {bool} [redraw=true] redraw the table or not
     *  @returns {array} An array of integers, representing the list of indexes in
     *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to
     *    the table.
     *  @dtopt API
     *  @deprecated Since v1.10
     *
     *  @example
     *    // Global var for counter
     *    var giCount = 2;
     *
     *    $(document).ready(function() {
		 *      $('#example').dataTable();
		 *    } );
     *
     *    function fnClickAddRow() {
		 *      $('#example').dataTable().fnAddData( [
		 *        giCount+".1",
		 *        giCount+".2",
		 *        giCount+".3",
		 *        giCount+".4" ]
		 *      );
		 *
		 *      giCount++;
		 *    }
     */
    this.fnAddData = function (data, redraw) {
      var api = this.api(true);

      /* Check if we want to add multiple rows or not */
      var rows = $.isArray(data) && ( $.isArray(data[0]) || $.isPlainObject(data[0]) ) ?
        api.rows.add(data) :
        api.row.add(data);

      if (redraw === undefined || redraw) {
        api.draw();
      }

      return rows.flatten().toArray();
    };


    /**
     * This function will make DataTables recalculate the column sizes, based on the data
     * contained in the table and the sizes applied to the columns (in the DOM, CSS or
     * through the sWidth parameter). This can be useful when the width of the table's
     * parent element changes (for example a window resize).
     *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to
     *  @dtopt API
     *  @deprecated Since v1.10
     *
     *  @example
     *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable( {
		 *        "sScrollY": "200px",
		 *        "bPaginate": false
		 *      } );
		 *
		 *      $(window).on('resize', function () {
		 *        oTable.fnAdjustColumnSizing();
		 *      } );
		 *    } );
     */
    this.fnAdjustColumnSizing = function (bRedraw) {
      var api = this.api(true).columns.adjust();
      var settings = api.settings()[0];
      var scroll = settings.oScroll;

      if (bRedraw === undefined || bRedraw) {
        api.draw(false);
      }
      else if (scroll.sX !== "" || scroll.sY !== "") {
        /* If not redrawing, but scrolling, we want to apply the new column sizes anyway */
        _fnScrollDraw(settings);
      }
    };


    /**
     * Quickly and simply clear a table
     *  @param {bool} [bRedraw=true] redraw the table or not
     *  @dtopt API
     *  @deprecated Since v1.10
     *
     *  @example
     *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)
		 *      oTable.fnClearTable();
		 *    } );
     */
    this.fnClearTable = function (bRedraw) {
      var api = this.api(true).clear();

      if (bRedraw === undefined || bRedraw) {
        api.draw();
      }
    };


    /**
     * The exact opposite of 'opening' a row, this function will close any rows which
     * are currently 'open'.
     *  @param {node} nTr the table row to 'close'
     *  @returns {int} 0 on success, or 1 if failed (can't find the row)
     *  @dtopt API
     *  @deprecated Since v1.10
     *
     *  @example
     *    $(document).ready(function() {
		 *      var oTable;
		 *
		 *      // 'open' an information row when a row is clicked on
		 *      $('#example tbody tr').click( function () {
		 *        if ( oTable.fnIsOpen(this) ) {
		 *          oTable.fnClose( this );
		 *        } else {
		 *          oTable.fnOpen( this, "Temporary row opened", "info_row" );
		 *        }
		 *      } );
		 *
		 *      oTable = $('#example').dataTable();
		 *    } );
     */
    this.fnClose = function (nTr) {
      this.api(true).row(nTr).child.hide();
    };


    /**
     * Remove a row for the table
     *  @param {mixed} target The index of the row from aoData to be deleted, or
     *    the TR element you want to delete
     *  @param {function|null} [callBack] Callback function
     *  @param {bool} [redraw=true] Redraw the table or not
     *  @returns {array} The row that was deleted
     *  @dtopt API
     *  @deprecated Since v1.10
     *
     *  @example
     *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Immediately remove the first row
		 *      oTable.fnDeleteRow( 0 );
		 *    } );
     */
    this.fnDeleteRow = function (target, callback, redraw) {
      var api = this.api(true);
      var rows = api.rows(target);
      var settings = rows.settings()[0];
      var data = settings.aoData[rows[0][0]];

      rows.remove();

      if (callback) {
        callback.call(this, settings, data);
      }

      if (redraw === undefined || redraw) {
        api.draw();
      }

      return data;
    };


    /**
     * Restore the table to it's original state in the DOM by removing all of DataTables
     * enhancements, alterations to the DOM structure of the table and event listeners.
     *  @param {boolean} [remove=false] Completely remove the table from the DOM
     *  @dtopt API
     *  @deprecated Since v1.10
     *
     *  @example
     *    $(document).ready(function() {
		 *      // This example is fairly pointless in reality, but shows how fnDestroy can be used
		 *      var oTable = $('#example').dataTable();
		 *      oTable.fnDestroy();
		 *    } );
     */
    this.fnDestroy = function (remove) {
      this.api(true).destroy(remove);
    };


    /**
     * Redraw the table
     *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.
     *  @dtopt API
     *  @deprecated Since v1.10
     *
     *  @example
     *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)
		 *      oTable.fnDraw();
		 *    } );
     */
    this.fnDraw = function (complete) {
      // Note that this isn't an exact match to the old call to _fnDraw - it takes
      // into account the new data, but can hold position.
      this.api(true).draw(complete);
    };


    /**
     * Filter the input based on data
     *  @param {string} sInput String to filter the table on
     *  @param {int|null} [iColumn] Column to limit filtering to
     *  @param {bool} [bRegex=false] Treat as regular expression or not
     *  @param {bool} [bSmart=true] Perform smart filtering or not
     *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)
     *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)
     *  @dtopt API
     *  @deprecated Since v1.10
     *
     *  @example
     *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Sometime later - filter...
		 *      oTable.fnFilter( 'test string' );
		 *    } );
     */
    this.fnFilter = function (sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive) {
      var api = this.api(true);

      if (iColumn === null || iColumn === undefined) {
        api.search(sInput, bRegex, bSmart, bCaseInsensitive);
      }
      else {
        api.column(iColumn).search(sInput, bRegex, bSmart, bCaseInsensitive);
      }

      api.draw();
    };


    /**
     * Get the data for the whole table, an individual row or an individual cell based on the
     * provided parameters.
     *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as
     *    a TR node then the data source for the whole row will be returned. If given as a
     *    TD/TH cell node then iCol will be automatically calculated and the data for the
     *    cell returned. If given as an integer, then this is treated as the aoData internal
     *    data index for the row (see fnGetPosition) and the data for that row used.
     *  @param {int} [col] Optional column index that you want the data of.
     *  @returns {array|object|string} If mRow is undefined, then the data for all rows is
     *    returned. If mRow is defined, just data for that row, and is iCol is
     *    defined, only data for the designated cell is returned.
     *  @dtopt API
     *  @deprecated Since v1.10
     *
     *  @example
     *    // Row data
     *    $(document).ready(function() {
		 *      oTable = $('#example').dataTable();
		 *
		 *      oTable.$('tr').click( function () {
		 *        var data = oTable.fnGetData( this );
		 *        // ... do something with the array / object of data for the row
		 *      } );
		 *    } );
     *
     *  @example
     *    // Individual cell data
     *    $(document).ready(function() {
		 *      oTable = $('#example').dataTable();
		 *
		 *      oTable.$('td').click( function () {
		 *        var sData = oTable.fnGetData( this );
		 *        alert( 'The cell clicked on had the value of '+sData );
		 *      } );
		 *    } );
     */
    this.fnGetData = function (src, col) {
      var api = this.api(true);

      if (src !== undefined) {
        var type = src.nodeName ? src.nodeName.toLowerCase() : '';

        return col !== undefined || type == 'td' || type == 'th' ?
          api.cell(src, col).data() :
          api.row(src).data() || null;
      }

      return api.data().toArray();
    };


    /**
     * Get an array of the TR nodes that are used in the table's body. Note that you will
     * typically want to use the '$' API method in preference to this as it is more
     * flexible.
     *  @param {int} [iRow] Optional row index for the TR element you want
     *  @returns {array|node} If iRow is undefined, returns an array of all TR elements
     *    in the table's body, or iRow is defined, just the TR element requested.
     *  @dtopt API
     *  @deprecated Since v1.10
     *
     *  @example
     *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Get the nodes from the table
		 *      var nNodes = oTable.fnGetNodes( );
		 *    } );
     */
    this.fnGetNodes = function (iRow) {
      var api = this.api(true);

      return iRow !== undefined ?
        api.row(iRow).node() :
        api.rows().nodes().flatten().toArray();
    };


    /**
     * Get the array indexes of a particular cell from it's DOM element
     * and column index including hidden columns
     *  @param {node} node this can either be a TR, TD or TH in the table's body
     *  @returns {int} If nNode is given as a TR, then a single index is returned, or
     *    if given as a cell, an array of [row index, column index (visible),
     *    column index (all)] is given.
     *  @dtopt API
     *  @deprecated Since v1.10
     *
     *  @example
     *    $(document).ready(function() {
		 *      $('#example tbody td').click( function () {
		 *        // Get the position of the current data from the node
		 *        var aPos = oTable.fnGetPosition( this );
		 *
		 *        // Get the data array for this row
		 *        var aData = oTable.fnGetData( aPos[0] );
		 *
		 *        // Update the data array and return the value
		 *        aData[ aPos[1] ] = 'clicked';
		 *        this.innerHTML = 'clicked';
		 *      } );
		 *
		 *      // Init DataTables
		 *      oTable = $('#example').dataTable();
		 *    } );
     */
    this.fnGetPosition = function (node) {
      var api = this.api(true);
      var nodeName = node.nodeName.toUpperCase();

      if (nodeName == 'TR') {
        return api.row(node).index();
      }
      else if (nodeName == 'TD' || nodeName == 'TH') {
        var cell = api.cell(node).index();

        return [
          cell.row,
          cell.columnVisible,
          cell.column
        ];
      }
      return null;
    };


    /**
     * Check to see if a row is 'open' or not.
     *  @param {node} nTr the table row to check
     *  @returns {boolean} true if the row is currently open, false otherwise
     *  @dtopt API
     *  @deprecated Since v1.10
     *
     *  @example
     *    $(document).ready(function() {
		 *      var oTable;
		 *
		 *      // 'open' an information row when a row is clicked on
		 *      $('#example tbody tr').click( function () {
		 *        if ( oTable.fnIsOpen(this) ) {
		 *          oTable.fnClose( this );
		 *        } else {
		 *          oTable.fnOpen( this, "Temporary row opened", "info_row" );
		 *        }
		 *      } );
		 *
		 *      oTable = $('#example').dataTable();
		 *    } );
     */
    this.fnIsOpen = function (nTr) {
      return this.api(true).row(nTr).child.isShown();
    };


    /**
     * This function will place a new row directly after a row which is currently
     * on display on the page, with the HTML contents that is passed into the
     * function. This can be used, for example, to ask for confirmation that a
     * particular record should be deleted.
     *  @param {node} nTr The table row to 'open'
     *  @param {string|node|jQuery} mHtml The HTML to put into the row
     *  @param {string} sClass Class to give the new TD cell
     *  @returns {node} The row opened. Note that if the table row passed in as the
     *    first parameter, is not found in the table, this method will silently
     *    return.
     *  @dtopt API
     *  @deprecated Since v1.10
     *
     *  @example
     *    $(document).ready(function() {
		 *      var oTable;
		 *
		 *      // 'open' an information row when a row is clicked on
		 *      $('#example tbody tr').click( function () {
		 *        if ( oTable.fnIsOpen(this) ) {
		 *          oTable.fnClose( this );
		 *        } else {
		 *          oTable.fnOpen( this, "Temporary row opened", "info_row" );
		 *        }
		 *      } );
		 *
		 *      oTable = $('#example').dataTable();
		 *    } );
     */
    this.fnOpen = function (nTr, mHtml, sClass) {
      return this.api(true)
        .row(nTr)
        .child(mHtml, sClass)
        .show()
        .child()[0];
    };


    /**
     * Change the pagination - provides the internal logic for pagination in a simple API
     * function. With this function you can have a DataTables table go to the next,
     * previous, first or last pages.
     *  @param {string|int} mAction Paging action to take: "first", "previous", "next" or "last"
     *    or page number to jump to (integer), note that page 0 is the first page.
     *  @param {bool} [bRedraw=true] Redraw the table or not
     *  @dtopt API
     *  @deprecated Since v1.10
     *
     *  @example
     *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      oTable.fnPageChange( 'next' );
		 *    } );
     */
    this.fnPageChange = function (mAction, bRedraw) {
      var api = this.api(true).page(mAction);

      if (bRedraw === undefined || bRedraw) {
        api.draw(false);
      }
    };


    /**
     * Show a particular column
     *  @param {int} iCol The column whose display should be changed
     *  @param {bool} bShow Show (true) or hide (false) the column
     *  @param {bool} [bRedraw=true] Redraw the table or not
     *  @dtopt API
     *  @deprecated Since v1.10
     *
     *  @example
     *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Hide the second column after initialisation
		 *      oTable.fnSetColumnVis( 1, false );
		 *    } );
     */
    this.fnSetColumnVis = function (iCol, bShow, bRedraw) {
      var api = this.api(true).column(iCol).visible(bShow);

      if (bRedraw === undefined || bRedraw) {
        api.columns.adjust().draw();
      }
    };


    /**
     * Get the settings for a particular table for external manipulation
     *  @returns {object} DataTables settings object. See
     *    {@link DataTable.models.oSettings}
     *  @dtopt API
     *  @deprecated Since v1.10
     *
     *  @example
     *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      var oSettings = oTable.fnSettings();
		 *
		 *      // Show an example parameter from the settings
		 *      alert( oSettings._iDisplayStart );
		 *    } );
     */
    this.fnSettings = function () {
      return _fnSettingsFromNode(this[_ext.iApiIndex]);
    };


    /**
     * Sort the table by a particular column
     *  @param {int} iCol the data index to sort on. Note that this will not match the
     *    'display index' if you have hidden data entries
     *  @dtopt API
     *  @deprecated Since v1.10
     *
     *  @example
     *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Sort immediately with columns 0 and 1
		 *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );
		 *    } );
     */
    this.fnSort = function (aaSort) {
      this.api(true).order(aaSort).draw();
    };


    /**
     * Attach a sort listener to an element for a given column
     *  @param {node} nNode the element to attach the sort listener to
     *  @param {int} iColumn the column that a click on this node will sort on
     *  @param {function} [fnCallback] callback function when sort is run
     *  @dtopt API
     *  @deprecated Since v1.10
     *
     *  @example
     *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Sort on column 1, when 'sorter' is clicked on
		 *      oTable.fnSortListener( document.getElementById('sorter'), 1 );
		 *    } );
     */
    this.fnSortListener = function (nNode, iColumn, fnCallback) {
      this.api(true).order.listener(nNode, iColumn, fnCallback);
    };


    /**
     * Update a table cell or row - this method will accept either a single value to
     * update the cell with, an array of values with one element for each column or
     * an object in the same format as the original data source. The function is
     * self-referencing in order to make the multi column updates easier.
     *  @param {object|array|string} mData Data to update the cell/row with
     *  @param {node|int} mRow TR element you want to update or the aoData index
     *  @param {int} [iColumn] The column to update, give as null or undefined to
     *    update a whole row.
     *  @param {bool} [bRedraw=true] Redraw the table or not
     *  @param {bool} [bAction=true] Perform pre-draw actions or not
     *  @returns {int} 0 on success, 1 on error
     *  @dtopt API
     *  @deprecated Since v1.10
     *
     *  @example
     *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell
		 *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row
		 *    } );
     */
    this.fnUpdate = function (mData, mRow, iColumn, bRedraw, bAction) {
      var api = this.api(true);

      if (iColumn === undefined || iColumn === null) {
        api.row(mRow).data(mData);
      }
      else {
        api.cell(mRow, iColumn).data(mData);
      }

      if (bAction === undefined || bAction) {
        api.columns.adjust();
      }

      if (bRedraw === undefined || bRedraw) {
        api.draw();
      }
      return 0;
    };


    /**
     * Provide a common method for plug-ins to check the version of DataTables being used, in order
     * to ensure compatibility.
     *  @param {string} sVersion Version string to check for, in the format "X.Y.Z". Note that the
     *    formats "X" and "X.Y" are also acceptable.
     *  @returns {boolean} true if this version of DataTables is greater or equal to the required
     *    version, or false if this version of DataTales is not suitable
     *  @method
     *  @dtopt API
     *  @deprecated Since v1.10
     *
     *  @example
     *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      alert( oTable.fnVersionCheck( '1.9.0' ) );
		 *    } );
     */
    this.fnVersionCheck = _ext.fnVersionCheck;


    var _that = this;
    var emptyInit = options === undefined;
    var len = this.length;

    if (emptyInit) {
      options = {};
    }

    this.oApi = this.internal = _ext.internal;

    // Extend with old style plug-in API methods
    for (var fn in DataTable.ext.internal) {
      if (fn) {
        this[fn] = _fnExternApiFunc(fn);
      }
    }

    this.each(function () {
      // For each initialisation we want to give it a clean initialisation
      // object that can be bashed around
      var o = {};
      var oInit = len > 1 ? // optimisation for single table case
        _fnExtend(o, options, true) :
        options;

      /*global oInit,_that,emptyInit*/
      var i = 0, iLen, j, jLen, k, kLen;
      var sId = this.getAttribute('id');
      var bInitHandedOff = false;
      var defaults = DataTable.defaults;
      var $this = $(this);


      /* Sanity check */
      if (this.nodeName.toLowerCase() != 'table') {
        _fnLog(null, 0, 'Non-table node initialisation (' + this.nodeName + ')', 2);
        return;
      }

      /* Backwards compatibility for the defaults */
      _fnCompatOpts(defaults);
      _fnCompatCols(defaults.column);

      /* Convert the camel-case defaults to Hungarian */
      _fnCamelToHungarian(defaults, defaults, true);
      _fnCamelToHungarian(defaults.column, defaults.column, true);

      /* Setting up the initialisation object */
      _fnCamelToHungarian(defaults, $.extend(oInit, $this.data()));


      /* Check to see if we are re-initialising a table */
      var allSettings = DataTable.settings;
      for (i = 0, iLen = allSettings.length; i < iLen; i++) {
        var s = allSettings[i];

        /* Base check on table node */
        if (s.nTable == this || s.nTHead.parentNode == this || (s.nTFoot && s.nTFoot.parentNode == this)) {
          var bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;
          var bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;

          if (emptyInit || bRetrieve) {
            return s.oInstance;
          }
          else if (bDestroy) {
            s.oInstance.fnDestroy();
            break;
          }
          else {
            _fnLog(s, 0, 'Cannot reinitialise DataTable', 3);
            return;
          }
        }

        /* If the element we are initialising has the same ID as a table which was previously
				 * initialised, but the table nodes don't match (from before) then we destroy the old
				 * instance by simply deleting it. This is under the assumption that the table has been
				 * destroyed by other methods. Anyone using non-id selectors will need to do this manually
				 */
        if (s.sTableId == this.id) {
          allSettings.splice(i, 1);
          break;
        }
      }

      /* Ensure the table has an ID - required for accessibility */
      if (sId === null || sId === "") {
        sId = "DataTables_Table_" + (DataTable.ext._unique++);
        this.id = sId;
      }

      /* Create the settings object for this table and set some of the default parameters */
      var oSettings = $.extend(true, {}, DataTable.models.oSettings, {
        "sDestroyWidth": $this[0].style.width,
        "sInstance": sId,
        "sTableId": sId
      });
      oSettings.nTable = this;
      oSettings.oApi = _that.internal;
      oSettings.oInit = oInit;

      allSettings.push(oSettings);

      // Need to add the instance after the instance after the settings object has been added
      // to the settings array, so we can self reference the table instance if more than one
      oSettings.oInstance = (_that.length === 1) ? _that : $this.dataTable();

      // Backwards compatibility, before we apply all the defaults
      _fnCompatOpts(oInit);

      if (oInit.oLanguage) {
        _fnLanguageCompat(oInit.oLanguage);
      }

      // If the length menu is given, but the init display length is not, use the length menu
      if (oInit.aLengthMenu && !oInit.iDisplayLength) {
        oInit.iDisplayLength = $.isArray(oInit.aLengthMenu[0]) ?
          oInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];
      }

      // Apply the defaults and init options to make a single init object will all
      // options defined from defaults and instance options.
      oInit = _fnExtend($.extend(true, {}, defaults), oInit);


      // Map the initialisation options onto the settings object
      _fnMap(oSettings.oFeatures, oInit, [
        "bPaginate",
        "bLengthChange",
        "bFilter",
        "bSort",
        "bSortMulti",
        "bInfo",
        "bProcessing",
        "bAutoWidth",
        "bSortClasses",
        "bServerSide",
        "bDeferRender"
      ]);
      _fnMap(oSettings, oInit, [
        "asStripeClasses",
        "ajax",
        "fnServerData",
        "fnFormatNumber",
        "sServerMethod",
        "aaSorting",
        "aaSortingFixed",
        "aLengthMenu",
        "sPaginationType",
        "sAjaxSource",
        "sAjaxDataProp",
        "iStateDuration",
        "sDom",
        "bSortCellsTop",
        "iTabIndex",
        "fnStateLoadCallback",
        "fnStateSaveCallback",
        "renderer",
        "searchDelay",
        "rowId",
        ["iCookieDuration", "iStateDuration"], // backwards compat
        ["oSearch", "oPreviousSearch"],
        ["aoSearchCols", "aoPreSearchCols"],
        ["iDisplayLength", "_iDisplayLength"]
      ]);
      _fnMap(oSettings.oScroll, oInit, [
        ["sScrollX", "sX"],
        ["sScrollXInner", "sXInner"],
        ["sScrollY", "sY"],
        ["bScrollCollapse", "bCollapse"]
      ]);
      _fnMap(oSettings.oLanguage, oInit, "fnInfoCallback");

      /* Callback functions which are array driven */
      _fnCallbackReg(oSettings, 'aoDrawCallback', oInit.fnDrawCallback, 'user');
      _fnCallbackReg(oSettings, 'aoServerParams', oInit.fnServerParams, 'user');
      _fnCallbackReg(oSettings, 'aoStateSaveParams', oInit.fnStateSaveParams, 'user');
      _fnCallbackReg(oSettings, 'aoStateLoadParams', oInit.fnStateLoadParams, 'user');
      _fnCallbackReg(oSettings, 'aoStateLoaded', oInit.fnStateLoaded, 'user');
      _fnCallbackReg(oSettings, 'aoRowCallback', oInit.fnRowCallback, 'user');
      _fnCallbackReg(oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow, 'user');
      _fnCallbackReg(oSettings, 'aoHeaderCallback', oInit.fnHeaderCallback, 'user');
      _fnCallbackReg(oSettings, 'aoFooterCallback', oInit.fnFooterCallback, 'user');
      _fnCallbackReg(oSettings, 'aoInitComplete', oInit.fnInitComplete, 'user');
      _fnCallbackReg(oSettings, 'aoPreDrawCallback', oInit.fnPreDrawCallback, 'user');

      oSettings.rowIdFn = _fnGetObjectDataFn(oInit.rowId);

      /* Browser support detection */
      _fnBrowserDetect(oSettings);

      var oClasses = oSettings.oClasses;

      $.extend(oClasses, DataTable.ext.classes, oInit.oClasses);
      $this.addClass(oClasses.sTable);


      if (oSettings.iInitDisplayStart === undefined) {
        /* Display start point, taking into account the save saving */
        oSettings.iInitDisplayStart = oInit.iDisplayStart;
        oSettings._iDisplayStart = oInit.iDisplayStart;
      }

      if (oInit.iDeferLoading !== null) {
        oSettings.bDeferLoading = true;
        var tmp = $.isArray(oInit.iDeferLoading);
        oSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;
        oSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;
      }

      /* Language definitions */
      var oLanguage = oSettings.oLanguage;
      $.extend(true, oLanguage, oInit.oLanguage);

      if (oLanguage.sUrl) {
        /* Get the language definitions from a file - because this Ajax call makes the language
				 * get async to the remainder of this function we use bInitHandedOff to indicate that
				 * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor
				 */
        $.ajax({
          dataType: 'json',
          url: oLanguage.sUrl,
          success: function (json) {
            _fnLanguageCompat(json);
            _fnCamelToHungarian(defaults.oLanguage, json);
            $.extend(true, oLanguage, json);
            _fnInitialise(oSettings);
          },
          error: function () {
            // Error occurred loading language file, continue on as best we can
            _fnInitialise(oSettings);
          }
        });
        bInitHandedOff = true;
      }

      /*
			 * Stripes
			 */
      if (oInit.asStripeClasses === null) {
        oSettings.asStripeClasses = [
          oClasses.sStripeOdd,
          oClasses.sStripeEven
        ];
      }

      /* Remove row stripe classes if they are already on the table row */
      var stripeClasses = oSettings.asStripeClasses;
      var rowOne = $this.children('tbody').find('tr').eq(0);
      if ($.inArray(true, $.map(stripeClasses, function (el, i) {
          return rowOne.hasClass(el);
        })) !== -1) {
        $('tbody tr', this).removeClass(stripeClasses.join(' '));
        oSettings.asDestroyStripes = stripeClasses.slice();
      }

      /*
			 * Columns
			 * See if we should load columns automatically or use defined ones
			 */
      var anThs = [];
      var aoColumnsInit;
      var nThead = this.getElementsByTagName('thead');
      if (nThead.length !== 0) {
        _fnDetectHeader(oSettings.aoHeader, nThead[0]);
        anThs = _fnGetUniqueThs(oSettings);
      }

      /* If not given a column array, generate one with nulls */
      if (oInit.aoColumns === null) {
        aoColumnsInit = [];
        for (i = 0, iLen = anThs.length; i < iLen; i++) {
          aoColumnsInit.push(null);
        }
      }
      else {
        aoColumnsInit = oInit.aoColumns;
      }

      /* Add the columns */
      for (i = 0, iLen = aoColumnsInit.length; i < iLen; i++) {
        _fnAddColumn(oSettings, anThs ? anThs[i] : null);
      }

      /* Apply the column definitions */
      _fnApplyColumnDefs(oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {
        _fnColumnOptions(oSettings, iCol, oDef);
      });

      /* HTML5 attribute detection - build an mData object automatically if the
			 * attributes are found
			 */
      if (rowOne.length) {
        var a = function (cell, name) {
          return cell.getAttribute('data-' + name) !== null ? name : null;
        };

        $(rowOne[0]).children('th, td').each(function (i, cell) {
          var col = oSettings.aoColumns[i];

          if (col.mData === i) {
            var sort = a(cell, 'sort') || a(cell, 'order');
            var filter = a(cell, 'filter') || a(cell, 'search');

            if (sort !== null || filter !== null) {
              col.mData = {
                _: i + '.display',
                sort: sort !== null ? i + '.@data-' + sort : undefined,
                type: sort !== null ? i + '.@data-' + sort : undefined,
                filter: filter !== null ? i + '.@data-' + filter : undefined
              };

              _fnColumnOptions(oSettings, i);
            }
          }
        });
      }

      var features = oSettings.oFeatures;
      var loadedInit = function () {
        /*
				 * Sorting
				 * @todo For modularisation (1.11) this needs to do into a sort start up handler
				 */

        // If aaSorting is not defined, then we use the first indicator in asSorting
        // in case that has been altered, so the default sort reflects that option
        if (oInit.aaSorting === undefined) {
          var sorting = oSettings.aaSorting;
          for (i = 0, iLen = sorting.length; i < iLen; i++) {
            sorting[i][1] = oSettings.aoColumns[i].asSorting[0];
          }
        }

        /* Do a first pass on the sorting classes (allows any size changes to be taken into
				 * account, and also will apply sorting disabled classes if disabled
				 */
        _fnSortingClasses(oSettings);

        if (features.bSort) {
          _fnCallbackReg(oSettings, 'aoDrawCallback', function () {
            if (oSettings.bSorted) {
              var aSort = _fnSortFlatten(oSettings);
              var sortedColumns = {};

              $.each(aSort, function (i, val) {
                sortedColumns[val.src] = val.dir;
              });

              _fnCallbackFire(oSettings, null, 'order', [oSettings, aSort, sortedColumns]);
              _fnSortAria(oSettings);
            }
          });
        }

        _fnCallbackReg(oSettings, 'aoDrawCallback', function () {
          if (oSettings.bSorted || _fnDataSource(oSettings) === 'ssp' || features.bDeferRender) {
            _fnSortingClasses(oSettings);
          }
        }, 'sc');


        /*
				 * Final init
				 * Cache the header, body and footer as required, creating them if needed
				 */

        // Work around for Webkit bug 83867 - store the caption-side before removing from doc
        var captions = $this.children('caption').each(function () {
          this._captionSide = $(this).css('caption-side');
        });

        var thead = $this.children('thead');
        if (thead.length === 0) {
          thead = $('<thead/>').appendTo($this);
        }
        oSettings.nTHead = thead[0];

        var tbody = $this.children('tbody');
        if (tbody.length === 0) {
          tbody = $('<tbody/>').appendTo($this);
        }
        oSettings.nTBody = tbody[0];

        var tfoot = $this.children('tfoot');
        if (tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== "" || oSettings.oScroll.sY !== "")) {
          // If we are a scrolling table, and no footer has been given, then we need to create
          // a tfoot element for the caption element to be appended to
          tfoot = $('<tfoot/>').appendTo($this);
        }

        if (tfoot.length === 0 || tfoot.children().length === 0) {
          $this.addClass(oClasses.sNoFooter);
        }
        else if (tfoot.length > 0) {
          oSettings.nTFoot = tfoot[0];
          _fnDetectHeader(oSettings.aoFooter, oSettings.nTFoot);
        }

        /* Check if there is data passing into the constructor */
        if (oInit.aaData) {
          for (i = 0; i < oInit.aaData.length; i++) {
            _fnAddData(oSettings, oInit.aaData[i]);
          }
        }
        else if (oSettings.bDeferLoading || _fnDataSource(oSettings) == 'dom') {
          /* Grab the data from the page - only do this when deferred loading or no Ajax
					 * source since there is no point in reading the DOM data if we are then going
					 * to replace it with Ajax data
					 */
          _fnAddTr(oSettings, $(oSettings.nTBody).children('tr'));
        }

        /* Copy the data index array */
        oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();

        /* Initialisation complete - table can be drawn */
        oSettings.bInitialised = true;

        /* Check if we need to initialise the table (it might not have been handed off to the
				 * language processor)
				 */
        if (bInitHandedOff === false) {
          _fnInitialise(oSettings);
        }
      };

      /* Must be done after everything which can be overridden by the state saving! */
      if (oInit.bStateSave) {
        features.bStateSave = true;
        _fnCallbackReg(oSettings, 'aoDrawCallback', _fnSaveState, 'state_save');
        _fnLoadState(oSettings, oInit, loadedInit);
      }
      else {
        loadedInit();
      }

    });
    _that = null;
    return this;
  };


  /*
	 * It is useful to have variables which are scoped locally so only the
	 * DataTables functions can access them and they don't leak into global space.
	 * At the same time these functions are often useful over multiple files in the
	 * core and API, so we list, or at least document, all variables which are used
	 * by DataTables as private variables here. This also ensures that there is no
	 * clashing of variable names and that they can easily referenced for reuse.
	 */


  // Defined else where
  //  _selector_run
  //  _selector_opts
  //  _selector_first
  //  _selector_row_indexes

  var _ext; // DataTable.ext
  var _Api; // DataTable.Api
  var _api_register; // DataTable.Api.register
  var _api_registerPlural; // DataTable.Api.registerPlural

  var _re_dic = {};
  var _re_new_lines = /[\r\n]/g;
  var _re_html = /<.*?>/g;

  // This is not strict ISO8601 - Date.parse() is quite lax, although
  // implementations differ between browsers.
  var _re_date = /^\d{2,4}[\.\/\-]\d{1,2}[\.\/\-]\d{1,2}([T ]{1}\d{1,2}[:\.]\d{2}([\.:]\d{2})?)?$/;

  // Escape regular expression special characters
  var _re_escape_regex = new RegExp('(\\' + ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\', '$', '^', '-'].join('|\\') + ')', 'g');

  // http://en.wikipedia.org/wiki/Foreign_exchange_market
  // - \u20BD - Russian ruble.
  // - \u20a9 - South Korean Won
  // - \u20BA - Turkish Lira
  // - \u20B9 - Indian Rupee
  // - R - Brazil (R$) and South Africa
  // - fr - Swiss Franc
  // - kr - Swedish krona, Norwegian krone and Danish krone
  // - \u2009 is thin space and \u202F is narrow no-break space, both used in many
  //   standards as thousands separators.
  var _re_formatted_numeric = /[',$£€¥%\u2009\u202F\u20BD\u20a9\u20BArfk]/gi;


  var _empty = function (d) {
    return !d || d === true || d === '-' ? true : false;
  };


  var _intVal = function (s) {
    var integer = parseInt(s, 10);
    return !isNaN(integer) && isFinite(s) ? integer : null;
  };

  // Convert from a formatted number with characters other than `.` as the
  // decimal place, to a Javascript number
  var _numToDecimal = function (num, decimalPoint) {
    // Cache created regular expressions for speed as this function is called often
    if (!_re_dic[decimalPoint]) {
      _re_dic[decimalPoint] = new RegExp(_fnEscapeRegex(decimalPoint), 'g');
    }
    return typeof num === 'string' && decimalPoint !== '.' ?
      num.replace(/\./g, '').replace(_re_dic[decimalPoint], '.') :
      num;
  };


  var _isNumber = function (d, decimalPoint, formatted) {
    var strType = typeof d === 'string';

    // If empty return immediately so there must be a number if it is a
    // formatted string (this stops the string "k", or "kr", etc being detected
    // as a formatted number for currency
    if (_empty(d)) {
      return true;
    }

    if (decimalPoint && strType) {
      d = _numToDecimal(d, decimalPoint);
    }

    if (formatted && strType) {
      d = d.replace(_re_formatted_numeric, '');
    }

    return !isNaN(parseFloat(d)) && isFinite(d);
  };


  // A string without HTML in it can be considered to be HTML still
  var _isHtml = function (d) {
    return _empty(d) || typeof d === 'string';
  };


  var _htmlNumeric = function (d, decimalPoint, formatted) {
    if (_empty(d)) {
      return true;
    }

    var html = _isHtml(d);
    return !html ?
      null :
      _isNumber(_stripHtml(d), decimalPoint, formatted) ?
        true :
        null;
  };


  var _pluck = function (a, prop, prop2) {
    var out = [];
    var i = 0, ien = a.length;

    // Could have the test in the loop for slightly smaller code, but speed
    // is essential here
    if (prop2 !== undefined) {
      for (; i < ien; i++) {
        if (a[i] && a[i][prop]) {
          out.push(a[i][prop][prop2]);
        }
      }
    }
    else {
      for (; i < ien; i++) {
        if (a[i]) {
          out.push(a[i][prop]);
        }
      }
    }

    return out;
  };


  // Basically the same as _pluck, but rather than looping over `a` we use `order`
  // as the indexes to pick from `a`
  var _pluck_order = function (a, order, prop, prop2) {
    var out = [];
    var i = 0, ien = order.length;

    // Could have the test in the loop for slightly smaller code, but speed
    // is essential here
    if (prop2 !== undefined) {
      for (; i < ien; i++) {
        if (a[order[i]][prop]) {
          out.push(a[order[i]][prop][prop2]);
        }
      }
    }
    else {
      for (; i < ien; i++) {
        out.push(a[order[i]][prop]);
      }
    }

    return out;
  };


  var _range = function (len, start) {
    var out = [];
    var end;

    if (start === undefined) {
      start = 0;
      end = len;
    }
    else {
      end = start;
      start = len;
    }

    for (var i = start; i < end; i++) {
      out.push(i);
    }

    return out;
  };


  var _removeEmpty = function (a) {
    var out = [];

    for (var i = 0, ien = a.length; i < ien; i++) {
      if (a[i]) { // careful - will remove all falsy values!
        out.push(a[i]);
      }
    }

    return out;
  };


  var _stripHtml = function (d) {
    return d.replace(_re_html, '');
  };


  /**
   * Determine if all values in the array are unique. This means we can short
   * cut the _unique method at the cost of a single loop. A sorted array is used
   * to easily check the values.
   *
   * @param  {array} src Source array
   * @return {boolean} true if all unique, false otherwise
   * @ignore
   */
  var _areAllUnique = function (src) {
    if (src.length < 2) {
      return true;
    }

    var sorted = src.slice().sort();
    var last = sorted[0];

    for (var i = 1, ien = sorted.length; i < ien; i++) {
      if (sorted[i] === last) {
        return false;
      }

      last = sorted[i];
    }

    return true;
  };


  /**
   * Find the unique elements in a source array.
   *
   * @param  {array} src Source array
   * @return {array} Array of unique items
   * @ignore
   */
  var _unique = function (src) {
    if (_areAllUnique(src)) {
      return src.slice();
    }

    // A faster unique method is to use object keys to identify used values,
    // but this doesn't work with arrays or objects, which we must also
    // consider. See jsperf.com/compare-array-unique-versions/4 for more
    // information.
    var
      out = [],
      val,
      i, ien = src.length,
      j, k = 0;

    again: for (i = 0; i < ien; i++) {
      val = src[i];

      for (j = 0; j < k; j++) {
        if (out[j] === val) {
          continue again;
        }
      }

      out.push(val);
      k++;
    }

    return out;
  };


  /**
   * DataTables utility methods
   *
   * This namespace provides helper methods that DataTables uses internally to
   * create a DataTable, but which are not exclusively used only for DataTables.
   * These methods can be used by extension authors to save the duplication of
   * code.
   *
   *  @namespace
   */
  DataTable.util = {
    /**
     * Throttle the calls to a function. Arguments and context are maintained
     * for the throttled function.
     *
     * @param {function} fn Function to be called
     * @param {integer} freq Call frequency in mS
     * @return {function} Wrapped function
     */
    throttle: function (fn, freq) {
      var
        frequency = freq !== undefined ? freq : 200,
        last,
        timer;

      return function () {
        var
          that = this,
          now = +new Date(),
          args = arguments;

        if (last && now < last + frequency) {
          clearTimeout(timer);

          timer = setTimeout(function () {
            last = undefined;
            fn.apply(that, args);
          }, frequency);
        }
        else {
          last = now;
          fn.apply(that, args);
        }
      };
    },


    /**
     * Escape a string such that it can be used in a regular expression
     *
     *  @param {string} val string to escape
     *  @returns {string} escaped string
     */
    escapeRegex: function (val) {
      return val.replace(_re_escape_regex, '\\$1');
    }
  };


  /**
   * Create a mapping object that allows camel case parameters to be looked up
   * for their Hungarian counterparts. The mapping is stored in a private
   * parameter called `_hungarianMap` which can be accessed on the source object.
   *  @param {object} o
   *  @memberof DataTable#oApi
   */
  function _fnHungarianMap(o) {
    var
      hungarian = 'a aa ai ao as b fn i m o s ',
      match,
      newKey,
      map = {};

    $.each(o, function (key, val) {
      match = key.match(/^([^A-Z]+?)([A-Z])/);

      if (match && hungarian.indexOf(match[1] + ' ') !== -1) {
        newKey = key.replace(match[0], match[2].toLowerCase());
        map[newKey] = key;

        if (match[1] === 'o') {
          _fnHungarianMap(o[key]);
        }
      }
    });

    o._hungarianMap = map;
  }


  /**
   * Convert from camel case parameters to Hungarian, based on a Hungarian map
   * created by _fnHungarianMap.
   *  @param {object} src The model object which holds all parameters that can be
   *    mapped.
   *  @param {object} user The object to convert from camel case to Hungarian.
   *  @param {boolean} force When set to `true`, properties which already have a
   *    Hungarian value in the `user` object will be overwritten. Otherwise they
   *    won't be.
   *  @memberof DataTable#oApi
   */
  function _fnCamelToHungarian(src, user, force) {
    if (!src._hungarianMap) {
      _fnHungarianMap(src);
    }

    var hungarianKey;

    $.each(user, function (key, val) {
      hungarianKey = src._hungarianMap[key];

      if (hungarianKey !== undefined && (force || user[hungarianKey] === undefined)) {
        // For objects, we need to buzz down into the object to copy parameters
        if (hungarianKey.charAt(0) === 'o') {
          // Copy the camelCase options over to the hungarian
          if (!user[hungarianKey]) {
            user[hungarianKey] = {};
          }
          $.extend(true, user[hungarianKey], user[key]);

          _fnCamelToHungarian(src[hungarianKey], user[hungarianKey], force);
        }
        else {
          user[hungarianKey] = user[key];
        }
      }
    });
  }


  /**
   * Language compatibility - when certain options are given, and others aren't, we
   * need to duplicate the values over, in order to provide backwards compatibility
   * with older language files.
   *  @param {object} oSettings dataTables settings object
   *  @memberof DataTable#oApi
   */
  function _fnLanguageCompat(lang) {
    var defaults = DataTable.defaults.oLanguage;
    var zeroRecords = lang.sZeroRecords;

    /* Backwards compatibility - if there is no sEmptyTable given, then use the same as
		 * sZeroRecords - assuming that is given.
		 */
    if (!lang.sEmptyTable && zeroRecords &&
      defaults.sEmptyTable === "No data available in table") {
      _fnMap(lang, lang, 'sZeroRecords', 'sEmptyTable');
    }

    /* Likewise with loading records */
    if (!lang.sLoadingRecords && zeroRecords &&
      defaults.sLoadingRecords === "Loading...") {
      _fnMap(lang, lang, 'sZeroRecords', 'sLoadingRecords');
    }

    // Old parameter name of the thousands separator mapped onto the new
    if (lang.sInfoThousands) {
      lang.sThousands = lang.sInfoThousands;
    }

    var decimal = lang.sDecimal;
    if (decimal) {
      _addNumericSort(decimal);
    }
  }


  /**
   * Map one parameter onto another
   *  @param {object} o Object to map
   *  @param {*} knew The new parameter name
   *  @param {*} old The old parameter name
   */
  var _fnCompatMap = function (o, knew, old) {
    if (o[knew] !== undefined) {
      o[old] = o[knew];
    }
  };


  /**
   * Provide backwards compatibility for the main DT options. Note that the new
   * options are mapped onto the old parameters, so this is an external interface
   * change only.
   *  @param {object} init Object to map
   */
  function _fnCompatOpts(init) {
    _fnCompatMap(init, 'ordering', 'bSort');
    _fnCompatMap(init, 'orderMulti', 'bSortMulti');
    _fnCompatMap(init, 'orderClasses', 'bSortClasses');
    _fnCompatMap(init, 'orderCellsTop', 'bSortCellsTop');
    _fnCompatMap(init, 'order', 'aaSorting');
    _fnCompatMap(init, 'orderFixed', 'aaSortingFixed');
    _fnCompatMap(init, 'paging', 'bPaginate');
    _fnCompatMap(init, 'pagingType', 'sPaginationType');
    _fnCompatMap(init, 'pageLength', 'iDisplayLength');
    _fnCompatMap(init, 'searching', 'bFilter');

    // Boolean initialisation of x-scrolling
    if (typeof init.sScrollX === 'boolean') {
      init.sScrollX = init.sScrollX ? '100%' : '';
    }
    if (typeof init.scrollX === 'boolean') {
      init.scrollX = init.scrollX ? '100%' : '';
    }

    // Column search objects are in an array, so it needs to be converted
    // element by element
    var searchCols = init.aoSearchCols;

    if (searchCols) {
      for (var i = 0, ien = searchCols.length; i < ien; i++) {
        if (searchCols[i]) {
          _fnCamelToHungarian(DataTable.models.oSearch, searchCols[i]);
        }
      }
    }
  }


  /**
   * Provide backwards compatibility for column options. Note that the new options
   * are mapped onto the old parameters, so this is an external interface change
   * only.
   *  @param {object} init Object to map
   */
  function _fnCompatCols(init) {
    _fnCompatMap(init, 'orderable', 'bSortable');
    _fnCompatMap(init, 'orderData', 'aDataSort');
    _fnCompatMap(init, 'orderSequence', 'asSorting');
    _fnCompatMap(init, 'orderDataType', 'sortDataType');

    // orderData can be given as an integer
    var dataSort = init.aDataSort;
    if (typeof dataSort === 'number' && !$.isArray(dataSort)) {
      init.aDataSort = [dataSort];
    }
  }


  /**
   * Browser feature detection for capabilities, quirks
   *  @param {object} settings dataTables settings object
   *  @memberof DataTable#oApi
   */
  function _fnBrowserDetect(settings) {
    // We don't need to do this every time DataTables is constructed, the values
    // calculated are specific to the browser and OS configuration which we
    // don't expect to change between initialisations
    if (!DataTable.__browser) {
      var browser = {};
      DataTable.__browser = browser;

      // Scrolling feature / quirks detection
      var n = $('<div/>')
        .css({
          position: 'fixed',
          top: 0,
          left: $(window).scrollLeft() * -1, // allow for scrolling
          height: 1,
          width: 1,
          overflow: 'hidden'
        })
        .append(
          $('<div/>')
            .css({
              position: 'absolute',
              top: 1,
              left: 1,
              width: 100,
              overflow: 'scroll'
            })
            .append(
              $('<div/>')
                .css({
                  width: '100%',
                  height: 10
                })
            )
        )
        .appendTo('body');

      var outer = n.children();
      var inner = outer.children();

      // Numbers below, in order, are:
      // inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth
      //
      // IE6 XP:                           100 100 100  83
      // IE7 Vista:                        100 100 100  83
      // IE 8+ Windows:                     83  83 100  83
      // Evergreen Windows:                 83  83 100  83
      // Evergreen Mac with scrollbars:     85  85 100  85
      // Evergreen Mac without scrollbars: 100 100 100 100

      // Get scrollbar width
      browser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;

      // IE6/7 will oversize a width 100% element inside a scrolling element, to
      // include the width of the scrollbar, while other browsers ensure the inner
      // element is contained without forcing scrolling
      browser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;

      // In rtl text layout, some browsers (most, but not all) will place the
      // scrollbar on the left, rather than the right.
      browser.bScrollbarLeft = Math.round(inner.offset().left) !== 1;

      // IE8- don't provide height and width for getBoundingClientRect
      browser.bBounding = n[0].getBoundingClientRect().width ? true : false;

      n.remove();
    }

    $.extend(settings.oBrowser, DataTable.__browser);
    settings.oScroll.iBarWidth = DataTable.__browser.barWidth;
  }


  /**
   * Array.prototype reduce[Right] method, used for browsers which don't support
   * JS 1.6. Done this way to reduce code size, since we iterate either way
   *  @param {object} settings dataTables settings object
   *  @memberof DataTable#oApi
   */
  function _fnReduce(that, fn, init, start, end, inc) {
    var
      i = start,
      value,
      isSet = false;

    if (init !== undefined) {
      value = init;
      isSet = true;
    }

    while (i !== end) {
      if (!that.hasOwnProperty(i)) {
        continue;
      }

      value = isSet ?
        fn(value, that[i], i, that) :
        that[i];

      isSet = true;
      i += inc;
    }

    return value;
  }

  /**
   * Add a column to the list used for the table with default values
   *  @param {object} oSettings dataTables settings object
   *  @param {node} nTh The th element for this column
   *  @memberof DataTable#oApi
   */
  function _fnAddColumn(oSettings, nTh) {
    // Add column to aoColumns array
    var oDefaults = DataTable.defaults.column;
    var iCol = oSettings.aoColumns.length;
    var oCol = $.extend({}, DataTable.models.oColumn, oDefaults, {
      "nTh": nTh ? nTh : document.createElement('th'),
      "sTitle": oDefaults.sTitle ? oDefaults.sTitle : nTh ? nTh.innerHTML : '',
      "aDataSort": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],
      "mData": oDefaults.mData ? oDefaults.mData : iCol,
      idx: iCol
    });
    oSettings.aoColumns.push(oCol);

    // Add search object for column specific search. Note that the `searchCols[ iCol ]`
    // passed into extend can be undefined. This allows the user to give a default
    // with only some of the parameters defined, and also not give a default
    var searchCols = oSettings.aoPreSearchCols;
    searchCols[iCol] = $.extend({}, DataTable.models.oSearch, searchCols[iCol]);

    // Use the default column options function to initialise classes etc
    _fnColumnOptions(oSettings, iCol, $(nTh).data());
  }


  /**
   * Apply options for a column
   *  @param {object} oSettings dataTables settings object
   *  @param {int} iCol column index to consider
   *  @param {object} oOptions object with sType, bVisible and bSearchable etc
   *  @memberof DataTable#oApi
   */
  function _fnColumnOptions(oSettings, iCol, oOptions) {
    var oCol = oSettings.aoColumns[iCol];
    var oClasses = oSettings.oClasses;
    var th = $(oCol.nTh);

    // Try to get width information from the DOM. We can't get it from CSS
    // as we'd need to parse the CSS stylesheet. `width` option can override
    if (!oCol.sWidthOrig) {
      // Width attribute
      oCol.sWidthOrig = th.attr('width') || null;

      // Style attribute
      var t = (th.attr('style') || '').match(/width:\s*(\d+[pxem%]+)/);
      if (t) {
        oCol.sWidthOrig = t[1];
      }
    }

    /* User specified column options */
    if (oOptions !== undefined && oOptions !== null) {
      // Backwards compatibility
      _fnCompatCols(oOptions);

      // Map camel case parameters to their Hungarian counterparts
      _fnCamelToHungarian(DataTable.defaults.column, oOptions);

      /* Backwards compatibility for mDataProp */
      if (oOptions.mDataProp !== undefined && !oOptions.mData) {
        oOptions.mData = oOptions.mDataProp;
      }

      if (oOptions.sType) {
        oCol._sManualType = oOptions.sType;
      }

      // `class` is a reserved word in Javascript, so we need to provide
      // the ability to use a valid name for the camel case input
      if (oOptions.className && !oOptions.sClass) {
        oOptions.sClass = oOptions.className;
      }
      if (oOptions.sClass) {
        th.addClass(oOptions.sClass);
      }

      $.extend(oCol, oOptions);
      _fnMap(oCol, oOptions, "sWidth", "sWidthOrig");

      /* iDataSort to be applied (backwards compatibility), but aDataSort will take
			 * priority if defined
			 */
      if (oOptions.iDataSort !== undefined) {
        oCol.aDataSort = [oOptions.iDataSort];
      }
      _fnMap(oCol, oOptions, "aDataSort");
    }

    /* Cache the data get and set functions for speed */
    var mDataSrc = oCol.mData;
    var mData = _fnGetObjectDataFn(mDataSrc);
    var mRender = oCol.mRender ? _fnGetObjectDataFn(oCol.mRender) : null;

    var attrTest = function (src) {
      return typeof src === 'string' && src.indexOf('@') !== -1;
    };
    oCol._bAttrSrc = $.isPlainObject(mDataSrc) && (
      attrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)
    );
    oCol._setter = null;

    oCol.fnGetData = function (rowData, type, meta) {
      var innerData = mData(rowData, type, undefined, meta);

      return mRender && type ?
        mRender(innerData, type, rowData, meta) :
        innerData;
    };
    oCol.fnSetData = function (rowData, val, meta) {
      return _fnSetObjectDataFn(mDataSrc)(rowData, val, meta);
    };

    // Indicate if DataTables should read DOM data as an object or array
    // Used in _fnGetRowElements
    if (typeof mDataSrc !== 'number') {
      oSettings._rowReadObject = true;
    }

    /* Feature sorting overrides column specific when off */
    if (!oSettings.oFeatures.bSort) {
      oCol.bSortable = false;
      th.addClass(oClasses.sSortableNone); // Have to add class here as order event isn't called
    }

    /* Check that the class assignment is correct for sorting */
    var bAsc = $.inArray('asc', oCol.asSorting) !== -1;
    var bDesc = $.inArray('desc', oCol.asSorting) !== -1;
    if (!oCol.bSortable || (!bAsc && !bDesc)) {
      oCol.sSortingClass = oClasses.sSortableNone;
      oCol.sSortingClassJUI = "";
    }
    else if (bAsc && !bDesc) {
      oCol.sSortingClass = oClasses.sSortableAsc;
      oCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;
    }
    else if (!bAsc && bDesc) {
      oCol.sSortingClass = oClasses.sSortableDesc;
      oCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;
    }
    else {
      oCol.sSortingClass = oClasses.sSortable;
      oCol.sSortingClassJUI = oClasses.sSortJUI;
    }
  }


  /**
   * Adjust the table column widths for new data. Note: you would probably want to
   * do a redraw after calling this function!
   *  @param {object} settings dataTables settings object
   *  @memberof DataTable#oApi
   */
  function _fnAdjustColumnSizing(settings) {
    /* Not interested in doing column width calculation if auto-width is disabled */
    if (settings.oFeatures.bAutoWidth !== false) {
      var columns = settings.aoColumns;

      _fnCalculateColumnWidths(settings);
      for (var i = 0, iLen = columns.length; i < iLen; i++) {
        columns[i].nTh.style.width = columns[i].sWidth;
      }
    }

    var scroll = settings.oScroll;
    if (scroll.sY !== '' || scroll.sX !== '') {
      _fnScrollDraw(settings);
    }

    _fnCallbackFire(settings, null, 'column-sizing', [settings]);
  }


  /**
   * Covert the index of a visible column to the index in the data array (take account
   * of hidden columns)
   *  @param {object} oSettings dataTables settings object
   *  @param {int} iMatch Visible column index to lookup
   *  @returns {int} i the data index
   *  @memberof DataTable#oApi
   */
  function _fnVisibleToColumnIndex(oSettings, iMatch) {
    var aiVis = _fnGetColumns(oSettings, 'bVisible');

    return typeof aiVis[iMatch] === 'number' ?
      aiVis[iMatch] :
      null;
  }


  /**
   * Covert the index of an index in the data array and convert it to the visible
   *   column index (take account of hidden columns)
   *  @param {int} iMatch Column index to lookup
   *  @param {object} oSettings dataTables settings object
   *  @returns {int} i the data index
   *  @memberof DataTable#oApi
   */
  function _fnColumnIndexToVisible(oSettings, iMatch) {
    var aiVis = _fnGetColumns(oSettings, 'bVisible');
    var iPos = $.inArray(iMatch, aiVis);

    return iPos !== -1 ? iPos : null;
  }


  /**
   * Get the number of visible columns
   *  @param {object} oSettings dataTables settings object
   *  @returns {int} i the number of visible columns
   *  @memberof DataTable#oApi
   */
  function _fnVisbleColumns(oSettings) {
    var vis = 0;

    // No reduce in IE8, use a loop for now
    $.each(oSettings.aoColumns, function (i, col) {
      if (col.bVisible && $(col.nTh).css('display') !== 'none') {
        vis++;
      }
    });

    return vis;
  }


  /**
   * Get an array of column indexes that match a given property
   *  @param {object} oSettings dataTables settings object
   *  @param {string} sParam Parameter in aoColumns to look for - typically
   *    bVisible or bSearchable
   *  @returns {array} Array of indexes with matched properties
   *  @memberof DataTable#oApi
   */
  function _fnGetColumns(oSettings, sParam) {
    var a = [];

    $.map(oSettings.aoColumns, function (val, i) {
      if (val[sParam]) {
        a.push(i);
      }
    });

    return a;
  }


  /**
   * Calculate the 'type' of a column
   *  @param {object} settings dataTables settings object
   *  @memberof DataTable#oApi
   */
  function _fnColumnTypes(settings) {
    var columns = settings.aoColumns;
    var data = settings.aoData;
    var types = DataTable.ext.type.detect;
    var i, ien, j, jen, k, ken;
    var col, cell, detectedType, cache;

    // For each column, spin over the
    for (i = 0, ien = columns.length; i < ien; i++) {
      col = columns[i];
      cache = [];

      if (!col.sType && col._sManualType) {
        col.sType = col._sManualType;
      }
      else if (!col.sType) {
        for (j = 0, jen = types.length; j < jen; j++) {
          for (k = 0, ken = data.length; k < ken; k++) {
            // Use a cache array so we only need to get the type data
            // from the formatter once (when using multiple detectors)
            if (cache[k] === undefined) {
              cache[k] = _fnGetCellData(settings, k, i, 'type');
            }

            detectedType = types[j](cache[k], settings);

            // If null, then this type can't apply to this column, so
            // rather than testing all cells, break out. There is an
            // exception for the last type which is `html`. We need to
            // scan all rows since it is possible to mix string and HTML
            // types
            if (!detectedType && j !== types.length - 1) {
              break;
            }

            // Only a single match is needed for html type since it is
            // bottom of the pile and very similar to string
            if (detectedType === 'html') {
              break;
            }
          }

          // Type is valid for all data points in the column - use this
          // type
          if (detectedType) {
            col.sType = detectedType;
            break;
          }
        }

        // Fall back - if no type was detected, always use string
        if (!col.sType) {
          col.sType = 'string';
        }
      }
    }
  }


  /**
   * Take the column definitions and static columns arrays and calculate how
   * they relate to column indexes. The callback function will then apply the
   * definition found for a column to a suitable configuration object.
   *  @param {object} oSettings dataTables settings object
   *  @param {array} aoColDefs The aoColumnDefs array that is to be applied
   *  @param {array} aoCols The aoColumns array that defines columns individually
   *  @param {function} fn Callback function - takes two parameters, the calculated
   *    column index and the definition for that column.
   *  @memberof DataTable#oApi
   */
  function _fnApplyColumnDefs(oSettings, aoColDefs, aoCols, fn) {
    var i, iLen, j, jLen, k, kLen, def;
    var columns = oSettings.aoColumns;

    // Column definitions with aTargets
    if (aoColDefs) {
      /* Loop over the definitions array - loop in reverse so first instance has priority */
      for (i = aoColDefs.length - 1; i >= 0; i--) {
        def = aoColDefs[i];

        /* Each definition can target multiple columns, as it is an array */
        var aTargets = def.targets !== undefined ?
          def.targets :
          def.aTargets;

        if (!$.isArray(aTargets)) {
          aTargets = [aTargets];
        }

        for (j = 0, jLen = aTargets.length; j < jLen; j++) {
          if (typeof aTargets[j] === 'number' && aTargets[j] >= 0) {
            /* Add columns that we don't yet know about */
            while (columns.length <= aTargets[j]) {
              _fnAddColumn(oSettings);
            }

            /* Integer, basic index */
            fn(aTargets[j], def);
          }
          else if (typeof aTargets[j] === 'number' && aTargets[j] < 0) {
            /* Negative integer, right to left column counting */
            fn(columns.length + aTargets[j], def);
          }
          else if (typeof aTargets[j] === 'string') {
            /* Class name matching on TH element */
            for (k = 0, kLen = columns.length; k < kLen; k++) {
              if (aTargets[j] == "_all" ||
                $(columns[k].nTh).hasClass(aTargets[j])) {
                fn(k, def);
              }
            }
          }
        }
      }
    }

    // Statically defined columns array
    if (aoCols) {
      for (i = 0, iLen = aoCols.length; i < iLen; i++) {
        fn(i, aoCols[i]);
      }
    }
  }

  /**
   * Add a data array to the table, creating DOM node etc. This is the parallel to
   * _fnGatherData, but for adding rows from a Javascript source, rather than a
   * DOM source.
   *  @param {object} oSettings dataTables settings object
   *  @param {array} aData data array to be added
   *  @param {node} [nTr] TR element to add to the table - optional. If not given,
   *    DataTables will create a row automatically
   *  @param {array} [anTds] Array of TD|TH elements for the row - must be given
   *    if nTr is.
   *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed
   *  @memberof DataTable#oApi
   */
  function _fnAddData(oSettings, aDataIn, nTr, anTds) {
    /* Create the object for storing information about this new row */
    var iRow = oSettings.aoData.length;
    var oData = $.extend(true, {}, DataTable.models.oRow, {
      src: nTr ? 'dom' : 'data',
      idx: iRow
    });

    oData._aData = aDataIn;
    oSettings.aoData.push(oData);

    /* Create the cells */
    var nTd, sThisType;
    var columns = oSettings.aoColumns;

    // Invalidate the column types as the new data needs to be revalidated
    for (var i = 0, iLen = columns.length; i < iLen; i++) {
      columns[i].sType = null;
    }

    /* Add to the display array */
    oSettings.aiDisplayMaster.push(iRow);

    var id = oSettings.rowIdFn(aDataIn);
    if (id !== undefined) {
      oSettings.aIds[id] = oData;
    }

    /* Create the DOM information, or register it if already present */
    if (nTr || !oSettings.oFeatures.bDeferRender) {
      _fnCreateTr(oSettings, iRow, nTr, anTds);
    }

    return iRow;
  }


  /**
   * Add one or more TR elements to the table. Generally we'd expect to
   * use this for reading data from a DOM sourced table, but it could be
   * used for an TR element. Note that if a TR is given, it is used (i.e.
   * it is not cloned).
   *  @param {object} settings dataTables settings object
   *  @param {array|node|jQuery} trs The TR element(s) to add to the table
   *  @returns {array} Array of indexes for the added rows
   *  @memberof DataTable#oApi
   */
  function _fnAddTr(settings, trs) {
    var row;

    // Allow an individual node to be passed in
    if (!(trs instanceof $)) {
      trs = $(trs);
    }

    return trs.map(function (i, el) {
      row = _fnGetRowElements(settings, el);
      return _fnAddData(settings, row.data, el, row.cells);
    });
  }


  /**
   * Take a TR element and convert it to an index in aoData
   *  @param {object} oSettings dataTables settings object
   *  @param {node} n the TR element to find
   *  @returns {int} index if the node is found, null if not
   *  @memberof DataTable#oApi
   */
  function _fnNodeToDataIndex(oSettings, n) {
    return (n._DT_RowIndex !== undefined) ? n._DT_RowIndex : null;
  }


  /**
   * Take a TD element and convert it into a column data index (not the visible index)
   *  @param {object} oSettings dataTables settings object
   *  @param {int} iRow The row number the TD/TH can be found in
   *  @param {node} n The TD/TH element to find
   *  @returns {int} index if the node is found, -1 if not
   *  @memberof DataTable#oApi
   */
  function _fnNodeToColumnIndex(oSettings, iRow, n) {
    return $.inArray(n, oSettings.aoData[iRow].anCells);
  }


  /**
   * Get the data for a given cell from the internal cache, taking into account data mapping
   *  @param {object} settings dataTables settings object
   *  @param {int} rowIdx aoData row id
   *  @param {int} colIdx Column index
   *  @param {string} type data get type ('display', 'type' 'filter' 'sort')
   *  @returns {*} Cell data
   *  @memberof DataTable#oApi
   */
  function _fnGetCellData(settings, rowIdx, colIdx, type) {
    var draw = settings.iDraw;
    var col = settings.aoColumns[colIdx];
    var rowData = settings.aoData[rowIdx]._aData;
    var defaultContent = col.sDefaultContent;
    var cellData = col.fnGetData(rowData, type, {
      settings: settings,
      row: rowIdx,
      col: colIdx
    });

    if (cellData === undefined) {
      if (settings.iDrawError != draw && defaultContent === null) {
        _fnLog(settings, 0, "Requested unknown parameter " +
          (typeof col.mData == 'function' ? '{function}' : "'" + col.mData + "'") +
          " for row " + rowIdx + ", column " + colIdx, 4);
        settings.iDrawError = draw;
      }
      return defaultContent;
    }

    // When the data source is null and a specific data type is requested (i.e.
    // not the original data), we can use default column data
    if ((cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined) {
      cellData = defaultContent;
    }
    else if (typeof cellData === 'function') {
      // If the data source is a function, then we run it and use the return,
      // executing in the scope of the data object (for instances)
      return cellData.call(rowData);
    }

    if (cellData === null && type == 'display') {
      return '';
    }
    return cellData;
  }


  /**
   * Set the value for a specific cell, into the internal data cache
   *  @param {object} settings dataTables settings object
   *  @param {int} rowIdx aoData row id
   *  @param {int} colIdx Column index
   *  @param {*} val Value to set
   *  @memberof DataTable#oApi
   */
  function _fnSetCellData(settings, rowIdx, colIdx, val) {
    var col = settings.aoColumns[colIdx];
    var rowData = settings.aoData[rowIdx]._aData;

    col.fnSetData(rowData, val, {
      settings: settings,
      row: rowIdx,
      col: colIdx
    });
  }


  // Private variable that is used to match action syntax in the data property object
  var __reArray = /\[.*?\]$/;
  var __reFn = /\(\)$/;

  /**
   * Split string on periods, taking into account escaped periods
   * @param  {string} str String to split
   * @return {array} Split string
   */
  function _fnSplitObjNotation(str) {
    return $.map(str.match(/(\\.|[^\.])+/g) || [''], function (s) {
      return s.replace(/\\\./g, '.');
    });
  }


  /**
   * Return a function that can be used to get data from a source object, taking
   * into account the ability to use nested objects as a source
   *  @param {string|int|function} mSource The data source for the object
   *  @returns {function} Data get function
   *  @memberof DataTable#oApi
   */
  function _fnGetObjectDataFn(mSource) {
    if ($.isPlainObject(mSource)) {
      /* Build an object of get functions, and wrap them in a single call */
      var o = {};
      $.each(mSource, function (key, val) {
        if (val) {
          o[key] = _fnGetObjectDataFn(val);
        }
      });

      return function (data, type, row, meta) {
        var t = o[type] || o._;
        return t !== undefined ?
          t(data, type, row, meta) :
          data;
      };
    }
    else if (mSource === null) {
      /* Give an empty string for rendering / sorting etc */
      return function (data) { // type, row and meta also passed, but not used
        return data;
      };
    }
    else if (typeof mSource === 'function') {
      return function (data, type, row, meta) {
        return mSource(data, type, row, meta);
      };
    }
    else if (typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||
        mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1)) {
      /* If there is a . in the source string then the data source is in a
			 * nested object so we loop over the data for each level to get the next
			 * level down. On each loop we test for undefined, and if found immediately
			 * return. This allows entire objects to be missing and sDefaultContent to
			 * be used if defined, rather than throwing an error
			 */
      var fetchData = function (data, type, src) {
        var arrayNotation, funcNotation, out, innerSrc;

        if (src !== "") {
          var a = _fnSplitObjNotation(src);

          for (var i = 0, iLen = a.length; i < iLen; i++) {
            // Check if we are dealing with special notation
            arrayNotation = a[i].match(__reArray);
            funcNotation = a[i].match(__reFn);

            if (arrayNotation) {
              // Array notation
              a[i] = a[i].replace(__reArray, '');

              // Condition allows simply [] to be passed in
              if (a[i] !== "") {
                data = data[a[i]];
              }
              out = [];

              // Get the remainder of the nested object to get
              a.splice(0, i + 1);
              innerSrc = a.join('.');

              // Traverse each entry in the array getting the properties requested
              if ($.isArray(data)) {
                for (var j = 0, jLen = data.length; j < jLen; j++) {
                  out.push(fetchData(data[j], type, innerSrc));
                }
              }

              // If a string is given in between the array notation indicators, that
              // is used to join the strings together, otherwise an array is returned
              var join = arrayNotation[0].substring(1, arrayNotation[0].length - 1);
              data = (join === "") ? out : out.join(join);

              // The inner call to fetchData has already traversed through the remainder
              // of the source requested, so we exit from the loop
              break;
            }
            else if (funcNotation) {
              // Function call
              a[i] = a[i].replace(__reFn, '');
              data = data[a[i]]();
              continue;
            }

            if (data === null || data[a[i]] === undefined) {
              return undefined;
            }
            data = data[a[i]];
          }
        }

        return data;
      };

      return function (data, type) { // row and meta also passed, but not used
        return fetchData(data, type, mSource);
      };
    }
    else {
      /* Array or flat object mapping */
      return function (data, type) { // row and meta also passed, but not used
        return data[mSource];
      };
    }
  }


  /**
   * Return a function that can be used to set data from a source object, taking
   * into account the ability to use nested objects as a source
   *  @param {string|int|function} mSource The data source for the object
   *  @returns {function} Data set function
   *  @memberof DataTable#oApi
   */
  function _fnSetObjectDataFn(mSource) {
    if ($.isPlainObject(mSource)) {
      /* Unlike get, only the underscore (global) option is used for for
			 * setting data since we don't know the type here. This is why an object
			 * option is not documented for `mData` (which is read/write), but it is
			 * for `mRender` which is read only.
			 */
      return _fnSetObjectDataFn(mSource._);
    }
    else if (mSource === null) {
      /* Nothing to do when the data source is null */
      return function () {
      };
    }
    else if (typeof mSource === 'function') {
      return function (data, val, meta) {
        mSource(data, 'set', val, meta);
      };
    }
    else if (typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||
        mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1)) {
      /* Like the get, we need to get data from a nested object */
      var setData = function (data, val, src) {
        var a = _fnSplitObjNotation(src), b;
        var aLast = a[a.length - 1];
        var arrayNotation, funcNotation, o, innerSrc;

        for (var i = 0, iLen = a.length - 1; i < iLen; i++) {
          // Check if we are dealing with an array notation request
          arrayNotation = a[i].match(__reArray);
          funcNotation = a[i].match(__reFn);

          if (arrayNotation) {
            a[i] = a[i].replace(__reArray, '');
            data[a[i]] = [];

            // Get the remainder of the nested object to set so we can recurse
            b = a.slice();
            b.splice(0, i + 1);
            innerSrc = b.join('.');

            // Traverse each entry in the array setting the properties requested
            if ($.isArray(val)) {
              for (var j = 0, jLen = val.length; j < jLen; j++) {
                o = {};
                setData(o, val[j], innerSrc);
                data[a[i]].push(o);
              }
            }
            else {
              // We've been asked to save data to an array, but it
              // isn't array data to be saved. Best that can be done
              // is to just save the value.
              data[a[i]] = val;
            }

            // The inner call to setData has already traversed through the remainder
            // of the source and has set the data, thus we can exit here
            return;
          }
          else if (funcNotation) {
            // Function call
            a[i] = a[i].replace(__reFn, '');
            data = data[a[i]](val);
          }

          // If the nested object doesn't currently exist - since we are
          // trying to set the value - create it
          if (data[a[i]] === null || data[a[i]] === undefined) {
            data[a[i]] = {};
          }
          data = data[a[i]];
        }

        // Last item in the input - i.e, the actual set
        if (aLast.match(__reFn)) {
          // Function call
          data = data[aLast.replace(__reFn, '')](val);
        }
        else {
          // If array notation is used, we just want to strip it and use the property name
          // and assign the value. If it isn't used, then we get the result we want anyway
          data[aLast.replace(__reArray, '')] = val;
        }
      };

      return function (data, val) { // meta is also passed in, but not used
        return setData(data, val, mSource);
      };
    }
    else {
      /* Array or flat object mapping */
      return function (data, val) { // meta is also passed in, but not used
        data[mSource] = val;
      };
    }
  }


  /**
   * Return an array with the full table data
   *  @param {object} oSettings dataTables settings object
   *  @returns array {array} aData Master data array
   *  @memberof DataTable#oApi
   */
  function _fnGetDataMaster(settings) {
    return _pluck(settings.aoData, '_aData');
  }


  /**
   * Nuke the table
   *  @param {object} oSettings dataTables settings object
   *  @memberof DataTable#oApi
   */
  function _fnClearTable(settings) {
    settings.aoData.length = 0;
    settings.aiDisplayMaster.length = 0;
    settings.aiDisplay.length = 0;
    settings.aIds = {};
  }


  /**
   * Take an array of integers (index array) and remove a target integer (value - not
   * the key!)
   *  @param {array} a Index array to target
   *  @param {int} iTarget value to find
   *  @memberof DataTable#oApi
   */
  function _fnDeleteIndex(a, iTarget, splice) {
    var iTargetIndex = -1;

    for (var i = 0, iLen = a.length; i < iLen; i++) {
      if (a[i] == iTarget) {
        iTargetIndex = i;
      }
      else if (a[i] > iTarget) {
        a[i]--;
      }
    }

    if (iTargetIndex != -1 && splice === undefined) {
      a.splice(iTargetIndex, 1);
    }
  }


  /**
   * Mark cached data as invalid such that a re-read of the data will occur when
   * the cached data is next requested. Also update from the data source object.
   *
   * @param {object} settings DataTables settings object
   * @param {int}    rowIdx   Row index to invalidate
   * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'
   *     or 'data'
   * @param {int}    [colIdx] Column index to invalidate. If undefined the whole
   *     row will be invalidated
   * @memberof DataTable#oApi
   *
   * @todo For the modularisation of v1.11 this will need to become a callback, so
   *   the sort and filter methods can subscribe to it. That will required
   *   initialisation options for sorting, which is why it is not already baked in
   */
  function _fnInvalidate(settings, rowIdx, src, colIdx) {
    var row = settings.aoData[rowIdx];
    var i, ien;
    var cellWrite = function (cell, col) {
      // This is very frustrating, but in IE if you just write directly
      // to innerHTML, and elements that are overwritten are GC'ed,
      // even if there is a reference to them elsewhere
      while (cell.childNodes.length) {
        cell.removeChild(cell.firstChild);
      }

      cell.innerHTML = _fnGetCellData(settings, rowIdx, col, 'display');
    };

    // Are we reading last data from DOM or the data object?
    if (src === 'dom' || ((!src || src === 'auto') && row.src === 'dom')) {
      // Read the data from the DOM
      row._aData = _fnGetRowElements(
        settings, row, colIdx, colIdx === undefined ? undefined : row._aData
      )
        .data;
    }
    else {
      // Reading from data object, update the DOM
      var cells = row.anCells;

      if (cells) {
        if (colIdx !== undefined) {
          cellWrite(cells[colIdx], colIdx);
        }
        else {
          for (i = 0, ien = cells.length; i < ien; i++) {
            cellWrite(cells[i], i);
          }
        }
      }
    }

    // For both row and cell invalidation, the cached data for sorting and
    // filtering is nulled out
    row._aSortData = null;
    row._aFilterData = null;

    // Invalidate the type for a specific column (if given) or all columns since
    // the data might have changed
    var cols = settings.aoColumns;
    if (colIdx !== undefined) {
      cols[colIdx].sType = null;
    }
    else {
      for (i = 0, ien = cols.length; i < ien; i++) {
        cols[i].sType = null;
      }

      // Update DataTables special `DT_*` attributes for the row
      _fnRowAttributes(settings, row);
    }
  }


  /**
   * Build a data source object from an HTML row, reading the contents of the
   * cells that are in the row.
   *
   * @param {object} settings DataTables settings object
   * @param {node|object} TR element from which to read data or existing row
   *   object from which to re-read the data from the cells
   * @param {int} [colIdx] Optional column index
   * @param {array|object} [d] Data source object. If `colIdx` is given then this
   *   parameter should also be given and will be used to write the data into.
   *   Only the column in question will be written
   * @returns {object} Object with two parameters: `data` the data read, in
   *   document order, and `cells` and array of nodes (they can be useful to the
   *   caller, so rather than needing a second traversal to get them, just return
   *   them from here).
   * @memberof DataTable#oApi
   */
  function _fnGetRowElements(settings, row, colIdx, d) {
    var
      tds = [],
      td = row.firstChild,
      name, col, o, i = 0, contents,
      columns = settings.aoColumns,
      objectRead = settings._rowReadObject;

    // Allow the data object to be passed in, or construct
    d = d !== undefined ?
      d :
      objectRead ?
        {} :
        [];

    var attr = function (str, td) {
      if (typeof str === 'string') {
        var idx = str.indexOf('@');

        if (idx !== -1) {
          var attr = str.substring(idx + 1);
          var setter = _fnSetObjectDataFn(str);
          setter(d, td.getAttribute(attr));
        }
      }
    };

    // Read data from a cell and store into the data object
    var cellProcess = function (cell) {
      if (colIdx === undefined || colIdx === i) {
        col = columns[i];
        contents = $.trim(cell.innerHTML);

        if (col && col._bAttrSrc) {
          var setter = _fnSetObjectDataFn(col.mData._);
          setter(d, contents);

          attr(col.mData.sort, cell);
          attr(col.mData.type, cell);
          attr(col.mData.filter, cell);
        }
        else {
          // Depending on the `data` option for the columns the data can
          // be read to either an object or an array.
          if (objectRead) {
            if (!col._setter) {
              // Cache the setter function
              col._setter = _fnSetObjectDataFn(col.mData);
            }
            col._setter(d, contents);
          }
          else {
            d[i] = contents;
          }
        }
      }

      i++;
    };

    if (td) {
      // `tr` element was passed in
      while (td) {
        name = td.nodeName.toUpperCase();

        if (name == "TD" || name == "TH") {
          cellProcess(td);
          tds.push(td);
        }

        td = td.nextSibling;
      }
    }
    else {
      // Existing row object passed in
      tds = row.anCells;

      for (var j = 0, jen = tds.length; j < jen; j++) {
        cellProcess(tds[j]);
      }
    }

    // Read the ID from the DOM if present
    var rowNode = row.firstChild ? row : row.nTr;

    if (rowNode) {
      var id = rowNode.getAttribute('id');

      if (id) {
        _fnSetObjectDataFn(settings.rowId)(d, id);
      }
    }

    return {
      data: d,
      cells: tds
    };
  }

  /**
   * Create a new TR element (and it's TD children) for a row
   *  @param {object} oSettings dataTables settings object
   *  @param {int} iRow Row to consider
   *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,
   *    DataTables will create a row automatically
   *  @param {array} [anTds] Array of TD|TH elements for the row - must be given
   *    if nTr is.
   *  @memberof DataTable#oApi
   */
  function _fnCreateTr(oSettings, iRow, nTrIn, anTds) {
    var
      row = oSettings.aoData[iRow],
      rowData = row._aData,
      cells = [],
      nTr, nTd, oCol,
      i, iLen;

    if (row.nTr === null) {
      nTr = nTrIn || document.createElement('tr');

      row.nTr = nTr;
      row.anCells = cells;

      /* Use a private property on the node to allow reserve mapping from the node
			 * to the aoData array for fast look up
			 */
      nTr._DT_RowIndex = iRow;

      /* Special parameters can be given by the data source to be used on the row */
      _fnRowAttributes(oSettings, row);

      /* Process each column */
      for (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {
        oCol = oSettings.aoColumns[i];

        nTd = nTrIn ? anTds[i] : document.createElement(oCol.sCellType);
        nTd._DT_CellIndex = {
          row: iRow,
          column: i
        };

        cells.push(nTd);

        // Need to create the HTML if new, or if a rendering function is defined
        if ((!nTrIn || oCol.mRender || oCol.mData !== i) &&
          (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i + '.display')
        ) {
          nTd.innerHTML = _fnGetCellData(oSettings, iRow, i, 'display');
        }

        /* Add user defined class */
        if (oCol.sClass) {
          nTd.className += ' ' + oCol.sClass;
        }

        // Visibility - add or remove as required
        if (oCol.bVisible && !nTrIn) {
          nTr.appendChild(nTd);
        }
        else if (!oCol.bVisible && nTrIn) {
          nTd.parentNode.removeChild(nTd);
        }

        if (oCol.fnCreatedCell) {
          oCol.fnCreatedCell.call(oSettings.oInstance,
            nTd, _fnGetCellData(oSettings, iRow, i), rowData, iRow, i
          );
        }
      }

      _fnCallbackFire(oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow]);
    }

    // Remove once webkit bug 131819 and Chromium bug 365619 have been resolved
    // and deployed
    row.nTr.setAttribute('role', 'row');
  }


  /**
   * Add attributes to a row based on the special `DT_*` parameters in a data
   * source object.
   *  @param {object} settings DataTables settings object
   *  @param {object} DataTables row object for the row to be modified
   *  @memberof DataTable#oApi
   */
  function _fnRowAttributes(settings, row) {
    var tr = row.nTr;
    var data = row._aData;

    if (tr) {
      var id = settings.rowIdFn(data);

      if (id) {
        tr.id = id;
      }

      if (data.DT_RowClass) {
        // Remove any classes added by DT_RowClass before
        var a = data.DT_RowClass.split(' ');
        row.__rowc = row.__rowc ?
          _unique(row.__rowc.concat(a)) :
          a;

        $(tr)
          .removeClass(row.__rowc.join(' '))
          .addClass(data.DT_RowClass);
      }

      if (data.DT_RowAttr) {
        $(tr).attr(data.DT_RowAttr);
      }

      if (data.DT_RowData) {
        $(tr).data(data.DT_RowData);
      }
    }
  }


  /**
   * Create the HTML header for the table
   *  @param {object} oSettings dataTables settings object
   *  @memberof DataTable#oApi
   */
  function _fnBuildHead(oSettings) {
    var i, ien, cell, row, column;
    var thead = oSettings.nTHead;
    var tfoot = oSettings.nTFoot;
    var createHeader = $('th, td', thead).length === 0;
    var classes = oSettings.oClasses;
    var columns = oSettings.aoColumns;

    if (createHeader) {
      row = $('<tr/>').appendTo(thead);
    }

    for (i = 0, ien = columns.length; i < ien; i++) {
      column = columns[i];
      cell = $(column.nTh).addClass(column.sClass);

      if (createHeader) {
        cell.appendTo(row);
      }

      // 1.11 move into sorting
      if (oSettings.oFeatures.bSort) {
        cell.addClass(column.sSortingClass);

        if (column.bSortable !== false) {
          cell
            .attr('tabindex', oSettings.iTabIndex)
            .attr('aria-controls', oSettings.sTableId);

          _fnSortAttachListener(oSettings, column.nTh, i);
        }
      }

      if (column.sTitle != cell[0].innerHTML) {
        cell.html(column.sTitle);
      }

      _fnRenderer(oSettings, 'header')(
        oSettings, cell, column, classes
      );
    }

    if (createHeader) {
      _fnDetectHeader(oSettings.aoHeader, thead);
    }

    /* ARIA role for the rows */
    $(thead).find('>tr').attr('role', 'row');

    /* Deal with the footer - add classes if required */
    $(thead).find('>tr>th, >tr>td').addClass(classes.sHeaderTH);
    $(tfoot).find('>tr>th, >tr>td').addClass(classes.sFooterTH);

    // Cache the footer cells. Note that we only take the cells from the first
    // row in the footer. If there is more than one row the user wants to
    // interact with, they need to use the table().foot() method. Note also this
    // allows cells to be used for multiple columns using colspan
    if (tfoot !== null) {
      var cells = oSettings.aoFooter[0];

      for (i = 0, ien = cells.length; i < ien; i++) {
        column = columns[i];
        column.nTf = cells[i].cell;

        if (column.sClass) {
          $(column.nTf).addClass(column.sClass);
        }
      }
    }
  }


  /**
   * Draw the header (or footer) element based on the column visibility states. The
   * methodology here is to use the layout array from _fnDetectHeader, modified for
   * the instantaneous column visibility, to construct the new layout. The grid is
   * traversed over cell at a time in a rows x columns grid fashion, although each
   * cell insert can cover multiple elements in the grid - which is tracks using the
   * aApplied array. Cell inserts in the grid will only occur where there isn't
   * already a cell in that position.
   *  @param {object} oSettings dataTables settings object
   *  @param array {objects} aoSource Layout array from _fnDetectHeader
   *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,
   *  @memberof DataTable#oApi
   */
  function _fnDrawHead(oSettings, aoSource, bIncludeHidden) {
    var i, iLen, j, jLen, k, kLen, n, nLocalTr;
    var aoLocal = [];
    var aApplied = [];
    var iColumns = oSettings.aoColumns.length;
    var iRowspan, iColspan;

    if (!aoSource) {
      return;
    }

    if (bIncludeHidden === undefined) {
      bIncludeHidden = false;
    }

    /* Make a copy of the master layout array, but without the visible columns in it */
    for (i = 0, iLen = aoSource.length; i < iLen; i++) {
      aoLocal[i] = aoSource[i].slice();
      aoLocal[i].nTr = aoSource[i].nTr;

      /* Remove any columns which are currently hidden */
      for (j = iColumns - 1; j >= 0; j--) {
        if (!oSettings.aoColumns[j].bVisible && !bIncludeHidden) {
          aoLocal[i].splice(j, 1);
        }
      }

      /* Prep the applied array - it needs an element for each row */
      aApplied.push([]);
    }

    for (i = 0, iLen = aoLocal.length; i < iLen; i++) {
      nLocalTr = aoLocal[i].nTr;

      /* All cells are going to be replaced, so empty out the row */
      if (nLocalTr) {
        while ((n = nLocalTr.firstChild)) {
          nLocalTr.removeChild(n);
        }
      }

      for (j = 0, jLen = aoLocal[i].length; j < jLen; j++) {
        iRowspan = 1;
        iColspan = 1;

        /* Check to see if there is already a cell (row/colspan) covering our target
				 * insert point. If there is, then there is nothing to do.
				 */
        if (aApplied[i][j] === undefined) {
          nLocalTr.appendChild(aoLocal[i][j].cell);
          aApplied[i][j] = 1;

          /* Expand the cell to cover as many rows as needed */
          while (aoLocal[i + iRowspan] !== undefined &&
          aoLocal[i][j].cell == aoLocal[i + iRowspan][j].cell) {
            aApplied[i + iRowspan][j] = 1;
            iRowspan++;
          }

          /* Expand the cell to cover as many columns as needed */
          while (aoLocal[i][j + iColspan] !== undefined &&
          aoLocal[i][j].cell == aoLocal[i][j + iColspan].cell) {
            /* Must update the applied array over the rows for the columns */
            for (k = 0; k < iRowspan; k++) {
              aApplied[i + k][j + iColspan] = 1;
            }
            iColspan++;
          }

          /* Do the actual expansion in the DOM */
          $(aoLocal[i][j].cell)
            .attr('rowspan', iRowspan)
            .attr('colspan', iColspan);
        }
      }
    }
  }


  /**
   * Insert the required TR nodes into the table for display
   *  @param {object} oSettings dataTables settings object
   *  @memberof DataTable#oApi
   */
  function _fnDraw(oSettings) {
    /* Provide a pre-callback function which can be used to cancel the draw is false is returned */
    var aPreDraw = _fnCallbackFire(oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings]);
    if ($.inArray(false, aPreDraw) !== -1) {
      _fnProcessingDisplay(oSettings, false);
      return;
    }

    var i, iLen, n;
    var anRows = [];
    var iRowCount = 0;
    var asStripeClasses = oSettings.asStripeClasses;
    var iStripes = asStripeClasses.length;
    var iOpenRows = oSettings.aoOpenRows.length;
    var oLang = oSettings.oLanguage;
    var iInitDisplayStart = oSettings.iInitDisplayStart;
    var bServerSide = _fnDataSource(oSettings) == 'ssp';
    var aiDisplay = oSettings.aiDisplay;

    oSettings.bDrawing = true;

    /* Check and see if we have an initial draw position from state saving */
    if (iInitDisplayStart !== undefined && iInitDisplayStart !== -1) {
      oSettings._iDisplayStart = bServerSide ?
        iInitDisplayStart :
        iInitDisplayStart >= oSettings.fnRecordsDisplay() ?
          0 :
          iInitDisplayStart;

      oSettings.iInitDisplayStart = -1;
    }

    var iDisplayStart = oSettings._iDisplayStart;
    var iDisplayEnd = oSettings.fnDisplayEnd();

    /* Server-side processing draw intercept */
    if (oSettings.bDeferLoading) {
      oSettings.bDeferLoading = false;
      oSettings.iDraw++;
      _fnProcessingDisplay(oSettings, false);
    }
    else if (!bServerSide) {
      oSettings.iDraw++;
    }
    else if (!oSettings.bDestroying && !_fnAjaxUpdate(oSettings)) {
      return;
    }

    if (aiDisplay.length !== 0) {
      var iStart = bServerSide ? 0 : iDisplayStart;
      var iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;

      for (var j = iStart; j < iEnd; j++) {
        var iDataIndex = aiDisplay[j];
        var aoData = oSettings.aoData[iDataIndex];
        if (aoData.nTr === null) {
          _fnCreateTr(oSettings, iDataIndex);
        }

        var nRow = aoData.nTr;

        /* Remove the old striping classes and then add the new one */
        if (iStripes !== 0) {
          var sStripe = asStripeClasses[iRowCount % iStripes];
          if (aoData._sRowStripe != sStripe) {
            $(nRow).removeClass(aoData._sRowStripe).addClass(sStripe);
            aoData._sRowStripe = sStripe;
          }
        }

        // Row callback functions - might want to manipulate the row
        // iRowCount and j are not currently documented. Are they at all
        // useful?
        _fnCallbackFire(oSettings, 'aoRowCallback', null,
          [nRow, aoData._aData, iRowCount, j]);

        anRows.push(nRow);
        iRowCount++;
      }
    }
    else {
      /* Table is empty - create a row with an empty message in it */
      var sZero = oLang.sZeroRecords;
      if (oSettings.iDraw == 1 && _fnDataSource(oSettings) == 'ajax') {
        sZero = oLang.sLoadingRecords;
      }
      else if (oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0) {
        sZero = oLang.sEmptyTable;
      }

      anRows[0] = $('<tr/>', {'class': iStripes ? asStripeClasses[0] : ''})
        .append($('<td />', {
          'valign': 'top',
          'colSpan': _fnVisbleColumns(oSettings),
          'class': oSettings.oClasses.sRowEmpty
        }).html(sZero))[0];
    }

    /* Header and footer callbacks */
    _fnCallbackFire(oSettings, 'aoHeaderCallback', 'header', [$(oSettings.nTHead).children('tr')[0],
      _fnGetDataMaster(oSettings), iDisplayStart, iDisplayEnd, aiDisplay]);

    _fnCallbackFire(oSettings, 'aoFooterCallback', 'footer', [$(oSettings.nTFoot).children('tr')[0],
      _fnGetDataMaster(oSettings), iDisplayStart, iDisplayEnd, aiDisplay]);

    var body = $(oSettings.nTBody);

    body.children().detach();
    body.append($(anRows));

    /* Call all required callback functions for the end of a draw */
    _fnCallbackFire(oSettings, 'aoDrawCallback', 'draw', [oSettings]);

    /* Draw is complete, sorting and filtering must be as well */
    oSettings.bSorted = false;
    oSettings.bFiltered = false;
    oSettings.bDrawing = false;
  }


  /**
   * Redraw the table - taking account of the various features which are enabled
   *  @param {object} oSettings dataTables settings object
   *  @param {boolean} [holdPosition] Keep the current paging position. By default
   *    the paging is reset to the first page
   *  @memberof DataTable#oApi
   */
  function _fnReDraw(settings, holdPosition) {
    var
      features = settings.oFeatures,
      sort = features.bSort,
      filter = features.bFilter;

    if (sort) {
      _fnSort(settings);
    }

    if (filter) {
      _fnFilterComplete(settings, settings.oPreviousSearch);
    }
    else {
      // No filtering, so we want to just use the display master
      settings.aiDisplay = settings.aiDisplayMaster.slice();
    }

    if (holdPosition !== true) {
      settings._iDisplayStart = 0;
    }

    // Let any modules know about the draw hold position state (used by
    // scrolling internally)
    settings._drawHold = holdPosition;

    _fnDraw(settings);

    settings._drawHold = false;
  }


  /**
   * Add the options to the page HTML for the table
   *  @param {object} oSettings dataTables settings object
   *  @memberof DataTable#oApi
   */
  function _fnAddOptionsHtml(oSettings) {
    var classes = oSettings.oClasses;
    var table = $(oSettings.nTable);
    var holding = $('<div/>').insertBefore(table); // Holding element for speed
    var features = oSettings.oFeatures;

    // All DataTables are wrapped in a div
    var insert = $('<div/>', {
      id: oSettings.sTableId + '_wrapper',
      'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' ' + classes.sNoFooter)
    });

    oSettings.nHolding = holding[0];
    oSettings.nTableWrapper = insert[0];
    oSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;

    /* Loop over the user set positioning and place the elements as needed */
    var aDom = oSettings.sDom.split('');
    var featureNode, cOption, nNewNode, cNext, sAttr, j;
    for (var i = 0; i < aDom.length; i++) {
      featureNode = null;
      cOption = aDom[i];

      if (cOption == '<') {
        /* New container div */
        nNewNode = $('<div/>')[0];

        /* Check to see if we should append an id and/or a class name to the container */
        cNext = aDom[i + 1];
        if (cNext == "'" || cNext == '"') {
          sAttr = "";
          j = 2;
          while (aDom[i + j] != cNext) {
            sAttr += aDom[i + j];
            j++;
          }

          /* Replace jQuery UI constants @todo depreciated */
          if (sAttr == "H") {
            sAttr = classes.sJUIHeader;
          }
          else if (sAttr == "F") {
            sAttr = classes.sJUIFooter;
          }

          /* The attribute can be in the format of "#id.class", "#id" or "class" This logic
					 * breaks the string into parts and applies them as needed
					 */
          if (sAttr.indexOf('.') != -1) {
            var aSplit = sAttr.split('.');
            nNewNode.id = aSplit[0].substr(1, aSplit[0].length - 1);
            nNewNode.className = aSplit[1];
          }
          else if (sAttr.charAt(0) == "#") {
            nNewNode.id = sAttr.substr(1, sAttr.length - 1);
          }
          else {
            nNewNode.className = sAttr;
          }

          i += j;
          /* Move along the position array */
        }

        insert.append(nNewNode);
        insert = $(nNewNode);
      }
      else if (cOption == '>') {
        /* End container div */
        insert = insert.parent();
      }
      // @todo Move options into their own plugins?
      else if (cOption == 'l' && features.bPaginate && features.bLengthChange) {
        /* Length */
        featureNode = _fnFeatureHtmlLength(oSettings);
      }
      else if (cOption == 'f' && features.bFilter) {
        /* Filter */
        featureNode = _fnFeatureHtmlFilter(oSettings);
      }
      else if (cOption == 'r' && features.bProcessing) {
        /* pRocessing */
        featureNode = _fnFeatureHtmlProcessing(oSettings);
      }
      else if (cOption == 't') {
        /* Table */
        featureNode = _fnFeatureHtmlTable(oSettings);
      }
      else if (cOption == 'i' && features.bInfo) {
        /* Info */
        featureNode = _fnFeatureHtmlInfo(oSettings);
      }
      else if (cOption == 'p' && features.bPaginate) {
        /* Pagination */
        featureNode = _fnFeatureHtmlPaginate(oSettings);
      }
      else if (DataTable.ext.feature.length !== 0) {
        /* Plug-in features */
        var aoFeatures = DataTable.ext.feature;
        for (var k = 0, kLen = aoFeatures.length; k < kLen; k++) {
          if (cOption == aoFeatures[k].cFeature) {
            featureNode = aoFeatures[k].fnInit(oSettings);
            break;
          }
        }
      }

      /* Add to the 2D features array */
      if (featureNode) {
        var aanFeatures = oSettings.aanFeatures;

        if (!aanFeatures[cOption]) {
          aanFeatures[cOption] = [];
        }

        aanFeatures[cOption].push(featureNode);
        insert.append(featureNode);
      }
    }

    /* Built our DOM structure - replace the holding div with what we want */
    holding.replaceWith(insert);
    oSettings.nHolding = null;
  }


  /**
   * Use the DOM source to create up an array of header cells. The idea here is to
   * create a layout grid (array) of rows x columns, which contains a reference
   * to the cell that that point in the grid (regardless of col/rowspan), such that
   * any column / row could be removed and the new grid constructed
   *  @param array {object} aLayout Array to store the calculated layout in
   *  @param {node} nThead The header/footer element for the table
   *  @memberof DataTable#oApi
   */
  function _fnDetectHeader(aLayout, nThead) {
    var nTrs = $(nThead).children('tr');
    var nTr, nCell;
    var i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;
    var bUnique;
    var fnShiftCol = function (a, i, j) {
      var k = a[i];
      while (k[j]) {
        j++;
      }
      return j;
    };

    aLayout.splice(0, aLayout.length);

    /* We know how many rows there are in the layout - so prep it */
    for (i = 0, iLen = nTrs.length; i < iLen; i++) {
      aLayout.push([]);
    }

    /* Calculate a layout array */
    for (i = 0, iLen = nTrs.length; i < iLen; i++) {
      nTr = nTrs[i];
      iColumn = 0;

      /* For every cell in the row... */
      nCell = nTr.firstChild;
      while (nCell) {
        if (nCell.nodeName.toUpperCase() == "TD" ||
          nCell.nodeName.toUpperCase() == "TH") {
          /* Get the col and rowspan attributes from the DOM and sanitise them */
          iColspan = nCell.getAttribute('colspan') * 1;
          iRowspan = nCell.getAttribute('rowspan') * 1;
          iColspan = (!iColspan || iColspan === 0 || iColspan === 1) ? 1 : iColspan;
          iRowspan = (!iRowspan || iRowspan === 0 || iRowspan === 1) ? 1 : iRowspan;

          /* There might be colspan cells already in this row, so shift our target
					 * accordingly
					 */
          iColShifted = fnShiftCol(aLayout, i, iColumn);

          /* Cache calculation for unique columns */
          bUnique = iColspan === 1 ? true : false;

          /* If there is col / rowspan, copy the information into the layout grid */
          for (l = 0; l < iColspan; l++) {
            for (k = 0; k < iRowspan; k++) {
              aLayout[i + k][iColShifted + l] = {
                "cell": nCell,
                "unique": bUnique
              };
              aLayout[i + k].nTr = nTr;
            }
          }
        }
        nCell = nCell.nextSibling;
      }
    }
  }


  /**
   * Get an array of unique th elements, one for each column
   *  @param {object} oSettings dataTables settings object
   *  @param {node} nHeader automatically detect the layout from this node - optional
   *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional
   *  @returns array {node} aReturn list of unique th's
   *  @memberof DataTable#oApi
   */
  function _fnGetUniqueThs(oSettings, nHeader, aLayout) {
    var aReturn = [];
    if (!aLayout) {
      aLayout = oSettings.aoHeader;
      if (nHeader) {
        aLayout = [];
        _fnDetectHeader(aLayout, nHeader);
      }
    }

    for (var i = 0, iLen = aLayout.length; i < iLen; i++) {
      for (var j = 0, jLen = aLayout[i].length; j < jLen; j++) {
        if (aLayout[i][j].unique &&
          (!aReturn[j] || !oSettings.bSortCellsTop)) {
          aReturn[j] = aLayout[i][j].cell;
        }
      }
    }

    return aReturn;
  }

  /**
   * Create an Ajax call based on the table's settings, taking into account that
   * parameters can have multiple forms, and backwards compatibility.
   *
   * @param {object} oSettings dataTables settings object
   * @param {array} data Data to send to the server, required by
   *     DataTables - may be augmented by developer callbacks
   * @param {function} fn Callback function to run when data is obtained
   */
  function _fnBuildAjax(oSettings, data, fn) {
    // Compatibility with 1.9-, allow fnServerData and event to manipulate
    _fnCallbackFire(oSettings, 'aoServerParams', 'serverParams', [data]);

    // Convert to object based for 1.10+ if using the old array scheme which can
    // come from server-side processing or serverParams
    if (data && $.isArray(data)) {
      var tmp = {};
      var rbracket = /(.*?)\[\]$/;

      $.each(data, function (key, val) {
        var match = val.name.match(rbracket);

        if (match) {
          // Support for arrays
          var name = match[0];

          if (!tmp[name]) {
            tmp[name] = [];
          }
          tmp[name].push(val.value);
        }
        else {
          tmp[val.name] = val.value;
        }
      });
      data = tmp;
    }

    var ajaxData;
    var ajax = oSettings.ajax;
    var instance = oSettings.oInstance;
    var callback = function (json) {
      _fnCallbackFire(oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR]);
      fn(json);
    };

    if ($.isPlainObject(ajax) && ajax.data) {
      ajaxData = ajax.data;

      var newData = $.isFunction(ajaxData) ?
        ajaxData(data, oSettings) :  // fn can manipulate data or return
        ajaxData;                      // an object object or array to merge

      // If the function returned something, use that alone
      data = $.isFunction(ajaxData) && newData ?
        newData :
        $.extend(true, data, newData);

      // Remove the data property as we've resolved it already and don't want
      // jQuery to do it again (it is restored at the end of the function)
      delete ajax.data;
    }

    var baseAjax = {
      "data": data,
      "success": function (json) {
        var error = json.error || json.sError;
        if (error) {
          _fnLog(oSettings, 0, error);
        }

        oSettings.json = json;
        callback(json);
      },
      "dataType": "json",
      "cache": false,
      "type": oSettings.sServerMethod,
      "error": function (xhr, error, thrown) {
        var ret = _fnCallbackFire(oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR]);

        if ($.inArray(true, ret) === -1) {
          if (error == "parsererror") {
            _fnLog(oSettings, 0, 'Invalid JSON response', 1);
          }
          else if (xhr.readyState === 4) {
            _fnLog(oSettings, 0, 'Ajax error', 7);
          }
        }

        _fnProcessingDisplay(oSettings, false);
      }
    };

    // Store the data submitted for the API
    oSettings.oAjaxData = data;

    // Allow plug-ins and external processes to modify the data
    _fnCallbackFire(oSettings, null, 'preXhr', [oSettings, data]);

    if (oSettings.fnServerData) {
      // DataTables 1.9- compatibility
      oSettings.fnServerData.call(instance,
        oSettings.sAjaxSource,
        $.map(data, function (val, key) { // Need to convert back to 1.9 trad format
          return {name: key, value: val};
        }),
        callback,
        oSettings
      );
    }
    else if (oSettings.sAjaxSource || typeof ajax === 'string') {
      // DataTables 1.9- compatibility
      oSettings.jqXHR = $.ajax($.extend(baseAjax, {
        url: ajax || oSettings.sAjaxSource
      }));
    }
    else if ($.isFunction(ajax)) {
      // Is a function - let the caller define what needs to be done
      oSettings.jqXHR = ajax.call(instance, data, callback, oSettings);
    }
    else {
      // Object to extend the base settings
      oSettings.jqXHR = $.ajax($.extend(baseAjax, ajax));

      // Restore for next time around
      ajax.data = ajaxData;
    }
  }


  /**
   * Update the table using an Ajax call
   *  @param {object} settings dataTables settings object
   *  @returns {boolean} Block the table drawing or not
   *  @memberof DataTable#oApi
   */
  function _fnAjaxUpdate(settings) {
    if (settings.bAjaxDataGet) {
      settings.iDraw++;
      _fnProcessingDisplay(settings, true);

      _fnBuildAjax(
        settings,
        _fnAjaxParameters(settings),
        function (json) {
          _fnAjaxUpdateDraw(settings, json);
        }
      );

      return false;
    }
    return true;
  }


  /**
   * Build up the parameters in an object needed for a server-side processing
   * request. Note that this is basically done twice, is different ways - a modern
   * method which is used by default in DataTables 1.10 which uses objects and
   * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if
   * the sAjaxSource option is used in the initialisation, or the legacyAjax
   * option is set.
   *  @param {object} oSettings dataTables settings object
   *  @returns {bool} block the table drawing or not
   *  @memberof DataTable#oApi
   */
  function _fnAjaxParameters(settings) {
    var
      columns = settings.aoColumns,
      columnCount = columns.length,
      features = settings.oFeatures,
      preSearch = settings.oPreviousSearch,
      preColSearch = settings.aoPreSearchCols,
      i, data = [], dataProp, column, columnSearch,
      sort = _fnSortFlatten(settings),
      displayStart = settings._iDisplayStart,
      displayLength = features.bPaginate !== false ?
        settings._iDisplayLength :
        -1;

    var param = function (name, value) {
      data.push({'name': name, 'value': value});
    };

    // DataTables 1.9- compatible method
    param('sEcho', settings.iDraw);
    param('iColumns', columnCount);
    param('sColumns', _pluck(columns, 'sName').join(','));
    param('iDisplayStart', displayStart);
    param('iDisplayLength', displayLength);

    // DataTables 1.10+ method
    var d = {
      draw: settings.iDraw,
      columns: [],
      order: [],
      start: displayStart,
      length: displayLength,
      search: {
        value: preSearch.sSearch,
        regex: preSearch.bRegex
      }
    };

    for (i = 0; i < columnCount; i++) {
      column = columns[i];
      columnSearch = preColSearch[i];
      dataProp = typeof column.mData == "function" ? 'function' : column.mData;

      d.columns.push({
        data: dataProp,
        name: column.sName,
        searchable: column.bSearchable,
        orderable: column.bSortable,
        search: {
          value: columnSearch.sSearch,
          regex: columnSearch.bRegex
        }
      });

      param("mDataProp_" + i, dataProp);

      if (features.bFilter) {
        param('sSearch_' + i, columnSearch.sSearch);
        param('bRegex_' + i, columnSearch.bRegex);
        param('bSearchable_' + i, column.bSearchable);
      }

      if (features.bSort) {
        param('bSortable_' + i, column.bSortable);
      }
    }

    if (features.bFilter) {
      param('sSearch', preSearch.sSearch);
      param('bRegex', preSearch.bRegex);
    }

    if (features.bSort) {
      $.each(sort, function (i, val) {
        d.order.push({column: val.col, dir: val.dir});

        param('iSortCol_' + i, val.col);
        param('sSortDir_' + i, val.dir);
      });

      param('iSortingCols', sort.length);
    }

    // If the legacy.ajax parameter is null, then we automatically decide which
    // form to use, based on sAjaxSource
    var legacy = DataTable.ext.legacy.ajax;
    if (legacy === null) {
      return settings.sAjaxSource ? data : d;
    }

    // Otherwise, if legacy has been specified then we use that to decide on the
    // form
    return legacy ? data : d;
  }


  /**
   * Data the data from the server (nuking the old) and redraw the table
   *  @param {object} oSettings dataTables settings object
   *  @param {object} json json data return from the server.
   *  @param {string} json.sEcho Tracking flag for DataTables to match requests
   *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering
   *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering
   *  @param {array} json.aaData The data to display on this page
   *  @param {string} [json.sColumns] Column ordering (sName, comma separated)
   *  @memberof DataTable#oApi
   */
  function _fnAjaxUpdateDraw(settings, json) {
    // v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.
    // Support both
    var compat = function (old, modern) {
      return json[old] !== undefined ? json[old] : json[modern];
    };

    var data = _fnAjaxDataSrc(settings, json);
    var draw = compat('sEcho', 'draw');
    var recordsTotal = compat('iTotalRecords', 'recordsTotal');
    var recordsFiltered = compat('iTotalDisplayRecords', 'recordsFiltered');

    if (draw) {
      // Protect against out of sequence returns
      if (draw * 1 < settings.iDraw) {
        return;
      }
      settings.iDraw = draw * 1;
    }

    _fnClearTable(settings);
    settings._iRecordsTotal = parseInt(recordsTotal, 10);
    settings._iRecordsDisplay = parseInt(recordsFiltered, 10);

    for (var i = 0, ien = data.length; i < ien; i++) {
      _fnAddData(settings, data[i]);
    }
    settings.aiDisplay = settings.aiDisplayMaster.slice();

    settings.bAjaxDataGet = false;
    _fnDraw(settings);

    if (!settings._bInitComplete) {
      _fnInitComplete(settings, json);
    }

    settings.bAjaxDataGet = true;
    _fnProcessingDisplay(settings, false);
  }


  /**
   * Get the data from the JSON data source to use for drawing a table. Using
   * `_fnGetObjectDataFn` allows the data to be sourced from a property of the
   * source object, or from a processing function.
   *  @param {object} oSettings dataTables settings object
   *  @param  {object} json Data source object / array from the server
   *  @return {array} Array of data to use
   */
  function _fnAjaxDataSrc(oSettings, json) {
    var dataSrc = $.isPlainObject(oSettings.ajax) && oSettings.ajax.dataSrc !== undefined ?
      oSettings.ajax.dataSrc :
      oSettings.sAjaxDataProp; // Compatibility with 1.9-.

    // Compatibility with 1.9-. In order to read from aaData, check if the
    // default has been changed, if not, check for aaData
    if (dataSrc === 'data') {
      return json.aaData || json[dataSrc];
    }

    return dataSrc !== "" ?
      _fnGetObjectDataFn(dataSrc)(json) :
      json;
  }

  /**
   * Generate the node required for filtering text
   *  @returns {node} Filter control element
   *  @param {object} oSettings dataTables settings object
   *  @memberof DataTable#oApi
   */
  function _fnFeatureHtmlFilter(settings) {
    var classes = settings.oClasses;
    var tableId = settings.sTableId;
    var language = settings.oLanguage;
    var previousSearch = settings.oPreviousSearch;
    var features = settings.aanFeatures;
    var input = '<input type="search" class="' + classes.sFilterInput + '"/>';

    var str = language.sSearch;
    str = str.match(/_INPUT_/) ?
      str.replace('_INPUT_', input) :
      str + input;

    var filter = $('<div/>', {
      'id': !features.f ? tableId + '_filter' : null,
      'class': classes.sFilter
    })
      .append($('<label/>').append(str));

    var searchFn = function () {
      /* Update all other filter input elements for the new display */
      var n = features.f;
      var val = !this.value ? "" : this.value; // mental IE8 fix :-(

      /* Now do the filter */
      if (val != previousSearch.sSearch) {
        _fnFilterComplete(settings, {
          "sSearch": val,
          "bRegex": previousSearch.bRegex,
          "bSmart": previousSearch.bSmart,
          "bCaseInsensitive": previousSearch.bCaseInsensitive
        });

        // Need to redraw, without resorting
        settings._iDisplayStart = 0;
        _fnDraw(settings);
      }
    };

    var searchDelay = settings.searchDelay !== null ?
      settings.searchDelay :
      _fnDataSource(settings) === 'ssp' ?
        400 :
        0;

    var jqFilter = $('input', filter)
      .val(previousSearch.sSearch)
      .attr('placeholder', language.sSearchPlaceholder)
      .on(
        'keyup.DT search.DT input.DT paste.DT cut.DT',
        searchDelay ?
          _fnThrottle(searchFn, searchDelay) :
          searchFn
      )
      .on('keypress.DT', function (e) {
        /* Prevent form submission */
        if (e.keyCode == 13) {
          return false;
        }
      })
      .attr('aria-controls', tableId);

    // Update the input elements whenever the table is filtered
    $(settings.nTable).on('search.dt.DT', function (ev, s) {
      if (settings === s) {
        // IE9 throws an 'unknown error' if document.activeElement is used
        // inside an iframe or frame...
        try {
          if (jqFilter[0] !== document.activeElement) {
            jqFilter.val(previousSearch.sSearch);
          }
        }
        catch (e) {
        }
      }
    });

    return filter[0];
  }


  /**
   * Filter the table using both the global filter and column based filtering
   *  @param {object} oSettings dataTables settings object
   *  @param {object} oSearch search information
   *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)
   *  @memberof DataTable#oApi
   */
  function _fnFilterComplete(oSettings, oInput, iForce) {
    var oPrevSearch = oSettings.oPreviousSearch;
    var aoPrevSearch = oSettings.aoPreSearchCols;
    var fnSaveFilter = function (oFilter) {
      /* Save the filtering values */
      oPrevSearch.sSearch = oFilter.sSearch;
      oPrevSearch.bRegex = oFilter.bRegex;
      oPrevSearch.bSmart = oFilter.bSmart;
      oPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;
    };
    var fnRegex = function (o) {
      // Backwards compatibility with the bEscapeRegex option
      return o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;
    };

    // Resolve any column types that are unknown due to addition or invalidation
    // @todo As per sort - can this be moved into an event handler?
    _fnColumnTypes(oSettings);

    /* In server-side processing all filtering is done by the server, so no point hanging around here */
    if (_fnDataSource(oSettings) != 'ssp') {
      /* Global filter */
      _fnFilter(oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive);
      fnSaveFilter(oInput);

      /* Now do the individual column filter */
      for (var i = 0; i < aoPrevSearch.length; i++) {
        _fnFilterColumn(oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),
          aoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive);
      }

      /* Custom filtering */
      _fnFilterCustom(oSettings);
    }
    else {
      fnSaveFilter(oInput);
    }

    /* Tell the draw function we have been filtering */
    oSettings.bFiltered = true;
    _fnCallbackFire(oSettings, null, 'search', [oSettings]);
  }


  /**
   * Apply custom filtering functions
   *  @param {object} oSettings dataTables settings object
   *  @memberof DataTable#oApi
   */
  function _fnFilterCustom(settings) {
    var filters = DataTable.ext.search;
    var displayRows = settings.aiDisplay;
    var row, rowIdx;

    for (var i = 0, ien = filters.length; i < ien; i++) {
      var rows = [];

      // Loop over each row and see if it should be included
      for (var j = 0, jen = displayRows.length; j < jen; j++) {
        rowIdx = displayRows[j];
        row = settings.aoData[rowIdx];

        if (filters[i](settings, row._aFilterData, rowIdx, row._aData, j)) {
          rows.push(rowIdx);
        }
      }

      // So the array reference doesn't break set the results into the
      // existing array
      displayRows.length = 0;
      $.merge(displayRows, rows);
    }
  }


  /**
   * Filter the table on a per-column basis
   *  @param {object} oSettings dataTables settings object
   *  @param {string} sInput string to filter on
   *  @param {int} iColumn column to filter
   *  @param {bool} bRegex treat search string as a regular expression or not
   *  @param {bool} bSmart use smart filtering or not
   *  @param {bool} bCaseInsensitive Do case insenstive matching or not
   *  @memberof DataTable#oApi
   */
  function _fnFilterColumn(settings, searchStr, colIdx, regex, smart, caseInsensitive) {
    if (searchStr === '') {
      return;
    }

    var data;
    var out = [];
    var display = settings.aiDisplay;
    var rpSearch = _fnFilterCreateSearch(searchStr, regex, smart, caseInsensitive);

    for (var i = 0; i < display.length; i++) {
      data = settings.aoData[display[i]]._aFilterData[colIdx];

      if (rpSearch.test(data)) {
        out.push(display[i]);
      }
    }

    settings.aiDisplay = out;
  }


  /**
   * Filter the data table based on user input and draw the table
   *  @param {object} settings dataTables settings object
   *  @param {string} input string to filter on
   *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)
   *  @param {bool} regex treat as a regular expression or not
   *  @param {bool} smart perform smart filtering or not
   *  @param {bool} caseInsensitive Do case insenstive matching or not
   *  @memberof DataTable#oApi
   */
  function _fnFilter(settings, input, force, regex, smart, caseInsensitive) {
    var rpSearch = _fnFilterCreateSearch(input, regex, smart, caseInsensitive);
    var prevSearch = settings.oPreviousSearch.sSearch;
    var displayMaster = settings.aiDisplayMaster;
    var display, invalidated, i;
    var filtered = [];

    // Need to take account of custom filtering functions - always filter
    if (DataTable.ext.search.length !== 0) {
      force = true;
    }

    // Check if any of the rows were invalidated
    invalidated = _fnFilterData(settings);

    // If the input is blank - we just want the full data set
    if (input.length <= 0) {
      settings.aiDisplay = displayMaster.slice();
    }
    else {
      // New search - start from the master array
      if (invalidated ||
        force ||
        prevSearch.length > input.length ||
        input.indexOf(prevSearch) !== 0 ||
        settings.bSorted // On resort, the display master needs to be
                         // re-filtered since indexes will have changed
      ) {
        settings.aiDisplay = displayMaster.slice();
      }

      // Search the display array
      display = settings.aiDisplay;

      for (i = 0; i < display.length; i++) {
        if (rpSearch.test(settings.aoData[display[i]]._sFilterRow)) {
          filtered.push(display[i]);
        }
      }

      settings.aiDisplay = filtered;
    }
  }


  /**
   * Build a regular expression object suitable for searching a table
   *  @param {string} sSearch string to search for
   *  @param {bool} bRegex treat as a regular expression or not
   *  @param {bool} bSmart perform smart filtering or not
   *  @param {bool} bCaseInsensitive Do case insensitive matching or not
   *  @returns {RegExp} constructed object
   *  @memberof DataTable#oApi
   */
  function _fnFilterCreateSearch(search, regex, smart, caseInsensitive) {
    search = regex ?
      search :
      _fnEscapeRegex(search);

    if (smart) {
      /* For smart filtering we want to allow the search to work regardless of
			 * word order. We also want double quoted text to be preserved, so word
			 * order is important - a la google. So this is what we want to
			 * generate:
			 *
			 * ^(?=.*?\bone\b)(?=.*?\btwo three\b)(?=.*?\bfour\b).*$
			 */
      var a = $.map(search.match(/"[^"]+"|[^ ]+/g) || [''], function (word) {
        if (word.charAt(0) === '"') {
          var m = word.match(/^"(.*)"$/);
          word = m ? m[1] : word;
        }

        return word.replace('"', '');
      });

      search = '^(?=.*?' + a.join(')(?=.*?') + ').*$';
    }

    return new RegExp(search, caseInsensitive ? 'i' : '');
  }


  /**
   * Escape a string such that it can be used in a regular expression
   *  @param {string} sVal string to escape
   *  @returns {string} escaped string
   *  @memberof DataTable#oApi
   */
  var _fnEscapeRegex = DataTable.util.escapeRegex;

  var __filter_div = $('<div>')[0];
  var __filter_div_textContent = __filter_div.textContent !== undefined;

  // Update the filtering data for each row if needed (by invalidation or first run)
  function _fnFilterData(settings) {
    var columns = settings.aoColumns;
    var column;
    var i, j, ien, jen, filterData, cellData, row;
    var fomatters = DataTable.ext.type.search;
    var wasInvalidated = false;

    for (i = 0, ien = settings.aoData.length; i < ien; i++) {
      row = settings.aoData[i];

      if (!row._aFilterData) {
        filterData = [];

        for (j = 0, jen = columns.length; j < jen; j++) {
          column = columns[j];

          if (column.bSearchable) {
            cellData = _fnGetCellData(settings, i, j, 'filter');

            if (fomatters[column.sType]) {
              cellData = fomatters[column.sType](cellData);
            }

            // Search in DataTables 1.10 is string based. In 1.11 this
            // should be altered to also allow strict type checking.
            if (cellData === null) {
              cellData = '';
            }

            if (typeof cellData !== 'string' && cellData.toString) {
              cellData = cellData.toString();
            }
          }
          else {
            cellData = '';
          }

          // If it looks like there is an HTML entity in the string,
          // attempt to decode it so sorting works as expected. Note that
          // we could use a single line of jQuery to do this, but the DOM
          // method used here is much faster http://jsperf.com/html-decode
          if (cellData.indexOf && cellData.indexOf('&') !== -1) {
            __filter_div.innerHTML = cellData;
            cellData = __filter_div_textContent ?
              __filter_div.textContent :
              __filter_div.innerText;
          }

          if (cellData.replace) {
            cellData = cellData.replace(/[\r\n]/g, '');
          }

          filterData.push(cellData);
        }

        row._aFilterData = filterData;
        row._sFilterRow = filterData.join('  ');
        wasInvalidated = true;
      }
    }

    return wasInvalidated;
  }


  /**
   * Convert from the internal Hungarian notation to camelCase for external
   * interaction
   *  @param {object} obj Object to convert
   *  @returns {object} Inverted object
   *  @memberof DataTable#oApi
   */
  function _fnSearchToCamel(obj) {
    return {
      search: obj.sSearch,
      smart: obj.bSmart,
      regex: obj.bRegex,
      caseInsensitive: obj.bCaseInsensitive
    };
  }


  /**
   * Convert from camelCase notation to the internal Hungarian. We could use the
   * Hungarian convert function here, but this is cleaner
   *  @param {object} obj Object to convert
   *  @returns {object} Inverted object
   *  @memberof DataTable#oApi
   */
  function _fnSearchToHung(obj) {
    return {
      sSearch: obj.search,
      bSmart: obj.smart,
      bRegex: obj.regex,
      bCaseInsensitive: obj.caseInsensitive
    };
  }

  /**
   * Generate the node required for the info display
   *  @param {object} oSettings dataTables settings object
   *  @returns {node} Information element
   *  @memberof DataTable#oApi
   */
  function _fnFeatureHtmlInfo(settings) {
    var
      tid = settings.sTableId,
      nodes = settings.aanFeatures.i,
      n = $('<div/>', {
        'class': settings.oClasses.sInfo,
        'id': !nodes ? tid + '_info' : null
      });

    if (!nodes) {
      // Update display on each draw
      settings.aoDrawCallback.push({
        "fn": _fnUpdateInfo,
        "sName": "information"
      });

      n
        .attr('role', 'status')
        .attr('aria-live', 'polite');

      // Table is described by our info div
      $(settings.nTable).attr('aria-describedby', tid + '_info');
    }

    return n[0];
  }


  /**
   * Update the information elements in the display
   *  @param {object} settings dataTables settings object
   *  @memberof DataTable#oApi
   */
  function _fnUpdateInfo(settings) {
    /* Show information about the table */
    var nodes = settings.aanFeatures.i;
    if (nodes.length === 0) {
      return;
    }

    var
      lang = settings.oLanguage,
      start = settings._iDisplayStart + 1,
      end = settings.fnDisplayEnd(),
      max = settings.fnRecordsTotal(),
      total = settings.fnRecordsDisplay(),
      out = total ?
        lang.sInfo :
        lang.sInfoEmpty;

    if (total !== max) {
      /* Record set after filtering */
      out += ' ' + lang.sInfoFiltered;
    }

    // Convert the macros
    out += lang.sInfoPostFix;
    out = _fnInfoMacros(settings, out);

    var callback = lang.fnInfoCallback;
    if (callback !== null) {
      out = callback.call(settings.oInstance,
        settings, start, end, max, total, out
      );
    }

    $(nodes).html(out);
  }


  function _fnInfoMacros(settings, str) {
    // When infinite scrolling, we are always starting at 1. _iDisplayStart is used only
    // internally
    var
      formatter = settings.fnFormatNumber,
      start = settings._iDisplayStart + 1,
      len = settings._iDisplayLength,
      vis = settings.fnRecordsDisplay(),
      all = len === -1;

    return str.replace(/_START_/g, formatter.call(settings, start)).replace(/_END_/g, formatter.call(settings, settings.fnDisplayEnd())).replace(/_MAX_/g, formatter.call(settings, settings.fnRecordsTotal())).replace(/_TOTAL_/g, formatter.call(settings, vis)).replace(/_PAGE_/g, formatter.call(settings, all ? 1 : Math.ceil(start / len))).replace(/_PAGES_/g, formatter.call(settings, all ? 1 : Math.ceil(vis / len)));
  }


  /**
   * Draw the table for the first time, adding all required features
   *  @param {object} settings dataTables settings object
   *  @memberof DataTable#oApi
   */
  function _fnInitialise(settings) {
    var i, iLen, iAjaxStart = settings.iInitDisplayStart;
    var columns = settings.aoColumns, column;
    var features = settings.oFeatures;
    var deferLoading = settings.bDeferLoading; // value modified by the draw

    /* Ensure that the table data is fully initialised */
    if (!settings.bInitialised) {
      setTimeout(function () {
        _fnInitialise(settings);
      }, 200);
      return;
    }

    /* Show the display HTML options */
    _fnAddOptionsHtml(settings);

    /* Build and draw the header / footer for the table */
    _fnBuildHead(settings);
    _fnDrawHead(settings, settings.aoHeader);
    _fnDrawHead(settings, settings.aoFooter);

    /* Okay to show that something is going on now */
    _fnProcessingDisplay(settings, true);

    /* Calculate sizes for columns */
    if (features.bAutoWidth) {
      _fnCalculateColumnWidths(settings);
    }

    for (i = 0, iLen = columns.length; i < iLen; i++) {
      column = columns[i];

      if (column.sWidth) {
        column.nTh.style.width = _fnStringToCss(column.sWidth);
      }
    }

    _fnCallbackFire(settings, null, 'preInit', [settings]);

    // If there is default sorting required - let's do it. The sort function
    // will do the drawing for us. Otherwise we draw the table regardless of the
    // Ajax source - this allows the table to look initialised for Ajax sourcing
    // data (show 'loading' message possibly)
    _fnReDraw(settings);

    // Server-side processing init complete is done by _fnAjaxUpdateDraw
    var dataSrc = _fnDataSource(settings);
    if (dataSrc != 'ssp' || deferLoading) {
      // if there is an ajax source load the data
      if (dataSrc == 'ajax') {
        _fnBuildAjax(settings, [], function (json) {
          var aData = _fnAjaxDataSrc(settings, json);

          // Got the data - add it to the table
          for (i = 0; i < aData.length; i++) {
            _fnAddData(settings, aData[i]);
          }

          // Reset the init display for cookie saving. We've already done
          // a filter, and therefore cleared it before. So we need to make
          // it appear 'fresh'
          settings.iInitDisplayStart = iAjaxStart;

          _fnReDraw(settings);

          _fnProcessingDisplay(settings, false);
          _fnInitComplete(settings, json);
        }, settings);
      }
      else {
        _fnProcessingDisplay(settings, false);
        _fnInitComplete(settings);
      }
    }
  }


  /**
   * Draw the table for the first time, adding all required features
   *  @param {object} oSettings dataTables settings object
   *  @param {object} [json] JSON from the server that completed the table, if using Ajax source
   *    with client-side processing (optional)
   *  @memberof DataTable#oApi
   */
  function _fnInitComplete(settings, json) {
    settings._bInitComplete = true;

    // When data was added after the initialisation (data or Ajax) we need to
    // calculate the column sizing
    if (json || settings.oInit.aaData) {
      _fnAdjustColumnSizing(settings);
    }

    _fnCallbackFire(settings, null, 'plugin-init', [settings, json]);
    _fnCallbackFire(settings, 'aoInitComplete', 'init', [settings, json]);
  }


  function _fnLengthChange(settings, val) {
    var len = parseInt(val, 10);
    settings._iDisplayLength = len;

    _fnLengthOverflow(settings);

    // Fire length change event
    _fnCallbackFire(settings, null, 'length', [settings, len]);
  }


  /**
   * Generate the node required for user display length changing
   *  @param {object} settings dataTables settings object
   *  @returns {node} Display length feature node
   *  @memberof DataTable#oApi
   */
  function _fnFeatureHtmlLength(settings) {
    var
      classes = settings.oClasses,
      tableId = settings.sTableId,
      menu = settings.aLengthMenu,
      d2 = $.isArray(menu[0]),
      lengths = d2 ? menu[0] : menu,
      language = d2 ? menu[1] : menu;

    var select = $('<select/>', {
      'name': tableId + '_length',
      'aria-controls': tableId,
      'class': classes.sLengthSelect
    });

    for (var i = 0, ien = lengths.length; i < ien; i++) {
      select[0][i] = new Option(
        typeof language[i] === 'number' ?
          settings.fnFormatNumber(language[i]) :
          language[i],
        lengths[i]
      );
    }

    var div = $('<div><label/></div>').addClass(classes.sLength);
    if (!settings.aanFeatures.l) {
      div[0].id = tableId + '_length';
    }

    div.children().append(
      settings.oLanguage.sLengthMenu.replace('_MENU_', select[0].outerHTML)
    );

    // Can't use `select` variable as user might provide their own and the
    // reference is broken by the use of outerHTML
    $('select', div)
      .val(settings._iDisplayLength)
      .on('change.DT', function (e) {
        _fnLengthChange(settings, $(this).val());
        _fnDraw(settings);
      });

    // Update node value whenever anything changes the table's length
    $(settings.nTable).on('length.dt.DT', function (e, s, len) {
      if (settings === s) {
        $('select', div).val(len);
      }
    });

    return div[0];
  }


  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Note that most of the paging logic is done in
	 * DataTable.ext.pager
	 */

  /**
   * Generate the node required for default pagination
   *  @param {object} oSettings dataTables settings object
   *  @returns {node} Pagination feature node
   *  @memberof DataTable#oApi
   */
  function _fnFeatureHtmlPaginate(settings) {
    var
      type = settings.sPaginationType,
      plugin = DataTable.ext.pager[type],
      modern = typeof plugin === 'function',
      redraw = function (settings) {
        _fnDraw(settings);
      },
      node = $('<div/>').addClass(settings.oClasses.sPaging + type)[0],
      features = settings.aanFeatures;

    if (!modern) {
      plugin.fnInit(settings, node, redraw);
    }

    /* Add a draw callback for the pagination on first instance, to update the paging display */
    if (!features.p) {
      node.id = settings.sTableId + '_paginate';

      settings.aoDrawCallback.push({
        "fn": function (settings) {
          if (modern) {
            var
              start = settings._iDisplayStart,
              len = settings._iDisplayLength,
              visRecords = settings.fnRecordsDisplay(),
              all = len === -1,
              page = all ? 0 : Math.ceil(start / len),
              pages = all ? 1 : Math.ceil(visRecords / len),
              buttons = plugin(page, pages),
              i, ien;

            for (i = 0, ien = features.p.length; i < ien; i++) {
              _fnRenderer(settings, 'pageButton')(
                settings, features.p[i], i, buttons, page, pages
              );
            }
          }
          else {
            plugin.fnUpdate(settings, redraw);
          }
        },
        "sName": "pagination"
      });
    }

    return node;
  }


  /**
   * Alter the display settings to change the page
   *  @param {object} settings DataTables settings object
   *  @param {string|int} action Paging action to take: "first", "previous",
   *    "next" or "last" or page number to jump to (integer)
   *  @param [bool] redraw Automatically draw the update or not
   *  @returns {bool} true page has changed, false - no change
   *  @memberof DataTable#oApi
   */
  function _fnPageChange(settings, action, redraw) {
    var
      start = settings._iDisplayStart,
      len = settings._iDisplayLength,
      records = settings.fnRecordsDisplay();

    if (records === 0 || len === -1) {
      start = 0;
    }
    else if (typeof action === "number") {
      start = action * len;

      if (start > records) {
        start = 0;
      }
    }
    else if (action == "first") {
      start = 0;
    }
    else if (action == "previous") {
      start = len >= 0 ?
        start - len :
        0;

      if (start < 0) {
        start = 0;
      }
    }
    else if (action == "next") {
      if (start + len < records) {
        start += len;
      }
    }
    else if (action == "last") {
      start = Math.floor((records - 1) / len) * len;
    }
    else {
      _fnLog(settings, 0, "Unknown paging action: " + action, 5);
    }

    var changed = settings._iDisplayStart !== start;
    settings._iDisplayStart = start;

    if (changed) {
      _fnCallbackFire(settings, null, 'page', [settings]);

      if (redraw) {
        _fnDraw(settings);
      }
    }

    return changed;
  }


  /**
   * Generate the node required for the processing node
   *  @param {object} settings dataTables settings object
   *  @returns {node} Processing element
   *  @memberof DataTable#oApi
   */
  function _fnFeatureHtmlProcessing(settings) {
    return $('<div/>', {
      'id': !settings.aanFeatures.r ? settings.sTableId + '_processing' : null,
      'class': settings.oClasses.sProcessing
    })
      .html(settings.oLanguage.sProcessing)
      .insertBefore(settings.nTable)[0];
  }


  /**
   * Display or hide the processing indicator
   *  @param {object} settings dataTables settings object
   *  @param {bool} show Show the processing indicator (true) or not (false)
   *  @memberof DataTable#oApi
   */
  function _fnProcessingDisplay(settings, show) {
    if (settings.oFeatures.bProcessing) {
      $(settings.aanFeatures.r).css('display', show ? 'block' : 'none');
    }

    _fnCallbackFire(settings, null, 'processing', [settings, show]);
  }

  /**
   * Add any control elements for the table - specifically scrolling
   *  @param {object} settings dataTables settings object
   *  @returns {node} Node to add to the DOM
   *  @memberof DataTable#oApi
   */
  function _fnFeatureHtmlTable(settings) {
    var table = $(settings.nTable);

    // Add the ARIA grid role to the table
    table.attr('role', 'grid');

    // Scrolling from here on in
    var scroll = settings.oScroll;

    if (scroll.sX === '' && scroll.sY === '') {
      return settings.nTable;
    }

    var scrollX = scroll.sX;
    var scrollY = scroll.sY;
    var classes = settings.oClasses;
    var caption = table.children('caption');
    var captionSide = caption.length ? caption[0]._captionSide : null;
    var headerClone = $(table[0].cloneNode(false));
    var footerClone = $(table[0].cloneNode(false));
    var footer = table.children('tfoot');
    var _div = '<div/>';
    var size = function (s) {
      return !s ? null : _fnStringToCss(s);
    };

    if (!footer.length) {
      footer = null;
    }

    /*
		 * The HTML structure that we want to generate in this function is:
		 *  div - scroller
		 *    div - scroll head
		 *      div - scroll head inner
		 *        table - scroll head table
		 *          thead - thead
		 *    div - scroll body
		 *      table - table (master table)
		 *        thead - thead clone for sizing
		 *        tbody - tbody
		 *    div - scroll foot
		 *      div - scroll foot inner
		 *        table - scroll foot table
		 *          tfoot - tfoot
		 */
    var scroller = $(_div, {'class': classes.sScrollWrapper})
      .append(
        $(_div, {'class': classes.sScrollHead})
          .css({
            overflow: 'hidden',
            position: 'relative',
            border: 0,
            width: scrollX ? size(scrollX) : '100%'
          })
          .append(
            $(_div, {'class': classes.sScrollHeadInner})
              .css({
                'box-sizing': 'content-box',
                width: scroll.sXInner || '100%'
              })
              .append(
                headerClone
                  .removeAttr('id')
                  .css('margin-left', 0)
                  .append(captionSide === 'top' ? caption : null)
                  .append(
                    table.children('thead')
                  )
              )
          )
      )
      .append(
        $(_div, {'class': classes.sScrollBody})
          .css({
            position: 'relative',
            overflow: 'auto',
            width: size(scrollX)
          })
          .append(table)
      );

    if (footer) {
      scroller.append(
        $(_div, {'class': classes.sScrollFoot})
          .css({
            overflow: 'hidden',
            border: 0,
            width: scrollX ? size(scrollX) : '100%'
          })
          .append(
            $(_div, {'class': classes.sScrollFootInner})
              .append(
                footerClone
                  .removeAttr('id')
                  .css('margin-left', 0)
                  .append(captionSide === 'bottom' ? caption : null)
                  .append(
                    table.children('tfoot')
                  )
              )
          )
      );
    }

    var children = scroller.children();
    var scrollHead = children[0];
    var scrollBody = children[1];
    var scrollFoot = footer ? children[2] : null;

    // When the body is scrolled, then we also want to scroll the headers
    if (scrollX) {
      $(scrollBody).on('scroll.DT', function (e) {
        var scrollLeft = this.scrollLeft;

        scrollHead.scrollLeft = scrollLeft;

        if (footer) {
          scrollFoot.scrollLeft = scrollLeft;
        }
      });
    }

    $(scrollBody).css(
      scrollY && scroll.bCollapse ? 'max-height' : 'height',
      scrollY
    );

    settings.nScrollHead = scrollHead;
    settings.nScrollBody = scrollBody;
    settings.nScrollFoot = scrollFoot;

    // On redraw - align columns
    settings.aoDrawCallback.push({
      "fn": _fnScrollDraw,
      "sName": "scrolling"
    });

    return scroller[0];
  }


  /**
   * Update the header, footer and body tables for resizing - i.e. column
   * alignment.
   *
   * Welcome to the most horrible function DataTables. The process that this
   * function follows is basically:
   *   1. Re-create the table inside the scrolling div
   *   2. Take live measurements from the DOM
   *   3. Apply the measurements to align the columns
   *   4. Clean up
   *
   *  @param {object} settings dataTables settings object
   *  @memberof DataTable#oApi
   */
  function _fnScrollDraw(settings) {
    // Given that this is such a monster function, a lot of variables are use
    // to try and keep the minimised size as small as possible
    var
      scroll = settings.oScroll,
      scrollX = scroll.sX,
      scrollXInner = scroll.sXInner,
      scrollY = scroll.sY,
      barWidth = scroll.iBarWidth,
      divHeader = $(settings.nScrollHead),
      divHeaderStyle = divHeader[0].style,
      divHeaderInner = divHeader.children('div'),
      divHeaderInnerStyle = divHeaderInner[0].style,
      divHeaderTable = divHeaderInner.children('table'),
      divBodyEl = settings.nScrollBody,
      divBody = $(divBodyEl),
      divBodyStyle = divBodyEl.style,
      divFooter = $(settings.nScrollFoot),
      divFooterInner = divFooter.children('div'),
      divFooterTable = divFooterInner.children('table'),
      header = $(settings.nTHead),
      table = $(settings.nTable),
      tableEl = table[0],
      tableStyle = tableEl.style,
      footer = settings.nTFoot ? $(settings.nTFoot) : null,
      browser = settings.oBrowser,
      ie67 = browser.bScrollOversize,
      dtHeaderCells = _pluck(settings.aoColumns, 'nTh'),
      headerTrgEls, footerTrgEls,
      headerSrcEls, footerSrcEls,
      headerCopy, footerCopy,
      headerWidths = [], footerWidths = [],
      headerContent = [], footerContent = [],
      idx, correction, sanityWidth,
      zeroOut = function (nSizer) {
        var style = nSizer.style;
        style.paddingTop = "0";
        style.paddingBottom = "0";
        style.borderTopWidth = "0";
        style.borderBottomWidth = "0";
        style.height = 0;
      };

    // If the scrollbar visibility has changed from the last draw, we need to
    // adjust the column sizes as the table width will have changed to account
    // for the scrollbar
    var scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;

    if (settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined) {
      settings.scrollBarVis = scrollBarVis;
      _fnAdjustColumnSizing(settings);
      return; // adjust column sizing will call this function again
    }
    else {
      settings.scrollBarVis = scrollBarVis;
    }

    /*
		 * 1. Re-create the table inside the scrolling div
		 */

    // Remove the old minimised thead and tfoot elements in the inner table
    table.children('thead, tfoot').remove();

    if (footer) {
      footerCopy = footer.clone().prependTo(table);
      footerTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized
      footerSrcEls = footerCopy.find('tr');
    }

    // Clone the current header and footer elements and then place it into the inner table
    headerCopy = header.clone().prependTo(table);
    headerTrgEls = header.find('tr'); // original header is in its own table
    headerSrcEls = headerCopy.find('tr');
    headerCopy.find('th, td').removeAttr('tabindex');


    /*
		 * 2. Take live measurements from the DOM - do not alter the DOM itself!
		 */

    // Remove old sizing and apply the calculated column widths
    // Get the unique column headers in the newly created (cloned) header. We want to apply the
    // calculated sizes to this header
    if (!scrollX) {
      divBodyStyle.width = '100%';
      divHeader[0].style.width = '100%';
    }

    $.each(_fnGetUniqueThs(settings, headerCopy), function (i, el) {
      idx = _fnVisibleToColumnIndex(settings, i);
      el.style.width = settings.aoColumns[idx].sWidth;
    });

    if (footer) {
      _fnApplyToChildren(function (n) {
        n.style.width = "";
      }, footerSrcEls);
    }

    // Size the table as a whole
    sanityWidth = table.outerWidth();
    if (scrollX === "") {
      // No x scrolling
      tableStyle.width = "100%";

      // IE7 will make the width of the table when 100% include the scrollbar
      // - which is shouldn't. When there is a scrollbar we need to take this
      // into account.
      if (ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||
          divBody.css('overflow-y') == "scroll")
      ) {
        tableStyle.width = _fnStringToCss(table.outerWidth() - barWidth);
      }

      // Recalculate the sanity width
      sanityWidth = table.outerWidth();
    }
    else if (scrollXInner !== "") {
      // legacy x scroll inner has been given - use it
      tableStyle.width = _fnStringToCss(scrollXInner);

      // Recalculate the sanity width
      sanityWidth = table.outerWidth();
    }

    // Hidden header should have zero height, so remove padding and borders. Then
    // set the width based on the real headers

    // Apply all styles in one pass
    _fnApplyToChildren(zeroOut, headerSrcEls);

    // Read all widths in next pass
    _fnApplyToChildren(function (nSizer) {
      headerContent.push(nSizer.innerHTML);
      headerWidths.push(_fnStringToCss($(nSizer).css('width')));
    }, headerSrcEls);

    // Apply all widths in final pass
    _fnApplyToChildren(function (nToSize, i) {
      // Only apply widths to the DataTables detected header cells - this
      // prevents complex headers from having contradictory sizes applied
      if ($.inArray(nToSize, dtHeaderCells) !== -1) {
        nToSize.style.width = headerWidths[i];
      }
    }, headerTrgEls);

    $(headerSrcEls).height(0);

    /* Same again with the footer if we have one */
    if (footer) {
      _fnApplyToChildren(zeroOut, footerSrcEls);

      _fnApplyToChildren(function (nSizer) {
        footerContent.push(nSizer.innerHTML);
        footerWidths.push(_fnStringToCss($(nSizer).css('width')));
      }, footerSrcEls);

      _fnApplyToChildren(function (nToSize, i) {
        nToSize.style.width = footerWidths[i];
      }, footerTrgEls);

      $(footerSrcEls).height(0);
    }


    /*
		 * 3. Apply the measurements
		 */

    // "Hide" the header and footer that we used for the sizing. We need to keep
    // the content of the cell so that the width applied to the header and body
    // both match, but we want to hide it completely. We want to also fix their
    // width to what they currently are
    _fnApplyToChildren(function (nSizer, i) {
      nSizer.innerHTML = '<div class="dataTables_sizing" style="height:0;overflow:hidden;">' + headerContent[i] + '</div>';
      nSizer.style.width = headerWidths[i];
    }, headerSrcEls);

    if (footer) {
      _fnApplyToChildren(function (nSizer, i) {
        nSizer.innerHTML = '<div class="dataTables_sizing" style="height:0;overflow:hidden;">' + footerContent[i] + '</div>';
        nSizer.style.width = footerWidths[i];
      }, footerSrcEls);
    }

    // Sanity check that the table is of a sensible width. If not then we are going to get
    // misalignment - try to prevent this by not allowing the table to shrink below its min width
    if (table.outerWidth() < sanityWidth) {
      // The min width depends upon if we have a vertical scrollbar visible or not */
      correction = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||
        divBody.css('overflow-y') == "scroll")) ?
        sanityWidth + barWidth :
        sanityWidth;

      // IE6/7 are a law unto themselves...
      if (ie67 && (divBodyEl.scrollHeight >
          divBodyEl.offsetHeight || divBody.css('overflow-y') == "scroll")
      ) {
        tableStyle.width = _fnStringToCss(correction - barWidth);
      }

      // And give the user a warning that we've stopped the table getting too small
      if (scrollX === "" || scrollXInner !== "") {
        _fnLog(settings, 1, 'Possible column misalignment', 6);
      }
    }
    else {
      correction = '100%';
    }

    // Apply to the container elements
    divBodyStyle.width = _fnStringToCss(correction);
    divHeaderStyle.width = _fnStringToCss(correction);

    if (footer) {
      settings.nScrollFoot.style.width = _fnStringToCss(correction);
    }


    /*
		 * 4. Clean up
		 */
    if (!scrollY) {
      /* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting
			 * the scrollbar height from the visible display, rather than adding it on. We need to
			 * set the height in order to sort this. Don't want to do it in any other browsers.
			 */
      if (ie67) {
        divBodyStyle.height = _fnStringToCss(tableEl.offsetHeight + barWidth);
      }
    }

    /* Finally set the width's of the header and footer tables */
    var iOuterWidth = table.outerWidth();
    divHeaderTable[0].style.width = _fnStringToCss(iOuterWidth);
    divHeaderInnerStyle.width = _fnStringToCss(iOuterWidth);

    // Figure out if there are scrollbar present - if so then we need a the header and footer to
    // provide a bit more space to allow "overflow" scrolling (i.e. past the scrollbar)
    var bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == "scroll";
    var padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );
    divHeaderInnerStyle[padding] = bScrolling ? barWidth + "px" : "0px";

    if (footer) {
      divFooterTable[0].style.width = _fnStringToCss(iOuterWidth);
      divFooterInner[0].style.width = _fnStringToCss(iOuterWidth);
      divFooterInner[0].style[padding] = bScrolling ? barWidth + "px" : "0px";
    }

    // Correct DOM ordering for colgroup - comes before the thead
    table.children('colgroup').insertBefore(table.children('thead'));

    /* Adjust the position of the header in case we loose the y-scrollbar */
    divBody.scroll();

    // If sorting or filtering has occurred, jump the scrolling back to the top
    // only if we aren't holding the position
    if ((settings.bSorted || settings.bFiltered) && !settings._drawHold) {
      divBodyEl.scrollTop = 0;
    }
  }


  /**
   * Apply a given function to the display child nodes of an element array (typically
   * TD children of TR rows
   *  @param {function} fn Method to apply to the objects
   *  @param array {nodes} an1 List of elements to look through for display children
   *  @param array {nodes} an2 Another list (identical structure to the first) - optional
   *  @memberof DataTable#oApi
   */
  function _fnApplyToChildren(fn, an1, an2) {
    var index = 0, i = 0, iLen = an1.length;
    var nNode1, nNode2;

    while (i < iLen) {
      nNode1 = an1[i].firstChild;
      nNode2 = an2 ? an2[i].firstChild : null;

      while (nNode1) {
        if (nNode1.nodeType === 1) {
          if (an2) {
            fn(nNode1, nNode2, index);
          }
          else {
            fn(nNode1, index);
          }

          index++;
        }

        nNode1 = nNode1.nextSibling;
        nNode2 = an2 ? nNode2.nextSibling : null;
      }

      i++;
    }
  }


  var __re_html_remove = /<.*?>/g;


  /**
   * Calculate the width of columns for the table
   *  @param {object} oSettings dataTables settings object
   *  @memberof DataTable#oApi
   */
  function _fnCalculateColumnWidths(oSettings) {
    var
      table = oSettings.nTable,
      columns = oSettings.aoColumns,
      scroll = oSettings.oScroll,
      scrollY = scroll.sY,
      scrollX = scroll.sX,
      scrollXInner = scroll.sXInner,
      columnCount = columns.length,
      visibleColumns = _fnGetColumns(oSettings, 'bVisible'),
      headerCells = $('th', oSettings.nTHead),
      tableWidthAttr = table.getAttribute('width'), // from DOM element
      tableContainer = table.parentNode,
      userInputs = false,
      i, column, columnIdx, width, outerWidth,
      browser = oSettings.oBrowser,
      ie67 = browser.bScrollOversize;

    var styleWidth = table.style.width;
    if (styleWidth && styleWidth.indexOf('%') !== -1) {
      tableWidthAttr = styleWidth;
    }

    /* Convert any user input sizes into pixel sizes */
    for (i = 0; i < visibleColumns.length; i++) {
      column = columns[visibleColumns[i]];

      if (column.sWidth !== null) {
        column.sWidth = _fnConvertToWidth(column.sWidthOrig, tableContainer);

        userInputs = true;
      }
    }

    /* If the number of columns in the DOM equals the number that we have to
		 * process in DataTables, then we can use the offsets that are created by
		 * the web- browser. No custom sizes can be set in order for this to happen,
		 * nor scrolling used
		 */
    if (ie67 || !userInputs && !scrollX && !scrollY &&
      columnCount == _fnVisbleColumns(oSettings) &&
      columnCount == headerCells.length
    ) {
      for (i = 0; i < columnCount; i++) {
        var colIdx = _fnVisibleToColumnIndex(oSettings, i);

        if (colIdx !== null) {
          columns[colIdx].sWidth = _fnStringToCss(headerCells.eq(i).width());
        }
      }
    }
    else {
      // Otherwise construct a single row, worst case, table with the widest
      // node in the data, assign any user defined widths, then insert it into
      // the DOM and allow the browser to do all the hard work of calculating
      // table widths
      var tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table
        .css('visibility', 'hidden')
        .removeAttr('id');

      // Clean up the table body
      tmpTable.find('tbody tr').remove();
      var tr = $('<tr/>').appendTo(tmpTable.find('tbody'));

      // Clone the table header and footer - we can't use the header / footer
      // from the cloned table, since if scrolling is active, the table's
      // real header and footer are contained in different table tags
      tmpTable.find('thead, tfoot').remove();
      tmpTable
        .append($(oSettings.nTHead).clone())
        .append($(oSettings.nTFoot).clone());

      // Remove any assigned widths from the footer (from scrolling)
      tmpTable.find('tfoot th, tfoot td').css('width', '');

      // Apply custom sizing to the cloned header
      headerCells = _fnGetUniqueThs(oSettings, tmpTable.find('thead')[0]);

      for (i = 0; i < visibleColumns.length; i++) {
        column = columns[visibleColumns[i]];

        headerCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?
          _fnStringToCss(column.sWidthOrig) :
          '';

        // For scrollX we need to force the column width otherwise the
        // browser will collapse it. If this width is smaller than the
        // width the column requires, then it will have no effect
        if (column.sWidthOrig && scrollX) {
          $(headerCells[i]).append($('<div/>').css({
            width: column.sWidthOrig,
            margin: 0,
            padding: 0,
            border: 0,
            height: 1
          }));
        }
      }

      // Find the widest cell for each column and put it into the table
      if (oSettings.aoData.length) {
        for (i = 0; i < visibleColumns.length; i++) {
          columnIdx = visibleColumns[i];
          column = columns[columnIdx];

          $(_fnGetWidestNode(oSettings, columnIdx))
            .clone(false)
            .append(column.sContentPadding)
            .appendTo(tr);
        }
      }

      // Tidy the temporary table - remove name attributes so there aren't
      // duplicated in the dom (radio elements for example)
      $('[name]', tmpTable).removeAttr('name');

      // Table has been built, attach to the document so we can work with it.
      // A holding element is used, positioned at the top of the container
      // with minimal height, so it has no effect on if the container scrolls
      // or not. Otherwise it might trigger scrolling when it actually isn't
      // needed
      var holder = $('<div/>').css(scrollX || scrollY ?
        {
          position: 'absolute',
          top: 0,
          left: 0,
          height: 1,
          right: 0,
          overflow: 'hidden'
        } :
        {}
      )
        .append(tmpTable)
        .appendTo(tableContainer);

      // When scrolling (X or Y) we want to set the width of the table as
      // appropriate. However, when not scrolling leave the table width as it
      // is. This results in slightly different, but I think correct behaviour
      if (scrollX && scrollXInner) {
        tmpTable.width(scrollXInner);
      }
      else if (scrollX) {
        tmpTable.css('width', 'auto');
        tmpTable.removeAttr('width');

        // If there is no width attribute or style, then allow the table to
        // collapse
        if (tmpTable.width() < tableContainer.clientWidth && tableWidthAttr) {
          tmpTable.width(tableContainer.clientWidth);
        }
      }
      else if (scrollY) {
        tmpTable.width(tableContainer.clientWidth);
      }
      else if (tableWidthAttr) {
        tmpTable.width(tableWidthAttr);
      }

      // Get the width of each column in the constructed table - we need to
      // know the inner width (so it can be assigned to the other table's
      // cells) and the outer width so we can calculate the full width of the
      // table. This is safe since DataTables requires a unique cell for each
      // column, but if ever a header can span multiple columns, this will
      // need to be modified.
      var total = 0;
      for (i = 0; i < visibleColumns.length; i++) {
        var cell = $(headerCells[i]);
        var border = cell.outerWidth() - cell.width();

        // Use getBounding... where possible (not IE8-) because it can give
        // sub-pixel accuracy, which we then want to round up!
        var bounding = browser.bBounding ?
          Math.ceil(headerCells[i].getBoundingClientRect().width) :
          cell.outerWidth();

        // Total is tracked to remove any sub-pixel errors as the outerWidth
        // of the table might not equal the total given here (IE!).
        total += bounding;

        // Width for each column to use
        columns[visibleColumns[i]].sWidth = _fnStringToCss(bounding - border);
      }

      table.style.width = _fnStringToCss(total);

      // Finished with the table - ditch it
      holder.remove();
    }

    // If there is a width attr, we want to attach an event listener which
    // allows the table sizing to automatically adjust when the window is
    // resized. Use the width attr rather than CSS, since we can't know if the
    // CSS is a relative value or absolute - DOM read is always px.
    if (tableWidthAttr) {
      table.style.width = _fnStringToCss(tableWidthAttr);
    }

    if ((tableWidthAttr || scrollX) && !oSettings._reszEvt) {
      var bindResize = function () {
        $(window).on('resize.DT-' + oSettings.sInstance, _fnThrottle(function () {
          _fnAdjustColumnSizing(oSettings);
        }));
      };

      // IE6/7 will crash if we bind a resize event handler on page load.
      // To be removed in 1.11 which drops IE6/7 support
      if (ie67) {
        setTimeout(bindResize, 1000);
      }
      else {
        bindResize();
      }

      oSettings._reszEvt = true;
    }
  }


  /**
   * Throttle the calls to a function. Arguments and context are maintained for
   * the throttled function
   *  @param {function} fn Function to be called
   *  @param {int} [freq=200] call frequency in mS
   *  @returns {function} wrapped function
   *  @memberof DataTable#oApi
   */
  var _fnThrottle = DataTable.util.throttle;


  /**
   * Convert a CSS unit width to pixels (e.g. 2em)
   *  @param {string} width width to be converted
   *  @param {node} parent parent to get the with for (required for relative widths) - optional
   *  @returns {int} width in pixels
   *  @memberof DataTable#oApi
   */
  function _fnConvertToWidth(width, parent) {
    if (!width) {
      return 0;
    }

    var n = $('<div/>')
      .css('width', _fnStringToCss(width))
      .appendTo(parent || document.body);

    var val = n[0].offsetWidth;
    n.remove();

    return val;
  }


  /**
   * Get the widest node
   *  @param {object} settings dataTables settings object
   *  @param {int} colIdx column of interest
   *  @returns {node} widest table node
   *  @memberof DataTable#oApi
   */
  function _fnGetWidestNode(settings, colIdx) {
    var idx = _fnGetMaxLenString(settings, colIdx);
    if (idx < 0) {
      return null;
    }

    var data = settings.aoData[idx];
    return !data.nTr ? // Might not have been created when deferred rendering
      $('<td/>').html(_fnGetCellData(settings, idx, colIdx, 'display'))[0] :
      data.anCells[colIdx];
  }


  /**
   * Get the maximum strlen for each data column
   *  @param {object} settings dataTables settings object
   *  @param {int} colIdx column of interest
   *  @returns {string} max string length for each column
   *  @memberof DataTable#oApi
   */
  function _fnGetMaxLenString(settings, colIdx) {
    var s, max = -1, maxIdx = -1;

    for (var i = 0, ien = settings.aoData.length; i < ien; i++) {
      s = _fnGetCellData(settings, i, colIdx, 'display') + '';
      s = s.replace(__re_html_remove, '');
      s = s.replace(/&nbsp;/g, ' ');

      if (s.length > max) {
        max = s.length;
        maxIdx = i;
      }
    }

    return maxIdx;
  }


  /**
   * Append a CSS unit (only if required) to a string
   *  @param {string} value to css-ify
   *  @returns {string} value with css unit
   *  @memberof DataTable#oApi
   */
  function _fnStringToCss(s) {
    if (s === null) {
      return '0px';
    }

    if (typeof s == 'number') {
      return s < 0 ?
        '0px' :
        s + 'px';
    }

    // Check it has a unit character already
    return s.match(/\d$/) ?
      s + 'px' :
      s;
  }


  function _fnSortFlatten(settings) {
    var
      i, iLen, k, kLen,
      aSort = [],
      aiOrig = [],
      aoColumns = settings.aoColumns,
      aDataSort, iCol, sType, srcCol,
      fixed = settings.aaSortingFixed,
      fixedObj = $.isPlainObject(fixed),
      nestedSort = [],
      add = function (a) {
        if (a.length && !$.isArray(a[0])) {
          // 1D array
          nestedSort.push(a);
        }
        else {
          // 2D array
          $.merge(nestedSort, a);
        }
      };

    // Build the sort array, with pre-fix and post-fix options if they have been
    // specified
    if ($.isArray(fixed)) {
      add(fixed);
    }

    if (fixedObj && fixed.pre) {
      add(fixed.pre);
    }

    add(settings.aaSorting);

    if (fixedObj && fixed.post) {
      add(fixed.post);
    }

    for (i = 0; i < nestedSort.length; i++) {
      srcCol = nestedSort[i][0];
      aDataSort = aoColumns[srcCol].aDataSort;

      for (k = 0, kLen = aDataSort.length; k < kLen; k++) {
        iCol = aDataSort[k];
        sType = aoColumns[iCol].sType || 'string';

        if (nestedSort[i]._idx === undefined) {
          nestedSort[i]._idx = $.inArray(nestedSort[i][1], aoColumns[iCol].asSorting);
        }

        aSort.push({
          src: srcCol,
          col: iCol,
          dir: nestedSort[i][1],
          index: nestedSort[i]._idx,
          type: sType,
          formatter: DataTable.ext.type.order[sType + "-pre"]
        });
      }
    }

    return aSort;
  }

  /**
   * Change the order of the table
   *  @param {object} oSettings dataTables settings object
   *  @memberof DataTable#oApi
   *  @todo This really needs split up!
   */
  function _fnSort(oSettings) {
    var
      i, ien, iLen, j, jLen, k, kLen,
      sDataType, nTh,
      aiOrig = [],
      oExtSort = DataTable.ext.type.order,
      aoData = oSettings.aoData,
      aoColumns = oSettings.aoColumns,
      aDataSort, data, iCol, sType, oSort,
      formatters = 0,
      sortCol,
      displayMaster = oSettings.aiDisplayMaster,
      aSort;

    // Resolve any column types that are unknown due to addition or invalidation
    // @todo Can this be moved into a 'data-ready' handler which is called when
    //   data is going to be used in the table?
    _fnColumnTypes(oSettings);

    aSort = _fnSortFlatten(oSettings);

    for (i = 0, ien = aSort.length; i < ien; i++) {
      sortCol = aSort[i];

      // Track if we can use the fast sort algorithm
      if (sortCol.formatter) {
        formatters++;
      }

      // Load the data needed for the sort, for each cell
      _fnSortData(oSettings, sortCol.col);
    }

    /* No sorting required if server-side or no sorting array */
    if (_fnDataSource(oSettings) != 'ssp' && aSort.length !== 0) {
      // Create a value - key array of the current row positions such that we can use their
      // current position during the sort, if values match, in order to perform stable sorting
      for (i = 0, iLen = displayMaster.length; i < iLen; i++) {
        aiOrig[displayMaster[i]] = i;
      }

      /* Do the sort - here we want multi-column sorting based on a given data source (column)
			 * and sorting function (from oSort) in a certain direction. It's reasonably complex to
			 * follow on it's own, but this is what we want (example two column sorting):
			 *  fnLocalSorting = function(a,b){
			 *    var iTest;
			 *    iTest = oSort['string-asc']('data11', 'data12');
			 *      if (iTest !== 0)
			 *        return iTest;
			 *    iTest = oSort['numeric-desc']('data21', 'data22');
			 *    if (iTest !== 0)
			 *      return iTest;
			 *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );
			 *  }
			 * Basically we have a test for each sorting column, if the data in that column is equal,
			 * test the next column. If all columns match, then we use a numeric sort on the row
			 * positions in the original data array to provide a stable sort.
			 *
			 * Note - I know it seems excessive to have two sorting methods, but the first is around
			 * 15% faster, so the second is only maintained for backwards compatibility with sorting
			 * methods which do not have a pre-sort formatting function.
			 */
      if (formatters === aSort.length) {
        // All sort types have formatting functions
        displayMaster.sort(function (a, b) {
          var
            x, y, k, test, sort,
            len = aSort.length,
            dataA = aoData[a]._aSortData,
            dataB = aoData[b]._aSortData;

          for (k = 0; k < len; k++) {
            sort = aSort[k];

            x = dataA[sort.col];
            y = dataB[sort.col];

            test = x < y ? -1 : x > y ? 1 : 0;
            if (test !== 0) {
              return sort.dir === 'asc' ? test : -test;
            }
          }

          x = aiOrig[a];
          y = aiOrig[b];
          return x < y ? -1 : x > y ? 1 : 0;
        });
      }
      else {
        // Depreciated - remove in 1.11 (providing a plug-in option)
        // Not all sort types have formatting methods, so we have to call their sorting
        // methods.
        displayMaster.sort(function (a, b) {
          var
            x, y, k, l, test, sort, fn,
            len = aSort.length,
            dataA = aoData[a]._aSortData,
            dataB = aoData[b]._aSortData;

          for (k = 0; k < len; k++) {
            sort = aSort[k];

            x = dataA[sort.col];
            y = dataB[sort.col];

            fn = oExtSort[sort.type + "-" + sort.dir] || oExtSort["string-" + sort.dir];
            test = fn(x, y);
            if (test !== 0) {
              return test;
            }
          }

          x = aiOrig[a];
          y = aiOrig[b];
          return x < y ? -1 : x > y ? 1 : 0;
        });
      }
    }

    /* Tell the draw function that we have sorted the data */
    oSettings.bSorted = true;
  }


  function _fnSortAria(settings) {
    var label;
    var nextSort;
    var columns = settings.aoColumns;
    var aSort = _fnSortFlatten(settings);
    var oAria = settings.oLanguage.oAria;

    // ARIA attributes - need to loop all columns, to update all (removing old
    // attributes as needed)
    for (var i = 0, iLen = columns.length; i < iLen; i++) {
      var col = columns[i];
      var asSorting = col.asSorting;
      var sTitle = col.sTitle.replace(/<.*?>/g, "");
      var th = col.nTh;

      // IE7 is throwing an error when setting these properties with jQuery's
      // attr() and removeAttr() methods...
      th.removeAttribute('aria-sort');

      /* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */
      if (col.bSortable) {
        if (aSort.length > 0 && aSort[0].col == i) {
          th.setAttribute('aria-sort', aSort[0].dir == "asc" ? "ascending" : "descending");
          nextSort = asSorting[aSort[0].index + 1] || asSorting[0];
        }
        else {
          nextSort = asSorting[0];
        }

        label = sTitle + ( nextSort === "asc" ?
            oAria.sSortAscending :
            oAria.sSortDescending
        );
      }
      else {
        label = sTitle;
      }

      th.setAttribute('aria-label', label);
    }
  }


  /**
   * Function to run on user sort request
   *  @param {object} settings dataTables settings object
   *  @param {node} attachTo node to attach the handler to
   *  @param {int} colIdx column sorting index
   *  @param {boolean} [append=false] Append the requested sort to the existing
   *    sort if true (i.e. multi-column sort)
   *  @param {function} [callback] callback function
   *  @memberof DataTable#oApi
   */
  function _fnSortListener(settings, colIdx, append, callback) {
    var col = settings.aoColumns[colIdx];
    var sorting = settings.aaSorting;
    var asSorting = col.asSorting;
    var nextSortIdx;
    var next = function (a, overflow) {
      var idx = a._idx;
      if (idx === undefined) {
        idx = $.inArray(a[1], asSorting);
      }

      return idx + 1 < asSorting.length ?
        idx + 1 :
        overflow ?
          null :
          0;
    };

    // Convert to 2D array if needed
    if (typeof sorting[0] === 'number') {
      sorting = settings.aaSorting = [sorting];
    }

    // If appending the sort then we are multi-column sorting
    if (append && settings.oFeatures.bSortMulti) {
      // Are we already doing some kind of sort on this column?
      var sortIdx = $.inArray(colIdx, _pluck(sorting, '0'));

      if (sortIdx !== -1) {
        // Yes, modify the sort
        nextSortIdx = next(sorting[sortIdx], true);

        if (nextSortIdx === null && sorting.length === 1) {
          nextSortIdx = 0; // can't remove sorting completely
        }

        if (nextSortIdx === null) {
          sorting.splice(sortIdx, 1);
        }
        else {
          sorting[sortIdx][1] = asSorting[nextSortIdx];
          sorting[sortIdx]._idx = nextSortIdx;
        }
      }
      else {
        // No sort on this column yet
        sorting.push([colIdx, asSorting[0], 0]);
        sorting[sorting.length - 1]._idx = 0;
      }
    }
    else if (sorting.length && sorting[0][0] == colIdx) {
      // Single column - already sorting on this column, modify the sort
      nextSortIdx = next(sorting[0]);

      sorting.length = 1;
      sorting[0][1] = asSorting[nextSortIdx];
      sorting[0]._idx = nextSortIdx;
    }
    else {
      // Single column - sort only on this column
      sorting.length = 0;
      sorting.push([colIdx, asSorting[0]]);
      sorting[0]._idx = 0;
    }

    // Run the sort by calling a full redraw
    _fnReDraw(settings);

    // callback used for async user interaction
    if (typeof callback == 'function') {
      callback(settings);
    }
  }


  /**
   * Attach a sort handler (click) to a node
   *  @param {object} settings dataTables settings object
   *  @param {node} attachTo node to attach the handler to
   *  @param {int} colIdx column sorting index
   *  @param {function} [callback] callback function
   *  @memberof DataTable#oApi
   */
  function _fnSortAttachListener(settings, attachTo, colIdx, callback) {
    var col = settings.aoColumns[colIdx];

    _fnBindAction(attachTo, {}, function (e) {
      /* If the column is not sortable - don't to anything */
      if (col.bSortable === false) {
        return;
      }

      // If processing is enabled use a timeout to allow the processing
      // display to be shown - otherwise to it synchronously
      if (settings.oFeatures.bProcessing) {
        _fnProcessingDisplay(settings, true);

        setTimeout(function () {
          _fnSortListener(settings, colIdx, e.shiftKey, callback);

          // In server-side processing, the draw callback will remove the
          // processing display
          if (_fnDataSource(settings) !== 'ssp') {
            _fnProcessingDisplay(settings, false);
          }
        }, 0);
      }
      else {
        _fnSortListener(settings, colIdx, e.shiftKey, callback);
      }
    });
  }


  /**
   * Set the sorting classes on table's body, Note: it is safe to call this function
   * when bSort and bSortClasses are false
   *  @param {object} oSettings dataTables settings object
   *  @memberof DataTable#oApi
   */
  function _fnSortingClasses(settings) {
    var oldSort = settings.aLastSort;
    var sortClass = settings.oClasses.sSortColumn;
    var sort = _fnSortFlatten(settings);
    var features = settings.oFeatures;
    var i, ien, colIdx;

    if (features.bSort && features.bSortClasses) {
      // Remove old sorting classes
      for (i = 0, ien = oldSort.length; i < ien; i++) {
        colIdx = oldSort[i].src;

        // Remove column sorting
        $(_pluck(settings.aoData, 'anCells', colIdx))
          .removeClass(sortClass + (i < 2 ? i + 1 : 3));
      }

      // Add new column sorting
      for (i = 0, ien = sort.length; i < ien; i++) {
        colIdx = sort[i].src;

        $(_pluck(settings.aoData, 'anCells', colIdx))
          .addClass(sortClass + (i < 2 ? i + 1 : 3));
      }
    }

    settings.aLastSort = sort;
  }


  // Get the data to sort a column, be it from cache, fresh (populating the
  // cache), or from a sort formatter
  function _fnSortData(settings, idx) {
    // Custom sorting function - provided by the sort data type
    var column = settings.aoColumns[idx];
    var customSort = DataTable.ext.order[column.sSortDataType];
    var customData;

    if (customSort) {
      customData = customSort.call(settings.oInstance, settings, idx,
        _fnColumnIndexToVisible(settings, idx)
      );
    }

    // Use / populate cache
    var row, cellData;
    var formatter = DataTable.ext.type.order[column.sType + "-pre"];

    for (var i = 0, ien = settings.aoData.length; i < ien; i++) {
      row = settings.aoData[i];

      if (!row._aSortData) {
        row._aSortData = [];
      }

      if (!row._aSortData[idx] || customSort) {
        cellData = customSort ?
          customData[i] : // If there was a custom sort function, use data from there
          _fnGetCellData(settings, i, idx, 'sort');

        row._aSortData[idx] = formatter ?
          formatter(cellData) :
          cellData;
      }
    }
  }


  /**
   * Save the state of a table
   *  @param {object} oSettings dataTables settings object
   *  @memberof DataTable#oApi
   */
  function _fnSaveState(settings) {
    if (!settings.oFeatures.bStateSave || settings.bDestroying) {
      return;
    }

    /* Store the interesting variables */
    var state = {
      time: +new Date(),
      start: settings._iDisplayStart,
      length: settings._iDisplayLength,
      order: $.extend(true, [], settings.aaSorting),
      search: _fnSearchToCamel(settings.oPreviousSearch),
      columns: $.map(settings.aoColumns, function (col, i) {
        return {
          visible: col.bVisible,
          search: _fnSearchToCamel(settings.aoPreSearchCols[i])
        };
      })
    };

    _fnCallbackFire(settings, "aoStateSaveParams", 'stateSaveParams', [settings, state]);

    settings.oSavedState = state;
    settings.fnStateSaveCallback.call(settings.oInstance, settings, state);
  }


  /**
   * Attempt to load a saved table state
   *  @param {object} oSettings dataTables settings object
   *  @param {object} oInit DataTables init object so we can override settings
   *  @param {function} callback Callback to execute when the state has been loaded
   *  @memberof DataTable#oApi
   */
  function _fnLoadState(settings, oInit, callback) {
    var i, ien;
    var columns = settings.aoColumns;
    var loaded = function (s) {
      if (!s || !s.time) {
        callback();
        return;
      }

      // Allow custom and plug-in manipulation functions to alter the saved data set and
      // cancelling of loading by returning false
      var abStateLoad = _fnCallbackFire(settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s]);
      if ($.inArray(false, abStateLoad) !== -1) {
        callback();
        return;
      }

      // Reject old data
      var duration = settings.iStateDuration;
      if (duration > 0 && s.time < +new Date() - (duration * 1000)) {
        callback();
        return;
      }

      // Number of columns have changed - all bets are off, no restore of settings
      if (s.columns && columns.length !== s.columns.length) {
        callback();
        return;
      }

      // Store the saved state so it might be accessed at any time
      settings.oLoadedState = $.extend(true, {}, s);

      // Restore key features - todo - for 1.11 this needs to be done by
      // subscribed events
      if (s.start !== undefined) {
        settings._iDisplayStart = s.start;
        settings.iInitDisplayStart = s.start;
      }
      if (s.length !== undefined) {
        settings._iDisplayLength = s.length;
      }

      // Order
      if (s.order !== undefined) {
        settings.aaSorting = [];
        $.each(s.order, function (i, col) {
          settings.aaSorting.push(col[0] >= columns.length ?
            [0, col[1]] :
            col
          );
        });
      }

      // Search
      if (s.search !== undefined) {
        $.extend(settings.oPreviousSearch, _fnSearchToHung(s.search));
      }

      // Columns
      //
      if (s.columns) {
        for (i = 0, ien = s.columns.length; i < ien; i++) {
          var col = s.columns[i];

          // Visibility
          if (col.visible !== undefined) {
            columns[i].bVisible = col.visible;
          }

          // Search
          if (col.search !== undefined) {
            $.extend(settings.aoPreSearchCols[i], _fnSearchToHung(col.search));
          }
        }
      }

      _fnCallbackFire(settings, 'aoStateLoaded', 'stateLoaded', [settings, s]);
      callback();
    }

    if (!settings.oFeatures.bStateSave) {
      callback();
      return;
    }

    var state = settings.fnStateLoadCallback.call(settings.oInstance, settings, loaded);

    if (state !== undefined) {
      loaded(state);
    }
    // otherwise, wait for the loaded callback to be executed
  }


  /**
   * Return the settings object for a particular table
   *  @param {node} table table we are using as a dataTable
   *  @returns {object} Settings object - or null if not found
   *  @memberof DataTable#oApi
   */
  function _fnSettingsFromNode(table) {
    var settings = DataTable.settings;
    var idx = $.inArray(table, _pluck(settings, 'nTable'));

    return idx !== -1 ?
      settings[idx] :
      null;
  }


  /**
   * Log an error message
   *  @param {object} settings dataTables settings object
   *  @param {int} level log error messages, or display them to the user
   *  @param {string} msg error message
   *  @param {int} tn Technical note id to get more information about the error.
   *  @memberof DataTable#oApi
   */
  function _fnLog(settings, level, msg, tn) {
    msg = 'DataTables warning: ' +
      (settings ? 'table id=' + settings.sTableId + ' - ' : '') + msg;

    if (tn) {
      msg += '. For more information about this error, please see ' +
        'http://datatables.net/tn/' + tn;
    }

    if (!level) {
      // Backwards compatibility pre 1.10
      var ext = DataTable.ext;
      var type = ext.sErrMode || ext.errMode;

      if (settings) {
        _fnCallbackFire(settings, null, 'error', [settings, tn, msg]);
      }

      if (type == 'alert') {
        alert(msg);
      }
      else if (type == 'throw') {
        throw new Error(msg);
      }
      else if (typeof type == 'function') {
        type(settings, tn, msg);
      }
    }
    else if (window.console && console.log) {
      console.log(msg);
    }
  }


  /**
   * See if a property is defined on one object, if so assign it to the other object
   *  @param {object} ret target object
   *  @param {object} src source object
   *  @param {string} name property
   *  @param {string} [mappedName] name to map too - optional, name used if not given
   *  @memberof DataTable#oApi
   */
  function _fnMap(ret, src, name, mappedName) {
    if ($.isArray(name)) {
      $.each(name, function (i, val) {
        if ($.isArray(val)) {
          _fnMap(ret, src, val[0], val[1]);
        }
        else {
          _fnMap(ret, src, val);
        }
      });

      return;
    }

    if (mappedName === undefined) {
      mappedName = name;
    }

    if (src[name] !== undefined) {
      ret[mappedName] = src[name];
    }
  }


  /**
   * Extend objects - very similar to jQuery.extend, but deep copy objects, and
   * shallow copy arrays. The reason we need to do this, is that we don't want to
   * deep copy array init values (such as aaSorting) since the dev wouldn't be
   * able to override them, but we do want to deep copy arrays.
   *  @param {object} out Object to extend
   *  @param {object} extender Object from which the properties will be applied to
   *      out
   *  @param {boolean} breakRefs If true, then arrays will be sliced to take an
   *      independent copy with the exception of the `data` or `aaData` parameters
   *      if they are present. This is so you can pass in a collection to
   *      DataTables and have that used as your data source without breaking the
   *      references
   *  @returns {object} out Reference, just for convenience - out === the return.
   *  @memberof DataTable#oApi
   *  @todo This doesn't take account of arrays inside the deep copied objects.
   */
  function _fnExtend(out, extender, breakRefs) {
    var val;

    for (var prop in extender) {
      if (extender.hasOwnProperty(prop)) {
        val = extender[prop];

        if ($.isPlainObject(val)) {
          if (!$.isPlainObject(out[prop])) {
            out[prop] = {};
          }
          $.extend(true, out[prop], val);
        }
        else if (breakRefs && prop !== 'data' && prop !== 'aaData' && $.isArray(val)) {
          out[prop] = val.slice();
        }
        else {
          out[prop] = val;
        }
      }
    }

    return out;
  }


  /**
   * Bind an event handers to allow a click or return key to activate the callback.
   * This is good for accessibility since a return on the keyboard will have the
   * same effect as a click, if the element has focus.
   *  @param {element} n Element to bind the action to
   *  @param {object} oData Data object to pass to the triggered function
   *  @param {function} fn Callback function for when the event is triggered
   *  @memberof DataTable#oApi
   */
  function _fnBindAction(n, oData, fn) {
    $(n)
      .on('click.DT', oData, function (e) {
        n.blur(); // Remove focus outline for mouse users
        fn(e);
      })
      .on('keypress.DT', oData, function (e) {
        if (e.which === 13) {
          e.preventDefault();
          fn(e);
        }
      })
      .on('selectstart.DT', function () {
        /* Take the brutal approach to cancelling text selection */
        return false;
      });
  }


  /**
   * Register a callback function. Easily allows a callback function to be added to
   * an array store of callback functions that can then all be called together.
   *  @param {object} oSettings dataTables settings object
   *  @param {string} sStore Name of the array storage for the callbacks in oSettings
   *  @param {function} fn Function to be called back
   *  @param {string} sName Identifying name for the callback (i.e. a label)
   *  @memberof DataTable#oApi
   */
  function _fnCallbackReg(oSettings, sStore, fn, sName) {
    if (fn) {
      oSettings[sStore].push({
        "fn": fn,
        "sName": sName
      });
    }
  }


  /**
   * Fire callback functions and trigger events. Note that the loop over the
   * callback array store is done backwards! Further note that you do not want to
   * fire off triggers in time sensitive applications (for example cell creation)
   * as its slow.
   *  @param {object} settings dataTables settings object
   *  @param {string} callbackArr Name of the array storage for the callbacks in
   *      oSettings
   *  @param {string} eventName Name of the jQuery custom event to trigger. If
   *      null no trigger is fired
   *  @param {array} args Array of arguments to pass to the callback function /
   *      trigger
   *  @memberof DataTable#oApi
   */
  function _fnCallbackFire(settings, callbackArr, eventName, args) {
    var ret = [];

    if (callbackArr) {
      ret = $.map(settings[callbackArr].slice().reverse(), function (val, i) {
        return val.fn.apply(settings.oInstance, args);
      });
    }

    if (eventName !== null) {
      var e = $.Event(eventName + '.dt');

      $(settings.nTable).trigger(e, args);

      ret.push(e.result);
    }

    return ret;
  }


  function _fnLengthOverflow(settings) {
    var
      start = settings._iDisplayStart,
      end = settings.fnDisplayEnd(),
      len = settings._iDisplayLength;

    /* If we have space to show extra rows (backing up from the end point - then do so */
    if (start >= end) {
      start = end - len;
    }

    // Keep the start record on the current page
    start -= (start % len);

    if (len === -1 || start < 0) {
      start = 0;
    }

    settings._iDisplayStart = start;
  }


  function _fnRenderer(settings, type) {
    var renderer = settings.renderer;
    var host = DataTable.ext.renderer[type];

    if ($.isPlainObject(renderer) && renderer[type]) {
      // Specific renderer for this type. If available use it, otherwise use
      // the default.
      return host[renderer[type]] || host._;
    }
    else if (typeof renderer === 'string') {
      // Common renderer - if there is one available for this type use it,
      // otherwise use the default
      return host[renderer] || host._;
    }

    // Use the default
    return host._;
  }


  /**
   * Detect the data source being used for the table. Used to simplify the code
   * a little (ajax) and to make it compress a little smaller.
   *
   *  @param {object} settings dataTables settings object
   *  @returns {string} Data source
   *  @memberof DataTable#oApi
   */
  function _fnDataSource(settings) {
    if (settings.oFeatures.bServerSide) {
      return 'ssp';
    }
    else if (settings.ajax || settings.sAjaxSource) {
      return 'ajax';
    }
    return 'dom';
  }


  /**
   * Computed structure of the DataTables API, defined by the options passed to
   * `DataTable.Api.register()` when building the API.
   *
   * The structure is built in order to speed creation and extension of the Api
   * objects since the extensions are effectively pre-parsed.
   *
   * The array is an array of objects with the following structure, where this
   * base array represents the Api prototype base:
   *
   *     [
   *       {
	 *         name:      'data'                -- string   - Property name
	 *         val:       function () {},       -- function - Api method (or undefined if just an object
	 *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result
	 *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property
	 *       },
   *       {
	 *         name:     'row'
	 *         val:       {},
	 *         methodExt: [ ... ],
	 *         propExt:   [
	 *           {
	 *             name:      'data'
	 *             val:       function () {},
	 *             methodExt: [ ... ],
	 *             propExt:   [ ... ]
	 *           },
	 *           ...
	 *         ]
	 *       }
   *     ]
   *
   * @type {Array}
   * @ignore
   */
  var __apiStruct = [];


  /**
   * `Array.prototype` reference.
   *
   * @type object
   * @ignore
   */
  var __arrayProto = Array.prototype;


  /**
   * Abstraction for `context` parameter of the `Api` constructor to allow it to
   * take several different forms for ease of use.
   *
   * Each of the input parameter types will be converted to a DataTables settings
   * object where possible.
   *
   * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one
   *   of:
   *
   *   * `string` - jQuery selector. Any DataTables' matching the given selector
   *     with be found and used.
   *   * `node` - `TABLE` node which has already been formed into a DataTable.
   *   * `jQuery` - A jQuery object of `TABLE` nodes.
   *   * `object` - DataTables settings object
   *   * `DataTables.Api` - API instance
   * @return {array|null} Matching DataTables settings objects. `null` or
   *   `undefined` is returned if no matching DataTable is found.
   * @ignore
   */
  var _toSettings = function (mixed) {
    var idx, jq;
    var settings = DataTable.settings;
    var tables = $.map(settings, function (el, i) {
      return el.nTable;
    });

    if (!mixed) {
      return [];
    }
    else if (mixed.nTable && mixed.oApi) {
      // DataTables settings object
      return [mixed];
    }
    else if (mixed.nodeName && mixed.nodeName.toLowerCase() === 'table') {
      // Table node
      idx = $.inArray(mixed, tables);
      return idx !== -1 ? [settings[idx]] : null;
    }
    else if (mixed && typeof mixed.settings === 'function') {
      return mixed.settings().toArray();
    }
    else if (typeof mixed === 'string') {
      // jQuery selector
      jq = $(mixed);
    }
    else if (mixed instanceof $) {
      // jQuery object (also DataTables instance)
      jq = mixed;
    }

    if (jq) {
      return jq.map(function (i) {
        idx = $.inArray(this, tables);
        return idx !== -1 ? settings[idx] : null;
      }).toArray();
    }
  };


  /**
   * DataTables API class - used to control and interface with  one or more
   * DataTables enhanced tables.
   *
   * The API class is heavily based on jQuery, presenting a chainable interface
   * that you can use to interact with tables. Each instance of the API class has
   * a "context" - i.e. the tables that it will operate on. This could be a single
   * table, all tables on a page or a sub-set thereof.
   *
   * Additionally the API is designed to allow you to easily work with the data in
   * the tables, retrieving and manipulating it as required. This is done by
   * presenting the API class as an array like interface. The contents of the
   * array depend upon the actions requested by each method (for example
   * `rows().nodes()` will return an array of nodes, while `rows().data()` will
   * return an array of objects or arrays depending upon your table's
   * configuration). The API object has a number of array like methods (`push`,
   * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,
   * `unique` etc) to assist your working with the data held in a table.
   *
   * Most methods (those which return an Api instance) are chainable, which means
   * the return from a method call also has all of the methods available that the
   * top level object had. For example, these two calls are equivalent:
   *
   *     // Not chained
   *     api.row.add( {...} );
   *     api.draw();
   *
   *     // Chained
   *     api.row.add( {...} ).draw();
   *
   * @class DataTable.Api
   * @param {array|object|string|jQuery} context DataTable identifier. This is
   *   used to define which DataTables enhanced tables this API will operate on.
   *   Can be one of:
   *
   *   * `string` - jQuery selector. Any DataTables' matching the given selector
   *     with be found and used.
   *   * `node` - `TABLE` node which has already been formed into a DataTable.
   *   * `jQuery` - A jQuery object of `TABLE` nodes.
   *   * `object` - DataTables settings object
   * @param {array} [data] Data to initialise the Api instance with.
   *
   * @example
   *   // Direct initialisation during DataTables construction
   *   var api = $('#example').DataTable();
   *
   * @example
   *   // Initialisation using a DataTables jQuery object
   *   var api = $('#example').dataTable().api();
   *
   * @example
   *   // Initialisation as a constructor
   *   var api = new $.fn.DataTable.Api( 'table.dataTable' );
   */
  _Api = function (context, data) {
    if (!(this instanceof _Api)) {
      return new _Api(context, data);
    }

    var settings = [];
    var ctxSettings = function (o) {
      var a = _toSettings(o);
      if (a) {
        settings = settings.concat(a);
      }
    };

    if ($.isArray(context)) {
      for (var i = 0, ien = context.length; i < ien; i++) {
        ctxSettings(context[i]);
      }
    }
    else {
      ctxSettings(context);
    }

    // Remove duplicates
    this.context = _unique(settings);

    // Initial data
    if (data) {
      $.merge(this, data);
    }

    // selector
    this.selector = {
      rows: null,
      cols: null,
      opts: null
    };

    _Api.extend(this, this, __apiStruct);
  };

  DataTable.Api = _Api;

  // Don't destroy the existing prototype, just extend it. Required for jQuery 2's
  // isPlainObject.
  $.extend(_Api.prototype, {
    any: function () {
      return this.count() !== 0;
    },


    concat: __arrayProto.concat,


    context: [], // array of table settings objects


    count: function () {
      return this.flatten().length;
    },


    each: function (fn) {
      for (var i = 0, ien = this.length; i < ien; i++) {
        fn.call(this, this[i], i, this);
      }

      return this;
    },


    eq: function (idx) {
      var ctx = this.context;

      return ctx.length > idx ?
        new _Api(ctx[idx], this[idx]) :
        null;
    },


    filter: function (fn) {
      var a = [];

      if (__arrayProto.filter) {
        a = __arrayProto.filter.call(this, fn, this);
      }
      else {
        // Compatibility for browsers without EMCA-252-5 (JS 1.6)
        for (var i = 0, ien = this.length; i < ien; i++) {
          if (fn.call(this, this[i], i, this)) {
            a.push(this[i]);
          }
        }
      }

      return new _Api(this.context, a);
    },


    flatten: function () {
      var a = [];
      return new _Api(this.context, a.concat.apply(a, this.toArray()));
    },


    join: __arrayProto.join,


    indexOf: __arrayProto.indexOf || function (obj, start) {
      for (var i = (start || 0), ien = this.length; i < ien; i++) {
        if (this[i] === obj) {
          return i;
        }
      }
      return -1;
    },

    iterator: function (flatten, type, fn, alwaysNew) {
      var
        a = [], ret,
        i, ien, j, jen,
        context = this.context,
        rows, items, item,
        selector = this.selector;

      // Argument shifting
      if (typeof flatten === 'string') {
        alwaysNew = fn;
        fn = type;
        type = flatten;
        flatten = false;
      }

      for (i = 0, ien = context.length; i < ien; i++) {
        var apiInst = new _Api(context[i]);

        if (type === 'table') {
          ret = fn.call(apiInst, context[i], i);

          if (ret !== undefined) {
            a.push(ret);
          }
        }
        else if (type === 'columns' || type === 'rows') {
          // this has same length as context - one entry for each table
          ret = fn.call(apiInst, context[i], this[i], i);

          if (ret !== undefined) {
            a.push(ret);
          }
        }
        else if (type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell') {
          // columns and rows share the same structure.
          // 'this' is an array of column indexes for each context
          items = this[i];

          if (type === 'column-rows') {
            rows = _selector_row_indexes(context[i], selector.opts);
          }

          for (j = 0, jen = items.length; j < jen; j++) {
            item = items[j];

            if (type === 'cell') {
              ret = fn.call(apiInst, context[i], item.row, item.column, i, j);
            }
            else {
              ret = fn.call(apiInst, context[i], item, i, j, rows);
            }

            if (ret !== undefined) {
              a.push(ret);
            }
          }
        }
      }

      if (a.length || alwaysNew) {
        var api = new _Api(context, flatten ? a.concat.apply([], a) : a);
        var apiSelector = api.selector;
        apiSelector.rows = selector.rows;
        apiSelector.cols = selector.cols;
        apiSelector.opts = selector.opts;
        return api;
      }
      return this;
    },


    lastIndexOf: __arrayProto.lastIndexOf || function (obj, start) {
      // Bit cheeky...
      return this.indexOf.apply(this.toArray.reverse(), arguments);
    },


    length: 0,


    map: function (fn) {
      var a = [];

      if (__arrayProto.map) {
        a = __arrayProto.map.call(this, fn, this);
      }
      else {
        // Compatibility for browsers without EMCA-252-5 (JS 1.6)
        for (var i = 0, ien = this.length; i < ien; i++) {
          a.push(fn.call(this, this[i], i));
        }
      }

      return new _Api(this.context, a);
    },


    pluck: function (prop) {
      return this.map(function (el) {
        return el[prop];
      });
    },

    pop: __arrayProto.pop,


    push: __arrayProto.push,


    // Does not return an API instance
    reduce: __arrayProto.reduce || function (fn, init) {
      return _fnReduce(this, fn, init, 0, this.length, 1);
    },


    reduceRight: __arrayProto.reduceRight || function (fn, init) {
      return _fnReduce(this, fn, init, this.length - 1, -1, -1);
    },


    reverse: __arrayProto.reverse,


    // Object with rows, columns and opts
    selector: null,


    shift: __arrayProto.shift,


    slice: function () {
      return new _Api(this.context, this);
    },


    sort: __arrayProto.sort, // ? name - order?


    splice: __arrayProto.splice,


    toArray: function () {
      return __arrayProto.slice.call(this);
    },


    to$: function () {
      return $(this);
    },


    toJQuery: function () {
      return $(this);
    },


    unique: function () {
      return new _Api(this.context, _unique(this));
    },


    unshift: __arrayProto.unshift
  });


  _Api.extend = function (scope, obj, ext) {
    // Only extend API instances and static properties of the API
    if (!ext.length || !obj || ( !(obj instanceof _Api) && !obj.__dt_wrapper )) {
      return;
    }

    var
      i, ien,
      j, jen,
      struct, inner,
      methodScoping = function (scope, fn, struc) {
        return function () {
          var ret = fn.apply(scope, arguments);

          // Method extension
          _Api.extend(ret, ret, struc.methodExt);
          return ret;
        };
      };

    for (i = 0, ien = ext.length; i < ien; i++) {
      struct = ext[i];

      // Value
      obj[struct.name] = typeof struct.val === 'function' ?
        methodScoping(scope, struct.val, struct) :
        $.isPlainObject(struct.val) ?
          {} :
          struct.val;

      obj[struct.name].__dt_wrapper = true;

      // Property extension
      _Api.extend(scope, obj[struct.name], struct.propExt);
    }
  };


  // @todo - Is there need for an augment function?
  // _Api.augment = function ( inst, name )
  // {
  // 	// Find src object in the structure from the name
  // 	var parts = name.split('.');

  // 	_Api.extend( inst, obj );
  // };


  //     [
  //       {
  //         name:      'data'                -- string   - Property name
  //         val:       function () {},       -- function - Api method (or undefined if just an object
  //         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result
  //         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property
  //       },
  //       {
  //         name:     'row'
  //         val:       {},
  //         methodExt: [ ... ],
  //         propExt:   [
  //           {
  //             name:      'data'
  //             val:       function () {},
  //             methodExt: [ ... ],
  //             propExt:   [ ... ]
  //           },
  //           ...
  //         ]
  //       }
  //     ]

  _Api.register = _api_register = function (name, val) {
    if ($.isArray(name)) {
      for (var j = 0, jen = name.length; j < jen; j++) {
        _Api.register(name[j], val);
      }
      return;
    }

    var
      i, ien,
      heir = name.split('.'),
      struct = __apiStruct,
      key, method;

    var find = function (src, name) {
      for (var i = 0, ien = src.length; i < ien; i++) {
        if (src[i].name === name) {
          return src[i];
        }
      }
      return null;
    };

    for (i = 0, ien = heir.length; i < ien; i++) {
      method = heir[i].indexOf('()') !== -1;
      key = method ?
        heir[i].replace('()', '') :
        heir[i];

      var src = find(struct, key);
      if (!src) {
        src = {
          name: key,
          val: {},
          methodExt: [],
          propExt: []
        };
        struct.push(src);
      }

      if (i === ien - 1) {
        src.val = val;
      }
      else {
        struct = method ?
          src.methodExt :
          src.propExt;
      }
    }
  };


  _Api.registerPlural = _api_registerPlural = function (pluralName, singularName, val) {
    _Api.register(pluralName, val);

    _Api.register(singularName, function () {
      var ret = val.apply(this, arguments);

      if (ret === this) {
        // Returned item is the API instance that was passed in, return it
        return this;
      }
      else if (ret instanceof _Api) {
        // New API instance returned, want the value from the first item
        // in the returned array for the singular result.
        return ret.length ?
          $.isArray(ret[0]) ?
            new _Api(ret.context, ret[0]) : // Array results are 'enhanced'
            ret[0] :
          undefined;
      }

      // Non-API return - just fire it back
      return ret;
    });
  };


  /**
   * Selector for HTML tables. Apply the given selector to the give array of
   * DataTables settings objects.
   *
   * @param {string|integer} [selector] jQuery selector string or integer
   * @param  {array} Array of DataTables settings objects to be filtered
   * @return {array}
   * @ignore
   */
  var __table_selector = function (selector, a) {
    // Integer is used to pick out a table by index
    if (typeof selector === 'number') {
      return [a[selector]];
    }

    // Perform a jQuery selector on the table nodes
    var nodes = $.map(a, function (el, i) {
      return el.nTable;
    });

    return $(nodes)
      .filter(selector)
      .map(function (i) {
        // Need to translate back from the table node to the settings
        var idx = $.inArray(this, nodes);
        return a[idx];
      })
      .toArray();
  };


  /**
   * Context selector for the API's context (i.e. the tables the API instance
   * refers to.
   *
   * @name    DataTable.Api#tables
   * @param {string|integer} [selector] Selector to pick which tables the iterator
   *   should operate on. If not given, all tables in the current context are
   *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to
   *   select multiple tables or as an integer to select a single table.
   * @returns {DataTable.Api} Returns a new API instance if a selector is given.
   */
  _api_register('tables()', function (selector) {
    // A new instance is created if there was a selector specified
    return selector ?
      new _Api(__table_selector(selector, this.context)) :
      this;
  });


  _api_register('table()', function (selector) {
    var tables = this.tables(selector);
    var ctx = tables.context;

    // Truncate to the first matched table
    return ctx.length ?
      new _Api(ctx[0]) :
      tables;
  });


  _api_registerPlural('tables().nodes()', 'table().node()', function () {
    return this.iterator('table', function (ctx) {
      return ctx.nTable;
    }, 1);
  });


  _api_registerPlural('tables().body()', 'table().body()', function () {
    return this.iterator('table', function (ctx) {
      return ctx.nTBody;
    }, 1);
  });


  _api_registerPlural('tables().header()', 'table().header()', function () {
    return this.iterator('table', function (ctx) {
      return ctx.nTHead;
    }, 1);
  });


  _api_registerPlural('tables().footer()', 'table().footer()', function () {
    return this.iterator('table', function (ctx) {
      return ctx.nTFoot;
    }, 1);
  });


  _api_registerPlural('tables().containers()', 'table().container()', function () {
    return this.iterator('table', function (ctx) {
      return ctx.nTableWrapper;
    }, 1);
  });


  /**
   * Redraw the tables in the current context.
   */
  _api_register('draw()', function (paging) {
    return this.iterator('table', function (settings) {
      if (paging === 'page') {
        _fnDraw(settings);
      }
      else {
        if (typeof paging === 'string') {
          paging = paging === 'full-hold' ?
            false :
            true;
        }

        _fnReDraw(settings, paging === false);
      }
    });
  });


  /**
   * Get the current page index.
   *
   * @return {integer} Current page index (zero based)
   */
  /**
   * Set the current page.
   *
   * Note that if you attempt to show a page which does not exist, DataTables will
   * not throw an error, but rather reset the paging.
   *
   * @param {integer|string} action The paging action to take. This can be one of:
   *  * `integer` - The page index to jump to
   *  * `string` - An action to take:
   *    * `first` - Jump to first page.
   *    * `next` - Jump to the next page
   *    * `previous` - Jump to previous page
   *    * `last` - Jump to the last page.
   * @returns {DataTables.Api} this
   */
  _api_register('page()', function (action) {
    if (action === undefined) {
      return this.page.info().page; // not an expensive call
    }

    // else, have an action to take on all tables
    return this.iterator('table', function (settings) {
      _fnPageChange(settings, action);
    });
  });


  /**
   * Paging information for the first table in the current context.
   *
   * If you require paging information for another table, use the `table()` method
   * with a suitable selector.
   *
   * @return {object} Object with the following properties set:
   *  * `page` - Current page index (zero based - i.e. the first page is `0`)
   *  * `pages` - Total number of pages
   *  * `start` - Display index for the first record shown on the current page
   *  * `end` - Display index for the last record shown on the current page
   *  * `length` - Display length (number of records). Note that generally `start
   *    + length = end`, but this is not always true, for example if there are
   *    only 2 records to show on the final page, with a length of 10.
   *  * `recordsTotal` - Full data set length
   *  * `recordsDisplay` - Data set length once the current filtering criterion
   *    are applied.
   */
  _api_register('page.info()', function (action) {
    if (this.context.length === 0) {
      return undefined;
    }

    var
      settings = this.context[0],
      start = settings._iDisplayStart,
      len = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,
      visRecords = settings.fnRecordsDisplay(),
      all = len === -1;

    return {
      "page": all ? 0 : Math.floor(start / len),
      "pages": all ? 1 : Math.ceil(visRecords / len),
      "start": start,
      "end": settings.fnDisplayEnd(),
      "length": len,
      "recordsTotal": settings.fnRecordsTotal(),
      "recordsDisplay": visRecords,
      "serverSide": _fnDataSource(settings) === 'ssp'
    };
  });


  /**
   * Get the current page length.
   *
   * @return {integer} Current page length. Note `-1` indicates that all records
   *   are to be shown.
   */
  /**
   * Set the current page length.
   *
   * @param {integer} Page length to set. Use `-1` to show all records.
   * @returns {DataTables.Api} this
   */
  _api_register('page.len()', function (len) {
    // Note that we can't call this function 'length()' because `length`
    // is a Javascript property of functions which defines how many arguments
    // the function expects.
    if (len === undefined) {
      return this.context.length !== 0 ?
        this.context[0]._iDisplayLength :
        undefined;
    }

    // else, set the page length
    return this.iterator('table', function (settings) {
      _fnLengthChange(settings, len);
    });
  });


  var __reload = function (settings, holdPosition, callback) {
    // Use the draw event to trigger a callback
    if (callback) {
      var api = new _Api(settings);

      api.one('draw', function () {
        callback(api.ajax.json());
      });
    }

    if (_fnDataSource(settings) == 'ssp') {
      _fnReDraw(settings, holdPosition);
    }
    else {
      _fnProcessingDisplay(settings, true);

      // Cancel an existing request
      var xhr = settings.jqXHR;
      if (xhr && xhr.readyState !== 4) {
        xhr.abort();
      }

      // Trigger xhr
      _fnBuildAjax(settings, [], function (json) {
        _fnClearTable(settings);

        var data = _fnAjaxDataSrc(settings, json);
        for (var i = 0, ien = data.length; i < ien; i++) {
          _fnAddData(settings, data[i]);
        }

        _fnReDraw(settings, holdPosition);
        _fnProcessingDisplay(settings, false);
      });
    }
  };


  /**
   * Get the JSON response from the last Ajax request that DataTables made to the
   * server. Note that this returns the JSON from the first table in the current
   * context.
   *
   * @return {object} JSON received from the server.
   */
  _api_register('ajax.json()', function () {
    var ctx = this.context;

    if (ctx.length > 0) {
      return ctx[0].json;
    }

    // else return undefined;
  });


  /**
   * Get the data submitted in the last Ajax request
   */
  _api_register('ajax.params()', function () {
    var ctx = this.context;

    if (ctx.length > 0) {
      return ctx[0].oAjaxData;
    }

    // else return undefined;
  });


  /**
   * Reload tables from the Ajax data source. Note that this function will
   * automatically re-draw the table when the remote data has been loaded.
   *
   * @param {boolean} [reset=true] Reset (default) or hold the current paging
   *   position. A full re-sort and re-filter is performed when this method is
   *   called, which is why the pagination reset is the default action.
   * @returns {DataTables.Api} this
   */
  _api_register('ajax.reload()', function (callback, resetPaging) {
    return this.iterator('table', function (settings) {
      __reload(settings, resetPaging === false, callback);
    });
  });


  /**
   * Get the current Ajax URL. Note that this returns the URL from the first
   * table in the current context.
   *
   * @return {string} Current Ajax source URL
   */
  /**
   * Set the Ajax URL. Note that this will set the URL for all tables in the
   * current context.
   *
   * @param {string} url URL to set.
   * @returns {DataTables.Api} this
   */
  _api_register('ajax.url()', function (url) {
    var ctx = this.context;

    if (url === undefined) {
      // get
      if (ctx.length === 0) {
        return undefined;
      }
      ctx = ctx[0];

      return ctx.ajax ?
        $.isPlainObject(ctx.ajax) ?
          ctx.ajax.url :
          ctx.ajax :
        ctx.sAjaxSource;
    }

    // set
    return this.iterator('table', function (settings) {
      if ($.isPlainObject(settings.ajax)) {
        settings.ajax.url = url;
      }
      else {
        settings.ajax = url;
      }
      // No need to consider sAjaxSource here since DataTables gives priority
      // to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any
      // value of `sAjaxSource` redundant.
    });
  });


  /**
   * Load data from the newly set Ajax URL. Note that this method is only
   * available when `ajax.url()` is used to set a URL. Additionally, this method
   * has the same effect as calling `ajax.reload()` but is provided for
   * convenience when setting a new URL. Like `ajax.reload()` it will
   * automatically redraw the table once the remote data has been loaded.
   *
   * @returns {DataTables.Api} this
   */
  _api_register('ajax.url().load()', function (callback, resetPaging) {
    // Same as a reload, but makes sense to present it for easy access after a
    // url change
    return this.iterator('table', function (ctx) {
      __reload(ctx, resetPaging === false, callback);
    });
  });


  var _selector_run = function (type, selector, selectFn, settings, opts) {
    var
      out = [], res,
      a, i, ien, j, jen,
      selectorType = typeof selector;

    // Can't just check for isArray here, as an API or jQuery instance might be
    // given with their array like look
    if (!selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined) {
      selector = [selector];
    }

    for (i = 0, ien = selector.length; i < ien; i++) {
      // Only split on simple strings - complex expressions will be jQuery selectors
      a = selector[i] && selector[i].split && !selector[i].match(/[\[\(:]/) ?
        selector[i].split(',') :
        [selector[i]];

      for (j = 0, jen = a.length; j < jen; j++) {
        res = selectFn(typeof a[j] === 'string' ? $.trim(a[j]) : a[j]);

        if (res && res.length) {
          out = out.concat(res);
        }
      }
    }

    // selector extensions
    var ext = _ext.selector[type];
    if (ext.length) {
      for (i = 0, ien = ext.length; i < ien; i++) {
        out = ext[i](settings, opts, out);
      }
    }

    return _unique(out);
  };


  var _selector_opts = function (opts) {
    if (!opts) {
      opts = {};
    }

    // Backwards compatibility for 1.9- which used the terminology filter rather
    // than search
    if (opts.filter && opts.search === undefined) {
      opts.search = opts.filter;
    }

    return $.extend({
      search: 'none',
      order: 'current',
      page: 'all'
    }, opts);
  };


  var _selector_first = function (inst) {
    // Reduce the API instance to the first item found
    for (var i = 0, ien = inst.length; i < ien; i++) {
      if (inst[i].length > 0) {
        // Assign the first element to the first item in the instance
        // and truncate the instance and context
        inst[0] = inst[i];
        inst[0].length = 1;
        inst.length = 1;
        inst.context = [inst.context[i]];

        return inst;
      }
    }

    // Not found - return an empty instance
    inst.length = 0;
    return inst;
  };


  var _selector_row_indexes = function (settings, opts) {
    var
      i, ien, tmp, a = [],
      displayFiltered = settings.aiDisplay,
      displayMaster = settings.aiDisplayMaster;

    var
      search = opts.search,  // none, applied, removed
      order = opts.order,   // applied, current, index (original - compatibility with 1.9)
      page = opts.page;    // all, current

    if (_fnDataSource(settings) == 'ssp') {
      // In server-side processing mode, most options are irrelevant since
      // rows not shown don't exist and the index order is the applied order
      // Removed is a special case - for consistency just return an empty
      // array
      return search === 'removed' ?
        [] :
        _range(0, displayMaster.length);
    }
    else if (page == 'current') {
      // Current page implies that order=current and fitler=applied, since it is
      // fairly senseless otherwise, regardless of what order and search actually
      // are
      for (i = settings._iDisplayStart, ien = settings.fnDisplayEnd(); i < ien; i++) {
        a.push(displayFiltered[i]);
      }
    }
    else if (order == 'current' || order == 'applied') {
      a = search == 'none' ?
        displayMaster.slice() :                      // no search
        search == 'applied' ?
          displayFiltered.slice() :                // applied search
          $.map(displayMaster, function (el, i) { // removed search
            return $.inArray(el, displayFiltered) === -1 ? el : null;
          });
    }
    else if (order == 'index' || order == 'original') {
      for (i = 0, ien = settings.aoData.length; i < ien; i++) {
        if (search == 'none') {
          a.push(i);
        }
        else { // applied | removed
          tmp = $.inArray(i, displayFiltered);

          if ((tmp === -1 && search == 'removed') ||
            (tmp >= 0 && search == 'applied')) {
            a.push(i);
          }
        }
      }
    }

    return a;
  };


  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Rows
	 *
	 * {}          - no selector - use all available rows
	 * {integer}   - row aoData index
	 * {node}      - TR node
	 * {string}    - jQuery selector to apply to the TR elements
	 * {array}     - jQuery array of nodes, or simply an array of TR nodes
	 *
	 */


  var __row_selector = function (settings, selector, opts) {
    var rows;
    var run = function (sel) {
      var selInt = _intVal(sel);
      var i, ien;

      // Short cut - selector is a number and no options provided (default is
      // all records, so no need to check if the index is in there, since it
      // must be - dev error if the index doesn't exist).
      if (selInt !== null && !opts) {
        return [selInt];
      }

      if (!rows) {
        rows = _selector_row_indexes(settings, opts);
      }

      if (selInt !== null && $.inArray(selInt, rows) !== -1) {
        // Selector - integer
        return [selInt];
      }
      else if (sel === null || sel === undefined || sel === '') {
        // Selector - none
        return rows;
      }

      // Selector - function
      if (typeof sel === 'function') {
        return $.map(rows, function (idx) {
          var row = settings.aoData[idx];
          return sel(idx, row._aData, row.nTr) ? idx : null;
        });
      }

      // Get nodes in the order from the `rows` array with null values removed
      var nodes = _removeEmpty(
        _pluck_order(settings.aoData, rows, 'nTr')
      );

      // Selector - node
      if (sel.nodeName) {
        if (sel._DT_RowIndex !== undefined) {
          return [sel._DT_RowIndex]; // Property added by DT for fast lookup
        }
        else if (sel._DT_CellIndex) {
          return [sel._DT_CellIndex.row];
        }
        else {
          var host = $(sel).closest('*[data-dt-row]');
          return host.length ?
            [host.data('dt-row')] :
            [];
        }
      }

      // ID selector. Want to always be able to select rows by id, regardless
      // of if the tr element has been created or not, so can't rely upon
      // jQuery here - hence a custom implementation. This does not match
      // Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,
      // but to select it using a CSS selector engine (like Sizzle or
      // querySelect) it would need to need to be escaped for some characters.
      // DataTables simplifies this for row selectors since you can select
      // only a row. A # indicates an id any anything that follows is the id -
      // unescaped.
      if (typeof sel === 'string' && sel.charAt(0) === '#') {
        // get row index from id
        var rowObj = settings.aIds[sel.replace(/^#/, '')];
        if (rowObj !== undefined) {
          return [rowObj.idx];
        }

        // need to fall through to jQuery in case there is DOM id that
        // matches
      }

      // Selector - jQuery selector string, array of nodes or jQuery object/
      // As jQuery's .filter() allows jQuery objects to be passed in filter,
      // it also allows arrays, so this will cope with all three options
      return $(nodes)
        .filter(sel)
        .map(function () {
          return this._DT_RowIndex;
        })
        .toArray();
    };

    return _selector_run('row', selector, run, settings, opts);
  };


  _api_register('rows()', function (selector, opts) {
    // argument shifting
    if (selector === undefined) {
      selector = '';
    }
    else if ($.isPlainObject(selector)) {
      opts = selector;
      selector = '';
    }

    opts = _selector_opts(opts);

    var inst = this.iterator('table', function (settings) {
      return __row_selector(settings, selector, opts);
    }, 1);

    // Want argument shifting here and in __row_selector?
    inst.selector.rows = selector;
    inst.selector.opts = opts;

    return inst;
  });

  _api_register('rows().nodes()', function () {
    return this.iterator('row', function (settings, row) {
      return settings.aoData[row].nTr || undefined;
    }, 1);
  });

  _api_register('rows().data()', function () {
    return this.iterator(true, 'rows', function (settings, rows) {
      return _pluck_order(settings.aoData, rows, '_aData');
    }, 1);
  });

  _api_registerPlural('rows().cache()', 'row().cache()', function (type) {
    return this.iterator('row', function (settings, row) {
      var r = settings.aoData[row];
      return type === 'search' ? r._aFilterData : r._aSortData;
    }, 1);
  });

  _api_registerPlural('rows().invalidate()', 'row().invalidate()', function (src) {
    return this.iterator('row', function (settings, row) {
      _fnInvalidate(settings, row, src);
    });
  });

  _api_registerPlural('rows().indexes()', 'row().index()', function () {
    return this.iterator('row', function (settings, row) {
      return row;
    }, 1);
  });

  _api_registerPlural('rows().ids()', 'row().id()', function (hash) {
    var a = [];
    var context = this.context;

    // `iterator` will drop undefined values, but in this case we want them
    for (var i = 0, ien = context.length; i < ien; i++) {
      for (var j = 0, jen = this[i].length; j < jen; j++) {
        var id = context[i].rowIdFn(context[i].aoData[this[i][j]]._aData);
        a.push((hash === true ? '#' : '' ) + id);
      }
    }

    return new _Api(context, a);
  });

  _api_registerPlural('rows().remove()', 'row().remove()', function () {
    var that = this;

    this.iterator('row', function (settings, row, thatIdx) {
      var data = settings.aoData;
      var rowData = data[row];
      var i, ien, j, jen;
      var loopRow, loopCells;

      data.splice(row, 1);

      // Update the cached indexes
      for (i = 0, ien = data.length; i < ien; i++) {
        loopRow = data[i];
        loopCells = loopRow.anCells;

        // Rows
        if (loopRow.nTr !== null) {
          loopRow.nTr._DT_RowIndex = i;
        }

        // Cells
        if (loopCells !== null) {
          for (j = 0, jen = loopCells.length; j < jen; j++) {
            loopCells[j]._DT_CellIndex.row = i;
          }
        }
      }

      // Delete from the display arrays
      _fnDeleteIndex(settings.aiDisplayMaster, row);
      _fnDeleteIndex(settings.aiDisplay, row);
      _fnDeleteIndex(that[thatIdx], row, false); // maintain local indexes

      // For server-side processing tables - subtract the deleted row from the count
      if (settings._iRecordsDisplay > 0) {
        settings._iRecordsDisplay--;
      }

      // Check for an 'overflow' they case for displaying the table
      _fnLengthOverflow(settings);

      // Remove the row's ID reference if there is one
      var id = settings.rowIdFn(rowData._aData);
      if (id !== undefined) {
        delete settings.aIds[id];
      }
    });

    this.iterator('table', function (settings) {
      for (var i = 0, ien = settings.aoData.length; i < ien; i++) {
        settings.aoData[i].idx = i;
      }
    });

    return this;
  });


  _api_register('rows.add()', function (rows) {
    var newRows = this.iterator('table', function (settings) {
      var row, i, ien;
      var out = [];

      for (i = 0, ien = rows.length; i < ien; i++) {
        row = rows[i];

        if (row.nodeName && row.nodeName.toUpperCase() === 'TR') {
          out.push(_fnAddTr(settings, row)[0]);
        }
        else {
          out.push(_fnAddData(settings, row));
        }
      }

      return out;
    }, 1);

    // Return an Api.rows() extended instance, so rows().nodes() etc can be used
    var modRows = this.rows(-1);
    modRows.pop();
    $.merge(modRows, newRows);

    return modRows;
  });


  /**
   *
   */
  _api_register('row()', function (selector, opts) {
    return _selector_first(this.rows(selector, opts));
  });


  _api_register('row().data()', function (data) {
    var ctx = this.context;

    if (data === undefined) {
      // Get
      return ctx.length && this.length ?
        ctx[0].aoData[this[0]]._aData :
        undefined;
    }

    // Set
    ctx[0].aoData[this[0]]._aData = data;

    // Automatically invalidate
    _fnInvalidate(ctx[0], this[0], 'data');

    return this;
  });


  _api_register('row().node()', function () {
    var ctx = this.context;

    return ctx.length && this.length ?
      ctx[0].aoData[this[0]].nTr || null :
      null;
  });


  _api_register('row.add()', function (row) {
    // Allow a jQuery object to be passed in - only a single row is added from
    // it though - the first element in the set
    if (row instanceof $ && row.length) {
      row = row[0];
    }

    var rows = this.iterator('table', function (settings) {
      if (row.nodeName && row.nodeName.toUpperCase() === 'TR') {
        return _fnAddTr(settings, row)[0];
      }
      return _fnAddData(settings, row);
    });

    // Return an Api.rows() extended instance, with the newly added row selected
    return this.row(rows[0]);
  });


  var __details_add = function (ctx, row, data, klass) {
    // Convert to array of TR elements
    var rows = [];
    var addRow = function (r, k) {
      // Recursion to allow for arrays of jQuery objects
      if ($.isArray(r) || r instanceof $) {
        for (var i = 0, ien = r.length; i < ien; i++) {
          addRow(r[i], k);
        }
        return;
      }

      // If we get a TR element, then just add it directly - up to the dev
      // to add the correct number of columns etc
      if (r.nodeName && r.nodeName.toLowerCase() === 'tr') {
        rows.push(r);
      }
      else {
        // Otherwise create a row with a wrapper
        var created = $('<tr><td/></tr>').addClass(k);
        $('td', created)
          .addClass(k)
          .html(r)
          [0].colSpan = _fnVisbleColumns(ctx);

        rows.push(created[0]);
      }
    };

    addRow(data, klass);

    if (row._details) {
      row._details.detach();
    }

    row._details = $(rows);

    // If the children were already shown, that state should be retained
    if (row._detailsShow) {
      row._details.insertAfter(row.nTr);
    }
  };


  var __details_remove = function (api, idx) {
    var ctx = api.context;

    if (ctx.length) {
      var row = ctx[0].aoData[idx !== undefined ? idx : api[0]];

      if (row && row._details) {
        row._details.remove();

        row._detailsShow = undefined;
        row._details = undefined;
      }
    }
  };


  var __details_display = function (api, show) {
    var ctx = api.context;

    if (ctx.length && api.length) {
      var row = ctx[0].aoData[api[0]];

      if (row._details) {
        row._detailsShow = show;

        if (show) {
          row._details.insertAfter(row.nTr);
        }
        else {
          row._details.detach();
        }

        __details_events(ctx[0]);
      }
    }
  };


  var __details_events = function (settings) {
    var api = new _Api(settings);
    var namespace = '.dt.DT_details';
    var drawEvent = 'draw' + namespace;
    var colvisEvent = 'column-visibility' + namespace;
    var destroyEvent = 'destroy' + namespace;
    var data = settings.aoData;

    api.off(drawEvent + ' ' + colvisEvent + ' ' + destroyEvent);

    if (_pluck(data, '_details').length > 0) {
      // On each draw, insert the required elements into the document
      api.on(drawEvent, function (e, ctx) {
        if (settings !== ctx) {
          return;
        }

        api.rows({page: 'current'}).eq(0).each(function (idx) {
          // Internal data grab
          var row = data[idx];

          if (row._detailsShow) {
            row._details.insertAfter(row.nTr);
          }
        });
      });

      // Column visibility change - update the colspan
      api.on(colvisEvent, function (e, ctx, idx, vis) {
        if (settings !== ctx) {
          return;
        }

        // Update the colspan for the details rows (note, only if it already has
        // a colspan)
        var row, visible = _fnVisbleColumns(ctx);

        for (var i = 0, ien = data.length; i < ien; i++) {
          row = data[i];

          if (row._details) {
            row._details.children('td[colspan]').attr('colspan', visible);
          }
        }
      });

      // Table destroyed - nuke any child rows
      api.on(destroyEvent, function (e, ctx) {
        if (settings !== ctx) {
          return;
        }

        for (var i = 0, ien = data.length; i < ien; i++) {
          if (data[i]._details) {
            __details_remove(api, i);
          }
        }
      });
    }
  };

  // Strings for the method names to help minification
  var _emp = '';
  var _child_obj = _emp + 'row().child';
  var _child_mth = _child_obj + '()';

  // data can be:
  //  tr
  //  string
  //  jQuery or array of any of the above
  _api_register(_child_mth, function (data, klass) {
    var ctx = this.context;

    if (data === undefined) {
      // get
      return ctx.length && this.length ?
        ctx[0].aoData[this[0]]._details :
        undefined;
    }
    else if (data === true) {
      // show
      this.child.show();
    }
    else if (data === false) {
      // remove
      __details_remove(this);
    }
    else if (ctx.length && this.length) {
      // set
      __details_add(ctx[0], ctx[0].aoData[this[0]], data, klass);
    }

    return this;
  });


  _api_register([
    _child_obj + '.show()',
    _child_mth + '.show()' // only when `child()` was called with parameters (without
  ], function (show) {   // it returns an object and this method is not executed)
    __details_display(this, true);
    return this;
  });


  _api_register([
    _child_obj + '.hide()',
    _child_mth + '.hide()' // only when `child()` was called with parameters (without
  ], function () {         // it returns an object and this method is not executed)
    __details_display(this, false);
    return this;
  });


  _api_register([
    _child_obj + '.remove()',
    _child_mth + '.remove()' // only when `child()` was called with parameters (without
  ], function () {           // it returns an object and this method is not executed)
    __details_remove(this);
    return this;
  });


  _api_register(_child_obj + '.isShown()', function () {
    var ctx = this.context;

    if (ctx.length && this.length) {
      // _detailsShown as false or undefined will fall through to return false
      return ctx[0].aoData[this[0]]._detailsShow || false;
    }
    return false;
  });


  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Columns
	 *
	 * {integer}           - column index (>=0 count from left, <0 count from right)
	 * "{integer}:visIdx"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)
	 * "{integer}:visible" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)
	 * "{string}:name"     - column name
	 * "{string}"          - jQuery selector on column header nodes
	 *
	 */

  // can be an array of these items, comma separated list, or an array of comma
  // separated lists

  var __re_column_selector = /^([^:]+):(name|visIdx|visible)$/;


  // r1 and r2 are redundant - but it means that the parameters match for the
  // iterator callback in columns().data()
  var __columnData = function (settings, column, r1, r2, rows) {
    var a = [];
    for (var row = 0, ien = rows.length; row < ien; row++) {
      a.push(_fnGetCellData(settings, rows[row], column));
    }
    return a;
  };


  var __column_selector = function (settings, selector, opts) {
    var
      columns = settings.aoColumns,
      names = _pluck(columns, 'sName'),
      nodes = _pluck(columns, 'nTh');

    var run = function (s) {
      var selInt = _intVal(s);

      // Selector - all
      if (s === '') {
        return _range(columns.length);
      }

      // Selector - index
      if (selInt !== null) {
        return [selInt >= 0 ?
          selInt : // Count from left
          columns.length + selInt // Count from right (+ because its a negative value)
        ];
      }

      // Selector = function
      if (typeof s === 'function') {
        var rows = _selector_row_indexes(settings, opts);

        return $.map(columns, function (col, idx) {
          return s(
            idx,
            __columnData(settings, idx, 0, 0, rows),
            nodes[idx]
          ) ? idx : null;
        });
      }

      // jQuery or string selector
      var match = typeof s === 'string' ?
        s.match(__re_column_selector) :
        '';

      if (match) {
        switch (match[2]) {
          case 'visIdx':
          case 'visible':
            var idx = parseInt(match[1], 10);
            // Visible index given, convert to column index
            if (idx < 0) {
              // Counting from the right
              var visColumns = $.map(columns, function (col, i) {
                return col.bVisible ? i : null;
              });
              return [visColumns[visColumns.length + idx]];
            }
            // Counting from the left
            return [_fnVisibleToColumnIndex(settings, idx)];

          case 'name':
            // match by name. `names` is column index complete and in order
            return $.map(names, function (name, i) {
              return name === match[1] ? i : null;
            });

          default:
            return [];
        }
      }

      // Cell in the table body
      if (s.nodeName && s._DT_CellIndex) {
        return [s._DT_CellIndex.column];
      }

      // jQuery selector on the TH elements for the columns
      var jqResult = $(nodes)
        .filter(s)
        .map(function () {
          return $.inArray(this, nodes); // `nodes` is column index complete and in order
        })
        .toArray();

      if (jqResult.length || !s.nodeName) {
        return jqResult;
      }

      // Otherwise a node which might have a `dt-column` data attribute, or be
      // a child or such an element
      var host = $(s).closest('*[data-dt-column]');
      return host.length ?
        [host.data('dt-column')] :
        [];
    };

    return _selector_run('column', selector, run, settings, opts);
  };


  var __setColumnVis = function (settings, column, vis) {
    var
      cols = settings.aoColumns,
      col = cols[column],
      data = settings.aoData,
      row, cells, i, ien, tr;

    // Get
    if (vis === undefined) {
      return col.bVisible;
    }

    // Set
    // No change
    if (col.bVisible === vis) {
      return;
    }

    if (vis) {
      // Insert column
      // Need to decide if we should use appendChild or insertBefore
      var insertBefore = $.inArray(true, _pluck(cols, 'bVisible'), column + 1);

      for (i = 0, ien = data.length; i < ien; i++) {
        tr = data[i].nTr;
        cells = data[i].anCells;

        if (tr) {
          // insertBefore can act like appendChild if 2nd arg is null
          tr.insertBefore(cells[column], cells[insertBefore] || null);
        }
      }
    }
    else {
      // Remove column
      $(_pluck(settings.aoData, 'anCells', column)).detach();
    }

    // Common actions
    col.bVisible = vis;
    _fnDrawHead(settings, settings.aoHeader);
    _fnDrawHead(settings, settings.aoFooter);

    _fnSaveState(settings);
  };


  _api_register('columns()', function (selector, opts) {
    // argument shifting
    if (selector === undefined) {
      selector = '';
    }
    else if ($.isPlainObject(selector)) {
      opts = selector;
      selector = '';
    }

    opts = _selector_opts(opts);

    var inst = this.iterator('table', function (settings) {
      return __column_selector(settings, selector, opts);
    }, 1);

    // Want argument shifting here and in _row_selector?
    inst.selector.cols = selector;
    inst.selector.opts = opts;

    return inst;
  });

  _api_registerPlural('columns().header()', 'column().header()', function (selector, opts) {
    return this.iterator('column', function (settings, column) {
      return settings.aoColumns[column].nTh;
    }, 1);
  });

  _api_registerPlural('columns().footer()', 'column().footer()', function (selector, opts) {
    return this.iterator('column', function (settings, column) {
      return settings.aoColumns[column].nTf;
    }, 1);
  });

  _api_registerPlural('columns().data()', 'column().data()', function () {
    return this.iterator('column-rows', __columnData, 1);
  });

  _api_registerPlural('columns().dataSrc()', 'column().dataSrc()', function () {
    return this.iterator('column', function (settings, column) {
      return settings.aoColumns[column].mData;
    }, 1);
  });

  _api_registerPlural('columns().cache()', 'column().cache()', function (type) {
    return this.iterator('column-rows', function (settings, column, i, j, rows) {
      return _pluck_order(settings.aoData, rows,
        type === 'search' ? '_aFilterData' : '_aSortData', column
      );
    }, 1);
  });

  _api_registerPlural('columns().nodes()', 'column().nodes()', function () {
    return this.iterator('column-rows', function (settings, column, i, j, rows) {
      return _pluck_order(settings.aoData, rows, 'anCells', column);
    }, 1);
  });

  _api_registerPlural('columns().visible()', 'column().visible()', function (vis, calc) {
    var ret = this.iterator('column', function (settings, column) {
      if (vis === undefined) {
        return settings.aoColumns[column].bVisible;
      } // else
      __setColumnVis(settings, column, vis);
    });

    // Group the column visibility changes
    if (vis !== undefined) {
      // Second loop once the first is done for events
      this.iterator('column', function (settings, column) {
        _fnCallbackFire(settings, null, 'column-visibility', [settings, column, vis, calc]);
      });

      if (calc === undefined || calc) {
        this.columns.adjust();
      }
    }

    return ret;
  });

  _api_registerPlural('columns().indexes()', 'column().index()', function (type) {
    return this.iterator('column', function (settings, column) {
      return type === 'visible' ?
        _fnColumnIndexToVisible(settings, column) :
        column;
    }, 1);
  });

  _api_register('columns.adjust()', function () {
    return this.iterator('table', function (settings) {
      _fnAdjustColumnSizing(settings);
    }, 1);
  });

  _api_register('column.index()', function (type, idx) {
    if (this.context.length !== 0) {
      var ctx = this.context[0];

      if (type === 'fromVisible' || type === 'toData') {
        return _fnVisibleToColumnIndex(ctx, idx);
      }
      else if (type === 'fromData' || type === 'toVisible') {
        return _fnColumnIndexToVisible(ctx, idx);
      }
    }
  });

  _api_register('column()', function (selector, opts) {
    return _selector_first(this.columns(selector, opts));
  });


  var __cell_selector = function (settings, selector, opts) {
    var data = settings.aoData;
    var rows = _selector_row_indexes(settings, opts);
    var cells = _removeEmpty(_pluck_order(data, rows, 'anCells'));
    var allCells = $([].concat.apply([], cells));
    var row;
    var columns = settings.aoColumns.length;
    var a, i, ien, j, o, host;

    var run = function (s) {
      var fnSelector = typeof s === 'function';

      if (s === null || s === undefined || fnSelector) {
        // All cells and function selectors
        a = [];

        for (i = 0, ien = rows.length; i < ien; i++) {
          row = rows[i];

          for (j = 0; j < columns; j++) {
            o = {
              row: row,
              column: j
            };

            if (fnSelector) {
              // Selector - function
              host = data[row];

              if (s(o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null)) {
                a.push(o);
              }
            }
            else {
              // Selector - all
              a.push(o);
            }
          }
        }

        return a;
      }

      // Selector - index
      if ($.isPlainObject(s)) {
        return [s];
      }

      // Selector - jQuery filtered cells
      var jqResult = allCells
        .filter(s)
        .map(function (i, el) {
          return { // use a new object, in case someone changes the values
            row: el._DT_CellIndex.row,
            column: el._DT_CellIndex.column
          };
        })
        .toArray();

      if (jqResult.length || !s.nodeName) {
        return jqResult;
      }

      // Otherwise the selector is a node, and there is one last option - the
      // element might be a child of an element which has dt-row and dt-column
      // data attributes
      host = $(s).closest('*[data-dt-row]');
      return host.length ?
        [{
          row: host.data('dt-row'),
          column: host.data('dt-column')
        }] :
        [];
    };

    return _selector_run('cell', selector, run, settings, opts);
  };


  _api_register('cells()', function (rowSelector, columnSelector, opts) {
    // Argument shifting
    if ($.isPlainObject(rowSelector)) {
      // Indexes
      if (rowSelector.row === undefined) {
        // Selector options in first parameter
        opts = rowSelector;
        rowSelector = null;
      }
      else {
        // Cell index objects in first parameter
        opts = columnSelector;
        columnSelector = null;
      }
    }
    if ($.isPlainObject(columnSelector)) {
      opts = columnSelector;
      columnSelector = null;
    }

    // Cell selector
    if (columnSelector === null || columnSelector === undefined) {
      return this.iterator('table', function (settings) {
        return __cell_selector(settings, rowSelector, _selector_opts(opts));
      });
    }

    // Row + column selector
    var columns = this.columns(columnSelector, opts);
    var rows = this.rows(rowSelector, opts);
    var a, i, ien, j, jen;

    var cells = this.iterator('table', function (settings, idx) {
      a = [];

      for (i = 0, ien = rows[idx].length; i < ien; i++) {
        for (j = 0, jen = columns[idx].length; j < jen; j++) {
          a.push({
            row: rows[idx][i],
            column: columns[idx][j]
          });
        }
      }

      return a;
    }, 1);

    $.extend(cells.selector, {
      cols: columnSelector,
      rows: rowSelector,
      opts: opts
    });

    return cells;
  });


  _api_registerPlural('cells().nodes()', 'cell().node()', function () {
    return this.iterator('cell', function (settings, row, column) {
      var data = settings.aoData[row];

      return data && data.anCells ?
        data.anCells[column] :
        undefined;
    }, 1);
  });


  _api_register('cells().data()', function () {
    return this.iterator('cell', function (settings, row, column) {
      return _fnGetCellData(settings, row, column);
    }, 1);
  });


  _api_registerPlural('cells().cache()', 'cell().cache()', function (type) {
    type = type === 'search' ? '_aFilterData' : '_aSortData';

    return this.iterator('cell', function (settings, row, column) {
      return settings.aoData[row][type][column];
    }, 1);
  });


  _api_registerPlural('cells().render()', 'cell().render()', function (type) {
    return this.iterator('cell', function (settings, row, column) {
      return _fnGetCellData(settings, row, column, type);
    }, 1);
  });


  _api_registerPlural('cells().indexes()', 'cell().index()', function () {
    return this.iterator('cell', function (settings, row, column) {
      return {
        row: row,
        column: column,
        columnVisible: _fnColumnIndexToVisible(settings, column)
      };
    }, 1);
  });


  _api_registerPlural('cells().invalidate()', 'cell().invalidate()', function (src) {
    return this.iterator('cell', function (settings, row, column) {
      _fnInvalidate(settings, row, src, column);
    });
  });


  _api_register('cell()', function (rowSelector, columnSelector, opts) {
    return _selector_first(this.cells(rowSelector, columnSelector, opts));
  });


  _api_register('cell().data()', function (data) {
    var ctx = this.context;
    var cell = this[0];

    if (data === undefined) {
      // Get
      return ctx.length && cell.length ?
        _fnGetCellData(ctx[0], cell[0].row, cell[0].column) :
        undefined;
    }

    // Set
    _fnSetCellData(ctx[0], cell[0].row, cell[0].column, data);
    _fnInvalidate(ctx[0], cell[0].row, 'data', cell[0].column);

    return this;
  });


  /**
   * Get current ordering (sorting) that has been applied to the table.
   *
   * @returns {array} 2D array containing the sorting information for the first
   *   table in the current context. Each element in the parent array represents
   *   a column being sorted upon (i.e. multi-sorting with two columns would have
   *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is
   *   the column index that the sorting condition applies to, the second is the
   *   direction of the sort (`desc` or `asc`) and, optionally, the third is the
   *   index of the sorting order from the `column.sorting` initialisation array.
   */
  /**
   * Set the ordering for the table.
   *
   * @param {integer} order Column index to sort upon.
   * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)
   * @returns {DataTables.Api} this
   */
  /**
   * Set the ordering for the table.
   *
   * @param {array} order 1D array of sorting information to be applied.
   * @param {array} [...] Optional additional sorting conditions
   * @returns {DataTables.Api} this
   */
  /**
   * Set the ordering for the table.
   *
   * @param {array} order 2D array of sorting information to be applied.
   * @returns {DataTables.Api} this
   */
  _api_register('order()', function (order, dir) {
    var ctx = this.context;

    if (order === undefined) {
      // get
      return ctx.length !== 0 ?
        ctx[0].aaSorting :
        undefined;
    }

    // set
    if (typeof order === 'number') {
      // Simple column / direction passed in
      order = [[order, dir]];
    }
    else if (order.length && !$.isArray(order[0])) {
      // Arguments passed in (list of 1D arrays)
      order = Array.prototype.slice.call(arguments);
    }
    // otherwise a 2D array was passed in

    return this.iterator('table', function (settings) {
      settings.aaSorting = order.slice();
    });
  });


  /**
   * Attach a sort listener to an element for a given column
   *
   * @param {node|jQuery|string} node Identifier for the element(s) to attach the
   *   listener to. This can take the form of a single DOM node, a jQuery
   *   collection of nodes or a jQuery selector which will identify the node(s).
   * @param {integer} column the column that a click on this node will sort on
   * @param {function} [callback] callback function when sort is run
   * @returns {DataTables.Api} this
   */
  _api_register('order.listener()', function (node, column, callback) {
    return this.iterator('table', function (settings) {
      _fnSortAttachListener(settings, node, column, callback);
    });
  });


  _api_register('order.fixed()', function (set) {
    if (!set) {
      var ctx = this.context;
      var fixed = ctx.length ?
        ctx[0].aaSortingFixed :
        undefined;

      return $.isArray(fixed) ?
        {pre: fixed} :
        fixed;
    }

    return this.iterator('table', function (settings) {
      settings.aaSortingFixed = $.extend(true, {}, set);
    });
  });


  // Order by the selected column(s)
  _api_register([
    'columns().order()',
    'column().order()'
  ], function (dir) {
    var that = this;

    return this.iterator('table', function (settings, i) {
      var sort = [];

      $.each(that[i], function (j, col) {
        sort.push([col, dir]);
      });

      settings.aaSorting = sort;
    });
  });


  _api_register('search()', function (input, regex, smart, caseInsen) {
    var ctx = this.context;

    if (input === undefined) {
      // get
      return ctx.length !== 0 ?
        ctx[0].oPreviousSearch.sSearch :
        undefined;
    }

    // set
    return this.iterator('table', function (settings) {
      if (!settings.oFeatures.bFilter) {
        return;
      }

      _fnFilterComplete(settings, $.extend({}, settings.oPreviousSearch, {
        "sSearch": input + "",
        "bRegex": regex === null ? false : regex,
        "bSmart": smart === null ? true : smart,
        "bCaseInsensitive": caseInsen === null ? true : caseInsen
      }), 1);
    });
  });


  _api_registerPlural(
    'columns().search()',
    'column().search()',
    function (input, regex, smart, caseInsen) {
      return this.iterator('column', function (settings, column) {
        var preSearch = settings.aoPreSearchCols;

        if (input === undefined) {
          // get
          return preSearch[column].sSearch;
        }

        // set
        if (!settings.oFeatures.bFilter) {
          return;
        }

        $.extend(preSearch[column], {
          "sSearch": input + "",
          "bRegex": regex === null ? false : regex,
          "bSmart": smart === null ? true : smart,
          "bCaseInsensitive": caseInsen === null ? true : caseInsen
        });

        _fnFilterComplete(settings, settings.oPreviousSearch, 1);
      });
    }
  );

  /*
	 * State API methods
	 */

  _api_register('state()', function () {
    return this.context.length ?
      this.context[0].oSavedState :
      null;
  });


  _api_register('state.clear()', function () {
    return this.iterator('table', function (settings) {
      // Save an empty object
      settings.fnStateSaveCallback.call(settings.oInstance, settings, {});
    });
  });


  _api_register('state.loaded()', function () {
    return this.context.length ?
      this.context[0].oLoadedState :
      null;
  });


  _api_register('state.save()', function () {
    return this.iterator('table', function (settings) {
      _fnSaveState(settings);
    });
  });


  /**
   * Provide a common method for plug-ins to check the version of DataTables being
   * used, in order to ensure compatibility.
   *
   *  @param {string} version Version string to check for, in the format "X.Y.Z".
   *    Note that the formats "X" and "X.Y" are also acceptable.
   *  @returns {boolean} true if this version of DataTables is greater or equal to
   *    the required version, or false if this version of DataTales is not
   *    suitable
   *  @static
   *  @dtopt API-Static
   *
   *  @example
   *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );
   */
  DataTable.versionCheck = DataTable.fnVersionCheck = function (version) {
    var aThis = DataTable.version.split('.');
    var aThat = version.split('.');
    var iThis, iThat;

    for (var i = 0, iLen = aThat.length; i < iLen; i++) {
      iThis = parseInt(aThis[i], 10) || 0;
      iThat = parseInt(aThat[i], 10) || 0;

      // Parts are the same, keep comparing
      if (iThis === iThat) {
        continue;
      }

      // Parts are different, return immediately
      return iThis > iThat;
    }

    return true;
  };


  /**
   * Check if a `<table>` node is a DataTable table already or not.
   *
   *  @param {node|jquery|string} table Table node, jQuery object or jQuery
   *      selector for the table to test. Note that if more than more than one
   *      table is passed on, only the first will be checked
   *  @returns {boolean} true the table given is a DataTable, or false otherwise
   *  @static
   *  @dtopt API-Static
   *
   *  @example
   *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {
	 *      $('#example').dataTable();
	 *    }
   */
  DataTable.isDataTable = DataTable.fnIsDataTable = function (table) {
    var t = $(table).get(0);
    var is = false;

    if (table instanceof DataTable.Api) {
      return true;
    }

    $.each(DataTable.settings, function (i, o) {
      var head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;
      var foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;

      if (o.nTable === t || head === t || foot === t) {
        is = true;
      }
    });

    return is;
  };


  /**
   * Get all DataTable tables that have been initialised - optionally you can
   * select to get only currently visible tables.
   *
   *  @param {boolean} [visible=false] Flag to indicate if you want all (default)
   *    or visible tables only.
   *  @returns {array} Array of `table` nodes (not DataTable instances) which are
   *    DataTables
   *  @static
   *  @dtopt API-Static
   *
   *  @example
   *    $.each( $.fn.dataTable.tables(true), function () {
	 *      $(table).DataTable().columns.adjust();
	 *    } );
   */
  DataTable.tables = DataTable.fnTables = function (visible) {
    var api = false;

    if ($.isPlainObject(visible)) {
      api = visible.api;
      visible = visible.visible;
    }

    var a = $.map(DataTable.settings, function (o) {
      if (!visible || (visible && $(o.nTable).is(':visible'))) {
        return o.nTable;
      }
    });

    return api ?
      new _Api(a) :
      a;
  };


  /**
   * Convert from camel case parameters to Hungarian notation. This is made public
   * for the extensions to provide the same ability as DataTables core to accept
   * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase
   * parameters.
   *
   *  @param {object} src The model object which holds all parameters that can be
   *    mapped.
   *  @param {object} user The object to convert from camel case to Hungarian.
   *  @param {boolean} force When set to `true`, properties which already have a
   *    Hungarian value in the `user` object will be overwritten. Otherwise they
   *    won't be.
   */
  DataTable.camelToHungarian = _fnCamelToHungarian;


  /**
   *
   */
  _api_register('$()', function (selector, opts) {
    var
      rows = this.rows(opts).nodes(), // Get all rows
      jqRows = $(rows);

    return $([].concat(
      jqRows.filter(selector).toArray(),
      jqRows.find(selector).toArray()
    ));
  });


  // jQuery functions to operate on the tables
  $.each(['on', 'one', 'off'], function (i, key) {
    _api_register(key + '()', function (/* event, handler */) {
      var args = Array.prototype.slice.call(arguments);

      // Add the `dt` namespace automatically if it isn't already present
      args[0] = $.map(args[0].split(/\s/), function (e) {
        return !e.match(/\.dt\b/) ?
          e + '.dt' :
          e;
      }).join(' ');

      var inst = $(this.tables().nodes());
      inst[key].apply(inst, args);
      return this;
    });
  });


  _api_register('clear()', function () {
    return this.iterator('table', function (settings) {
      _fnClearTable(settings);
    });
  });


  _api_register('settings()', function () {
    return new _Api(this.context, this.context);
  });


  _api_register('init()', function () {
    var ctx = this.context;
    return ctx.length ? ctx[0].oInit : null;
  });


  _api_register('data()', function () {
    return this.iterator('table', function (settings) {
      return _pluck(settings.aoData, '_aData');
    }).flatten();
  });


  _api_register('destroy()', function (remove) {
    remove = remove || false;

    return this.iterator('table', function (settings) {
      var orig = settings.nTableWrapper.parentNode;
      var classes = settings.oClasses;
      var table = settings.nTable;
      var tbody = settings.nTBody;
      var thead = settings.nTHead;
      var tfoot = settings.nTFoot;
      var jqTable = $(table);
      var jqTbody = $(tbody);
      var jqWrapper = $(settings.nTableWrapper);
      var rows = $.map(settings.aoData, function (r) {
        return r.nTr;
      });
      var i, ien;

      // Flag to note that the table is currently being destroyed - no action
      // should be taken
      settings.bDestroying = true;

      // Fire off the destroy callbacks for plug-ins etc
      _fnCallbackFire(settings, "aoDestroyCallback", "destroy", [settings]);

      // If not being removed from the document, make all columns visible
      if (!remove) {
        new _Api(settings).columns().visible(true);
      }

      // Blitz all `DT` namespaced events (these are internal events, the
      // lowercase, `dt` events are user subscribed and they are responsible
      // for removing them
      jqWrapper.off('.DT').find(':not(tbody *)').off('.DT');
      $(window).off('.DT-' + settings.sInstance);

      // When scrolling we had to break the table up - restore it
      if (table != thead.parentNode) {
        jqTable.children('thead').detach();
        jqTable.append(thead);
      }

      if (tfoot && table != tfoot.parentNode) {
        jqTable.children('tfoot').detach();
        jqTable.append(tfoot);
      }

      settings.aaSorting = [];
      settings.aaSortingFixed = [];
      _fnSortingClasses(settings);

      $(rows).removeClass(settings.asStripeClasses.join(' '));

      $('th, td', thead).removeClass(classes.sSortable + ' ' +
        classes.sSortableAsc + ' ' + classes.sSortableDesc + ' ' + classes.sSortableNone
      );

      // Add the TR elements back into the table in their original order
      jqTbody.children().detach();
      jqTbody.append(rows);

      // Remove the DataTables generated nodes, events and classes
      var removedMethod = remove ? 'remove' : 'detach';
      jqTable[removedMethod]();
      jqWrapper[removedMethod]();

      // If we need to reattach the table to the document
      if (!remove && orig) {
        // insertBefore acts like appendChild if !arg[1]
        orig.insertBefore(table, settings.nTableReinsertBefore);

        // Restore the width of the original table - was read from the style property,
        // so we can restore directly to that
        jqTable
          .css('width', settings.sDestroyWidth)
          .removeClass(classes.sTable);

        // If the were originally stripe classes - then we add them back here.
        // Note this is not fool proof (for example if not all rows had stripe
        // classes - but it's a good effort without getting carried away
        ien = settings.asDestroyStripes.length;

        if (ien) {
          jqTbody.children().each(function (i) {
            $(this).addClass(settings.asDestroyStripes[i % ien]);
          });
        }
      }

      /* Remove the settings object from the settings array */
      var idx = $.inArray(settings, DataTable.settings);
      if (idx !== -1) {
        DataTable.settings.splice(idx, 1);
      }
    });
  });


  // Add the `every()` method for rows, columns and cells in a compact form
  $.each(['column', 'row', 'cell'], function (i, type) {
    _api_register(type + 's().every()', function (fn) {
      var opts = this.selector.opts;
      var api = this;

      return this.iterator(type, function (settings, arg1, arg2, arg3, arg4) {
        // Rows and columns:
        //  arg1 - index
        //  arg2 - table counter
        //  arg3 - loop counter
        //  arg4 - undefined
        // Cells:
        //  arg1 - row index
        //  arg2 - column index
        //  arg3 - table counter
        //  arg4 - loop counter
        fn.call(
          api[type](
            arg1,
            type === 'cell' ? arg2 : opts,
            type === 'cell' ? opts : undefined
          ),
          arg1, arg2, arg3, arg4
        );
      });
    });
  });


  // i18n method for extensions to be able to use the language object from the
  // DataTable
  _api_register('i18n()', function (token, def, plural) {
    var ctx = this.context[0];
    var resolved = _fnGetObjectDataFn(token)(ctx.oLanguage);

    if (resolved === undefined) {
      resolved = def;
    }

    if (plural !== undefined && $.isPlainObject(resolved)) {
      resolved = resolved[plural] !== undefined ?
        resolved[plural] :
        resolved._;
    }

    return resolved.replace('%d', plural); // nb: plural might be undefined,
  });

  /**
   * Version string for plug-ins to check compatibility. Allowed format is
   * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used
   * only for non-release builds. See http://semver.org/ for more information.
   *  @member
   *  @type string
   *  @default Version number
   */
  DataTable.version = "1.10.16";

  /**
   * Private data store, containing all of the settings objects that are
   * created for the tables on a given page.
   *
   * Note that the `DataTable.settings` object is aliased to
   * `jQuery.fn.dataTableExt` through which it may be accessed and
   * manipulated, or `jQuery.fn.dataTable.settings`.
   *  @member
   *  @type array
   *  @default []
   *  @private
   */
  DataTable.settings = [];

  /**
   * Object models container, for the various models that DataTables has
   * available to it. These models define the objects that are used to hold
   * the active state and configuration of the table.
   *  @namespace
   */
  DataTable.models = {};


  /**
   * Template object for the way in which DataTables holds information about
   * search information for the global filter and individual column filters.
   *  @namespace
   */
  DataTable.models.oSearch = {
    /**
     * Flag to indicate if the filtering should be case insensitive or not
     *  @type boolean
     *  @default true
     */
    "bCaseInsensitive": true,

    /**
     * Applied search term
     *  @type string
     *  @default <i>Empty string</i>
     */
    "sSearch": "",

    /**
     * Flag to indicate if the search term should be interpreted as a
     * regular expression (true) or not (false) and therefore and special
     * regex characters escaped.
     *  @type boolean
     *  @default false
     */
    "bRegex": false,

    /**
     * Flag to indicate if DataTables is to use its smart filtering or not.
     *  @type boolean
     *  @default true
     */
    "bSmart": true
  };


  /**
   * Template object for the way in which DataTables holds information about
   * each individual row. This is the object format used for the settings
   * aoData array.
   *  @namespace
   */
  DataTable.models.oRow = {
    /**
     * TR element for the row
     *  @type node
     *  @default null
     */
    "nTr": null,

    /**
     * Array of TD elements for each row. This is null until the row has been
     * created.
     *  @type array nodes
     *  @default []
     */
    "anCells": null,

    /**
     * Data object from the original data source for the row. This is either
     * an array if using the traditional form of DataTables, or an object if
     * using mData options. The exact type will depend on the passed in
     * data from the data source, or will be an array if using DOM a data
     * source.
     *  @type array|object
     *  @default []
     */
    "_aData": [],

    /**
     * Sorting data cache - this array is ostensibly the same length as the
     * number of columns (although each index is generated only as it is
     * needed), and holds the data that is used for sorting each column in the
     * row. We do this cache generation at the start of the sort in order that
     * the formatting of the sort data need be done only once for each cell
     * per sort. This array should not be read from or written to by anything
     * other than the master sorting methods.
     *  @type array
     *  @default null
     *  @private
     */
    "_aSortData": null,

    /**
     * Per cell filtering data cache. As per the sort data cache, used to
     * increase the performance of the filtering in DataTables
     *  @type array
     *  @default null
     *  @private
     */
    "_aFilterData": null,

    /**
     * Filtering data cache. This is the same as the cell filtering cache, but
     * in this case a string rather than an array. This is easily computed with
     * a join on `_aFilterData`, but is provided as a cache so the join isn't
     * needed on every search (memory traded for performance)
     *  @type array
     *  @default null
     *  @private
     */
    "_sFilterRow": null,

    /**
     * Cache of the class name that DataTables has applied to the row, so we
     * can quickly look at this variable rather than needing to do a DOM check
     * on className for the nTr property.
     *  @type string
     *  @default <i>Empty string</i>
     *  @private
     */
    "_sRowStripe": "",

    /**
     * Denote if the original data source was from the DOM, or the data source
     * object. This is used for invalidating data, so DataTables can
     * automatically read data from the original source, unless uninstructed
     * otherwise.
     *  @type string
     *  @default null
     *  @private
     */
    "src": null,

    /**
     * Index in the aoData array. This saves an indexOf lookup when we have the
     * object, but want to know the index
     *  @type integer
     *  @default -1
     *  @private
     */
    "idx": -1
  };


  /**
   * Template object for the column information object in DataTables. This object
   * is held in the settings aoColumns array and contains all the information that
   * DataTables needs about each individual column.
   *
   * Note that this object is related to {@link DataTable.defaults.column}
   * but this one is the internal data store for DataTables's cache of columns.
   * It should NOT be manipulated outside of DataTables. Any configuration should
   * be done through the initialisation options.
   *  @namespace
   */
  DataTable.models.oColumn = {
    /**
     * Column index. This could be worked out on-the-fly with $.inArray, but it
     * is faster to just hold it as a variable
     *  @type integer
     *  @default null
     */
    "idx": null,

    /**
     * A list of the columns that sorting should occur on when this column
     * is sorted. That this property is an array allows multi-column sorting
     * to be defined for a column (for example first name / last name columns
     * would benefit from this). The values are integers pointing to the
     * columns to be sorted on (typically it will be a single integer pointing
     * at itself, but that doesn't need to be the case).
     *  @type array
     */
    "aDataSort": null,

    /**
     * Define the sorting directions that are applied to the column, in sequence
     * as the column is repeatedly sorted upon - i.e. the first value is used
     * as the sorting direction when the column if first sorted (clicked on).
     * Sort it again (click again) and it will move on to the next index.
     * Repeat until loop.
     *  @type array
     */
    "asSorting": null,

    /**
     * Flag to indicate if the column is searchable, and thus should be included
     * in the filtering or not.
     *  @type boolean
     */
    "bSearchable": null,

    /**
     * Flag to indicate if the column is sortable or not.
     *  @type boolean
     */
    "bSortable": null,

    /**
     * Flag to indicate if the column is currently visible in the table or not
     *  @type boolean
     */
    "bVisible": null,

    /**
     * Store for manual type assignment using the `column.type` option. This
     * is held in store so we can manipulate the column's `sType` property.
     *  @type string
     *  @default null
     *  @private
     */
    "_sManualType": null,

    /**
     * Flag to indicate if HTML5 data attributes should be used as the data
     * source for filtering or sorting. True is either are.
     *  @type boolean
     *  @default false
     *  @private
     */
    "_bAttrSrc": false,

    /**
     * Developer definable function that is called whenever a cell is created (Ajax source,
     * etc) or processed for input (DOM source). This can be used as a compliment to mRender
     * allowing you to modify the DOM element (add background colour for example) when the
     * element is available.
     *  @type function
     *  @param {element} nTd The TD node that has been created
     *  @param {*} sData The Data for the cell
     *  @param {array|object} oData The data for the whole row
     *  @param {int} iRow The row index for the aoData data store
     *  @default null
     */
    "fnCreatedCell": null,

    /**
     * Function to get data from a cell in a column. You should <b>never</b>
     * access data directly through _aData internally in DataTables - always use
     * the method attached to this property. It allows mData to function as
     * required. This function is automatically assigned by the column
     * initialisation method
     *  @type function
     *  @param {array|object} oData The data array/object for the array
     *    (i.e. aoData[]._aData)
     *  @param {string} sSpecific The specific data type you want to get -
     *    'display', 'type' 'filter' 'sort'
     *  @returns {*} The data for the cell from the given row's data
     *  @default null
     */
    "fnGetData": null,

    /**
     * Function to set data for a cell in the column. You should <b>never</b>
     * set the data directly to _aData internally in DataTables - always use
     * this method. It allows mData to function as required. This function
     * is automatically assigned by the column initialisation method
     *  @type function
     *  @param {array|object} oData The data array/object for the array
     *    (i.e. aoData[]._aData)
     *  @param {*} sValue Value to set
     *  @default null
     */
    "fnSetData": null,

    /**
     * Property to read the value for the cells in the column from the data
     * source array / object. If null, then the default content is used, if a
     * function is given then the return from the function is used.
     *  @type function|int|string|null
     *  @default null
     */
    "mData": null,

    /**
     * Partner property to mData which is used (only when defined) to get
     * the data - i.e. it is basically the same as mData, but without the
     * 'set' option, and also the data fed to it is the result from mData.
     * This is the rendering method to match the data method of mData.
     *  @type function|int|string|null
     *  @default null
     */
    "mRender": null,

    /**
     * Unique header TH/TD element for this column - this is what the sorting
     * listener is attached to (if sorting is enabled.)
     *  @type node
     *  @default null
     */
    "nTh": null,

    /**
     * Unique footer TH/TD element for this column (if there is one). Not used
     * in DataTables as such, but can be used for plug-ins to reference the
     * footer for each column.
     *  @type node
     *  @default null
     */
    "nTf": null,

    /**
     * The class to apply to all TD elements in the table's TBODY for the column
     *  @type string
     *  @default null
     */
    "sClass": null,

    /**
     * When DataTables calculates the column widths to assign to each column,
     * it finds the longest string in each column and then constructs a
     * temporary table and reads the widths from that. The problem with this
     * is that "mmm" is much wider then "iiii", but the latter is a longer
     * string - thus the calculation can go wrong (doing it properly and putting
     * it into an DOM object and measuring that is horribly(!) slow). Thus as
     * a "work around" we provide this option. It will append its value to the
     * text that is found to be the longest string for the column - i.e. padding.
     *  @type string
     */
    "sContentPadding": null,

    /**
     * Allows a default value to be given for a column's data, and will be used
     * whenever a null data source is encountered (this can be because mData
     * is set to null, or because the data source itself is null).
     *  @type string
     *  @default null
     */
    "sDefaultContent": null,

    /**
     * Name for the column, allowing reference to the column by name as well as
     * by index (needs a lookup to work by name).
     *  @type string
     */
    "sName": null,

    /**
     * Custom sorting data type - defines which of the available plug-ins in
     * afnSortData the custom sorting will use - if any is defined.
     *  @type string
     *  @default std
     */
    "sSortDataType": 'std',

    /**
     * Class to be applied to the header element when sorting on this column
     *  @type string
     *  @default null
     */
    "sSortingClass": null,

    /**
     * Class to be applied to the header element when sorting on this column -
     * when jQuery UI theming is used.
     *  @type string
     *  @default null
     */
    "sSortingClassJUI": null,

    /**
     * Title of the column - what is seen in the TH element (nTh).
     *  @type string
     */
    "sTitle": null,

    /**
     * Column sorting and filtering type
     *  @type string
     *  @default null
     */
    "sType": null,

    /**
     * Width of the column
     *  @type string
     *  @default null
     */
    "sWidth": null,

    /**
     * Width of the column when it was first "encountered"
     *  @type string
     *  @default null
     */
    "sWidthOrig": null
  };


  /*
	 * Developer note: The properties of the object below are given in Hungarian
	 * notation, that was used as the interface for DataTables prior to v1.10, however
	 * from v1.10 onwards the primary interface is camel case. In order to avoid
	 * breaking backwards compatibility utterly with this change, the Hungarian
	 * version is still, internally the primary interface, but is is not documented
	 * - hence the @name tags in each doc comment. This allows a Javascript function
	 * to create a map from Hungarian notation to camel case (going the other direction
	 * would require each property to be listed, which would at around 3K to the size
	 * of DataTables, while this method is about a 0.5K hit.
	 *
	 * Ultimately this does pave the way for Hungarian notation to be dropped
	 * completely, but that is a massive amount of work and will break current
	 * installs (therefore is on-hold until v2).
	 */

  /**
   * Initialisation options that can be given to DataTables at initialisation
   * time.
   *  @namespace
   */
  DataTable.defaults = {
    /**
     * An array of data to use for the table, passed in at initialisation which
     * will be used in preference to any data which is already in the DOM. This is
     * particularly useful for constructing tables purely in Javascript, for
     * example with a custom Ajax call.
     *  @type array
     *  @default null
     *
     *  @dtopt Option
     *  @name DataTable.defaults.data
     *
     *  @example
     *    // Using a 2D array data source
     *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "data": [
		 *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],
		 *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],
		 *        ],
		 *        "columns": [
		 *          { "title": "Engine" },
		 *          { "title": "Browser" },
		 *          { "title": "Platform" },
		 *          { "title": "Version" },
		 *          { "title": "Grade" }
		 *        ]
		 *      } );
		 *    } );
     *
     *  @example
     *    // Using an array of objects as a data source (`data`)
     *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "data": [
		 *          {
		 *            "engine":   "Trident",
		 *            "browser":  "Internet Explorer 4.0",
		 *            "platform": "Win 95+",
		 *            "version":  4,
		 *            "grade":    "X"
		 *          },
		 *          {
		 *            "engine":   "Trident",
		 *            "browser":  "Internet Explorer 5.0",
		 *            "platform": "Win 95+",
		 *            "version":  5,
		 *            "grade":    "C"
		 *          }
		 *        ],
		 *        "columns": [
		 *          { "title": "Engine",   "data": "engine" },
		 *          { "title": "Browser",  "data": "browser" },
		 *          { "title": "Platform", "data": "platform" },
		 *          { "title": "Version",  "data": "version" },
		 *          { "title": "Grade",    "data": "grade" }
		 *        ]
		 *      } );
		 *    } );
     */
    "aaData": null,


    /**
     * If ordering is enabled, then DataTables will perform a first pass sort on
     * initialisation. You can define which column(s) the sort is performed
     * upon, and the sorting direction, with this variable. The `sorting` array
     * should contain an array for each column to be sorted initially containing
     * the column's index and a direction string ('asc' or 'desc').
     *  @type array
     *  @default [[0,'asc']]
     *
     *  @dtopt Option
     *  @name DataTable.defaults.order
     *
     *  @example
     *    // Sort by 3rd column first, and then 4th column
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "order": [[2,'asc'], [3,'desc']]
		 *      } );
		 *    } );
     *
     *    // No initial sorting
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "order": []
		 *      } );
		 *    } );
     */
    "aaSorting": [[0, 'asc']],


    /**
     * This parameter is basically identical to the `sorting` parameter, but
     * cannot be overridden by user interaction with the table. What this means
     * is that you could have a column (visible or hidden) which the sorting
     * will always be forced on first - any sorting after that (from the user)
     * will then be performed as required. This can be useful for grouping rows
     * together.
     *  @type array
     *  @default null
     *
     *  @dtopt Option
     *  @name DataTable.defaults.orderFixed
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "orderFixed": [[0,'asc']]
		 *      } );
		 *    } )
     */
    "aaSortingFixed": [],


    /**
     * DataTables can be instructed to load data to display in the table from a
     * Ajax source. This option defines how that Ajax call is made and where to.
     *
     * The `ajax` property has three different modes of operation, depending on
     * how it is defined. These are:
     *
     * * `string` - Set the URL from where the data should be loaded from.
     * * `object` - Define properties for `jQuery.ajax`.
     * * `function` - Custom data get function
     *
     * `string`
     * --------
     *
     * As a string, the `ajax` property simply defines the URL from which
     * DataTables will load data.
     *
     * `object`
     * --------
     *
     * As an object, the parameters in the object are passed to
     * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control
     * of the Ajax request. DataTables has a number of default parameters which
     * you can override using this option. Please refer to the jQuery
     * documentation for a full description of the options available, although
     * the following parameters provide additional options in DataTables or
     * require special consideration:
     *
     * * `data` - As with jQuery, `data` can be provided as an object, but it
     *   can also be used as a function to manipulate the data DataTables sends
     *   to the server. The function takes a single parameter, an object of
     *   parameters with the values that DataTables has readied for sending. An
     *   object may be returned which will be merged into the DataTables
     *   defaults, or you can add the items to the object that was passed in and
     *   not return anything from the function. This supersedes `fnServerParams`
     *   from DataTables 1.9-.
     *
     * * `dataSrc` - By default DataTables will look for the property `data` (or
     *   `aaData` for compatibility with DataTables 1.9-) when obtaining data
     *   from an Ajax source or for server-side processing - this parameter
     *   allows that property to be changed. You can use Javascript dotted
     *   object notation to get a data source for multiple levels of nesting, or
     *   it my be used as a function. As a function it takes a single parameter,
     *   the JSON returned from the server, which can be manipulated as
     *   required, with the returned value being that used by DataTables as the
     *   data source for the table. This supersedes `sAjaxDataProp` from
     *   DataTables 1.9-.
     *
     * * `success` - Should not be overridden it is used internally in
     *   DataTables. To manipulate / transform the data returned by the server
     *   use `ajax.dataSrc`, or use `ajax` as a function (see below).
     *
     * `function`
     * ----------
     *
     * As a function, making the Ajax call is left up to yourself allowing
     * complete control of the Ajax request. Indeed, if desired, a method other
     * than Ajax could be used to obtain the required data, such as Web storage
     * or an AIR database.
     *
     * The function is given four parameters and no return is required. The
     * parameters are:
     *
     * 1. _object_ - Data to send to the server
     * 2. _function_ - Callback function that must be executed when the required
     *    data has been obtained. That data should be passed into the callback
     *    as the only parameter
     * 3. _object_ - DataTables settings object for the table
     *
     * Note that this supersedes `fnServerData` from DataTables 1.9-.
     *
     *  @type string|object|function
     *  @default null
     *
     *  @dtopt Option
     *  @name DataTable.defaults.ajax
     *  @since 1.10.0
     *
     * @example
     *   // Get JSON data from a file via Ajax.
     *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).
     *   $('#example').dataTable( {
		 *     "ajax": "data.json"
		 *   } );
     *
     * @example
     *   // Get JSON data from a file via Ajax, using `dataSrc` to change
     *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)
     *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "dataSrc": "tableData"
		 *     }
		 *   } );
     *
     * @example
     *   // Get JSON data from a file via Ajax, using `dataSrc` to read data
     *   // from a plain array rather than an array in an object
     *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "dataSrc": ""
		 *     }
		 *   } );
     *
     * @example
     *   // Manipulate the data returned from the server - add a link to data
     *   // (note this can, should, be done using `render` for the column - this
     *   // is just a simple example of how the data can be manipulated).
     *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "dataSrc": function ( json ) {
		 *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {
		 *           json[i][0] = '<a href="/message/'+json[i][0]+'>View message</a>';
		 *         }
		 *         return json;
		 *       }
		 *     }
		 *   } );
     *
     * @example
     *   // Add data to the request
     *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "data": function ( d ) {
		 *         return {
		 *           "extra_search": $('#extra').val()
		 *         };
		 *       }
		 *     }
		 *   } );
     *
     * @example
     *   // Send request as POST
     *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "type": "POST"
		 *     }
		 *   } );
     *
     * @example
     *   // Get the data from localStorage (could interface with a form for
     *   // adding, editing and removing rows).
     *   $('#example').dataTable( {
		 *     "ajax": function (data, callback, settings) {
		 *       callback(
		 *         JSON.parse( localStorage.getItem('dataTablesData') )
		 *       );
		 *     }
		 *   } );
     */
    "ajax": null,


    /**
     * This parameter allows you to readily specify the entries in the length drop
     * down menu that DataTables shows when pagination is enabled. It can be
     * either a 1D array of options which will be used for both the displayed
     * option and the value, or a 2D array which will use the array in the first
     * position as the value, and the array in the second position as the
     * displayed options (useful for language strings such as 'All').
     *
     * Note that the `pageLength` property will be automatically set to the
     * first value given in this array, unless `pageLength` is also provided.
     *  @type array
     *  @default [ 10, 25, 50, 100 ]
     *
     *  @dtopt Option
     *  @name DataTable.defaults.lengthMenu
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]]
		 *      } );
		 *    } );
     */
    "aLengthMenu": [10, 25, 50, 100],


    /**
     * The `columns` option in the initialisation parameter allows you to define
     * details about the way individual columns behave. For a full list of
     * column options that can be set, please see
     * {@link DataTable.defaults.column}. Note that if you use `columns` to
     * define your columns, you must have an entry in the array for every single
     * column that you have in your table (these can be null if you don't which
     * to specify any options).
     *  @member
     *
     *  @name DataTable.defaults.column
     */
    "aoColumns": null,

    /**
     * Very similar to `columns`, `columnDefs` allows you to target a specific
     * column, multiple columns, or all columns, using the `targets` property of
     * each object in the array. This allows great flexibility when creating
     * tables, as the `columnDefs` arrays can be of any length, targeting the
     * columns you specifically want. `columnDefs` may use any of the column
     * options available: {@link DataTable.defaults.column}, but it _must_
     * have `targets` defined in each object in the array. Values in the `targets`
     * array may be:
     *   <ul>
     *     <li>a string - class name will be matched on the TH for the column</li>
     *     <li>0 or a positive integer - column index counting from the left</li>
     *     <li>a negative integer - column index counting from the right</li>
     *     <li>the string "_all" - all columns (i.e. assign a default)</li>
     *   </ul>
     *  @member
     *
     *  @name DataTable.defaults.columnDefs
     */
    "aoColumnDefs": null,


    /**
     * Basically the same as `search`, this parameter defines the individual column
     * filtering state at initialisation time. The array must be of the same size
     * as the number of columns, and each element be an object with the parameters
     * `search` and `escapeRegex` (the latter is optional). 'null' is also
     * accepted and the default will be used.
     *  @type array
     *  @default []
     *
     *  @dtopt Option
     *  @name DataTable.defaults.searchCols
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "searchCols": [
		 *          null,
		 *          { "search": "My filter" },
		 *          null,
		 *          { "search": "^[0-9]", "escapeRegex": false }
		 *        ]
		 *      } );
		 *    } )
     */
    "aoSearchCols": [],


    /**
     * An array of CSS classes that should be applied to displayed rows. This
     * array may be of any length, and DataTables will apply each class
     * sequentially, looping when required.
     *  @type array
     *  @default null <i>Will take the values determined by the `oClasses.stripe*`
     *    options</i>
     *
     *  @dtopt Option
     *  @name DataTable.defaults.stripeClasses
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stripeClasses": [ 'strip1', 'strip2', 'strip3' ]
		 *      } );
		 *    } )
     */
    "asStripeClasses": null,


    /**
     * Enable or disable automatic column width calculation. This can be disabled
     * as an optimisation (it takes some time to calculate the widths) if the
     * tables widths are passed in using `columns`.
     *  @type boolean
     *  @default true
     *
     *  @dtopt Features
     *  @name DataTable.defaults.autoWidth
     *
     *  @example
     *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "autoWidth": false
		 *      } );
		 *    } );
     */
    "bAutoWidth": true,


    /**
     * Deferred rendering can provide DataTables with a huge speed boost when you
     * are using an Ajax or JS data source for the table. This option, when set to
     * true, will cause DataTables to defer the creation of the table elements for
     * each row until they are needed for a draw - saving a significant amount of
     * time.
     *  @type boolean
     *  @default false
     *
     *  @dtopt Features
     *  @name DataTable.defaults.deferRender
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajax": "sources/arrays.txt",
		 *        "deferRender": true
		 *      } );
		 *    } );
     */
    "bDeferRender": false,


    /**
     * Replace a DataTable which matches the given selector and replace it with
     * one which has the properties of the new initialisation object passed. If no
     * table matches the selector, then the new DataTable will be constructed as
     * per normal.
     *  @type boolean
     *  @default false
     *
     *  @dtopt Options
     *  @name DataTable.defaults.destroy
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "srollY": "200px",
		 *        "paginate": false
		 *      } );
		 *
		 *      // Some time later....
		 *      $('#example').dataTable( {
		 *        "filter": false,
		 *        "destroy": true
		 *      } );
		 *    } );
     */
    "bDestroy": false,


    /**
     * Enable or disable filtering of data. Filtering in DataTables is "smart" in
     * that it allows the end user to input multiple words (space separated) and
     * will match a row containing those words, even if not in the order that was
     * specified (this allow matching across multiple columns). Note that if you
     * wish to use filtering in DataTables this must remain 'true' - to remove the
     * default filtering input box and retain filtering abilities, please use
     * {@link DataTable.defaults.dom}.
     *  @type boolean
     *  @default true
     *
     *  @dtopt Features
     *  @name DataTable.defaults.searching
     *
     *  @example
     *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "searching": false
		 *      } );
		 *    } );
     */
    "bFilter": true,


    /**
     * Enable or disable the table information display. This shows information
     * about the data that is currently visible on the page, including information
     * about filtered data if that action is being performed.
     *  @type boolean
     *  @default true
     *
     *  @dtopt Features
     *  @name DataTable.defaults.info
     *
     *  @example
     *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "info": false
		 *      } );
		 *    } );
     */
    "bInfo": true,


    /**
     * Allows the end user to select the size of a formatted page from a select
     * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).
     *  @type boolean
     *  @default true
     *
     *  @dtopt Features
     *  @name DataTable.defaults.lengthChange
     *
     *  @example
     *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "lengthChange": false
		 *      } );
		 *    } );
     */
    "bLengthChange": true,


    /**
     * Enable or disable pagination.
     *  @type boolean
     *  @default true
     *
     *  @dtopt Features
     *  @name DataTable.defaults.paging
     *
     *  @example
     *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "paging": false
		 *      } );
		 *    } );
     */
    "bPaginate": true,


    /**
     * Enable or disable the display of a 'processing' indicator when the table is
     * being processed (e.g. a sort). This is particularly useful for tables with
     * large amounts of data where it can take a noticeable amount of time to sort
     * the entries.
     *  @type boolean
     *  @default false
     *
     *  @dtopt Features
     *  @name DataTable.defaults.processing
     *
     *  @example
     *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "processing": true
		 *      } );
		 *    } );
     */
    "bProcessing": false,


    /**
     * Retrieve the DataTables object for the given selector. Note that if the
     * table has already been initialised, this parameter will cause DataTables
     * to simply return the object that has already been set up - it will not take
     * account of any changes you might have made to the initialisation object
     * passed to DataTables (setting this parameter to true is an acknowledgement
     * that you understand this). `destroy` can be used to reinitialise a table if
     * you need.
     *  @type boolean
     *  @default false
     *
     *  @dtopt Options
     *  @name DataTable.defaults.retrieve
     *
     *  @example
     *    $(document).ready( function() {
		 *      initTable();
		 *      tableActions();
		 *    } );
     *
     *    function initTable ()
     *    {
		 *      return $('#example').dataTable( {
		 *        "scrollY": "200px",
		 *        "paginate": false,
		 *        "retrieve": true
		 *      } );
		 *    }
     *
     *    function tableActions ()
     *    {
		 *      var table = initTable();
		 *      // perform API operations with oTable
		 *    }
     */
    "bRetrieve": false,


    /**
     * When vertical (y) scrolling is enabled, DataTables will force the height of
     * the table's viewport to the given height at all times (useful for layout).
     * However, this can look odd when filtering data down to a small data set,
     * and the footer is left "floating" further down. This parameter (when
     * enabled) will cause DataTables to collapse the table's viewport down when
     * the result set will fit within the given Y height.
     *  @type boolean
     *  @default false
     *
     *  @dtopt Options
     *  @name DataTable.defaults.scrollCollapse
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollY": "200",
		 *        "scrollCollapse": true
		 *      } );
		 *    } );
     */
    "bScrollCollapse": false,


    /**
     * Configure DataTables to use server-side processing. Note that the
     * `ajax` parameter must also be given in order to give DataTables a
     * source to obtain the required data for each draw.
     *  @type boolean
     *  @default false
     *
     *  @dtopt Features
     *  @dtopt Server-side
     *  @name DataTable.defaults.serverSide
     *
     *  @example
     *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "serverSide": true,
		 *        "ajax": "xhr.php"
		 *      } );
		 *    } );
     */
    "bServerSide": false,


    /**
     * Enable or disable sorting of columns. Sorting of individual columns can be
     * disabled by the `sortable` option for each column.
     *  @type boolean
     *  @default true
     *
     *  @dtopt Features
     *  @name DataTable.defaults.ordering
     *
     *  @example
     *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "ordering": false
		 *      } );
		 *    } );
     */
    "bSort": true,


    /**
     * Enable or display DataTables' ability to sort multiple columns at the
     * same time (activated by shift-click by the user).
     *  @type boolean
     *  @default true
     *
     *  @dtopt Options
     *  @name DataTable.defaults.orderMulti
     *
     *  @example
     *    // Disable multiple column sorting ability
     *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "orderMulti": false
		 *      } );
		 *    } );
     */
    "bSortMulti": true,


    /**
     * Allows control over whether DataTables should use the top (true) unique
     * cell that is found for a single column, or the bottom (false - default).
     * This is useful when using complex headers.
     *  @type boolean
     *  @default false
     *
     *  @dtopt Options
     *  @name DataTable.defaults.orderCellsTop
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "orderCellsTop": true
		 *      } );
		 *    } );
     */
    "bSortCellsTop": false,


    /**
     * Enable or disable the addition of the classes `sorting\_1`, `sorting\_2` and
     * `sorting\_3` to the columns which are currently being sorted on. This is
     * presented as a feature switch as it can increase processing time (while
     * classes are removed and added) so for large data sets you might want to
     * turn this off.
     *  @type boolean
     *  @default true
     *
     *  @dtopt Features
     *  @name DataTable.defaults.orderClasses
     *
     *  @example
     *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "orderClasses": false
		 *      } );
		 *    } );
     */
    "bSortClasses": true,


    /**
     * Enable or disable state saving. When enabled HTML5 `localStorage` will be
     * used to save table display information such as pagination information,
     * display length, filtering and sorting. As such when the end user reloads
     * the page the display display will match what thy had previously set up.
     *
     * Due to the use of `localStorage` the default state saving is not supported
     * in IE6 or 7. If state saving is required in those browsers, use
     * `stateSaveCallback` to provide a storage solution such as cookies.
     *  @type boolean
     *  @default false
     *
     *  @dtopt Features
     *  @name DataTable.defaults.stateSave
     *
     *  @example
     *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "stateSave": true
		 *      } );
		 *    } );
     */
    "bStateSave": false,


    /**
     * This function is called when a TR element is created (and all TD child
     * elements have been inserted), or registered if using a DOM source, allowing
     * manipulation of the TR element (adding classes etc).
     *  @type function
     *  @param {node} row "TR" element for the current row
     *  @param {array} data Raw data array for this row
     *  @param {int} dataIndex The index of this row in the internal aoData array
     *
     *  @dtopt Callbacks
     *  @name DataTable.defaults.createdRow
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "createdRow": function( row, data, dataIndex ) {
		 *          // Bold the grade for all 'A' grade browsers
		 *          if ( data[4] == "A" )
		 *          {
		 *            $('td:eq(4)', row).html( '<b>A</b>' );
		 *          }
		 *        }
		 *      } );
		 *    } );
     */
    "fnCreatedRow": null,


    /**
     * This function is called on every 'draw' event, and allows you to
     * dynamically modify any aspect you want about the created DOM.
     *  @type function
     *  @param {object} settings DataTables settings object
     *
     *  @dtopt Callbacks
     *  @name DataTable.defaults.drawCallback
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "drawCallback": function( settings ) {
		 *          alert( 'DataTables has redrawn the table' );
		 *        }
		 *      } );
		 *    } );
     */
    "fnDrawCallback": null,


    /**
     * Identical to fnHeaderCallback() but for the table footer this function
     * allows you to modify the table footer on every 'draw' event.
     *  @type function
     *  @param {node} foot "TR" element for the footer
     *  @param {array} data Full table data (as derived from the original HTML)
     *  @param {int} start Index for the current display starting point in the
     *    display array
     *  @param {int} end Index for the current display ending point in the
     *    display array
     *  @param {array int} display Index array to translate the visual position
     *    to the full data array
     *
     *  @dtopt Callbacks
     *  @name DataTable.defaults.footerCallback
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "footerCallback": function( tfoot, data, start, end, display ) {
		 *          tfoot.getElementsByTagName('th')[0].innerHTML = "Starting index is "+start;
		 *        }
		 *      } );
		 *    } )
     */
    "fnFooterCallback": null,


    /**
     * When rendering large numbers in the information element for the table
     * (i.e. "Showing 1 to 10 of 57 entries") DataTables will render large numbers
     * to have a comma separator for the 'thousands' units (e.g. 1 million is
     * rendered as "1,000,000") to help readability for the end user. This
     * function will override the default method DataTables uses.
     *  @type function
     *  @member
     *  @param {int} toFormat number to be formatted
     *  @returns {string} formatted string for DataTables to show the number
     *
     *  @dtopt Callbacks
     *  @name DataTable.defaults.formatNumber
     *
     *  @example
     *    // Format a number using a single quote for the separator (note that
     *    // this can also be done with the language.thousands option)
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "formatNumber": function ( toFormat ) {
		 *          return toFormat.toString().replace(
		 *            /\B(?=(\d{3})+(?!\d))/g, "'"
		 *          );
		 *        };
		 *      } );
		 *    } );
     */
    "fnFormatNumber": function (toFormat) {
      return toFormat.toString().replace(
        /\B(?=(\d{3})+(?!\d))/g,
        this.oLanguage.sThousands
      );
    },


    /**
     * This function is called on every 'draw' event, and allows you to
     * dynamically modify the header row. This can be used to calculate and
     * display useful information about the table.
     *  @type function
     *  @param {node} head "TR" element for the header
     *  @param {array} data Full table data (as derived from the original HTML)
     *  @param {int} start Index for the current display starting point in the
     *    display array
     *  @param {int} end Index for the current display ending point in the
     *    display array
     *  @param {array int} display Index array to translate the visual position
     *    to the full data array
     *
     *  @dtopt Callbacks
     *  @name DataTable.defaults.headerCallback
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "fheaderCallback": function( head, data, start, end, display ) {
		 *          head.getElementsByTagName('th')[0].innerHTML = "Displaying "+(end-start)+" records";
		 *        }
		 *      } );
		 *    } )
     */
    "fnHeaderCallback": null,


    /**
     * The information element can be used to convey information about the current
     * state of the table. Although the internationalisation options presented by
     * DataTables are quite capable of dealing with most customisations, there may
     * be times where you wish to customise the string further. This callback
     * allows you to do exactly that.
     *  @type function
     *  @param {object} oSettings DataTables settings object
     *  @param {int} start Starting position in data for the draw
     *  @param {int} end End position in data for the draw
     *  @param {int} max Total number of rows in the table (regardless of
     *    filtering)
     *  @param {int} total Total number of rows in the data set, after filtering
     *  @param {string} pre The string that DataTables has formatted using it's
     *    own rules
     *  @returns {string} The string to be displayed in the information element.
     *
     *  @dtopt Callbacks
     *  @name DataTable.defaults.infoCallback
     *
     *  @example
     *    $('#example').dataTable( {
		 *      "infoCallback": function( settings, start, end, max, total, pre ) {
		 *        return start +" to "+ end;
		 *      }
		 *    } );
     */
    "fnInfoCallback": null,


    /**
     * Called when the table has been initialised. Normally DataTables will
     * initialise sequentially and there will be no need for this function,
     * however, this does not hold true when using external language information
     * since that is obtained using an async XHR call.
     *  @type function
     *  @param {object} settings DataTables settings object
     *  @param {object} json The JSON object request from the server - only
     *    present if client-side Ajax sourced data is used
     *
     *  @dtopt Callbacks
     *  @name DataTable.defaults.initComplete
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "initComplete": function(settings, json) {
		 *          alert( 'DataTables has finished its initialisation.' );
		 *        }
		 *      } );
		 *    } )
     */
    "fnInitComplete": null,


    /**
     * Called at the very start of each table draw and can be used to cancel the
     * draw by returning false, any other return (including undefined) results in
     * the full draw occurring).
     *  @type function
     *  @param {object} settings DataTables settings object
     *  @returns {boolean} False will cancel the draw, anything else (including no
     *    return) will allow it to complete.
     *
     *  @dtopt Callbacks
     *  @name DataTable.defaults.preDrawCallback
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "preDrawCallback": function( settings ) {
		 *          if ( $('#test').val() == 1 ) {
		 *            return false;
		 *          }
		 *        }
		 *      } );
		 *    } );
     */
    "fnPreDrawCallback": null,


    /**
     * This function allows you to 'post process' each row after it have been
     * generated for each table draw, but before it is rendered on screen. This
     * function might be used for setting the row class name etc.
     *  @type function
     *  @param {node} row "TR" element for the current row
     *  @param {array} data Raw data array for this row
     *  @param {int} displayIndex The display index for the current table draw
     *  @param {int} displayIndexFull The index of the data in the full list of
     *    rows (after filtering)
     *
     *  @dtopt Callbacks
     *  @name DataTable.defaults.rowCallback
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "rowCallback": function( row, data, displayIndex, displayIndexFull ) {
		 *          // Bold the grade for all 'A' grade browsers
		 *          if ( data[4] == "A" ) {
		 *            $('td:eq(4)', row).html( '<b>A</b>' );
		 *          }
		 *        }
		 *      } );
		 *    } );
     */
    "fnRowCallback": null,


    /**
     * __Deprecated__ The functionality provided by this parameter has now been
     * superseded by that provided through `ajax`, which should be used instead.
     *
     * This parameter allows you to override the default function which obtains
     * the data from the server so something more suitable for your application.
     * For example you could use POST data, or pull information from a Gears or
     * AIR database.
     *  @type function
     *  @member
     *  @param {string} source HTTP source to obtain the data from (`ajax`)
     *  @param {array} data A key/value pair object containing the data to send
     *    to the server
     *  @param {function} callback to be called on completion of the data get
     *    process that will draw the data on the page.
     *  @param {object} settings DataTables settings object
     *
     *  @dtopt Callbacks
     *  @dtopt Server-side
     *  @name DataTable.defaults.serverData
     *
     *  @deprecated 1.10. Please use `ajax` for this functionality now.
     */
    "fnServerData": null,


    /**
     * __Deprecated__ The functionality provided by this parameter has now been
     * superseded by that provided through `ajax`, which should be used instead.
     *
     *  It is often useful to send extra data to the server when making an Ajax
     * request - for example custom filtering information, and this callback
     * function makes it trivial to send extra information to the server. The
     * passed in parameter is the data set that has been constructed by
     * DataTables, and you can add to this or modify it as you require.
     *  @type function
     *  @param {array} data Data array (array of objects which are name/value
     *    pairs) that has been constructed by DataTables and will be sent to the
     *    server. In the case of Ajax sourced data with server-side processing
     *    this will be an empty array, for server-side processing there will be a
     *    significant number of parameters!
     *  @returns {undefined} Ensure that you modify the data array passed in,
     *    as this is passed by reference.
     *
     *  @dtopt Callbacks
     *  @dtopt Server-side
     *  @name DataTable.defaults.serverParams
     *
     *  @deprecated 1.10. Please use `ajax` for this functionality now.
     */
    "fnServerParams": null,


    /**
     * Load the table state. With this function you can define from where, and how, the
     * state of a table is loaded. By default DataTables will load from `localStorage`
     * but you might wish to use a server-side database or cookies.
     *  @type function
     *  @member
     *  @param {object} settings DataTables settings object
     *  @param {object} callback Callback that can be executed when done. It
     *    should be passed the loaded state object.
     *  @return {object} The DataTables state object to be loaded
     *
     *  @dtopt Callbacks
     *  @name DataTable.defaults.stateLoadCallback
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoadCallback": function (settings, callback) {
		 *          $.ajax( {
		 *            "url": "/state_load",
		 *            "dataType": "json",
		 *            "success": function (json) {
		 *              callback( json );
		 *            }
		 *          } );
		 *        }
		 *      } );
		 *    } );
     */
    "fnStateLoadCallback": function (settings) {
      try {
        return JSON.parse(
          (settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(
            'DataTables_' + settings.sInstance + '_' + location.pathname
          )
        );
      } catch (e) {
      }
    },


    /**
     * Callback which allows modification of the saved state prior to loading that state.
     * This callback is called when the table is loading state from the stored data, but
     * prior to the settings object being modified by the saved state. Note that for
     * plug-in authors, you should use the `stateLoadParams` event to load parameters for
     * a plug-in.
     *  @type function
     *  @param {object} settings DataTables settings object
     *  @param {object} data The state object that is to be loaded
     *
     *  @dtopt Callbacks
     *  @name DataTable.defaults.stateLoadParams
     *
     *  @example
     *    // Remove a saved filter, so filtering is never loaded
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoadParams": function (settings, data) {
		 *          data.oSearch.sSearch = "";
		 *        }
		 *      } );
		 *    } );
     *
     *  @example
     *    // Disallow state loading by returning false
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoadParams": function (settings, data) {
		 *          return false;
		 *        }
		 *      } );
		 *    } );
     */
    "fnStateLoadParams": null,


    /**
     * Callback that is called when the state has been loaded from the state saving method
     * and the DataTables settings object has been modified as a result of the loaded state.
     *  @type function
     *  @param {object} settings DataTables settings object
     *  @param {object} data The state object that was loaded
     *
     *  @dtopt Callbacks
     *  @name DataTable.defaults.stateLoaded
     *
     *  @example
     *    // Show an alert with the filtering value that was saved
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoaded": function (settings, data) {
		 *          alert( 'Saved filter was: '+data.oSearch.sSearch );
		 *        }
		 *      } );
		 *    } );
     */
    "fnStateLoaded": null,


    /**
     * Save the table state. This function allows you to define where and how the state
     * information for the table is stored By default DataTables will use `localStorage`
     * but you might wish to use a server-side database or cookies.
     *  @type function
     *  @member
     *  @param {object} settings DataTables settings object
     *  @param {object} data The state object to be saved
     *
     *  @dtopt Callbacks
     *  @name DataTable.defaults.stateSaveCallback
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateSaveCallback": function (settings, data) {
		 *          // Send an Ajax request to the server with the state object
		 *          $.ajax( {
		 *            "url": "/state_save",
		 *            "data": data,
		 *            "dataType": "json",
		 *            "method": "POST"
		 *            "success": function () {}
		 *          } );
		 *        }
		 *      } );
		 *    } );
     */
    "fnStateSaveCallback": function (settings, data) {
      try {
        (settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(
          'DataTables_' + settings.sInstance + '_' + location.pathname,
          JSON.stringify(data)
        );
      } catch (e) {
      }
    },


    /**
     * Callback which allows modification of the state to be saved. Called when the table
     * has changed state a new state save is required. This method allows modification of
     * the state saving object prior to actually doing the save, including addition or
     * other state properties or modification. Note that for plug-in authors, you should
     * use the `stateSaveParams` event to save parameters for a plug-in.
     *  @type function
     *  @param {object} settings DataTables settings object
     *  @param {object} data The state object to be saved
     *
     *  @dtopt Callbacks
     *  @name DataTable.defaults.stateSaveParams
     *
     *  @example
     *    // Remove a saved filter, so filtering is never saved
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateSaveParams": function (settings, data) {
		 *          data.oSearch.sSearch = "";
		 *        }
		 *      } );
		 *    } );
     */
    "fnStateSaveParams": null,


    /**
     * Duration for which the saved state information is considered valid. After this period
     * has elapsed the state will be returned to the default.
     * Value is given in seconds.
     *  @type int
     *  @default 7200 <i>(2 hours)</i>
     *
     *  @dtopt Options
     *  @name DataTable.defaults.stateDuration
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateDuration": 60*60*24; // 1 day
		 *      } );
		 *    } )
     */
    "iStateDuration": 7200,


    /**
     * When enabled DataTables will not make a request to the server for the first
     * page draw - rather it will use the data already on the page (no sorting etc
     * will be applied to it), thus saving on an XHR at load time. `deferLoading`
     * is used to indicate that deferred loading is required, but it is also used
     * to tell DataTables how many records there are in the full table (allowing
     * the information element and pagination to be displayed correctly). In the case
     * where a filtering is applied to the table on initial load, this can be
     * indicated by giving the parameter as an array, where the first element is
     * the number of records available after filtering and the second element is the
     * number of records without filtering (allowing the table information element
     * to be shown correctly).
     *  @type int | array
     *  @default null
     *
     *  @dtopt Options
     *  @name DataTable.defaults.deferLoading
     *
     *  @example
     *    // 57 records available in the table, no filtering applied
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "serverSide": true,
		 *        "ajax": "scripts/server_processing.php",
		 *        "deferLoading": 57
		 *      } );
		 *    } );
     *
     *  @example
     *    // 57 records after filtering, 100 without filtering (an initial filter applied)
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "serverSide": true,
		 *        "ajax": "scripts/server_processing.php",
		 *        "deferLoading": [ 57, 100 ],
		 *        "search": {
		 *          "search": "my_filter"
		 *        }
		 *      } );
		 *    } );
     */
    "iDeferLoading": null,


    /**
     * Number of rows to display on a single page when using pagination. If
     * feature enabled (`lengthChange`) then the end user will be able to override
     * this to a custom setting using a pop-up menu.
     *  @type int
     *  @default 10
     *
     *  @dtopt Options
     *  @name DataTable.defaults.pageLength
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "pageLength": 50
		 *      } );
		 *    } )
     */
    "iDisplayLength": 10,


    /**
     * Define the starting point for data display when using DataTables with
     * pagination. Note that this parameter is the number of records, rather than
     * the page number, so if you have 10 records per page and want to start on
     * the third page, it should be "20".
     *  @type int
     *  @default 0
     *
     *  @dtopt Options
     *  @name DataTable.defaults.displayStart
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "displayStart": 20
		 *      } );
		 *    } )
     */
    "iDisplayStart": 0,


    /**
     * By default DataTables allows keyboard navigation of the table (sorting, paging,
     * and filtering) by adding a `tabindex` attribute to the required elements. This
     * allows you to tab through the controls and press the enter key to activate them.
     * The tabindex is default 0, meaning that the tab follows the flow of the document.
     * You can overrule this using this parameter if you wish. Use a value of -1 to
     * disable built-in keyboard navigation.
     *  @type int
     *  @default 0
     *
     *  @dtopt Options
     *  @name DataTable.defaults.tabIndex
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "tabIndex": 1
		 *      } );
		 *    } );
     */
    "iTabIndex": 0,


    /**
     * Classes that DataTables assigns to the various components and features
     * that it adds to the HTML table. This allows classes to be configured
     * during initialisation in addition to through the static
     * {@link DataTable.ext.oStdClasses} object).
     *  @namespace
     *  @name DataTable.defaults.classes
     */
    "oClasses": {},


    /**
     * All strings that DataTables uses in the user interface that it creates
     * are defined in this object, allowing you to modified them individually or
     * completely replace them all as required.
     *  @namespace
     *  @name DataTable.defaults.language
     */
    "oLanguage": {
      /**
       * Strings that are used for WAI-ARIA labels and controls only (these are not
       * actually visible on the page, but will be read by screenreaders, and thus
       * must be internationalised as well).
       *  @namespace
       *  @name DataTable.defaults.language.aria
       */
      "oAria": {
        /**
         * ARIA label that is added to the table headers when the column may be
         * sorted ascending by activing the column (click or return when focused).
         * Note that the column header is prefixed to this string.
         *  @type string
         *  @default : activate to sort column ascending
         *
         *  @dtopt Language
         *  @name DataTable.defaults.language.aria.sortAscending
         *
         *  @example
         *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "aria": {
				 *            "sortAscending": " - click/return to sort ascending"
				 *          }
				 *        }
				 *      } );
				 *    } );
         */
        "sSortAscending": ": activate to sort column ascending",

        /**
         * ARIA label that is added to the table headers when the column may be
         * sorted descending by activing the column (click or return when focused).
         * Note that the column header is prefixed to this string.
         *  @type string
         *  @default : activate to sort column ascending
         *
         *  @dtopt Language
         *  @name DataTable.defaults.language.aria.sortDescending
         *
         *  @example
         *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "aria": {
				 *            "sortDescending": " - click/return to sort descending"
				 *          }
				 *        }
				 *      } );
				 *    } );
         */
        "sSortDescending": ": activate to sort column descending"
      },

      /**
       * Pagination string used by DataTables for the built-in pagination
       * control types.
       *  @namespace
       *  @name DataTable.defaults.language.paginate
       */
      "oPaginate": {
        /**
         * Text to use when using the 'full_numbers' type of pagination for the
         * button to take the user to the first page.
         *  @type string
         *  @default First
         *
         *  @dtopt Language
         *  @name DataTable.defaults.language.paginate.first
         *
         *  @example
         *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "first": "First page"
				 *          }
				 *        }
				 *      } );
				 *    } );
         */
        "sFirst": "First",


        /**
         * Text to use when using the 'full_numbers' type of pagination for the
         * button to take the user to the last page.
         *  @type string
         *  @default Last
         *
         *  @dtopt Language
         *  @name DataTable.defaults.language.paginate.last
         *
         *  @example
         *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "last": "Last page"
				 *          }
				 *        }
				 *      } );
				 *    } );
         */
        "sLast": "Last",


        /**
         * Text to use for the 'next' pagination button (to take the user to the
         * next page).
         *  @type string
         *  @default Next
         *
         *  @dtopt Language
         *  @name DataTable.defaults.language.paginate.next
         *
         *  @example
         *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "next": "Next page"
				 *          }
				 *        }
				 *      } );
				 *    } );
         */
        "sNext": "Next",


        /**
         * Text to use for the 'previous' pagination button (to take the user to
         * the previous page).
         *  @type string
         *  @default Previous
         *
         *  @dtopt Language
         *  @name DataTable.defaults.language.paginate.previous
         *
         *  @example
         *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "previous": "Previous page"
				 *          }
				 *        }
				 *      } );
				 *    } );
         */
        "sPrevious": "Previous"
      },

      /**
       * This string is shown in preference to `zeroRecords` when the table is
       * empty of data (regardless of filtering). Note that this is an optional
       * parameter - if it is not given, the value of `zeroRecords` will be used
       * instead (either the default or given value).
       *  @type string
       *  @default No data available in table
       *
       *  @dtopt Language
       *  @name DataTable.defaults.language.emptyTable
       *
       *  @example
       *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "emptyTable": "No data available in table"
			 *        }
			 *      } );
			 *    } );
       */
      "sEmptyTable": "No data available in table",


      /**
       * This string gives information to the end user about the information
       * that is current on display on the page. The following tokens can be
       * used in the string and will be dynamically replaced as the table
       * display updates. This tokens can be placed anywhere in the string, or
       * removed as needed by the language requires:
       *
       * * `\_START\_` - Display index of the first record on the current page
       * * `\_END\_` - Display index of the last record on the current page
       * * `\_TOTAL\_` - Number of records in the table after filtering
       * * `\_MAX\_` - Number of records in the table without filtering
       * * `\_PAGE\_` - Current page number
       * * `\_PAGES\_` - Total number of pages of data in the table
       *
       *  @type string
       *  @default Showing _START_ to _END_ of _TOTAL_ entries
       *
       *  @dtopt Language
       *  @name DataTable.defaults.language.info
       *
       *  @example
       *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "info": "Showing page _PAGE_ of _PAGES_"
			 *        }
			 *      } );
			 *    } );
       */
      "sInfo": "Showing _START_ to _END_ of _TOTAL_ entries",


      /**
       * Display information string for when the table is empty. Typically the
       * format of this string should match `info`.
       *  @type string
       *  @default Showing 0 to 0 of 0 entries
       *
       *  @dtopt Language
       *  @name DataTable.defaults.language.infoEmpty
       *
       *  @example
       *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "infoEmpty": "No entries to show"
			 *        }
			 *      } );
			 *    } );
       */
      "sInfoEmpty": "Showing 0 to 0 of 0 entries",


      /**
       * When a user filters the information in a table, this string is appended
       * to the information (`info`) to give an idea of how strong the filtering
       * is. The variable _MAX_ is dynamically updated.
       *  @type string
       *  @default (filtered from _MAX_ total entries)
       *
       *  @dtopt Language
       *  @name DataTable.defaults.language.infoFiltered
       *
       *  @example
       *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "infoFiltered": " - filtering from _MAX_ records"
			 *        }
			 *      } );
			 *    } );
       */
      "sInfoFiltered": "(filtered from _MAX_ total entries)",


      /**
       * If can be useful to append extra information to the info string at times,
       * and this variable does exactly that. This information will be appended to
       * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are
       * being used) at all times.
       *  @type string
       *  @default <i>Empty string</i>
       *
       *  @dtopt Language
       *  @name DataTable.defaults.language.infoPostFix
       *
       *  @example
       *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "infoPostFix": "All records shown are derived from real information."
			 *        }
			 *      } );
			 *    } );
       */
      "sInfoPostFix": "",


      /**
       * This decimal place operator is a little different from the other
       * language options since DataTables doesn't output floating point
       * numbers, so it won't ever use this for display of a number. Rather,
       * what this parameter does is modify the sort methods of the table so
       * that numbers which are in a format which has a character other than
       * a period (`.`) as a decimal place will be sorted numerically.
       *
       * Note that numbers with different decimal places cannot be shown in
       * the same table and still be sortable, the table must be consistent.
       * However, multiple different tables on the page can use different
       * decimal place characters.
       *  @type string
       *  @default
       *
       *  @dtopt Language
       *  @name DataTable.defaults.language.decimal
       *
       *  @example
       *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "decimal": ","
			 *          "thousands": "."
			 *        }
			 *      } );
			 *    } );
       */
      "sDecimal": "",


      /**
       * DataTables has a build in number formatter (`formatNumber`) which is
       * used to format large numbers that are used in the table information.
       * By default a comma is used, but this can be trivially changed to any
       * character you wish with this parameter.
       *  @type string
       *  @default ,
       *
       *  @dtopt Language
       *  @name DataTable.defaults.language.thousands
       *
       *  @example
       *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "thousands": "'"
			 *        }
			 *      } );
			 *    } );
       */
      "sThousands": ",",


      /**
       * Detail the action that will be taken when the drop down menu for the
       * pagination length option is changed. The '_MENU_' variable is replaced
       * with a default select list of 10, 25, 50 and 100, and can be replaced
       * with a custom select box if required.
       *  @type string
       *  @default Show _MENU_ entries
       *
       *  @dtopt Language
       *  @name DataTable.defaults.language.lengthMenu
       *
       *  @example
       *    // Language change only
       *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "lengthMenu": "Display _MENU_ records"
			 *        }
			 *      } );
			 *    } );
       *
       *  @example
       *    // Language and options change
       *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "lengthMenu": 'Display <select>'+
			 *            '<option value="10">10</option>'+
			 *            '<option value="20">20</option>'+
			 *            '<option value="30">30</option>'+
			 *            '<option value="40">40</option>'+
			 *            '<option value="50">50</option>'+
			 *            '<option value="-1">All</option>'+
			 *            '</select> records'
			 *        }
			 *      } );
			 *    } );
       */
      "sLengthMenu": "Show _MENU_ entries",


      /**
       * When using Ajax sourced data and during the first draw when DataTables is
       * gathering the data, this message is shown in an empty row in the table to
       * indicate to the end user the the data is being loaded. Note that this
       * parameter is not used when loading data by server-side processing, just
       * Ajax sourced data with client-side processing.
       *  @type string
       *  @default Loading...
       *
       *  @dtopt Language
       *  @name DataTable.defaults.language.loadingRecords
       *
       *  @example
       *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "loadingRecords": "Please wait - loading..."
			 *        }
			 *      } );
			 *    } );
       */
      "sLoadingRecords": "Loading...",


      /**
       * Text which is displayed when the table is processing a user action
       * (usually a sort command or similar).
       *  @type string
       *  @default Processing...
       *
       *  @dtopt Language
       *  @name DataTable.defaults.language.processing
       *
       *  @example
       *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "processing": "DataTables is currently busy"
			 *        }
			 *      } );
			 *    } );
       */
      "sProcessing": "Processing...",


      /**
       * Details the actions that will be taken when the user types into the
       * filtering input text box. The variable "_INPUT_", if used in the string,
       * is replaced with the HTML text box for the filtering input allowing
       * control over where it appears in the string. If "_INPUT_" is not given
       * then the input box is appended to the string automatically.
       *  @type string
       *  @default Search:
       *
       *  @dtopt Language
       *  @name DataTable.defaults.language.search
       *
       *  @example
       *    // Input text box will be appended at the end automatically
       *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "search": "Filter records:"
			 *        }
			 *      } );
			 *    } );
       *
       *  @example
       *    // Specify where the filter should appear
       *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "search": "Apply filter _INPUT_ to table"
			 *        }
			 *      } );
			 *    } );
       */
      "sSearch": "Search:",


      /**
       * Assign a `placeholder` attribute to the search `input` element
       *  @type string
       *  @default
       *
       *  @dtopt Language
       *  @name DataTable.defaults.language.searchPlaceholder
       */
      "sSearchPlaceholder": "",


      /**
       * All of the language information can be stored in a file on the
       * server-side, which DataTables will look up if this parameter is passed.
       * It must store the URL of the language file, which is in a JSON format,
       * and the object has the same properties as the oLanguage object in the
       * initialiser object (i.e. the above parameters). Please refer to one of
       * the example language files to see how this works in action.
       *  @type string
       *  @default <i>Empty string - i.e. disabled</i>
       *
       *  @dtopt Language
       *  @name DataTable.defaults.language.url
       *
       *  @example
       *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "url": "http://www.sprymedia.co.uk/dataTables/lang.txt"
			 *        }
			 *      } );
			 *    } );
       */
      "sUrl": "",


      /**
       * Text shown inside the table records when the is no information to be
       * displayed after filtering. `emptyTable` is shown when there is simply no
       * information in the table at all (regardless of filtering).
       *  @type string
       *  @default No matching records found
       *
       *  @dtopt Language
       *  @name DataTable.defaults.language.zeroRecords
       *
       *  @example
       *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "zeroRecords": "No records to display"
			 *        }
			 *      } );
			 *    } );
       */
      "sZeroRecords": "No matching records found"
    },


    /**
     * This parameter allows you to have define the global filtering state at
     * initialisation time. As an object the `search` parameter must be
     * defined, but all other parameters are optional. When `regex` is true,
     * the search string will be treated as a regular expression, when false
     * (default) it will be treated as a straight string. When `smart`
     * DataTables will use it's smart filtering methods (to word match at
     * any point in the data), when false this will not be done.
     *  @namespace
     *  @extends DataTable.models.oSearch
     *
     *  @dtopt Options
     *  @name DataTable.defaults.search
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "search": {"search": "Initial search"}
		 *      } );
		 *    } )
     */
    "oSearch": $.extend({}, DataTable.models.oSearch),


    /**
     * __Deprecated__ The functionality provided by this parameter has now been
     * superseded by that provided through `ajax`, which should be used instead.
     *
     * By default DataTables will look for the property `data` (or `aaData` for
     * compatibility with DataTables 1.9-) when obtaining data from an Ajax
     * source or for server-side processing - this parameter allows that
     * property to be changed. You can use Javascript dotted object notation to
     * get a data source for multiple levels of nesting.
     *  @type string
     *  @default data
     *
     *  @dtopt Options
     *  @dtopt Server-side
     *  @name DataTable.defaults.ajaxDataProp
     *
     *  @deprecated 1.10. Please use `ajax` for this functionality now.
     */
    "sAjaxDataProp": "data",


    /**
     * __Deprecated__ The functionality provided by this parameter has now been
     * superseded by that provided through `ajax`, which should be used instead.
     *
     * You can instruct DataTables to load data from an external
     * source using this parameter (use aData if you want to pass data in you
     * already have). Simply provide a url a JSON object can be obtained from.
     *  @type string
     *  @default null
     *
     *  @dtopt Options
     *  @dtopt Server-side
     *  @name DataTable.defaults.ajaxSource
     *
     *  @deprecated 1.10. Please use `ajax` for this functionality now.
     */
    "sAjaxSource": null,


    /**
     * This initialisation variable allows you to specify exactly where in the
     * DOM you want DataTables to inject the various controls it adds to the page
     * (for example you might want the pagination controls at the top of the
     * table). DIV elements (with or without a custom class) can also be added to
     * aid styling. The follow syntax is used:
     *   <ul>
     *     <li>The following options are allowed:
     *       <ul>
     *         <li>'l' - Length changing</li>
     *         <li>'f' - Filtering input</li>
     *         <li>'t' - The table!</li>
     *         <li>'i' - Information</li>
     *         <li>'p' - Pagination</li>
     *         <li>'r' - pRocessing</li>
     *       </ul>
     *     </li>
     *     <li>The following constants are allowed:
     *       <ul>
     *         <li>'H' - jQueryUI theme "header" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>
     *         <li>'F' - jQueryUI theme "footer" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>
     *       </ul>
     *     </li>
     *     <li>The following syntax is expected:
     *       <ul>
     *         <li>'&lt;' and '&gt;' - div elements</li>
     *         <li>'&lt;"class" and '&gt;' - div with a class</li>
     *         <li>'&lt;"#id" and '&gt;' - div with an ID</li>
     *       </ul>
     *     </li>
     *     <li>Examples:
     *       <ul>
     *         <li>'&lt;"wrapper"flipt&gt;'</li>
     *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>
     *       </ul>
     *     </li>
     *   </ul>
     *  @type string
     *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>
     *    <"H"lfr>t<"F"ip> <i>(when `jQueryUI` is true)</i>
     *
     *  @dtopt Options
     *  @name DataTable.defaults.dom
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "dom": '&lt;"top"i&gt;rt&lt;"bottom"flp&gt;&lt;"clear"&gt;'
		 *      } );
		 *    } );
     */
    "sDom": "lfrtip",


    /**
     * Search delay option. This will throttle full table searches that use the
     * DataTables provided search input element (it does not effect calls to
     * `dt-api search()`, providing a delay before the search is made.
     *  @type integer
     *  @default 0
     *
     *  @dtopt Options
     *  @name DataTable.defaults.searchDelay
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "searchDelay": 200
		 *      } );
		 *    } )
     */
    "searchDelay": null,


    /**
     * DataTables features six different built-in options for the buttons to
     * display for pagination control:
     *
     * * `numbers` - Page number buttons only
     * * `simple` - 'Previous' and 'Next' buttons only
     * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers
     * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons
     * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers
     * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers
     *
     * Further methods can be added using {@link DataTable.ext.oPagination}.
     *  @type string
     *  @default simple_numbers
     *
     *  @dtopt Options
     *  @name DataTable.defaults.pagingType
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "pagingType": "full_numbers"
		 *      } );
		 *    } )
     */
    "sPaginationType": "simple_numbers",


    /**
     * Enable horizontal scrolling. When a table is too wide to fit into a
     * certain layout, or you have a large number of columns in the table, you
     * can enable x-scrolling to show the table in a viewport, which can be
     * scrolled. This property can be `true` which will allow the table to
     * scroll horizontally when needed, or any CSS unit, or a number (in which
     * case it will be treated as a pixel measurement). Setting as simply `true`
     * is recommended.
     *  @type boolean|string
     *  @default <i>blank string - i.e. disabled</i>
     *
     *  @dtopt Features
     *  @name DataTable.defaults.scrollX
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollX": true,
		 *        "scrollCollapse": true
		 *      } );
		 *    } );
     */
    "sScrollX": "",


    /**
     * This property can be used to force a DataTable to use more width than it
     * might otherwise do when x-scrolling is enabled. For example if you have a
     * table which requires to be well spaced, this parameter is useful for
     * "over-sizing" the table, and thus forcing scrolling. This property can by
     * any CSS unit, or a number (in which case it will be treated as a pixel
     * measurement).
     *  @type string
     *  @default <i>blank string - i.e. disabled</i>
     *
     *  @dtopt Options
     *  @name DataTable.defaults.scrollXInner
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollX": "100%",
		 *        "scrollXInner": "110%"
		 *      } );
		 *    } );
     */
    "sScrollXInner": "",


    /**
     * Enable vertical scrolling. Vertical scrolling will constrain the DataTable
     * to the given height, and enable scrolling for any data which overflows the
     * current viewport. This can be used as an alternative to paging to display
     * a lot of data in a small area (although paging and scrolling can both be
     * enabled at the same time). This property can be any CSS unit, or a number
     * (in which case it will be treated as a pixel measurement).
     *  @type string
     *  @default <i>blank string - i.e. disabled</i>
     *
     *  @dtopt Features
     *  @name DataTable.defaults.scrollY
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollY": "200px",
		 *        "paginate": false
		 *      } );
		 *    } );
     */
    "sScrollY": "",


    /**
     * __Deprecated__ The functionality provided by this parameter has now been
     * superseded by that provided through `ajax`, which should be used instead.
     *
     * Set the HTTP method that is used to make the Ajax call for server-side
     * processing or Ajax sourced data.
     *  @type string
     *  @default GET
     *
     *  @dtopt Options
     *  @dtopt Server-side
     *  @name DataTable.defaults.serverMethod
     *
     *  @deprecated 1.10. Please use `ajax` for this functionality now.
     */
    "sServerMethod": "GET",


    /**
     * DataTables makes use of renderers when displaying HTML elements for
     * a table. These renderers can be added or modified by plug-ins to
     * generate suitable mark-up for a site. For example the Bootstrap
     * integration plug-in for DataTables uses a paging button renderer to
     * display pagination buttons in the mark-up required by Bootstrap.
     *
     * For further information about the renderers available see
     * DataTable.ext.renderer
     *  @type string|object
     *  @default null
     *
     *  @name DataTable.defaults.renderer
     *
     */
    "renderer": null,


    /**
     * Set the data property name that DataTables should use to get a row's id
     * to set as the `id` property in the node.
     *  @type string
     *  @default DT_RowId
     *
     *  @name DataTable.defaults.rowId
     */
    "rowId": "DT_RowId"
  };

  _fnHungarianMap(DataTable.defaults);


  /*
	 * Developer note - See note in model.defaults.js about the use of Hungarian
	 * notation and camel case.
	 */

  /**
   * Column options that can be given to DataTables at initialisation time.
   *  @namespace
   */
  DataTable.defaults.column = {
    /**
     * Define which column(s) an order will occur on for this column. This
     * allows a column's ordering to take multiple columns into account when
     * doing a sort or use the data from a different column. For example first
     * name / last name columns make sense to do a multi-column sort over the
     * two columns.
     *  @type array|int
     *  @default null <i>Takes the value of the column index automatically</i>
     *
     *  @name DataTable.defaults.column.orderData
     *  @dtopt Columns
     *
     *  @example
     *    // Using `columnDefs`
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderData": [ 0, 1 ], "targets": [ 0 ] },
		 *          { "orderData": [ 1, 0 ], "targets": [ 1 ] },
		 *          { "orderData": 2, "targets": [ 2 ] }
		 *        ]
		 *      } );
		 *    } );
     *
     *  @example
     *    // Using `columns`
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "orderData": [ 0, 1 ] },
		 *          { "orderData": [ 1, 0 ] },
		 *          { "orderData": 2 },
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
     */
    "aDataSort": null,
    "iDataSort": -1,


    /**
     * You can control the default ordering direction, and even alter the
     * behaviour of the sort handler (i.e. only allow ascending ordering etc)
     * using this parameter.
     *  @type array
     *  @default [ 'asc', 'desc' ]
     *
     *  @name DataTable.defaults.column.orderSequence
     *  @dtopt Columns
     *
     *  @example
     *    // Using `columnDefs`
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderSequence": [ "asc" ], "targets": [ 1 ] },
		 *          { "orderSequence": [ "desc", "asc", "asc" ], "targets": [ 2 ] },
		 *          { "orderSequence": [ "desc" ], "targets": [ 3 ] }
		 *        ]
		 *      } );
		 *    } );
     *
     *  @example
     *    // Using `columns`
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          { "orderSequence": [ "asc" ] },
		 *          { "orderSequence": [ "desc", "asc", "asc" ] },
		 *          { "orderSequence": [ "desc" ] },
		 *          null
		 *        ]
		 *      } );
		 *    } );
     */
    "asSorting": ['asc', 'desc'],


    /**
     * Enable or disable filtering on the data in this column.
     *  @type boolean
     *  @default true
     *
     *  @name DataTable.defaults.column.searchable
     *  @dtopt Columns
     *
     *  @example
     *    // Using `columnDefs`
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "searchable": false, "targets": [ 0 ] }
		 *        ] } );
		 *    } );
     *
     *  @example
     *    // Using `columns`
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "searchable": false },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ] } );
		 *    } );
     */
    "bSearchable": true,


    /**
     * Enable or disable ordering on this column.
     *  @type boolean
     *  @default true
     *
     *  @name DataTable.defaults.column.orderable
     *  @dtopt Columns
     *
     *  @example
     *    // Using `columnDefs`
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderable": false, "targets": [ 0 ] }
		 *        ] } );
		 *    } );
     *
     *  @example
     *    // Using `columns`
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "orderable": false },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ] } );
		 *    } );
     */
    "bSortable": true,


    /**
     * Enable or disable the display of this column.
     *  @type boolean
     *  @default true
     *
     *  @name DataTable.defaults.column.visible
     *  @dtopt Columns
     *
     *  @example
     *    // Using `columnDefs`
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "visible": false, "targets": [ 0 ] }
		 *        ] } );
		 *    } );
     *
     *  @example
     *    // Using `columns`
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "visible": false },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ] } );
		 *    } );
     */
    "bVisible": true,


    /**
     * Developer definable function that is called whenever a cell is created (Ajax source,
     * etc) or processed for input (DOM source). This can be used as a compliment to mRender
     * allowing you to modify the DOM element (add background colour for example) when the
     * element is available.
     *  @type function
     *  @param {element} td The TD node that has been created
     *  @param {*} cellData The Data for the cell
     *  @param {array|object} rowData The data for the whole row
     *  @param {int} row The row index for the aoData data store
     *  @param {int} col The column index for aoColumns
     *
     *  @name DataTable.defaults.column.createdCell
     *  @dtopt Columns
     *
     *  @example
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [3],
		 *          "createdCell": function (td, cellData, rowData, row, col) {
		 *            if ( cellData == "1.7" ) {
		 *              $(td).css('color', 'blue')
		 *            }
		 *          }
		 *        } ]
		 *      });
		 *    } );
     */
    "fnCreatedCell": null,


    /**
     * This parameter has been replaced by `data` in DataTables to ensure naming
     * consistency. `dataProp` can still be used, as there is backwards
     * compatibility in DataTables for this option, but it is strongly
     * recommended that you use `data` in preference to `dataProp`.
     *  @name DataTable.defaults.column.dataProp
     */


    /**
     * This property can be used to read data from any data source property,
     * including deeply nested objects / properties. `data` can be given in a
     * number of different ways which effect its behaviour:
     *
     * * `integer` - treated as an array index for the data source. This is the
     *   default that DataTables uses (incrementally increased for each column).
     * * `string` - read an object property from the data source. There are
     *   three 'special' options that can be used in the string to alter how
     *   DataTables reads the data from the source object:
     *    * `.` - Dotted Javascript notation. Just as you use a `.` in
     *      Javascript to read from nested objects, so to can the options
     *      specified in `data`. For example: `browser.version` or
     *      `browser.name`. If your object parameter name contains a period, use
     *      `\\` to escape it - i.e. `first\\.name`.
     *    * `[]` - Array notation. DataTables can automatically combine data
     *      from and array source, joining the data with the characters provided
     *      between the two brackets. For example: `name[, ]` would provide a
     *      comma-space separated list from the source array. If no characters
     *      are provided between the brackets, the original array source is
     *      returned.
     *    * `()` - Function notation. Adding `()` to the end of a parameter will
     *      execute a function of the name given. For example: `browser()` for a
     *      simple function on the data source, `browser.version()` for a
     *      function in a nested property or even `browser().version` to get an
     *      object property if the function called returns an object. Note that
     *      function notation is recommended for use in `render` rather than
     *      `data` as it is much simpler to use as a renderer.
     * * `null` - use the original data source for the row rather than plucking
     *   data directly from it. This action has effects on two other
     *   initialisation options:
     *    * `defaultContent` - When null is given as the `data` option and
     *      `defaultContent` is specified for the column, the value defined by
     *      `defaultContent` will be used for the cell.
     *    * `render` - When null is used for the `data` option and the `render`
     *      option is specified for the column, the whole data source for the
     *      row is used for the renderer.
     * * `function` - the function given will be executed whenever DataTables
     *   needs to set or get the data for a cell in the column. The function
     *   takes three parameters:
     *    * Parameters:
     *      * `{array|object}` The data source for the row
     *      * `{string}` The type call data requested - this will be 'set' when
     *        setting data or 'filter', 'display', 'type', 'sort' or undefined
     *        when gathering data. Note that when `undefined` is given for the
     *        type DataTables expects to get the raw data for the object back<
     *      * `{*}` Data to set when the second parameter is 'set'.
     *    * Return:
     *      * The return value from the function is not required when 'set' is
     *        the type of call, but otherwise the return is what will be used
     *        for the data requested.
     *
     * Note that `data` is a getter and setter option. If you just require
     * formatting of data for output, you will likely want to use `render` which
     * is simply a getter and thus simpler to use.
     *
     * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The
     * name change reflects the flexibility of this property and is consistent
     * with the naming of mRender. If 'mDataProp' is given, then it will still
     * be used by DataTables, as it automatically maps the old name to the new
     * if required.
     *
     *  @type string|int|function|null
     *  @default null <i>Use automatically calculated column index</i>
     *
     *  @name DataTable.defaults.column.data
     *  @dtopt Columns
     *
     *  @example
     *    // Read table data from objects
     *    // JSON structure for each row:
     *    //   {
		 *    //      "engine": {value},
		 *    //      "browser": {value},
		 *    //      "platform": {value},
		 *    //      "version": {value},
		 *    //      "grade": {value}
		 *    //   }
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajaxSource": "sources/objects.txt",
		 *        "columns": [
		 *          { "data": "engine" },
		 *          { "data": "browser" },
		 *          { "data": "platform" },
		 *          { "data": "version" },
		 *          { "data": "grade" }
		 *        ]
		 *      } );
		 *    } );
     *
     *  @example
     *    // Read information from deeply nested objects
     *    // JSON structure for each row:
     *    //   {
		 *    //      "engine": {value},
		 *    //      "browser": {value},
		 *    //      "platform": {
		 *    //         "inner": {value}
		 *    //      },
		 *    //      "details": [
		 *    //         {value}, {value}
		 *    //      ]
		 *    //   }
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajaxSource": "sources/deep.txt",
		 *        "columns": [
		 *          { "data": "engine" },
		 *          { "data": "browser" },
		 *          { "data": "platform.inner" },
		 *          { "data": "platform.details.0" },
		 *          { "data": "platform.details.1" }
		 *        ]
		 *      } );
		 *    } );
     *
     *  @example
     *    // Using `data` as a function to provide different information for
     *    // sorting, filtering and display. In this case, currency (price)
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": function ( source, type, val ) {
		 *            if (type === 'set') {
		 *              source.price = val;
		 *              // Store the computed dislay and filter values for efficiency
		 *              source.price_display = val=="" ? "" : "$"+numberFormat(val);
		 *              source.price_filter  = val=="" ? "" : "$"+numberFormat(val)+" "+val;
		 *              return;
		 *            }
		 *            else if (type === 'display') {
		 *              return source.price_display;
		 *            }
		 *            else if (type === 'filter') {
		 *              return source.price_filter;
		 *            }
		 *            // 'sort', 'type' and undefined all just use the integer
		 *            return source.price;
		 *          }
		 *        } ]
		 *      } );
		 *    } );
     *
     *  @example
     *    // Using default content
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": null,
		 *          "defaultContent": "Click to edit"
		 *        } ]
		 *      } );
		 *    } );
     *
     *  @example
     *    // Using array notation - outputting a list from an array
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": "name[, ]"
		 *        } ]
		 *      } );
		 *    } );
     *
     */
    "mData": null,


    /**
     * This property is the rendering partner to `data` and it is suggested that
     * when you want to manipulate data for display (including filtering,
     * sorting etc) without altering the underlying data for the table, use this
     * property. `render` can be considered to be the the read only companion to
     * `data` which is read / write (then as such more complex). Like `data`
     * this option can be given in a number of different ways to effect its
     * behaviour:
     *
     * * `integer` - treated as an array index for the data source. This is the
     *   default that DataTables uses (incrementally increased for each column).
     * * `string` - read an object property from the data source. There are
     *   three 'special' options that can be used in the string to alter how
     *   DataTables reads the data from the source object:
     *    * `.` - Dotted Javascript notation. Just as you use a `.` in
     *      Javascript to read from nested objects, so to can the options
     *      specified in `data`. For example: `browser.version` or
     *      `browser.name`. If your object parameter name contains a period, use
     *      `\\` to escape it - i.e. `first\\.name`.
     *    * `[]` - Array notation. DataTables can automatically combine data
     *      from and array source, joining the data with the characters provided
     *      between the two brackets. For example: `name[, ]` would provide a
     *      comma-space separated list from the source array. If no characters
     *      are provided between the brackets, the original array source is
     *      returned.
     *    * `()` - Function notation. Adding `()` to the end of a parameter will
     *      execute a function of the name given. For example: `browser()` for a
     *      simple function on the data source, `browser.version()` for a
     *      function in a nested property or even `browser().version` to get an
     *      object property if the function called returns an object.
     * * `object` - use different data for the different data types requested by
     *   DataTables ('filter', 'display', 'type' or 'sort'). The property names
     *   of the object is the data type the property refers to and the value can
     *   defined using an integer, string or function using the same rules as
     *   `render` normally does. Note that an `_` option _must_ be specified.
     *   This is the default value to use if you haven't specified a value for
     *   the data type requested by DataTables.
     * * `function` - the function given will be executed whenever DataTables
     *   needs to set or get the data for a cell in the column. The function
     *   takes three parameters:
     *    * Parameters:
     *      * {array|object} The data source for the row (based on `data`)
     *      * {string} The type call data requested - this will be 'filter',
     *        'display', 'type' or 'sort'.
     *      * {array|object} The full data source for the row (not based on
     *        `data`)
     *    * Return:
     *      * The return value from the function is what will be used for the
     *        data requested.
     *
     *  @type string|int|function|object|null
     *  @default null Use the data source value.
     *
     *  @name DataTable.defaults.column.render
     *  @dtopt Columns
     *
     *  @example
     *    // Create a comma separated list from an array of objects
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajaxSource": "sources/deep.txt",
		 *        "columns": [
		 *          { "data": "engine" },
		 *          { "data": "browser" },
		 *          {
		 *            "data": "platform",
		 *            "render": "[, ].name"
		 *          }
		 *        ]
		 *      } );
		 *    } );
     *
     *  @example
     *    // Execute a function to obtain data
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": null, // Use the full data source object for the renderer's source
		 *          "render": "browserName()"
		 *        } ]
		 *      } );
		 *    } );
     *
     *  @example
     *    // As an object, extracting different data for the different types
     *    // This would be used with a data source such as:
     *    //   { "phone": 5552368, "phone_filter": "5552368 555-2368", "phone_display": "555-2368" }
     *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`
     *    // (which has both forms) is used for filtering for if a user inputs either format, while
     *    // the formatted phone number is the one that is shown in the table.
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": null, // Use the full data source object for the renderer's source
		 *          "render": {
		 *            "_": "phone",
		 *            "filter": "phone_filter",
		 *            "display": "phone_display"
		 *          }
		 *        } ]
		 *      } );
		 *    } );
     *
     *  @example
     *    // Use as a function to create a link from the data source
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": "download_link",
		 *          "render": function ( data, type, full ) {
		 *            return '<a href="'+data+'">Download</a>';
		 *          }
		 *        } ]
		 *      } );
		 *    } );
     */
    "mRender": null,


    /**
     * Change the cell type created for the column - either TD cells or TH cells. This
     * can be useful as TH cells have semantic meaning in the table body, allowing them
     * to act as a header for a row (you may wish to add scope='row' to the TH elements).
     *  @type string
     *  @default td
     *
     *  @name DataTable.defaults.column.cellType
     *  @dtopt Columns
     *
     *  @example
     *    // Make the first column use TH cells
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "cellType": "th"
		 *        } ]
		 *      } );
		 *    } );
     */
    "sCellType": "td",


    /**
     * Class to give to each cell in this column.
     *  @type string
     *  @default <i>Empty string</i>
     *
     *  @name DataTable.defaults.column.class
     *  @dtopt Columns
     *
     *  @example
     *    // Using `columnDefs`
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "class": "my_class", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
     *
     *  @example
     *    // Using `columns`
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "class": "my_class" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
     */
    "sClass": "",

    /**
     * When DataTables calculates the column widths to assign to each column,
     * it finds the longest string in each column and then constructs a
     * temporary table and reads the widths from that. The problem with this
     * is that "mmm" is much wider then "iiii", but the latter is a longer
     * string - thus the calculation can go wrong (doing it properly and putting
     * it into an DOM object and measuring that is horribly(!) slow). Thus as
     * a "work around" we provide this option. It will append its value to the
     * text that is found to be the longest string for the column - i.e. padding.
     * Generally you shouldn't need this!
     *  @type string
     *  @default <i>Empty string<i>
     *
     *  @name DataTable.defaults.column.contentPadding
     *  @dtopt Columns
     *
     *  @example
     *    // Using `columns`
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          null,
		 *          null,
		 *          {
		 *            "contentPadding": "mmm"
		 *          }
		 *        ]
		 *      } );
		 *    } );
     */
    "sContentPadding": "",


    /**
     * Allows a default value to be given for a column's data, and will be used
     * whenever a null data source is encountered (this can be because `data`
     * is set to null, or because the data source itself is null).
     *  @type string
     *  @default null
     *
     *  @name DataTable.defaults.column.defaultContent
     *  @dtopt Columns
     *
     *  @example
     *    // Using `columnDefs`
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          {
		 *            "data": null,
		 *            "defaultContent": "Edit",
		 *            "targets": [ -1 ]
		 *          }
		 *        ]
		 *      } );
		 *    } );
     *
     *  @example
     *    // Using `columns`
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          null,
		 *          null,
		 *          {
		 *            "data": null,
		 *            "defaultContent": "Edit"
		 *          }
		 *        ]
		 *      } );
		 *    } );
     */
    "sDefaultContent": null,


    /**
     * This parameter is only used in DataTables' server-side processing. It can
     * be exceptionally useful to know what columns are being displayed on the
     * client side, and to map these to database fields. When defined, the names
     * also allow DataTables to reorder information from the server if it comes
     * back in an unexpected order (i.e. if you switch your columns around on the
     * client-side, your server-side code does not also need updating).
     *  @type string
     *  @default <i>Empty string</i>
     *
     *  @name DataTable.defaults.column.name
     *  @dtopt Columns
     *
     *  @example
     *    // Using `columnDefs`
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "name": "engine", "targets": [ 0 ] },
		 *          { "name": "browser", "targets": [ 1 ] },
		 *          { "name": "platform", "targets": [ 2 ] },
		 *          { "name": "version", "targets": [ 3 ] },
		 *          { "name": "grade", "targets": [ 4 ] }
		 *        ]
		 *      } );
		 *    } );
     *
     *  @example
     *    // Using `columns`
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "name": "engine" },
		 *          { "name": "browser" },
		 *          { "name": "platform" },
		 *          { "name": "version" },
		 *          { "name": "grade" }
		 *        ]
		 *      } );
		 *    } );
     */
    "sName": "",


    /**
     * Defines a data source type for the ordering which can be used to read
     * real-time information from the table (updating the internally cached
     * version) prior to ordering. This allows ordering to occur on user
     * editable elements such as form inputs.
     *  @type string
     *  @default std
     *
     *  @name DataTable.defaults.column.orderDataType
     *  @dtopt Columns
     *
     *  @example
     *    // Using `columnDefs`
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderDataType": "dom-text", "targets": [ 2, 3 ] },
		 *          { "type": "numeric", "targets": [ 3 ] },
		 *          { "orderDataType": "dom-select", "targets": [ 4 ] },
		 *          { "orderDataType": "dom-checkbox", "targets": [ 5 ] }
		 *        ]
		 *      } );
		 *    } );
     *
     *  @example
     *    // Using `columns`
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          null,
		 *          { "orderDataType": "dom-text" },
		 *          { "orderDataType": "dom-text", "type": "numeric" },
		 *          { "orderDataType": "dom-select" },
		 *          { "orderDataType": "dom-checkbox" }
		 *        ]
		 *      } );
		 *    } );
     */
    "sSortDataType": "std",


    /**
     * The title of this column.
     *  @type string
     *  @default null <i>Derived from the 'TH' value for this column in the
     *    original HTML table.</i>
     *
     *  @name DataTable.defaults.column.title
     *  @dtopt Columns
     *
     *  @example
     *    // Using `columnDefs`
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "title": "My column title", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
     *
     *  @example
     *    // Using `columns`
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "title": "My column title" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
     */
    "sTitle": null,


    /**
     * The type allows you to specify how the data for this column will be
     * ordered. Four types (string, numeric, date and html (which will strip
     * HTML tags before ordering)) are currently available. Note that only date
     * formats understood by Javascript's Date() object will be accepted as type
     * date. For example: "Mar 26, 2008 5:03 PM". May take the values: 'string',
     * 'numeric', 'date' or 'html' (by default). Further types can be adding
     * through plug-ins.
     *  @type string
     *  @default null <i>Auto-detected from raw data</i>
     *
     *  @name DataTable.defaults.column.type
     *  @dtopt Columns
     *
     *  @example
     *    // Using `columnDefs`
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "type": "html", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
     *
     *  @example
     *    // Using `columns`
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "type": "html" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
     */
    "sType": null,


    /**
     * Defining the width of the column, this parameter may take any CSS value
     * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not
     * been given a specific width through this interface ensuring that the table
     * remains readable.
     *  @type string
     *  @default null <i>Automatic</i>
     *
     *  @name DataTable.defaults.column.width
     *  @dtopt Columns
     *
     *  @example
     *    // Using `columnDefs`
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "width": "20%", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
     *
     *  @example
     *    // Using `columns`
     *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "width": "20%" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
     */
    "sWidth": null
  };

  _fnHungarianMap(DataTable.defaults.column);


  /**
   * DataTables settings object - this holds all the information needed for a
   * given table, including configuration, data and current application of the
   * table options. DataTables does not have a single instance for each DataTable
   * with the settings attached to that instance, but rather instances of the
   * DataTable "class" are created on-the-fly as needed (typically by a
   * $().dataTable() call) and the settings object is then applied to that
   * instance.
   *
   * Note that this object is related to {@link DataTable.defaults} but this
   * one is the internal data store for DataTables's cache of columns. It should
   * NOT be manipulated outside of DataTables. Any configuration should be done
   * through the initialisation options.
   *  @namespace
   *  @todo Really should attach the settings object to individual instances so we
   *    don't need to create new instances on each $().dataTable() call (if the
   *    table already exists). It would also save passing oSettings around and
   *    into every single function. However, this is a very significant
   *    architecture change for DataTables and will almost certainly break
   *    backwards compatibility with older installations. This is something that
   *    will be done in 2.0.
   */
  DataTable.models.oSettings = {
    /**
     * Primary features of DataTables and their enablement state.
     *  @namespace
     */
    "oFeatures": {

      /**
       * Flag to say if DataTables should automatically try to calculate the
       * optimum table and columns widths (true) or not (false).
       * Note that this parameter will be set by the initialisation routine. To
       * set a default use {@link DataTable.defaults}.
       *  @type boolean
       */
      "bAutoWidth": null,

      /**
       * Delay the creation of TR and TD elements until they are actually
       * needed by a driven page draw. This can give a significant speed
       * increase for Ajax source and Javascript source data, but makes no
       * difference at all fro DOM and server-side processing tables.
       * Note that this parameter will be set by the initialisation routine. To
       * set a default use {@link DataTable.defaults}.
       *  @type boolean
       */
      "bDeferRender": null,

      /**
       * Enable filtering on the table or not. Note that if this is disabled
       * then there is no filtering at all on the table, including fnFilter.
       * To just remove the filtering input use sDom and remove the 'f' option.
       * Note that this parameter will be set by the initialisation routine. To
       * set a default use {@link DataTable.defaults}.
       *  @type boolean
       */
      "bFilter": null,

      /**
       * Table information element (the 'Showing x of y records' div) enable
       * flag.
       * Note that this parameter will be set by the initialisation routine. To
       * set a default use {@link DataTable.defaults}.
       *  @type boolean
       */
      "bInfo": null,

      /**
       * Present a user control allowing the end user to change the page size
       * when pagination is enabled.
       * Note that this parameter will be set by the initialisation routine. To
       * set a default use {@link DataTable.defaults}.
       *  @type boolean
       */
      "bLengthChange": null,

      /**
       * Pagination enabled or not. Note that if this is disabled then length
       * changing must also be disabled.
       * Note that this parameter will be set by the initialisation routine. To
       * set a default use {@link DataTable.defaults}.
       *  @type boolean
       */
      "bPaginate": null,

      /**
       * Processing indicator enable flag whenever DataTables is enacting a
       * user request - typically an Ajax request for server-side processing.
       * Note that this parameter will be set by the initialisation routine. To
       * set a default use {@link DataTable.defaults}.
       *  @type boolean
       */
      "bProcessing": null,

      /**
       * Server-side processing enabled flag - when enabled DataTables will
       * get all data from the server for every draw - there is no filtering,
       * sorting or paging done on the client-side.
       * Note that this parameter will be set by the initialisation routine. To
       * set a default use {@link DataTable.defaults}.
       *  @type boolean
       */
      "bServerSide": null,

      /**
       * Sorting enablement flag.
       * Note that this parameter will be set by the initialisation routine. To
       * set a default use {@link DataTable.defaults}.
       *  @type boolean
       */
      "bSort": null,

      /**
       * Multi-column sorting
       * Note that this parameter will be set by the initialisation routine. To
       * set a default use {@link DataTable.defaults}.
       *  @type boolean
       */
      "bSortMulti": null,

      /**
       * Apply a class to the columns which are being sorted to provide a
       * visual highlight or not. This can slow things down when enabled since
       * there is a lot of DOM interaction.
       * Note that this parameter will be set by the initialisation routine. To
       * set a default use {@link DataTable.defaults}.
       *  @type boolean
       */
      "bSortClasses": null,

      /**
       * State saving enablement flag.
       * Note that this parameter will be set by the initialisation routine. To
       * set a default use {@link DataTable.defaults}.
       *  @type boolean
       */
      "bStateSave": null
    },


    /**
     * Scrolling settings for a table.
     *  @namespace
     */
    "oScroll": {
      /**
       * When the table is shorter in height than sScrollY, collapse the
       * table container down to the height of the table (when true).
       * Note that this parameter will be set by the initialisation routine. To
       * set a default use {@link DataTable.defaults}.
       *  @type boolean
       */
      "bCollapse": null,

      /**
       * Width of the scrollbar for the web-browser's platform. Calculated
       * during table initialisation.
       *  @type int
       *  @default 0
       */
      "iBarWidth": 0,

      /**
       * Viewport width for horizontal scrolling. Horizontal scrolling is
       * disabled if an empty string.
       * Note that this parameter will be set by the initialisation routine. To
       * set a default use {@link DataTable.defaults}.
       *  @type string
       */
      "sX": null,

      /**
       * Width to expand the table to when using x-scrolling. Typically you
       * should not need to use this.
       * Note that this parameter will be set by the initialisation routine. To
       * set a default use {@link DataTable.defaults}.
       *  @type string
       *  @deprecated
       */
      "sXInner": null,

      /**
       * Viewport height for vertical scrolling. Vertical scrolling is disabled
       * if an empty string.
       * Note that this parameter will be set by the initialisation routine. To
       * set a default use {@link DataTable.defaults}.
       *  @type string
       */
      "sY": null
    },

    /**
     * Language information for the table.
     *  @namespace
     *  @extends DataTable.defaults.oLanguage
     */
    "oLanguage": {
      /**
       * Information callback function. See
       * {@link DataTable.defaults.fnInfoCallback}
       *  @type function
       *  @default null
       */
      "fnInfoCallback": null
    },

    /**
     * Browser support parameters
     *  @namespace
     */
    "oBrowser": {
      /**
       * Indicate if the browser incorrectly calculates width:100% inside a
       * scrolling element (IE6/7)
       *  @type boolean
       *  @default false
       */
      "bScrollOversize": false,

      /**
       * Determine if the vertical scrollbar is on the right or left of the
       * scrolling container - needed for rtl language layout, although not
       * all browsers move the scrollbar (Safari).
       *  @type boolean
       *  @default false
       */
      "bScrollbarLeft": false,

      /**
       * Flag for if `getBoundingClientRect` is fully supported or not
       *  @type boolean
       *  @default false
       */
      "bBounding": false,

      /**
       * Browser scrollbar width
       *  @type integer
       *  @default 0
       */
      "barWidth": 0
    },


    "ajax": null,


    /**
     * Array referencing the nodes which are used for the features. The
     * parameters of this object match what is allowed by sDom - i.e.
     *   <ul>
     *     <li>'l' - Length changing</li>
     *     <li>'f' - Filtering input</li>
     *     <li>'t' - The table!</li>
     *     <li>'i' - Information</li>
     *     <li>'p' - Pagination</li>
     *     <li>'r' - pRocessing</li>
     *   </ul>
     *  @type array
     *  @default []
     */
    "aanFeatures": [],

    /**
     * Store data information - see {@link DataTable.models.oRow} for detailed
     * information.
     *  @type array
     *  @default []
     */
    "aoData": [],

    /**
     * Array of indexes which are in the current display (after filtering etc)
     *  @type array
     *  @default []
     */
    "aiDisplay": [],

    /**
     * Array of indexes for display - no filtering
     *  @type array
     *  @default []
     */
    "aiDisplayMaster": [],

    /**
     * Map of row ids to data indexes
     *  @type object
     *  @default {}
     */
    "aIds": {},

    /**
     * Store information about each column that is in use
     *  @type array
     *  @default []
     */
    "aoColumns": [],

    /**
     * Store information about the table's header
     *  @type array
     *  @default []
     */
    "aoHeader": [],

    /**
     * Store information about the table's footer
     *  @type array
     *  @default []
     */
    "aoFooter": [],

    /**
     * Store the applied global search information in case we want to force a
     * research or compare the old search to a new one.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     *  @namespace
     *  @extends DataTable.models.oSearch
     */
    "oPreviousSearch": {},

    /**
     * Store the applied search for each column - see
     * {@link DataTable.models.oSearch} for the format that is used for the
     * filtering information for each column.
     *  @type array
     *  @default []
     */
    "aoPreSearchCols": [],

    /**
     * Sorting that is applied to the table. Note that the inner arrays are
     * used in the following manner:
     * <ul>
     *   <li>Index 0 - column number</li>
     *   <li>Index 1 - current sorting direction</li>
     * </ul>
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     *  @type array
     *  @todo These inner arrays should really be objects
     */
    "aaSorting": null,

    /**
     * Sorting that is always applied to the table (i.e. prefixed in front of
     * aaSorting).
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     *  @type array
     *  @default []
     */
    "aaSortingFixed": [],

    /**
     * Classes to use for the striping of a table.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     *  @type array
     *  @default []
     */
    "asStripeClasses": null,

    /**
     * If restoring a table - we should restore its striping classes as well
     *  @type array
     *  @default []
     */
    "asDestroyStripes": [],

    /**
     * If restoring a table - we should restore its width
     *  @type int
     *  @default 0
     */
    "sDestroyWidth": 0,

    /**
     * Callback functions array for every time a row is inserted (i.e. on a draw).
     *  @type array
     *  @default []
     */
    "aoRowCallback": [],

    /**
     * Callback functions for the header on each draw.
     *  @type array
     *  @default []
     */
    "aoHeaderCallback": [],

    /**
     * Callback function for the footer on each draw.
     *  @type array
     *  @default []
     */
    "aoFooterCallback": [],

    /**
     * Array of callback functions for draw callback functions
     *  @type array
     *  @default []
     */
    "aoDrawCallback": [],

    /**
     * Array of callback functions for row created function
     *  @type array
     *  @default []
     */
    "aoRowCreatedCallback": [],

    /**
     * Callback functions for just before the table is redrawn. A return of
     * false will be used to cancel the draw.
     *  @type array
     *  @default []
     */
    "aoPreDrawCallback": [],

    /**
     * Callback functions for when the table has been initialised.
     *  @type array
     *  @default []
     */
    "aoInitComplete": [],


    /**
     * Callbacks for modifying the settings to be stored for state saving, prior to
     * saving state.
     *  @type array
     *  @default []
     */
    "aoStateSaveParams": [],

    /**
     * Callbacks for modifying the settings that have been stored for state saving
     * prior to using the stored values to restore the state.
     *  @type array
     *  @default []
     */
    "aoStateLoadParams": [],

    /**
     * Callbacks for operating on the settings object once the saved state has been
     * loaded
     *  @type array
     *  @default []
     */
    "aoStateLoaded": [],

    /**
     * Cache the table ID for quick access
     *  @type string
     *  @default <i>Empty string</i>
     */
    "sTableId": "",

    /**
     * The TABLE node for the main table
     *  @type node
     *  @default null
     */
    "nTable": null,

    /**
     * Permanent ref to the thead element
     *  @type node
     *  @default null
     */
    "nTHead": null,

    /**
     * Permanent ref to the tfoot element - if it exists
     *  @type node
     *  @default null
     */
    "nTFoot": null,

    /**
     * Permanent ref to the tbody element
     *  @type node
     *  @default null
     */
    "nTBody": null,

    /**
     * Cache the wrapper node (contains all DataTables controlled elements)
     *  @type node
     *  @default null
     */
    "nTableWrapper": null,

    /**
     * Indicate if when using server-side processing the loading of data
     * should be deferred until the second draw.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     *  @type boolean
     *  @default false
     */
    "bDeferLoading": false,

    /**
     * Indicate if all required information has been read in
     *  @type boolean
     *  @default false
     */
    "bInitialised": false,

    /**
     * Information about open rows. Each object in the array has the parameters
     * 'nTr' and 'nParent'
     *  @type array
     *  @default []
     */
    "aoOpenRows": [],

    /**
     * Dictate the positioning of DataTables' control elements - see
     * {@link DataTable.model.oInit.sDom}.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     *  @type string
     *  @default null
     */
    "sDom": null,

    /**
     * Search delay (in mS)
     *  @type integer
     *  @default null
     */
    "searchDelay": null,

    /**
     * Which type of pagination should be used.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     *  @type string
     *  @default two_button
     */
    "sPaginationType": "two_button",

    /**
     * The state duration (for `stateSave`) in seconds.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     *  @type int
     *  @default 0
     */
    "iStateDuration": 0,

    /**
     * Array of callback functions for state saving. Each array element is an
     * object with the following parameters:
     *   <ul>
     *     <li>function:fn - function to call. Takes two parameters, oSettings
     *       and the JSON string to save that has been thus far created. Returns
     *       a JSON string to be inserted into a json object
     *       (i.e. '"param": [ 0, 1, 2]')</li>
     *     <li>string:sName - name of callback</li>
     *   </ul>
     *  @type array
     *  @default []
     */
    "aoStateSave": [],

    /**
     * Array of callback functions for state loading. Each array element is an
     * object with the following parameters:
     *   <ul>
     *     <li>function:fn - function to call. Takes two parameters, oSettings
     *       and the object stored. May return false to cancel state loading</li>
     *     <li>string:sName - name of callback</li>
     *   </ul>
     *  @type array
     *  @default []
     */
    "aoStateLoad": [],

    /**
     * State that was saved. Useful for back reference
     *  @type object
     *  @default null
     */
    "oSavedState": null,

    /**
     * State that was loaded. Useful for back reference
     *  @type object
     *  @default null
     */
    "oLoadedState": null,

    /**
     * Source url for AJAX data for the table.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     *  @type string
     *  @default null
     */
    "sAjaxSource": null,

    /**
     * Property from a given object from which to read the table data from. This
     * can be an empty string (when not server-side processing), in which case
     * it is  assumed an an array is given directly.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     *  @type string
     */
    "sAjaxDataProp": null,

    /**
     * Note if draw should be blocked while getting data
     *  @type boolean
     *  @default true
     */
    "bAjaxDataGet": true,

    /**
     * The last jQuery XHR object that was used for server-side data gathering.
     * This can be used for working with the XHR information in one of the
     * callbacks
     *  @type object
     *  @default null
     */
    "jqXHR": null,

    /**
     * JSON returned from the server in the last Ajax request
     *  @type object
     *  @default undefined
     */
    "json": undefined,

    /**
     * Data submitted as part of the last Ajax request
     *  @type object
     *  @default undefined
     */
    "oAjaxData": undefined,

    /**
     * Function to get the server-side data.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     *  @type function
     */
    "fnServerData": null,

    /**
     * Functions which are called prior to sending an Ajax request so extra
     * parameters can easily be sent to the server
     *  @type array
     *  @default []
     */
    "aoServerParams": [],

    /**
     * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if
     * required).
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     *  @type string
     */
    "sServerMethod": null,

    /**
     * Format numbers for display.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     *  @type function
     */
    "fnFormatNumber": null,

    /**
     * List of options that can be used for the user selectable length menu.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     *  @type array
     *  @default []
     */
    "aLengthMenu": null,

    /**
     * Counter for the draws that the table does. Also used as a tracker for
     * server-side processing
     *  @type int
     *  @default 0
     */
    "iDraw": 0,

    /**
     * Indicate if a redraw is being done - useful for Ajax
     *  @type boolean
     *  @default false
     */
    "bDrawing": false,

    /**
     * Draw index (iDraw) of the last error when parsing the returned data
     *  @type int
     *  @default -1
     */
    "iDrawError": -1,

    /**
     * Paging display length
     *  @type int
     *  @default 10
     */
    "_iDisplayLength": 10,

    /**
     * Paging start point - aiDisplay index
     *  @type int
     *  @default 0
     */
    "_iDisplayStart": 0,

    /**
     * Server-side processing - number of records in the result set
     * (i.e. before filtering), Use fnRecordsTotal rather than
     * this property to get the value of the number of records, regardless of
     * the server-side processing setting.
     *  @type int
     *  @default 0
     *  @private
     */
    "_iRecordsTotal": 0,

    /**
     * Server-side processing - number of records in the current display set
     * (i.e. after filtering). Use fnRecordsDisplay rather than
     * this property to get the value of the number of records, regardless of
     * the server-side processing setting.
     *  @type boolean
     *  @default 0
     *  @private
     */
    "_iRecordsDisplay": 0,

    /**
     * The classes to use for the table
     *  @type object
     *  @default {}
     */
    "oClasses": {},

    /**
     * Flag attached to the settings object so you can check in the draw
     * callback if filtering has been done in the draw. Deprecated in favour of
     * events.
     *  @type boolean
     *  @default false
     *  @deprecated
     */
    "bFiltered": false,

    /**
     * Flag attached to the settings object so you can check in the draw
     * callback if sorting has been done in the draw. Deprecated in favour of
     * events.
     *  @type boolean
     *  @default false
     *  @deprecated
     */
    "bSorted": false,

    /**
     * Indicate that if multiple rows are in the header and there is more than
     * one unique cell per column, if the top one (true) or bottom one (false)
     * should be used for sorting / title by DataTables.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     *  @type boolean
     */
    "bSortCellsTop": null,

    /**
     * Initialisation object that is used for the table
     *  @type object
     *  @default null
     */
    "oInit": null,

    /**
     * Destroy callback functions - for plug-ins to attach themselves to the
     * destroy so they can clean up markup and events.
     *  @type array
     *  @default []
     */
    "aoDestroyCallback": [],


    /**
     * Get the number of records in the current record set, before filtering
     *  @type function
     */
    "fnRecordsTotal": function () {
      return _fnDataSource(this) == 'ssp' ?
        this._iRecordsTotal * 1 :
        this.aiDisplayMaster.length;
    },

    /**
     * Get the number of records in the current record set, after filtering
     *  @type function
     */
    "fnRecordsDisplay": function () {
      return _fnDataSource(this) == 'ssp' ?
        this._iRecordsDisplay * 1 :
        this.aiDisplay.length;
    },

    /**
     * Get the display end point - aiDisplay index
     *  @type function
     */
    "fnDisplayEnd": function () {
      var
        len = this._iDisplayLength,
        start = this._iDisplayStart,
        calc = start + len,
        records = this.aiDisplay.length,
        features = this.oFeatures,
        paginate = features.bPaginate;

      if (features.bServerSide) {
        return paginate === false || len === -1 ?
          start + records :
          Math.min(start + len, this._iRecordsDisplay);
      }
      else {
        return !paginate || calc > records || len === -1 ?
          records :
          calc;
      }
    },

    /**
     * The DataTables object for this table
     *  @type object
     *  @default null
     */
    "oInstance": null,

    /**
     * Unique identifier for each instance of the DataTables object. If there
     * is an ID on the table node, then it takes that value, otherwise an
     * incrementing internal counter is used.
     *  @type string
     *  @default null
     */
    "sInstance": null,

    /**
     * tabindex attribute value that is added to DataTables control elements, allowing
     * keyboard navigation of the table and its controls.
     */
    "iTabIndex": 0,

    /**
     * DIV container for the footer scrolling table if scrolling
     */
    "nScrollHead": null,

    /**
     * DIV container for the footer scrolling table if scrolling
     */
    "nScrollFoot": null,

    /**
     * Last applied sort
     *  @type array
     *  @default []
     */
    "aLastSort": [],

    /**
     * Stored plug-in instances
     *  @type object
     *  @default {}
     */
    "oPlugins": {},

    /**
     * Function used to get a row's id from the row's data
     *  @type function
     *  @default null
     */
    "rowIdFn": null,

    /**
     * Data location where to store a row's id
     *  @type string
     *  @default null
     */
    "rowId": null
  };

  /**
   * Extension object for DataTables that is used to provide all extension
   * options.
   *
   * Note that the `DataTable.ext` object is available through
   * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is
   * also aliased to `jQuery.fn.dataTableExt` for historic reasons.
   *  @namespace
   *  @extends DataTable.models.ext
   */


  /**
   * DataTables extensions
   *
   * This namespace acts as a collection area for plug-ins that can be used to
   * extend DataTables capabilities. Indeed many of the build in methods
   * use this method to provide their own capabilities (sorting methods for
   * example).
   *
   * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy
   * reasons
   *
   *  @namespace
   */
  DataTable.ext = _ext = {
    /**
     * Buttons. For use with the Buttons extension for DataTables. This is
     * defined here so other extensions can define buttons regardless of load
     * order. It is _not_ used by DataTables core.
     *
     *  @type object
     *  @default {}
     */
    buttons: {},


    /**
     * Element class names
     *
     *  @type object
     *  @default {}
     */
    classes: {},


    /**
     * DataTables build type (expanded by the download builder)
     *
     *  @type string
     */
    build: "dt/dt-1.10.16",


    /**
     * Error reporting.
     *
     * How should DataTables report an error. Can take the value 'alert',
     * 'throw', 'none' or a function.
     *
     *  @type string|function
     *  @default alert
     */
    errMode: "alert",


    /**
     * Feature plug-ins.
     *
     * This is an array of objects which describe the feature plug-ins that are
     * available to DataTables. These feature plug-ins are then available for
     * use through the `dom` initialisation option.
     *
     * Each feature plug-in is described by an object which must have the
     * following properties:
     *
     * * `fnInit` - function that is used to initialise the plug-in,
     * * `cFeature` - a character so the feature can be enabled by the `dom`
     *   instillation option. This is case sensitive.
     *
     * The `fnInit` function has the following input parameters:
     *
     * 1. `{object}` DataTables settings object: see
     *    {@link DataTable.models.oSettings}
     *
     * And the following return is expected:
     *
     * * {node|null} The element which contains your feature. Note that the
     *   return may also be void if your plug-in does not require to inject any
     *   DOM elements into DataTables control (`dom`) - for example this might
     *   be useful when developing a plug-in which allows table control via
     *   keyboard entry
     *
     *  @type array
     *
     *  @example
     *    $.fn.dataTable.ext.features.push( {
		 *      "fnInit": function( oSettings ) {
		 *        return new TableTools( { "oDTSettings": oSettings } );
		 *      },
		 *      "cFeature": "T"
		 *    } );
     */
    feature: [],


    /**
     * Row searching.
     *
     * This method of searching is complimentary to the default type based
     * searching, and a lot more comprehensive as it allows you complete control
     * over the searching logic. Each element in this array is a function
     * (parameters described below) that is called for every row in the table,
     * and your logic decides if it should be included in the searching data set
     * or not.
     *
     * Searching functions have the following input parameters:
     *
     * 1. `{object}` DataTables settings object: see
     *    {@link DataTable.models.oSettings}
     * 2. `{array|object}` Data for the row to be processed (same as the
     *    original format that was passed in as the data source, or an array
     *    from a DOM data source
     * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which
     *    can be useful to retrieve the `TR` element if you need DOM interaction.
     *
     * And the following return is expected:
     *
     * * {boolean} Include the row in the searched result set (true) or not
     *   (false)
     *
     * Note that as with the main search ability in DataTables, technically this
     * is "filtering", since it is subtractive. However, for consistency in
     * naming we call it searching here.
     *
     *  @type array
     *  @default []
     *
     *  @example
     *    // The following example shows custom search being applied to the
     *    // fourth column (i.e. the data[3] index) based on two input values
     *    // from the end-user, matching the data in a certain range.
     *    $.fn.dataTable.ext.search.push(
     *      function( settings, data, dataIndex ) {
		 *        var min = document.getElementById('min').value * 1;
		 *        var max = document.getElementById('max').value * 1;
		 *        var version = data[3] == "-" ? 0 : data[3]*1;
		 *
		 *        if ( min == "" && max == "" ) {
		 *          return true;
		 *        }
		 *        else if ( min == "" && version < max ) {
		 *          return true;
		 *        }
		 *        else if ( min < version && "" == max ) {
		 *          return true;
		 *        }
		 *        else if ( min < version && version < max ) {
		 *          return true;
		 *        }
		 *        return false;
		 *      }
     *    );
     */
    search: [],


    /**
     * Selector extensions
     *
     * The `selector` option can be used to extend the options available for the
     * selector modifier options (`selector-modifier` object data type) that
     * each of the three built in selector types offer (row, column and cell +
     * their plural counterparts). For example the Select extension uses this
     * mechanism to provide an option to select only rows, columns and cells
     * that have been marked as selected by the end user (`{selected: true}`),
     * which can be used in conjunction with the existing built in selector
     * options.
     *
     * Each property is an array to which functions can be pushed. The functions
     * take three attributes:
     *
     * * Settings object for the host table
     * * Options object (`selector-modifier` object type)
     * * Array of selected item indexes
     *
     * The return is an array of the resulting item indexes after the custom
     * selector has been applied.
     *
     *  @type object
     */
    selector: {
      cell: [],
      column: [],
      row: []
    },


    /**
     * Internal functions, exposed for used in plug-ins.
     *
     * Please note that you should not need to use the internal methods for
     * anything other than a plug-in (and even then, try to avoid if possible).
     * The internal function may change between releases.
     *
     *  @type object
     *  @default {}
     */
    internal: {},


    /**
     * Legacy configuration options. Enable and disable legacy options that
     * are available in DataTables.
     *
     *  @type object
     */
    legacy: {
      /**
       * Enable / disable DataTables 1.9 compatible server-side processing
       * requests
       *
       *  @type boolean
       *  @default null
       */
      ajax: null
    },


    /**
     * Pagination plug-in methods.
     *
     * Each entry in this object is a function and defines which buttons should
     * be shown by the pagination rendering method that is used for the table:
     * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the
     * buttons are displayed in the document, while the functions here tell it
     * what buttons to display. This is done by returning an array of button
     * descriptions (what each button will do).
     *
     * Pagination types (the four built in options and any additional plug-in
     * options defined here) can be used through the `paginationType`
     * initialisation parameter.
     *
     * The functions defined take two parameters:
     *
     * 1. `{int} page` The current page index
     * 2. `{int} pages` The number of pages in the table
     *
     * Each function is expected to return an array where each element of the
     * array can be one of:
     *
     * * `first` - Jump to first page when activated
     * * `last` - Jump to last page when activated
     * * `previous` - Show previous page when activated
     * * `next` - Show next page when activated
     * * `{int}` - Show page of the index given
     * * `{array}` - A nested array containing the above elements to add a
     *   containing 'DIV' element (might be useful for styling).
     *
     * Note that DataTables v1.9- used this object slightly differently whereby
     * an object with two functions would be defined for each plug-in. That
     * ability is still supported by DataTables 1.10+ to provide backwards
     * compatibility, but this option of use is now decremented and no longer
     * documented in DataTables 1.10+.
     *
     *  @type object
     *  @default {}
     *
     *  @example
     *    // Show previous, next and current page buttons only
     *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {
		 *      return [ 'previous', page, 'next' ];
		 *    };
     */
    pager: {},


    renderer: {
      pageButton: {},
      header: {}
    },


    /**
     * Ordering plug-ins - custom data source
     *
     * The extension options for ordering of data available here is complimentary
     * to the default type based ordering that DataTables typically uses. It
     * allows much greater control over the the data that is being used to
     * order a column, but is necessarily therefore more complex.
     *
     * This type of ordering is useful if you want to do ordering based on data
     * live from the DOM (for example the contents of an 'input' element) rather
     * than just the static string that DataTables knows of.
     *
     * The way these plug-ins work is that you create an array of the values you
     * wish to be ordering for the column in question and then return that
     * array. The data in the array much be in the index order of the rows in
     * the table (not the currently ordering order!). Which order data gathering
     * function is run here depends on the `dt-init columns.orderDataType`
     * parameter that is used for the column (if any).
     *
     * The functions defined take two parameters:
     *
     * 1. `{object}` DataTables settings object: see
     *    {@link DataTable.models.oSettings}
     * 2. `{int}` Target column index
     *
     * Each function is expected to return an array:
     *
     * * `{array}` Data for the column to be ordering upon
     *
     *  @type array
     *
     *  @example
     *    // Ordering using `input` node values
     *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )
     *    {
		 *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {
		 *        return $('input', td).val();
		 *      } );
		 *    }
     */
    order: {},


    /**
     * Type based plug-ins.
     *
     * Each column in DataTables has a type assigned to it, either by automatic
     * detection or by direct assignment using the `type` option for the column.
     * The type of a column will effect how it is ordering and search (plug-ins
     * can also make use of the column type if required).
     *
     * @namespace
     */
    type: {
      /**
       * Type detection functions.
       *
       * The functions defined in this object are used to automatically detect
       * a column's type, making initialisation of DataTables super easy, even
       * when complex data is in the table.
       *
       * The functions defined take two parameters:
       *
       *  1. `{*}` Data from the column cell to be analysed
       *  2. `{settings}` DataTables settings object. This can be used to
       *     perform context specific type detection - for example detection
       *     based on language settings such as using a comma for a decimal
       *     place. Generally speaking the options from the settings will not
       *     be required
       *
       * Each function is expected to return:
       *
       * * `{string|null}` Data type detected, or null if unknown (and thus
       *   pass it on to the other type detection functions.
       *
       *  @type array
       *
       *  @example
       *    // Currency type detection plug-in:
       *    $.fn.dataTable.ext.type.detect.push(
       *      function ( data, settings ) {
			 *        // Check the numeric part
			 *        if ( ! $.isNumeric( data.substring(1) ) ) {
			 *          return null;
			 *        }
			 *
			 *        // Check prefixed by currency
			 *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {
			 *          return 'currency';
			 *        }
			 *        return null;
			 *      }
       *    );
       */
      detect: [],


      /**
       * Type based search formatting.
       *
       * The type based searching functions can be used to pre-format the
       * data to be search on. For example, it can be used to strip HTML
       * tags or to de-format telephone numbers for numeric only searching.
       *
       * Note that is a search is not defined for a column of a given type,
       * no search formatting will be performed.
       *
       * Pre-processing of searching data plug-ins - When you assign the sType
       * for a column (or have it automatically detected for you by DataTables
       * or a type detection plug-in), you will typically be using this for
       * custom sorting, but it can also be used to provide custom searching
       * by allowing you to pre-processing the data and returning the data in
       * the format that should be searched upon. This is done by adding
       * functions this object with a parameter name which matches the sType
       * for that target column. This is the corollary of <i>afnSortData</i>
       * for searching data.
       *
       * The functions defined take a single parameter:
       *
       *  1. `{*}` Data from the column cell to be prepared for searching
       *
       * Each function is expected to return:
       *
       * * `{string|null}` Formatted string that will be used for the searching.
       *
       *  @type object
       *  @default {}
       *
       *  @example
       *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {
			 *      return d.replace(/\n/g," ").replace( /<.*?>/g, "" );
			 *    }
       */
      search: {},


      /**
       * Type based ordering.
       *
       * The column type tells DataTables what ordering to apply to the table
       * when a column is sorted upon. The order for each type that is defined,
       * is defined by the functions available in this object.
       *
       * Each ordering option can be described by three properties added to
       * this object:
       *
       * * `{type}-pre` - Pre-formatting function
       * * `{type}-asc` - Ascending order function
       * * `{type}-desc` - Descending order function
       *
       * All three can be used together, only `{type}-pre` or only
       * `{type}-asc` and `{type}-desc` together. It is generally recommended
       * that only `{type}-pre` is used, as this provides the optimal
       * implementation in terms of speed, although the others are provided
       * for compatibility with existing Javascript sort functions.
       *
       * `{type}-pre`: Functions defined take a single parameter:
       *
       *  1. `{*}` Data from the column cell to be prepared for ordering
       *
       * And return:
       *
       * * `{*}` Data to be sorted upon
       *
       * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort
       * functions, taking two parameters:
       *
       *  1. `{*}` Data to compare to the second parameter
       *  2. `{*}` Data to compare to the first parameter
       *
       * And returning:
       *
       * * `{*}` Ordering match: <0 if first parameter should be sorted lower
       *   than the second parameter, ===0 if the two parameters are equal and
       *   >0 if the first parameter should be sorted height than the second
       *   parameter.
       *
       *  @type object
       *  @default {}
       *
       *  @example
       *    // Numeric ordering of formatted numbers with a pre-formatter
       *    $.extend( $.fn.dataTable.ext.type.order, {
			 *      "string-pre": function(x) {
			 *        a = (a === "-" || a === "") ? 0 : a.replace( /[^\d\-\.]/g, "" );
			 *        return parseFloat( a );
			 *      }
			 *    } );
       *
       *  @example
       *    // Case-sensitive string ordering, with no pre-formatting method
       *    $.extend( $.fn.dataTable.ext.order, {
			 *      "string-case-asc": function(x,y) {
			 *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));
			 *      },
			 *      "string-case-desc": function(x,y) {
			 *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));
			 *      }
			 *    } );
       */
      order: {}
    },

    /**
     * Unique DataTables instance counter
     *
     * @type int
     * @private
     */
    _unique: 0,


    //
    // Depreciated
    // The following properties are retained for backwards compatiblity only.
    // The should not be used in new projects and will be removed in a future
    // version
    //

    /**
     * Version check function.
     *  @type function
     *  @depreciated Since 1.10
     */
    fnVersionCheck: DataTable.fnVersionCheck,


    /**
     * Index for what 'this' index API functions should use
     *  @type int
     *  @deprecated Since v1.10
     */
    iApiIndex: 0,


    /**
     * jQuery UI class container
     *  @type object
     *  @deprecated Since v1.10
     */
    oJUIClasses: {},


    /**
     * Software version
     *  @type string
     *  @deprecated Since v1.10
     */
    sVersion: DataTable.version
  };


  //
  // Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts
  //
  $.extend(_ext, {
    afnFiltering: _ext.search,
    aTypes: _ext.type.detect,
    ofnSearch: _ext.type.search,
    oSort: _ext.type.order,
    afnSortData: _ext.order,
    aoFeatures: _ext.feature,
    oApi: _ext.internal,
    oStdClasses: _ext.classes,
    oPagination: _ext.pager
  });


  $.extend(DataTable.ext.classes, {
    "sTable": "dataTable",
    "sNoFooter": "no-footer",

    /* Paging buttons */
    "sPageButton": "paginate_button",
    "sPageButtonActive": "current",
    "sPageButtonDisabled": "disabled",

    /* Striping classes */
    "sStripeOdd": "odd",
    "sStripeEven": "even",

    /* Empty row */
    "sRowEmpty": "dataTables_empty",

    /* Features */
    "sWrapper": "dataTables_wrapper",
    "sFilter": "dataTables_filter",
    "sInfo": "dataTables_info",
    "sPaging": "dataTables_paginate paging_", /* Note that the type is postfixed */
    "sLength": "dataTables_length",
    "sProcessing": "dataTables_processing",

    /* Sorting */
    "sSortAsc": "sorting_asc",
    "sSortDesc": "sorting_desc",
    "sSortable": "sorting", /* Sortable in both directions */
    "sSortableAsc": "sorting_asc_disabled",
    "sSortableDesc": "sorting_desc_disabled",
    "sSortableNone": "sorting_disabled",
    "sSortColumn": "sorting_", /* Note that an int is postfixed for the sorting order */

    /* Filtering */
    "sFilterInput": "",

    /* Page length */
    "sLengthSelect": "",

    /* Scrolling */
    "sScrollWrapper": "dataTables_scroll",
    "sScrollHead": "dataTables_scrollHead",
    "sScrollHeadInner": "dataTables_scrollHeadInner",
    "sScrollBody": "dataTables_scrollBody",
    "sScrollFoot": "dataTables_scrollFoot",
    "sScrollFootInner": "dataTables_scrollFootInner",

    /* Misc */
    "sHeaderTH": "",
    "sFooterTH": "",

    // Deprecated
    "sSortJUIAsc": "",
    "sSortJUIDesc": "",
    "sSortJUI": "",
    "sSortJUIAscAllowed": "",
    "sSortJUIDescAllowed": "",
    "sSortJUIWrapper": "",
    "sSortIcon": "",
    "sJUIHeader": "",
    "sJUIFooter": ""
  });


  var extPagination = DataTable.ext.pager;

  function _numbers(page, pages) {
    var
      numbers = [],
      buttons = extPagination.numbers_length,
      half = Math.floor(buttons / 2),
      i = 1;

    if (pages <= buttons) {
      numbers = _range(0, pages);
    }
    else if (page <= half) {
      numbers = _range(0, buttons - 2);
      numbers.push('ellipsis');
      numbers.push(pages - 1);
    }
    else if (page >= pages - 1 - half) {
      numbers = _range(pages - (buttons - 2), pages);
      numbers.splice(0, 0, 'ellipsis'); // no unshift in ie6
      numbers.splice(0, 0, 0);
    }
    else {
      numbers = _range(page - half + 2, page + half - 1);
      numbers.push('ellipsis');
      numbers.push(pages - 1);
      numbers.splice(0, 0, 'ellipsis');
      numbers.splice(0, 0, 0);
    }

    numbers.DT_el = 'span';
    return numbers;
  }


  $.extend(extPagination, {
    simple: function (page, pages) {
      return ['previous', 'next'];
    },

    full: function (page, pages) {
      return ['first', 'previous', 'next', 'last'];
    },

    numbers: function (page, pages) {
      return [_numbers(page, pages)];
    },

    simple_numbers: function (page, pages) {
      return ['previous', _numbers(page, pages), 'next'];
    },

    full_numbers: function (page, pages) {
      return ['first', 'previous', _numbers(page, pages), 'next', 'last'];
    },

    first_last_numbers: function (page, pages) {
      return ['first', _numbers(page, pages), 'last'];
    },

    // For testing and plug-ins to use
    _numbers: _numbers,

    // Number of number buttons (including ellipsis) to show. _Must be odd!_
    numbers_length: 7
  });


  $.extend(true, DataTable.ext.renderer, {
    pageButton: {
      _: function (settings, host, idx, buttons, page, pages) {
        var classes = settings.oClasses;
        var lang = settings.oLanguage.oPaginate;
        var aria = settings.oLanguage.oAria.paginate || {};
        var btnDisplay, btnClass, counter = 0;

        var attach = function (container, buttons) {
          var i, ien, node, button;
          var clickHandler = function (e) {
            _fnPageChange(settings, e.data.action, true);
          };

          for (i = 0, ien = buttons.length; i < ien; i++) {
            button = buttons[i];

            if ($.isArray(button)) {
              var inner = $('<' + (button.DT_el || 'div') + '/>')
                .appendTo(container);
              attach(inner, button);
            }
            else {
              btnDisplay = null;
              btnClass = '';

              switch (button) {
                case 'ellipsis':
                  container.append('<span class="ellipsis">&#x2026;</span>');
                  break;

                case 'first':
                  btnDisplay = lang.sFirst;
                  btnClass = button + (page > 0 ?
                    '' : ' ' + classes.sPageButtonDisabled);
                  break;

                case 'previous':
                  btnDisplay = lang.sPrevious;
                  btnClass = button + (page > 0 ?
                    '' : ' ' + classes.sPageButtonDisabled);
                  break;

                case 'next':
                  btnDisplay = lang.sNext;
                  btnClass = button + (page < pages - 1 ?
                    '' : ' ' + classes.sPageButtonDisabled);
                  break;

                case 'last':
                  btnDisplay = lang.sLast;
                  btnClass = button + (page < pages - 1 ?
                    '' : ' ' + classes.sPageButtonDisabled);
                  break;

                default:
                  btnDisplay = button + 1;
                  btnClass = page === button ?
                    classes.sPageButtonActive : '';
                  break;
              }

              if (btnDisplay !== null) {
                node = $('<a>', {
                  'class': classes.sPageButton + ' ' + btnClass,
                  'aria-controls': settings.sTableId,
                  'aria-label': aria[button],
                  'data-dt-idx': counter,
                  'tabindex': settings.iTabIndex,
                  'id': idx === 0 && typeof button === 'string' ?
                    settings.sTableId + '_' + button :
                    null
                })
                  .html(btnDisplay)
                  .appendTo(container);

                _fnBindAction(
                  node, {action: button}, clickHandler
                );

                counter++;
              }
            }
          }
        };

        // IE9 throws an 'unknown error' if document.activeElement is used
        // inside an iframe or frame. Try / catch the error. Not good for
        // accessibility, but neither are frames.
        var activeEl;

        try {
          // Because this approach is destroying and recreating the paging
          // elements, focus is lost on the select button which is bad for
          // accessibility. So we want to restore focus once the draw has
          // completed
          activeEl = $(host).find(document.activeElement).data('dt-idx');
        }
        catch (e) {
        }

        attach($(host).empty(), buttons);

        if (activeEl !== undefined) {
          $(host).find('[data-dt-idx=' + activeEl + ']').focus();
        }
      }
    }
  });


  // Built in type detection. See model.ext.aTypes for information about
  // what is required from this methods.
  $.extend(DataTable.ext.type.detect, [
    // Plain numbers - first since V8 detects some plain numbers as dates
    // e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).
    function (d, settings) {
      var decimal = settings.oLanguage.sDecimal;
      return _isNumber(d, decimal) ? 'num' + decimal : null;
    },

    // Dates (only those recognised by the browser's Date.parse)
    function (d, settings) {
      // V8 tries _very_ hard to make a string passed into `Date.parse()`
      // valid, so we need to use a regex to restrict date formats. Use a
      // plug-in for anything other than ISO8601 style strings
      if (d && !(d instanceof Date) && !_re_date.test(d)) {
        return null;
      }
      var parsed = Date.parse(d);
      return (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;
    },

    // Formatted numbers
    function (d, settings) {
      var decimal = settings.oLanguage.sDecimal;
      return _isNumber(d, decimal, true) ? 'num-fmt' + decimal : null;
    },

    // HTML numeric
    function (d, settings) {
      var decimal = settings.oLanguage.sDecimal;
      return _htmlNumeric(d, decimal) ? 'html-num' + decimal : null;
    },

    // HTML numeric, formatted
    function (d, settings) {
      var decimal = settings.oLanguage.sDecimal;
      return _htmlNumeric(d, decimal, true) ? 'html-num-fmt' + decimal : null;
    },

    // HTML (this is strict checking - there must be html)
    function (d, settings) {
      return _empty(d) || (typeof d === 'string' && d.indexOf('<') !== -1) ?
        'html' : null;
    }
  ]);


  // Filter formatting functions. See model.ext.ofnSearch for information about
  // what is required from these methods.
  //
  // Note that additional search methods are added for the html numbers and
  // html formatted numbers by `_addNumericSort()` when we know what the decimal
  // place is


  $.extend(DataTable.ext.type.search, {
    html: function (data) {
      return _empty(data) ?
        data :
        typeof data === 'string' ?
          data
            .replace(_re_new_lines, " ")
            .replace(_re_html, "") :
          '';
    },

    string: function (data) {
      return _empty(data) ?
        data :
        typeof data === 'string' ?
          data.replace(_re_new_lines, " ") :
          data;
    }
  });


  var __numericReplace = function (d, decimalPlace, re1, re2) {
    if (d !== 0 && (!d || d === '-')) {
      return -Infinity;
    }

    // If a decimal place other than `.` is used, it needs to be given to the
    // function so we can detect it and replace with a `.` which is the only
    // decimal place Javascript recognises - it is not locale aware.
    if (decimalPlace) {
      d = _numToDecimal(d, decimalPlace);
    }

    if (d.replace) {
      if (re1) {
        d = d.replace(re1, '');
      }

      if (re2) {
        d = d.replace(re2, '');
      }
    }

    return d * 1;
  };


  // Add the numeric 'deformatting' functions for sorting and search. This is done
  // in a function to provide an easy ability for the language options to add
  // additional methods if a non-period decimal place is used.
  function _addNumericSort(decimalPlace) {
    $.each(
      {
        // Plain numbers
        "num": function (d) {
          return __numericReplace(d, decimalPlace);
        },

        // Formatted numbers
        "num-fmt": function (d) {
          return __numericReplace(d, decimalPlace, _re_formatted_numeric);
        },

        // HTML numeric
        "html-num": function (d) {
          return __numericReplace(d, decimalPlace, _re_html);
        },

        // HTML numeric, formatted
        "html-num-fmt": function (d) {
          return __numericReplace(d, decimalPlace, _re_html, _re_formatted_numeric);
        }
      },
      function (key, fn) {
        // Add the ordering method
        _ext.type.order[key + decimalPlace + '-pre'] = fn;

        // For HTML types add a search formatter that will strip the HTML
        if (key.match(/^html\-/)) {
          _ext.type.search[key + decimalPlace] = _ext.type.search.html;
        }
      }
    );
  }


  // Default sort methods
  $.extend(_ext.type.order, {
    // Dates
    "date-pre": function (d) {
      return Date.parse(d) || -Infinity;
    },

    // html
    "html-pre": function (a) {
      return _empty(a) ?
        '' :
        a.replace ?
          a.replace(/<.*?>/g, "").toLowerCase() :
          a + '';
    },

    // string
    "string-pre": function (a) {
      // This is a little complex, but faster than always calling toString,
      // http://jsperf.com/tostring-v-check
      return _empty(a) ?
        '' :
        typeof a === 'string' ?
          a.toLowerCase() :
          !a.toString ?
            '' :
            a.toString();
    },

    // string-asc and -desc are retained only for compatibility with the old
    // sort methods
    "string-asc": function (x, y) {
      return ((x < y) ? -1 : ((x > y) ? 1 : 0));
    },

    "string-desc": function (x, y) {
      return ((x < y) ? 1 : ((x > y) ? -1 : 0));
    }
  });


  // Numeric sorting types - order doesn't matter here
  _addNumericSort('');


  $.extend(true, DataTable.ext.renderer, {
    header: {
      _: function (settings, cell, column, classes) {
        // No additional mark-up required
        // Attach a sort listener to update on sort - note that using the
        // `DT` namespace will allow the event to be removed automatically
        // on destroy, while the `dt` namespaced event is the one we are
        // listening for
        $(settings.nTable).on('order.dt.DT', function (e, ctx, sorting, columns) {
          if (settings !== ctx) { // need to check this this is the host
            return;               // table, not a nested one
          }

          var colIdx = column.idx;

          cell
            .removeClass(
              column.sSortingClass + ' ' +
              classes.sSortAsc + ' ' +
              classes.sSortDesc
            )
            .addClass(columns[colIdx] == 'asc' ?
              classes.sSortAsc : columns[colIdx] == 'desc' ?
                classes.sSortDesc :
                column.sSortingClass
            );
        });
      },

      jqueryui: function (settings, cell, column, classes) {
        $('<div/>')
          .addClass(classes.sSortJUIWrapper)
          .append(cell.contents())
          .append($('<span/>')
            .addClass(classes.sSortIcon + ' ' + column.sSortingClassJUI)
          )
          .appendTo(cell);

        // Attach a sort listener to update on sort
        $(settings.nTable).on('order.dt.DT', function (e, ctx, sorting, columns) {
          if (settings !== ctx) {
            return;
          }

          var colIdx = column.idx;

          cell
            .removeClass(classes.sSortAsc + " " + classes.sSortDesc)
            .addClass(columns[colIdx] == 'asc' ?
              classes.sSortAsc : columns[colIdx] == 'desc' ?
                classes.sSortDesc :
                column.sSortingClass
            );

          cell
            .find('span.' + classes.sSortIcon)
            .removeClass(
              classes.sSortJUIAsc + " " +
              classes.sSortJUIDesc + " " +
              classes.sSortJUI + " " +
              classes.sSortJUIAscAllowed + " " +
              classes.sSortJUIDescAllowed
            )
            .addClass(columns[colIdx] == 'asc' ?
              classes.sSortJUIAsc : columns[colIdx] == 'desc' ?
                classes.sSortJUIDesc :
                column.sSortingClassJUI
            );
        });
      }
    }
  });

  /*
	 * Public helper functions. These aren't used internally by DataTables, or
	 * called by any of the options passed into DataTables, but they can be used
	 * externally by developers working with DataTables. They are helper functions
	 * to make working with DataTables a little bit easier.
	 */

  var __htmlEscapeEntities = function (d) {
    return typeof d === 'string' ?
      d.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;') :
      d;
  };

  /**
   * Helpers for `columns.render`.
   *
   * The options defined here can be used with the `columns.render` initialisation
   * option to provide a display renderer. The following functions are defined:
   *
   * * `number` - Will format numeric data (defined by `columns.data`) for
   *   display, retaining the original unformatted data for sorting and filtering.
   *   It takes 5 parameters:
   *   * `string` - Thousands grouping separator
   *   * `string` - Decimal point indicator
   *   * `integer` - Number of decimal points to show
   *   * `string` (optional) - Prefix.
   *   * `string` (optional) - Postfix (/suffix).
   * * `text` - Escape HTML to help prevent XSS attacks. It has no optional
   *   parameters.
   *
   * @example
   *   // Column definition using the number renderer
   *   {
	 *     data: "salary",
	 *     render: $.fn.dataTable.render.number( '\'', '.', 0, '$' )
	 *   }
   *
   * @namespace
   */
  DataTable.render = {
    number: function (thousands, decimal, precision, prefix, postfix) {
      return {
        display: function (d) {
          if (typeof d !== 'number' && typeof d !== 'string') {
            return d;
          }

          var negative = d < 0 ? '-' : '';
          var flo = parseFloat(d);

          // If NaN then there isn't much formatting that we can do - just
          // return immediately, escaping any HTML (this was supposed to
          // be a number after all)
          if (isNaN(flo)) {
            return __htmlEscapeEntities(d);
          }

          flo = flo.toFixed(precision);
          d = Math.abs(flo);

          var intPart = parseInt(d, 10);
          var floatPart = precision ?
            decimal + (d - intPart).toFixed(precision).substring(2) :
            '';

          return negative + (prefix || '') +
            intPart.toString().replace(
              /\B(?=(\d{3})+(?!\d))/g, thousands
            ) +
            floatPart +
            (postfix || '');
        }
      };
    },

    text: function () {
      return {
        display: __htmlEscapeEntities
      };
    }
  };


  /*
	 * This is really a good bit rubbish this method of exposing the internal methods
	 * publicly... - To be fixed in 2.0 using methods on the prototype
	 */


  /**
   * Create a wrapper function for exporting an internal functions to an external API.
   *  @param {string} fn API function name
   *  @returns {function} wrapped function
   *  @memberof DataTable#internal
   */
  function _fnExternApiFunc(fn) {
    return function () {
      var args = [_fnSettingsFromNode(this[DataTable.ext.iApiIndex])].concat(
        Array.prototype.slice.call(arguments)
      );
      return DataTable.ext.internal[fn].apply(this, args);
    };
  }


  /**
   * Reference to internal functions for use by plug-in developers. Note that
   * these methods are references to internal functions and are considered to be
   * private. If you use these methods, be aware that they are liable to change
   * between versions.
   *  @namespace
   */
  $.extend(DataTable.ext.internal, {
    _fnExternApiFunc: _fnExternApiFunc,
    _fnBuildAjax: _fnBuildAjax,
    _fnAjaxUpdate: _fnAjaxUpdate,
    _fnAjaxParameters: _fnAjaxParameters,
    _fnAjaxUpdateDraw: _fnAjaxUpdateDraw,
    _fnAjaxDataSrc: _fnAjaxDataSrc,
    _fnAddColumn: _fnAddColumn,
    _fnColumnOptions: _fnColumnOptions,
    _fnAdjustColumnSizing: _fnAdjustColumnSizing,
    _fnVisibleToColumnIndex: _fnVisibleToColumnIndex,
    _fnColumnIndexToVisible: _fnColumnIndexToVisible,
    _fnVisbleColumns: _fnVisbleColumns,
    _fnGetColumns: _fnGetColumns,
    _fnColumnTypes: _fnColumnTypes,
    _fnApplyColumnDefs: _fnApplyColumnDefs,
    _fnHungarianMap: _fnHungarianMap,
    _fnCamelToHungarian: _fnCamelToHungarian,
    _fnLanguageCompat: _fnLanguageCompat,
    _fnBrowserDetect: _fnBrowserDetect,
    _fnAddData: _fnAddData,
    _fnAddTr: _fnAddTr,
    _fnNodeToDataIndex: _fnNodeToDataIndex,
    _fnNodeToColumnIndex: _fnNodeToColumnIndex,
    _fnGetCellData: _fnGetCellData,
    _fnSetCellData: _fnSetCellData,
    _fnSplitObjNotation: _fnSplitObjNotation,
    _fnGetObjectDataFn: _fnGetObjectDataFn,
    _fnSetObjectDataFn: _fnSetObjectDataFn,
    _fnGetDataMaster: _fnGetDataMaster,
    _fnClearTable: _fnClearTable,
    _fnDeleteIndex: _fnDeleteIndex,
    _fnInvalidate: _fnInvalidate,
    _fnGetRowElements: _fnGetRowElements,
    _fnCreateTr: _fnCreateTr,
    _fnBuildHead: _fnBuildHead,
    _fnDrawHead: _fnDrawHead,
    _fnDraw: _fnDraw,
    _fnReDraw: _fnReDraw,
    _fnAddOptionsHtml: _fnAddOptionsHtml,
    _fnDetectHeader: _fnDetectHeader,
    _fnGetUniqueThs: _fnGetUniqueThs,
    _fnFeatureHtmlFilter: _fnFeatureHtmlFilter,
    _fnFilterComplete: _fnFilterComplete,
    _fnFilterCustom: _fnFilterCustom,
    _fnFilterColumn: _fnFilterColumn,
    _fnFilter: _fnFilter,
    _fnFilterCreateSearch: _fnFilterCreateSearch,
    _fnEscapeRegex: _fnEscapeRegex,
    _fnFilterData: _fnFilterData,
    _fnFeatureHtmlInfo: _fnFeatureHtmlInfo,
    _fnUpdateInfo: _fnUpdateInfo,
    _fnInfoMacros: _fnInfoMacros,
    _fnInitialise: _fnInitialise,
    _fnInitComplete: _fnInitComplete,
    _fnLengthChange: _fnLengthChange,
    _fnFeatureHtmlLength: _fnFeatureHtmlLength,
    _fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,
    _fnPageChange: _fnPageChange,
    _fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,
    _fnProcessingDisplay: _fnProcessingDisplay,
    _fnFeatureHtmlTable: _fnFeatureHtmlTable,
    _fnScrollDraw: _fnScrollDraw,
    _fnApplyToChildren: _fnApplyToChildren,
    _fnCalculateColumnWidths: _fnCalculateColumnWidths,
    _fnThrottle: _fnThrottle,
    _fnConvertToWidth: _fnConvertToWidth,
    _fnGetWidestNode: _fnGetWidestNode,
    _fnGetMaxLenString: _fnGetMaxLenString,
    _fnStringToCss: _fnStringToCss,
    _fnSortFlatten: _fnSortFlatten,
    _fnSort: _fnSort,
    _fnSortAria: _fnSortAria,
    _fnSortListener: _fnSortListener,
    _fnSortAttachListener: _fnSortAttachListener,
    _fnSortingClasses: _fnSortingClasses,
    _fnSortData: _fnSortData,
    _fnSaveState: _fnSaveState,
    _fnLoadState: _fnLoadState,
    _fnSettingsFromNode: _fnSettingsFromNode,
    _fnLog: _fnLog,
    _fnMap: _fnMap,
    _fnBindAction: _fnBindAction,
    _fnCallbackReg: _fnCallbackReg,
    _fnCallbackFire: _fnCallbackFire,
    _fnLengthOverflow: _fnLengthOverflow,
    _fnRenderer: _fnRenderer,
    _fnDataSource: _fnDataSource,
    _fnRowAttributes: _fnRowAttributes,
    _fnCalculateEnd: function () {
    } // Used by a lot of plug-ins, but redundant
      // in 1.10, so this dead-end function is
      // added to prevent errors
  });


  // jQuery access
  $.fn.dataTable = DataTable;

  // Provide access to the host jQuery object (circular reference)
  DataTable.$ = $;

  // Legacy aliases
  $.fn.dataTableSettings = DataTable.settings;
  $.fn.dataTableExt = DataTable.ext;

  // With a capital `D` we return a DataTables API instance rather than a
  // jQuery object
  $.fn.DataTable = function (opts) {
    return $(this).dataTable(opts).api();
  };

  // All properties that are available to $.fn.dataTable should also be
  // available on $.fn.DataTable
  $.each(DataTable, function (prop, val) {
    $.fn.DataTable[prop] = val;
  });


  // Information about events fired by DataTables - for documentation.
  /**
   * Draw event, fired whenever the table is redrawn on the page, at the same
   * point as fnDrawCallback. This may be useful for binding events or
   * performing calculations when the table is altered at all.
   *  @name DataTable#draw.dt
   *  @event
   *  @param {event} e jQuery event object
   *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
   */

  /**
   * Search event, fired when the searching applied to the table (using the
   * built-in global search, or column filters) is altered.
   *  @name DataTable#search.dt
   *  @event
   *  @param {event} e jQuery event object
   *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
   */

  /**
   * Page change event, fired when the paging of the table is altered.
   *  @name DataTable#page.dt
   *  @event
   *  @param {event} e jQuery event object
   *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
   */

  /**
   * Order event, fired when the ordering applied to the table is altered.
   *  @name DataTable#order.dt
   *  @event
   *  @param {event} e jQuery event object
   *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
   */

  /**
   * DataTables initialisation complete event, fired when the table is fully
   * drawn, including Ajax data loaded, if Ajax data is required.
   *  @name DataTable#init.dt
   *  @event
   *  @param {event} e jQuery event object
   *  @param {object} oSettings DataTables settings object
   *  @param {object} json The JSON object request from the server - only
   *    present if client-side Ajax sourced data is used</li></ol>
   */

  /**
   * State save event, fired when the table has changed state a new state save
   * is required. This event allows modification of the state saving object
   * prior to actually doing the save, including addition or other state
   * properties (for plug-ins) or modification of a DataTables core property.
   *  @name DataTable#stateSaveParams.dt
   *  @event
   *  @param {event} e jQuery event object
   *  @param {object} oSettings DataTables settings object
   *  @param {object} json The state information to be saved
   */

  /**
   * State load event, fired when the table is loading state from the stored
   * data, but prior to the settings object being modified by the saved state
   * - allowing modification of the saved state is required or loading of
   * state for a plug-in.
   *  @name DataTable#stateLoadParams.dt
   *  @event
   *  @param {event} e jQuery event object
   *  @param {object} oSettings DataTables settings object
   *  @param {object} json The saved state information
   */

  /**
   * State loaded event, fired when state has been loaded from stored data and
   * the settings object has been modified by the loaded data.
   *  @name DataTable#stateLoaded.dt
   *  @event
   *  @param {event} e jQuery event object
   *  @param {object} oSettings DataTables settings object
   *  @param {object} json The saved state information
   */

  /**
   * Processing event, fired when DataTables is doing some kind of processing
   * (be it, order, searcg or anything else). It can be used to indicate to
   * the end user that there is something happening, or that something has
   * finished.
   *  @name DataTable#processing.dt
   *  @event
   *  @param {event} e jQuery event object
   *  @param {object} oSettings DataTables settings object
   *  @param {boolean} bShow Flag for if DataTables is doing processing or not
   */

  /**
   * Ajax (XHR) event, fired whenever an Ajax request is completed from a
   * request to made to the server for new data. This event is called before
   * DataTables processed the returned data, so it can also be used to pre-
   * process the data returned from the server, if needed.
   *
   * Note that this trigger is called in `fnServerData`, if you override
   * `fnServerData` and which to use this event, you need to trigger it in you
   * success function.
   *  @name DataTable#xhr.dt
   *  @event
   *  @param {event} e jQuery event object
   *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
   *  @param {object} json JSON returned from the server
   *
   *  @example
   *     // Use a custom property returned from the server in another DOM element
   *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {
	 *       $('#status').html( json.status );
	 *     } );
   *
   *  @example
   *     // Pre-process the data returned from the server
   *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {
	 *       for ( var i=0, ien=json.aaData.length ; i<ien ; i++ ) {
	 *         json.aaData[i].sum = json.aaData[i].one + json.aaData[i].two;
	 *       }
	 *       // Note no return - manipulate the data directly in the JSON object.
	 *     } );
   */

  /**
   * Destroy event, fired when the DataTable is destroyed by calling fnDestroy
   * or passing the bDestroy:true parameter in the initialisation object. This
   * can be used to remove bound events, added DOM nodes, etc.
   *  @name DataTable#destroy.dt
   *  @event
   *  @param {event} e jQuery event object
   *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
   */

  /**
   * Page length change event, fired when number of records to show on each
   * page (the length) is changed.
   *  @name DataTable#length.dt
   *  @event
   *  @param {event} e jQuery event object
   *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
   *  @param {integer} len New length
   */

  /**
   * Column sizing has changed.
   *  @name DataTable#column-sizing.dt
   *  @event
   *  @param {event} e jQuery event object
   *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
   */

  /**
   * Column visibility has changed.
   *  @name DataTable#column-visibility.dt
   *  @event
   *  @param {event} e jQuery event object
   *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
   *  @param {int} column Column index
   *  @param {bool} vis `false` if column now hidden, or `true` if visible
   */

  return $.fn.dataTable;
}));


(function() {
  var closeFlash, closeFlashWithTimeOut, closeModal, flashTimer, initCloseModals, initHandlers, openFlash, openModal, openReset, showLoginForm, submitLoginForm;

  flashTimer = null;

  showLoginForm = function(e) {
    var url;
    e.preventDefault();
    url = $(this).attr('href');
    $.ajax({
      url: url,
      data: {},
      success: function(response) {
        var container;
        container = $('.login-modal .load-content-js');
        container.html(response);
        initHandlers();
        container.find('.submit').on('click', submitLoginForm);
        return openModal();
      },
      dataType: 'html'
    });
    return false;
  };

  submitLoginForm = function(e) {
    var form, form_with_ladda, ladda, url;
    e.preventDefault();
    form = $(this).closest('form');
    form_with_ladda = form.data('ladda');
    if (form_with_ladda) {
      ladda = Ladda.create(document.querySelector('#' + form.attr('id') + ' [type=submit]'));
      ladda.start();
    }
    form.find('.field .help_block').html('');
    url = form.attr('action');
    $.ajax({
      url: url,
      type: 'POST',
      dataType: 'JSON',
      data: form.serialize(),
      success: function(response) {
        var form_action;
        if (form_with_ladda) {
          setTimeout(function() {
            return ladda.stop();
          }, 500);
        }
        form_action = form.attr('action').replace(/^\/..\//, '/');
        if (form_action === "/oddsfan_users") {
          closeModal();
          return openFlash({
            message: I18n.t('devise.registrations.signed_up_but_unconfirmed'),
            flash_class: 'flash-success'
          });
        } else if (form_action === "/oddsfan_users/sign_in") {
          return location.reload();
        } else if (form_action === "/oddsfan_users/confirmation") {
          return closeModal();
        } else if (form_action === "/oddsfan_users/password") {
          if (window.location.href.indexOf("home") > 1) {
            closeModal();
            return location.reload();
          } else {
            closeModal();
            return openFlash({
              message: I18n.t("errors.messages.send_instruction_reset_pass"),
              flash_class: 'flash-success'
            });
          }
        } else if (form_action === "/oddsfan_users/password?without_layout=true") {
          closeModal();
          return location.reload();
        }
      },
      error: function(data) {
        var container, error, form_action, message, results, urls;
        if (form_with_ladda) {
          setTimeout(function() {
            return ladda.stop();
          }, 500);
        }
        if (!!data.responseJSON) {
          form_action = form.attr('action').replace(/^\/..\//, '/');
          urls = ["/oddsfan_users/confirmation", "/oddsfan_users", "/oddsfan_users/password", "/oddsfan_users/password?without_layout=true"];
          form.find('.message').addClass('hide');
          if ($.inArray(form_action, urls) > -1) {
            if (!!data.responseJSON.errors) {
              if (window.grecaptcha) {
                grecaptcha.reset();
              }
              if (!!data.responseJSON.errors.reset_password_token) {
                return openFlash({
                  message: I18n.t('activerecord.errors.models.bb_user.attributes.reset_password_token.invalid'),
                  flash_class: 'flash-danger'
                });
              } else {
                results = [];
                for (error in data.responseJSON.errors) {
                  message = data.responseJSON.errors[error];
                  if (error === 'recaptcha') {
                    container = form.find('.recapture-js');
                  } else {
                    container = form.find('[name="oddsfan_user[' + error + ']"]').closest('.field');
                  }
                  container.find('.help_block').html(message);
                  results.push(container.find('.message').removeClass('hide'));
                }
                return results;
              }
            }
          } else if (form_action === "/oddsfan_users/sign_in") {
            if (form.find("#oddsfan_user_email").val() === "") {
              $(".email-err").find('.help_block').html(I18n.t('errors.messages.blank'));
              $(".email-err").removeClass('hide');
            }
            if (form.find("#oddsfan_user_password").val() === "") {
              $(".pass-err").find('.help_block').html(I18n.t('errors.messages.blank'));
              $(".pass-err").removeClass('hide');
            }
            return openFlash({
              message: data.responseJSON.error,
              flash_class: 'flash-danger'
            });
          }
        }
      }
    });
    return false;
  };

  openModal = function() {
    var modal;
    modal = $('.login-modal');
    if (!modal.hasClass('in')) {
      modal.modal('show');
    }
    return false;
  };

  closeModal = function() {
    var modal;
    modal = $('.login-modal');
    modal.modal('hide');
    return false;
  };

  initCloseModals = function() {
    return $('.flash-close-js').on('click', closeFlash);
  };

  closeFlash = function() {
    return $('.flash-message').addClass('hide');
  };

  openFlash = function(params) {
    $('.flash-message .flash-message-content').html(params.message);
    $('.flash-message').removeClass('flash-success flash-info flash-danger');
    $('.flash-message').addClass(params.flash_class).removeClass('hide');
    return closeFlashWithTimeOut();
  };

  closeFlashWithTimeOut = function() {
    if (flashTimer) {
      clearTimeout(flashTimer);
    }
    return flashTimer = setTimeout(function() {
      return closeFlash();
    }, 7000);
  };

  openReset = function() {
    if (window.reset_link) {
      return $.ajax({
        url: window.reset_link,
        data: {},
        success: function(response) {
          var container;
          container = $('.login-modal .load-content-js');
          container.html(response);
          initHandlers();
          container.find('.submit').on('click', submitLoginForm);
          return openModal();
        },
        dataType: 'html'
      });
    }
  };

  initHandlers = function() {
    return $('.showLogin, .showSignUp, .showForgotPass, .showConfirm, .showUnlock').on('click', showLoginForm);
  };

  $(function() {
    initHandlers();
    initCloseModals();
    return openReset();
  });

}).call(this);
(function() {
  var getSort, initSortable, loading, saveSort, setCookies, setMarketCookies, sortMarket, sorting, toggleAccCollapse, toggleCollapse;

  sorting = {};

  loading = false;

  toggleCollapse = function(e) {
    var target;
    if (loading) {
      return;
    }
    if (e.target.tagName === 'div') {
      target = $(e.target);
    } else {
      target = $(e.target).closest('.ratio-block');
    }
    return target.toggleClass('withOpenMains');
  };

  toggleAccCollapse = function(e) {
    var event, market, ratio_block, ratio_table, target, target_element;
    if (loading) {
      return;
    }
    if (e.target.tagName === 'a') {
      target = $(e.target);
    } else {
      target = $(e.target).closest('a.open-acc-js');
    }
    event = target.data('event');
    market = target.data('market');
    if (target.hasClass('close-acc-js')) {
      target.removeClass('close-acc-js');
      setMarketCookies(event, market);
    } else {
      target.addClass('close-acc-js');
      setMarketCookies(event, market, true);
    }
    target_element = target.data('target');
    $(target_element).each(function(e) {
      return $(this).toggleClass('in');
    });
    ratio_block = target.closest('.ratio-block');
    ratio_table = target.closest('.ratio-table');
    if (ratio_table.find('.close-acc-js').length > 0) {
      return ratio_block.addClass('ratio-block-open');
    } else {
      return ratio_block.removeClass('ratio-block-open');
    }
  };

  setMarketCookies = function(event, market, add) {
    var cookie_event, index, open_markets;
    if (loading) {
      return;
    }
    cookie_event = Cookies.get('event_market_' + event);
    open_markets = cookie_event ? JSON.parse(cookie_event) : [];
    if (open_markets.length === 0) {
      return Cookies.set('event_market_' + event, JSON.stringify([market]));
    } else {
      index = open_markets.indexOf(market);
      if (add) {
        if (index === -1) {
          open_markets.push(market);
        }
      } else {
        open_markets.splice(index, 1);
      }
      return Cookies.set('event_market_' + event, JSON.stringify(open_markets));
    }
  };

  setCookies = function(e) {
    var cookie_event, event, href, index, noindex, novector, open_tabs, target, tmp, vector;
    if (loading) {
      return;
    }
    target = $(e.target);
    event = target.data('event');
    cookie_event = Cookies.get('event_' + event);
    open_tabs = cookie_event ? JSON.parse(cookie_event) : [];
    href = target.attr('href');
    if (target.hasClass('collapsed')) {
      vector = 'open';
      novector = 'closed';
    } else {
      vector = 'closed';
      novector = 'open';
    }
    if (open_tabs.length === 0) {
      tmp = {};
      tmp[vector] = [href];
      tmp[novector] = [];
      return Cookies.set('event_' + event, tmp);
    } else {
      if (open_tabs[vector] === void 0) {
        open_tabs[vector] = [];
      }
      if (open_tabs[novector] === void 0) {
        open_tabs[novector] = [];
      }
      if (open_tabs[vector].length === 0) {
        open_tabs[vector] = [href];
        noindex = open_tabs[novector].indexOf(href);
        if (noindex > -1) {
          open_tabs[novector].splice(noindex, 1);
        }
        return Cookies.set('event_' + event, open_tabs);
      } else {
        index = open_tabs[vector].indexOf(href);
        if (index === -1) {
          open_tabs[vector].push(href);
        }
        noindex = open_tabs[novector].indexOf(href);
        if (noindex > -1) {
          open_tabs[novector].splice(noindex, 1);
        }
        return Cookies.set('event_' + event, JSON.stringify(open_tabs));
      }
    }
  };

  saveSort = function(market, sort_target, vector) {
    return sorting[market] = {
      sort_target: sort_target,
      vector: vector
    };
  };

  getSort = function(market) {
    return sorting[market];
  };

  sortMarket = function(e) {
    var list, market, sort_target, target, vector;
    if (loading) {
      return;
    }
    if ($(e.target).hasClass('bookmaker-name') || $(e.target).attr('title') === 'show bet') {
      return;
    }
    if (e.target.tagName === 'div') {
      target = $(e.target);
    } else {
      target = $(e.target).closest('div.sortable');
    }
    market = target.data('market');
    sort_target = target.data('target');
    if (target.hasClass('sorting_desc')) {
      target.addClass('sorting_asc').removeClass('sorting_desc');
      vector = 'asc';
    } else {
      target.addClass('sorting_desc').removeClass('sorting_asc');
      vector = 'desc';
    }
    saveSort(market, sort_target, vector);
    target.siblings('div.sortable').removeClass('sorting_desc').removeClass('sorting_asc');
    list = $('.ratio-row[data-market=' + market + ']');
    list.clone(true).sort(function(a, b) {
      var a_text, b_text, ret, value_1, value_2;
      a_text = $(a).find('.col[data-target=' + sort_target + '] .number a').text();
      b_text = $(b).find('.col[data-target=' + sort_target + '] .number a').text();
      if (a_text === '') {
        return 1;
      }
      if (b_text === '') {
        return -1;
      }
      value_1 = parseFloat(a_text);
      value_2 = parseFloat(b_text);
      if (value_1 === value_2) {
        ret = 0;
      } else if (value_1 > value_2) {
        ret = vector === 'asc' ? 1 : -1;
      } else {
        ret = vector === 'asc' ? -1 : 1;
      }
      return ret;
    }).each(function(i) {
      return list[i].replaceWith(this);
    });
    return false;
  };

  initSortable = function() {
    $('.collapse').on('show.bs.collapse hide.bs.collapse', function(e) {
      if (loading) {
        return e.preventDefault();
      }
    });
    loading = false;
    $('.sortable').on('click', sortMarket);
    return $.each(sorting, function(market, values) {
      var el;
      el = $('.sortable[data-market=' + market + '][data-target=' + values.sort_target + ']');
      if (el.length > 0) {
        el.addClass(values.vector === 'asc' ? 'sorting_desc' : 'sorting_asc');
        return setTimeout(function() {
          return $(el).trigger('click');
        }, 50);
      }
    });
  };

  $(function() {
    var event_path;
    $('.ratio-block a:not(.open-acc-js)').on('click', toggleCollapse);
    $('.ratio-block a.open-acc-js').on('click', toggleAccCollapse);
    $('a[data-toggle=collapse]').on('click', setCookies);
    initSortable();
    event_path = $('#event_path');
    if (event_path.length > 0) {
      return setInterval(function() {
        if (loading) {
          return;
        }
        loading = true;
        return $.ajax({
          url: $('#event_path').val() + '.js',
          type: 'get',
          dataType: 'html',
          crossDomain: true,
          xhrFields: {
            withCredentials: true
          },
          success: function(e) {
            $('.event-view-css').replaceWith(e);
            $('.ratio-block a:not(.open-acc-js)').on('click', toggleCollapse);
            $('.ratio-block a.open-acc-js').on('click', toggleAccCollapse);
            $('a[data-toggle=collapse]').on('click', setCookies);
            return initSortable();
          }
        });
      }, 10000);
    }
  });

}).call(this);
(function() {
  var closeFlash, closeFlashWithTimeOut, flashTimer, formatRepo, formatRepoSelection, hideItems, initSearch, initSortTable, matchesNavbar, openFlash, setSportListWidth, showItems, startAppClock, toEvent, triggerTimeZoneHeader;

  flashTimer = null;

  matchesNavbar = function(e) {
    var url;
    e.preventDefault();
    url = $(this).attr('href');
    return window.location.href = url;
  };

  toEvent = function(e) {
    var target;
    if (e.target.tagName === 'div') {
      target = $(e.target);
    } else {
      target = $(e.target).closest('.item-link');
    }
    return window.location.href = target.data('href');
  };

  showItems = function(count) {
    var items, show_other;
    items = $('.collapseSportNav .sports-list-js li:lt(' + count + ')');
    show_other = $('.sportNav ul li.show-other');
    $('.sportNav ul').append(items);
    return $('.sportNav ul').append(show_other);
  };

  hideItems = function(count) {
    var items, show_other;
    $.fn.reverse = [].reverse;
    items = $('.sportNav ul li:not(.show-other)').reverse();
    show_other = $('.sportNav ul li.show-other');
    items.each(function(_, item) {
      if (count > 0) {
        $('.collapseSportNav ul').prepend(item);
      }
      return count = count - 1;
    });
    return $('.sportNav ul').append(show_other);
  };

  setSportListWidth = function() {
    var _4_item_width, all_width, in_line_count, item_width, min_width, showed_count;
    min_width = 135;
    all_width = $('.sportNav .sports-list-js').width();
    showed_count = $('.sportNav .sports-list-js li').length;
    in_line_count = Math.floor(all_width / min_width);
    item_width = Math.floor(all_width / in_line_count * 100) / 100;
    _4_item_width = item_width * 5;
    if ($(window).width() < _4_item_width) {
      _4_item_width = item_width * 4;
    }
    if ($(window).width() < _4_item_width) {
      _4_item_width = item_width * 3;
    }
    if ($(window).width() < _4_item_width) {
      _4_item_width = item_width * 2;
    }
    if ($(window).width() < _4_item_width) {
      _4_item_width = item_width * 1;
    }
    $('.collapseSportNav .sports-list-js').css('width', _4_item_width + 'px');
    $('.sports-list-wrapper .sports-list-js li').css('width', item_width + 'px');
    if (showed_count < in_line_count) {
      return showItems(in_line_count - showed_count);
    } else if (showed_count > in_line_count) {
      return hideItems(showed_count - in_line_count);
    }
  };

  formatRepo = function(event) {
    var markup;
    if (event.loading) {
      return event.text;
    }
    markup = "<div class='select2-result-repository clearfix'>" + "<div class='select2-result-repository__avatar'>" + "<div class='select2-result-repository__meta'>" + "<div class='select2-result-repository__title'>" + Handlebars.helpers['formatTime'](event.started_at, 'DD/MM/YYYY') + "</div>";
    markup += "<div class='select2-result-repository__statistics'>" + "<div class='select2-result-repository__stargazers'><i class='fa fa-star'></i> " + event.name + "</div>" + "<div class='select2-result-repository__watchers'><i class='fa fa-eye'></i> " + (event.current_score || '') + "</div>" + "</div>" + "</div></div>";
    return markup;
  };

  formatRepoSelection = function(repo) {
    return repo.name || repo.score;
  };

  initSearch = function() {
    var search_form;
    search_form = $('form.search-form');
    search_form.find('#preload-search-input').addClass('hide');
    search_form.find('#search-input').removeClass('hide');
    return search_form.find('#search-input').select2({
      language: I18n.locale,
      minimumInputLength: 3,
      placeholder: I18n.t('header.SEARCH'),
      maximumSelectionLength: 1,
      select: function(e) {
        return log('select2:select', e);
      },
      ajax: {
        url: '/search',
        dataType: 'json',
        delay: 250,
        data: function(params) {
          return {
            q: params.term
          };
        },
        processResults: function(data, params) {
          return {
            results: data
          };
        },
        cache: true
      },
      escapeMarkup: function(markup) {
        return markup;
      },
      templateResult: formatRepo,
      templateSelection: formatRepoSelection
    }).on('select2:select', function(e) {
      var id, type;
      $('.select2-search.select2-search--inline input').css('display', 'none');
      $('.select2-search.select2-search--inline input').blur();
      $('.select2-search.select2-search--inline input').show();
      id = e.params.data.id;
      type = e.params.data.type;
      return window.location.href = '/' + type + '/events/' + id;
    }).on('select2:open', function(e) {
      return $(this).select2('val', '-1');
    });
  };

  startAppClock = function() {
    return setInterval(function() {
      var date;
      date = (new Date()).getTime();
      return $('.time-zone-header-js button .time-span-js').html(Handlebars.helpers['formatTime'](date, 'HH:mm'));
    }, 6000);
  };

  triggerTimeZoneHeader = function(e) {
    var container, el;
    el = $(e.target).is('a') ? $(e.target) : $(e.target).closest('a');
    container = el.closest('.time-zone-header-js');
    $.ajax({
      url: '/update_time_zone',
      type: 'POST',
      dataType: 'json',
      data: {
        time_zone_name: el.data('format').split('##')[0],
        is_header: true
      },
      headers: {
        'X-Transaction': 'POST Example',
        'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
      },
      success: function(response) {
        container.html(response.message_header);
        $('.time-zone-header-js a').on('click', triggerTimeZoneHeader);
        window.time_zone_offset = response.time_zone_offset * 60;
        container.removeClass('open');
        return window.location.reload(true);
      }
    });
    return false;
  };

  closeFlash = function() {
    return $('.flash-message').addClass('hide');
  };

  openFlash = function(params) {
    $('.flash-message .flash-message-content').html(params.message);
    $('.flash-message').removeClass('flash-success flash-info flash-danger');
    $('.flash-message').addClass(params.flash_class).removeClass('hide');
    return closeFlashWithTimeOut();
  };

  closeFlashWithTimeOut = function() {
    if (flashTimer) {
      clearTimeout(flashTimer);
    }
    return flashTimer = setTimeout(function() {
      return closeFlash();
    }, 5000);
  };

  initSortTable = function() {
    return $('#main-table').DataTable({
      info: false,
      order: [],
      paging: false,
      searching: false,
      stateSave: true,
      columnDefs: [
        {
          targets: 'no-sort',
          orderable: false
        }
      ]
    });
  };

  $(function() {
    setSportListWidth();
    window.onresize = setSportListWidth;
    $('.carousel').carousel({
      interval: 7000
    });
    $('.matches-navbar a, .static-tabs a').on('click', matchesNavbar);
    $('.item-link').on('click', toEvent);
    $('.time-zone-header-js a').on('click', triggerTimeZoneHeader);
    closeFlashWithTimeOut();
    initSearch();
    startAppClock();
    return initSortTable();
  });

}).call(this);
/**!

 @license
 handlebars v4.0.11

Copyright (C) 2011-2017 by Yehuda Katz

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Handlebars"] = factory();
	else
		root["Handlebars"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;

	var _handlebarsRuntime = __webpack_require__(2);

	var _handlebarsRuntime2 = _interopRequireDefault(_handlebarsRuntime);

	// Compiler imports

	var _handlebarsCompilerAst = __webpack_require__(35);

	var _handlebarsCompilerAst2 = _interopRequireDefault(_handlebarsCompilerAst);

	var _handlebarsCompilerBase = __webpack_require__(36);

	var _handlebarsCompilerCompiler = __webpack_require__(41);

	var _handlebarsCompilerJavascriptCompiler = __webpack_require__(42);

	var _handlebarsCompilerJavascriptCompiler2 = _interopRequireDefault(_handlebarsCompilerJavascriptCompiler);

	var _handlebarsCompilerVisitor = __webpack_require__(39);

	var _handlebarsCompilerVisitor2 = _interopRequireDefault(_handlebarsCompilerVisitor);

	var _handlebarsNoConflict = __webpack_require__(34);

	var _handlebarsNoConflict2 = _interopRequireDefault(_handlebarsNoConflict);

	var _create = _handlebarsRuntime2['default'].create;
	function create() {
	  var hb = _create();

	  hb.compile = function (input, options) {
	    return _handlebarsCompilerCompiler.compile(input, options, hb);
	  };
	  hb.precompile = function (input, options) {
	    return _handlebarsCompilerCompiler.precompile(input, options, hb);
	  };

	  hb.AST = _handlebarsCompilerAst2['default'];
	  hb.Compiler = _handlebarsCompilerCompiler.Compiler;
	  hb.JavaScriptCompiler = _handlebarsCompilerJavascriptCompiler2['default'];
	  hb.Parser = _handlebarsCompilerBase.parser;
	  hb.parse = _handlebarsCompilerBase.parse;

	  return hb;
	}

	var inst = create();
	inst.create = create;

	_handlebarsNoConflict2['default'](inst);

	inst.Visitor = _handlebarsCompilerVisitor2['default'];

	inst['default'] = inst;

	exports['default'] = inst;
	module.exports = exports['default'];

/***/ }),
/* 1 */
/***/ (function(module, exports) {

	"use strict";

	exports["default"] = function (obj) {
	  return obj && obj.__esModule ? obj : {
	    "default": obj
	  };
	};

	exports.__esModule = true;

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireWildcard = __webpack_require__(3)['default'];

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;

	var _handlebarsBase = __webpack_require__(4);

	var base = _interopRequireWildcard(_handlebarsBase);

	// Each of these augment the Handlebars object. No need to setup here.
	// (This is done to easily share code between commonjs and browse envs)

	var _handlebarsSafeString = __webpack_require__(21);

	var _handlebarsSafeString2 = _interopRequireDefault(_handlebarsSafeString);

	var _handlebarsException = __webpack_require__(6);

	var _handlebarsException2 = _interopRequireDefault(_handlebarsException);

	var _handlebarsUtils = __webpack_require__(5);

	var Utils = _interopRequireWildcard(_handlebarsUtils);

	var _handlebarsRuntime = __webpack_require__(22);

	var runtime = _interopRequireWildcard(_handlebarsRuntime);

	var _handlebarsNoConflict = __webpack_require__(34);

	var _handlebarsNoConflict2 = _interopRequireDefault(_handlebarsNoConflict);

	// For compatibility and usage outside of module systems, make the Handlebars object a namespace
	function create() {
	  var hb = new base.HandlebarsEnvironment();

	  Utils.extend(hb, base);
	  hb.SafeString = _handlebarsSafeString2['default'];
	  hb.Exception = _handlebarsException2['default'];
	  hb.Utils = Utils;
	  hb.escapeExpression = Utils.escapeExpression;

	  hb.VM = runtime;
	  hb.template = function (spec) {
	    return runtime.template(spec, hb);
	  };

	  return hb;
	}

	var inst = create();
	inst.create = create;

	_handlebarsNoConflict2['default'](inst);

	inst['default'] = inst;

	exports['default'] = inst;
	module.exports = exports['default'];

/***/ }),
/* 3 */
/***/ (function(module, exports) {

	"use strict";

	exports["default"] = function (obj) {
	  if (obj && obj.__esModule) {
	    return obj;
	  } else {
	    var newObj = {};

	    if (obj != null) {
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
	      }
	    }

	    newObj["default"] = obj;
	    return newObj;
	  }
	};

	exports.__esModule = true;

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;
	exports.HandlebarsEnvironment = HandlebarsEnvironment;

	var _utils = __webpack_require__(5);

	var _exception = __webpack_require__(6);

	var _exception2 = _interopRequireDefault(_exception);

	var _helpers = __webpack_require__(10);

	var _decorators = __webpack_require__(18);

	var _logger = __webpack_require__(20);

	var _logger2 = _interopRequireDefault(_logger);

	var VERSION = '4.0.11';
	exports.VERSION = VERSION;
	var COMPILER_REVISION = 7;

	exports.COMPILER_REVISION = COMPILER_REVISION;
	var REVISION_CHANGES = {
	  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it
	  2: '== 1.0.0-rc.3',
	  3: '== 1.0.0-rc.4',
	  4: '== 1.x.x',
	  5: '== 2.0.0-alpha.x',
	  6: '>= 2.0.0-beta.1',
	  7: '>= 4.0.0'
	};

	exports.REVISION_CHANGES = REVISION_CHANGES;
	var objectType = '[object Object]';

	function HandlebarsEnvironment(helpers, partials, decorators) {
	  this.helpers = helpers || {};
	  this.partials = partials || {};
	  this.decorators = decorators || {};

	  _helpers.registerDefaultHelpers(this);
	  _decorators.registerDefaultDecorators(this);
	}

	HandlebarsEnvironment.prototype = {
	  constructor: HandlebarsEnvironment,

	  logger: _logger2['default'],
	  log: _logger2['default'].log,

	  registerHelper: function registerHelper(name, fn) {
	    if (_utils.toString.call(name) === objectType) {
	      if (fn) {
	        throw new _exception2['default']('Arg not supported with multiple helpers');
	      }
	      _utils.extend(this.helpers, name);
	    } else {
	      this.helpers[name] = fn;
	    }
	  },
	  unregisterHelper: function unregisterHelper(name) {
	    delete this.helpers[name];
	  },

	  registerPartial: function registerPartial(name, partial) {
	    if (_utils.toString.call(name) === objectType) {
	      _utils.extend(this.partials, name);
	    } else {
	      if (typeof partial === 'undefined') {
	        throw new _exception2['default']('Attempting to register a partial called "' + name + '" as undefined');
	      }
	      this.partials[name] = partial;
	    }
	  },
	  unregisterPartial: function unregisterPartial(name) {
	    delete this.partials[name];
	  },

	  registerDecorator: function registerDecorator(name, fn) {
	    if (_utils.toString.call(name) === objectType) {
	      if (fn) {
	        throw new _exception2['default']('Arg not supported with multiple decorators');
	      }
	      _utils.extend(this.decorators, name);
	    } else {
	      this.decorators[name] = fn;
	    }
	  },
	  unregisterDecorator: function unregisterDecorator(name) {
	    delete this.decorators[name];
	  }
	};

	var log = _logger2['default'].log;

	exports.log = log;
	exports.createFrame = _utils.createFrame;
	exports.logger = _logger2['default'];

/***/ }),
/* 5 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports.extend = extend;
	exports.indexOf = indexOf;
	exports.escapeExpression = escapeExpression;
	exports.isEmpty = isEmpty;
	exports.createFrame = createFrame;
	exports.blockParams = blockParams;
	exports.appendContextPath = appendContextPath;
	var escape = {
	  '&': '&amp;',
	  '<': '&lt;',
	  '>': '&gt;',
	  '"': '&quot;',
	  "'": '&#x27;',
	  '`': '&#x60;',
	  '=': '&#x3D;'
	};

	var badChars = /[&<>"'`=]/g,
	    possible = /[&<>"'`=]/;

	function escapeChar(chr) {
	  return escape[chr];
	}

	function extend(obj /* , ...source */) {
	  for (var i = 1; i < arguments.length; i++) {
	    for (var key in arguments[i]) {
	      if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {
	        obj[key] = arguments[i][key];
	      }
	    }
	  }

	  return obj;
	}

	var toString = Object.prototype.toString;

	exports.toString = toString;
	// Sourced from lodash
	// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt
	/* eslint-disable func-style */
	var isFunction = function isFunction(value) {
	  return typeof value === 'function';
	};
	// fallback for older versions of Chrome and Safari
	/* istanbul ignore next */
	if (isFunction(/x/)) {
	  exports.isFunction = isFunction = function (value) {
	    return typeof value === 'function' && toString.call(value) === '[object Function]';
	  };
	}
	exports.isFunction = isFunction;

	/* eslint-enable func-style */

	/* istanbul ignore next */
	var isArray = Array.isArray || function (value) {
	  return value && typeof value === 'object' ? toString.call(value) === '[object Array]' : false;
	};

	exports.isArray = isArray;
	// Older IE versions do not directly support indexOf so we must implement our own, sadly.

	function indexOf(array, value) {
	  for (var i = 0, len = array.length; i < len; i++) {
	    if (array[i] === value) {
	      return i;
	    }
	  }
	  return -1;
	}

	function escapeExpression(string) {
	  if (typeof string !== 'string') {
	    // don't escape SafeStrings, since they're already safe
	    if (string && string.toHTML) {
	      return string.toHTML();
	    } else if (string == null) {
	      return '';
	    } else if (!string) {
	      return string + '';
	    }

	    // Force a string conversion as this will be done by the append regardless and
	    // the regex test will do this transparently behind the scenes, causing issues if
	    // an object's to string has escaped characters in it.
	    string = '' + string;
	  }

	  if (!possible.test(string)) {
	    return string;
	  }
	  return string.replace(badChars, escapeChar);
	}

	function isEmpty(value) {
	  if (!value && value !== 0) {
	    return true;
	  } else if (isArray(value) && value.length === 0) {
	    return true;
	  } else {
	    return false;
	  }
	}

	function createFrame(object) {
	  var frame = extend({}, object);
	  frame._parent = object;
	  return frame;
	}

	function blockParams(params, ids) {
	  params.path = ids;
	  return params;
	}

	function appendContextPath(contextPath, id) {
	  return (contextPath ? contextPath + '.' : '') + id;
	}

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _Object$defineProperty = __webpack_require__(7)['default'];

	exports.__esModule = true;

	var errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];

	function Exception(message, node) {
	  var loc = node && node.loc,
	      line = undefined,
	      column = undefined;
	  if (loc) {
	    line = loc.start.line;
	    column = loc.start.column;

	    message += ' - ' + line + ':' + column;
	  }

	  var tmp = Error.prototype.constructor.call(this, message);

	  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.
	  for (var idx = 0; idx < errorProps.length; idx++) {
	    this[errorProps[idx]] = tmp[errorProps[idx]];
	  }

	  /* istanbul ignore else */
	  if (Error.captureStackTrace) {
	    Error.captureStackTrace(this, Exception);
	  }

	  try {
	    if (loc) {
	      this.lineNumber = line;

	      // Work around issue under safari where we can't directly set the column value
	      /* istanbul ignore next */
	      if (_Object$defineProperty) {
	        Object.defineProperty(this, 'column', {
	          value: column,
	          enumerable: true
	        });
	      } else {
	        this.column = column;
	      }
	    }
	  } catch (nop) {
	    /* Ignore if the browser is very particular */
	  }
	}

	Exception.prototype = new Error();

	exports['default'] = Exception;
	module.exports = exports['default'];

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(8), __esModule: true };

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

	var $ = __webpack_require__(9);
	module.exports = function defineProperty(it, key, desc){
	  return $.setDesc(it, key, desc);
	};

/***/ }),
/* 9 */
/***/ (function(module, exports) {

	var $Object = Object;
	module.exports = {
	  create:     $Object.create,
	  getProto:   $Object.getPrototypeOf,
	  isEnum:     {}.propertyIsEnumerable,
	  getDesc:    $Object.getOwnPropertyDescriptor,
	  setDesc:    $Object.defineProperty,
	  setDescs:   $Object.defineProperties,
	  getKeys:    $Object.keys,
	  getNames:   $Object.getOwnPropertyNames,
	  getSymbols: $Object.getOwnPropertySymbols,
	  each:       [].forEach
	};

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;
	exports.registerDefaultHelpers = registerDefaultHelpers;

	var _helpersBlockHelperMissing = __webpack_require__(11);

	var _helpersBlockHelperMissing2 = _interopRequireDefault(_helpersBlockHelperMissing);

	var _helpersEach = __webpack_require__(12);

	var _helpersEach2 = _interopRequireDefault(_helpersEach);

	var _helpersHelperMissing = __webpack_require__(13);

	var _helpersHelperMissing2 = _interopRequireDefault(_helpersHelperMissing);

	var _helpersIf = __webpack_require__(14);

	var _helpersIf2 = _interopRequireDefault(_helpersIf);

	var _helpersLog = __webpack_require__(15);

	var _helpersLog2 = _interopRequireDefault(_helpersLog);

	var _helpersLookup = __webpack_require__(16);

	var _helpersLookup2 = _interopRequireDefault(_helpersLookup);

	var _helpersWith = __webpack_require__(17);

	var _helpersWith2 = _interopRequireDefault(_helpersWith);

	function registerDefaultHelpers(instance) {
	  _helpersBlockHelperMissing2['default'](instance);
	  _helpersEach2['default'](instance);
	  _helpersHelperMissing2['default'](instance);
	  _helpersIf2['default'](instance);
	  _helpersLog2['default'](instance);
	  _helpersLookup2['default'](instance);
	  _helpersWith2['default'](instance);
	}

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _utils = __webpack_require__(5);

	exports['default'] = function (instance) {
	  instance.registerHelper('blockHelperMissing', function (context, options) {
	    var inverse = options.inverse,
	        fn = options.fn;

	    if (context === true) {
	      return fn(this);
	    } else if (context === false || context == null) {
	      return inverse(this);
	    } else if (_utils.isArray(context)) {
	      if (context.length > 0) {
	        if (options.ids) {
	          options.ids = [options.name];
	        }

	        return instance.helpers.each(context, options);
	      } else {
	        return inverse(this);
	      }
	    } else {
	      if (options.data && options.ids) {
	        var data = _utils.createFrame(options.data);
	        data.contextPath = _utils.appendContextPath(options.data.contextPath, options.name);
	        options = { data: data };
	      }

	      return fn(context, options);
	    }
	  });
	};

	module.exports = exports['default'];

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;

	var _utils = __webpack_require__(5);

	var _exception = __webpack_require__(6);

	var _exception2 = _interopRequireDefault(_exception);

	exports['default'] = function (instance) {
	  instance.registerHelper('each', function (context, options) {
	    if (!options) {
	      throw new _exception2['default']('Must pass iterator to #each');
	    }

	    var fn = options.fn,
	        inverse = options.inverse,
	        i = 0,
	        ret = '',
	        data = undefined,
	        contextPath = undefined;

	    if (options.data && options.ids) {
	      contextPath = _utils.appendContextPath(options.data.contextPath, options.ids[0]) + '.';
	    }

	    if (_utils.isFunction(context)) {
	      context = context.call(this);
	    }

	    if (options.data) {
	      data = _utils.createFrame(options.data);
	    }

	    function execIteration(field, index, last) {
	      if (data) {
	        data.key = field;
	        data.index = index;
	        data.first = index === 0;
	        data.last = !!last;

	        if (contextPath) {
	          data.contextPath = contextPath + field;
	        }
	      }

	      ret = ret + fn(context[field], {
	        data: data,
	        blockParams: _utils.blockParams([context[field], field], [contextPath + field, null])
	      });
	    }

	    if (context && typeof context === 'object') {
	      if (_utils.isArray(context)) {
	        for (var j = context.length; i < j; i++) {
	          if (i in context) {
	            execIteration(i, i, i === context.length - 1);
	          }
	        }
	      } else {
	        var priorKey = undefined;

	        for (var key in context) {
	          if (context.hasOwnProperty(key)) {
	            // We're running the iterations one step out of sync so we can detect
	            // the last iteration without have to scan the object twice and create
	            // an itermediate keys array.
	            if (priorKey !== undefined) {
	              execIteration(priorKey, i - 1);
	            }
	            priorKey = key;
	            i++;
	          }
	        }
	        if (priorKey !== undefined) {
	          execIteration(priorKey, i - 1, true);
	        }
	      }
	    }

	    if (i === 0) {
	      ret = inverse(this);
	    }

	    return ret;
	  });
	};

	module.exports = exports['default'];

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;

	var _exception = __webpack_require__(6);

	var _exception2 = _interopRequireDefault(_exception);

	exports['default'] = function (instance) {
	  instance.registerHelper('helperMissing', function () /* [args, ]options */{
	    if (arguments.length === 1) {
	      // A missing field in a {{foo}} construct.
	      return undefined;
	    } else {
	      // Someone is actually trying to call something, blow up.
	      throw new _exception2['default']('Missing helper: "' + arguments[arguments.length - 1].name + '"');
	    }
	  });
	};

	module.exports = exports['default'];

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _utils = __webpack_require__(5);

	exports['default'] = function (instance) {
	  instance.registerHelper('if', function (conditional, options) {
	    if (_utils.isFunction(conditional)) {
	      conditional = conditional.call(this);
	    }

	    // Default behavior is to render the positive path if the value is truthy and not empty.
	    // The `includeZero` option may be set to treat the condtional as purely not empty based on the
	    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.
	    if (!options.hash.includeZero && !conditional || _utils.isEmpty(conditional)) {
	      return options.inverse(this);
	    } else {
	      return options.fn(this);
	    }
	  });

	  instance.registerHelper('unless', function (conditional, options) {
	    return instance.helpers['if'].call(this, conditional, { fn: options.inverse, inverse: options.fn, hash: options.hash });
	  });
	};

	module.exports = exports['default'];

/***/ }),
/* 15 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;

	exports['default'] = function (instance) {
	  instance.registerHelper('log', function () /* message, options */{
	    var args = [undefined],
	        options = arguments[arguments.length - 1];
	    for (var i = 0; i < arguments.length - 1; i++) {
	      args.push(arguments[i]);
	    }

	    var level = 1;
	    if (options.hash.level != null) {
	      level = options.hash.level;
	    } else if (options.data && options.data.level != null) {
	      level = options.data.level;
	    }
	    args[0] = level;

	    instance.log.apply(instance, args);
	  });
	};

	module.exports = exports['default'];

/***/ }),
/* 16 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;

	exports['default'] = function (instance) {
	  instance.registerHelper('lookup', function (obj, field) {
	    return obj && obj[field];
	  });
	};

	module.exports = exports['default'];

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _utils = __webpack_require__(5);

	exports['default'] = function (instance) {
	  instance.registerHelper('with', function (context, options) {
	    if (_utils.isFunction(context)) {
	      context = context.call(this);
	    }

	    var fn = options.fn;

	    if (!_utils.isEmpty(context)) {
	      var data = options.data;
	      if (options.data && options.ids) {
	        data = _utils.createFrame(options.data);
	        data.contextPath = _utils.appendContextPath(options.data.contextPath, options.ids[0]);
	      }

	      return fn(context, {
	        data: data,
	        blockParams: _utils.blockParams([context], [data && data.contextPath])
	      });
	    } else {
	      return options.inverse(this);
	    }
	  });
	};

	module.exports = exports['default'];

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;
	exports.registerDefaultDecorators = registerDefaultDecorators;

	var _decoratorsInline = __webpack_require__(19);

	var _decoratorsInline2 = _interopRequireDefault(_decoratorsInline);

	function registerDefaultDecorators(instance) {
	  _decoratorsInline2['default'](instance);
	}

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _utils = __webpack_require__(5);

	exports['default'] = function (instance) {
	  instance.registerDecorator('inline', function (fn, props, container, options) {
	    var ret = fn;
	    if (!props.partials) {
	      props.partials = {};
	      ret = function (context, options) {
	        // Create a new partials stack frame prior to exec.
	        var original = container.partials;
	        container.partials = _utils.extend({}, original, props.partials);
	        var ret = fn(context, options);
	        container.partials = original;
	        return ret;
	      };
	    }

	    props.partials[options.args[0]] = options.fn;

	    return ret;
	  });
	};

	module.exports = exports['default'];

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _utils = __webpack_require__(5);

	var logger = {
	  methodMap: ['debug', 'info', 'warn', 'error'],
	  level: 'info',

	  // Maps a given level value to the `methodMap` indexes above.
	  lookupLevel: function lookupLevel(level) {
	    if (typeof level === 'string') {
	      var levelMap = _utils.indexOf(logger.methodMap, level.toLowerCase());
	      if (levelMap >= 0) {
	        level = levelMap;
	      } else {
	        level = parseInt(level, 10);
	      }
	    }

	    return level;
	  },

	  // Can be overridden in the host environment
	  log: function log(level) {
	    level = logger.lookupLevel(level);

	    if (typeof console !== 'undefined' && logger.lookupLevel(logger.level) <= level) {
	      var method = logger.methodMap[level];
	      if (!console[method]) {
	        // eslint-disable-line no-console
	        method = 'log';
	      }

	      for (var _len = arguments.length, message = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        message[_key - 1] = arguments[_key];
	      }

	      console[method].apply(console, message); // eslint-disable-line no-console
	    }
	  }
	};

	exports['default'] = logger;
	module.exports = exports['default'];

/***/ }),
/* 21 */
/***/ (function(module, exports) {

	// Build out our basic SafeString type
	'use strict';

	exports.__esModule = true;
	function SafeString(string) {
	  this.string = string;
	}

	SafeString.prototype.toString = SafeString.prototype.toHTML = function () {
	  return '' + this.string;
	};

	exports['default'] = SafeString;
	module.exports = exports['default'];

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _Object$seal = __webpack_require__(23)['default'];

	var _interopRequireWildcard = __webpack_require__(3)['default'];

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;
	exports.checkRevision = checkRevision;
	exports.template = template;
	exports.wrapProgram = wrapProgram;
	exports.resolvePartial = resolvePartial;
	exports.invokePartial = invokePartial;
	exports.noop = noop;

	var _utils = __webpack_require__(5);

	var Utils = _interopRequireWildcard(_utils);

	var _exception = __webpack_require__(6);

	var _exception2 = _interopRequireDefault(_exception);

	var _base = __webpack_require__(4);

	function checkRevision(compilerInfo) {
	  var compilerRevision = compilerInfo && compilerInfo[0] || 1,
	      currentRevision = _base.COMPILER_REVISION;

	  if (compilerRevision !== currentRevision) {
	    if (compilerRevision < currentRevision) {
	      var runtimeVersions = _base.REVISION_CHANGES[currentRevision],
	          compilerVersions = _base.REVISION_CHANGES[compilerRevision];
	      throw new _exception2['default']('Template was precompiled with an older version of Handlebars than the current runtime. ' + 'Please update your precompiler to a newer version (' + runtimeVersions + ') or downgrade your runtime to an older version (' + compilerVersions + ').');
	    } else {
	      // Use the embedded version info since the runtime doesn't know about this revision yet
	      throw new _exception2['default']('Template was precompiled with a newer version of Handlebars than the current runtime. ' + 'Please update your runtime to a newer version (' + compilerInfo[1] + ').');
	    }
	  }
	}

	function template(templateSpec, env) {
	  /* istanbul ignore next */
	  if (!env) {
	    throw new _exception2['default']('No environment passed to template');
	  }
	  if (!templateSpec || !templateSpec.main) {
	    throw new _exception2['default']('Unknown template object: ' + typeof templateSpec);
	  }

	  templateSpec.main.decorator = templateSpec.main_d;

	  // Note: Using env.VM references rather than local var references throughout this section to allow
	  // for external users to override these as psuedo-supported APIs.
	  env.VM.checkRevision(templateSpec.compiler);

	  function invokePartialWrapper(partial, context, options) {
	    if (options.hash) {
	      context = Utils.extend({}, context, options.hash);
	      if (options.ids) {
	        options.ids[0] = true;
	      }
	    }

	    partial = env.VM.resolvePartial.call(this, partial, context, options);
	    var result = env.VM.invokePartial.call(this, partial, context, options);

	    if (result == null && env.compile) {
	      options.partials[options.name] = env.compile(partial, templateSpec.compilerOptions, env);
	      result = options.partials[options.name](context, options);
	    }
	    if (result != null) {
	      if (options.indent) {
	        var lines = result.split('\n');
	        for (var i = 0, l = lines.length; i < l; i++) {
	          if (!lines[i] && i + 1 === l) {
	            break;
	          }

	          lines[i] = options.indent + lines[i];
	        }
	        result = lines.join('\n');
	      }
	      return result;
	    } else {
	      throw new _exception2['default']('The partial ' + options.name + ' could not be compiled when running in runtime-only mode');
	    }
	  }

	  // Just add water
	  var container = {
	    strict: function strict(obj, name) {
	      if (!(name in obj)) {
	        throw new _exception2['default']('"' + name + '" not defined in ' + obj);
	      }
	      return obj[name];
	    },
	    lookup: function lookup(depths, name) {
	      var len = depths.length;
	      for (var i = 0; i < len; i++) {
	        if (depths[i] && depths[i][name] != null) {
	          return depths[i][name];
	        }
	      }
	    },
	    lambda: function lambda(current, context) {
	      return typeof current === 'function' ? current.call(context) : current;
	    },

	    escapeExpression: Utils.escapeExpression,
	    invokePartial: invokePartialWrapper,

	    fn: function fn(i) {
	      var ret = templateSpec[i];
	      ret.decorator = templateSpec[i + '_d'];
	      return ret;
	    },

	    programs: [],
	    program: function program(i, data, declaredBlockParams, blockParams, depths) {
	      var programWrapper = this.programs[i],
	          fn = this.fn(i);
	      if (data || depths || blockParams || declaredBlockParams) {
	        programWrapper = wrapProgram(this, i, fn, data, declaredBlockParams, blockParams, depths);
	      } else if (!programWrapper) {
	        programWrapper = this.programs[i] = wrapProgram(this, i, fn);
	      }
	      return programWrapper;
	    },

	    data: function data(value, depth) {
	      while (value && depth--) {
	        value = value._parent;
	      }
	      return value;
	    },
	    merge: function merge(param, common) {
	      var obj = param || common;

	      if (param && common && param !== common) {
	        obj = Utils.extend({}, common, param);
	      }

	      return obj;
	    },
	    // An empty object to use as replacement for null-contexts
	    nullContext: _Object$seal({}),

	    noop: env.VM.noop,
	    compilerInfo: templateSpec.compiler
	  };

	  function ret(context) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    var data = options.data;

	    ret._setup(options);
	    if (!options.partial && templateSpec.useData) {
	      data = initData(context, data);
	    }
	    var depths = undefined,
	        blockParams = templateSpec.useBlockParams ? [] : undefined;
	    if (templateSpec.useDepths) {
	      if (options.depths) {
	        depths = context != options.depths[0] ? [context].concat(options.depths) : options.depths;
	      } else {
	        depths = [context];
	      }
	    }

	    function main(context /*, options*/) {
	      return '' + templateSpec.main(container, context, container.helpers, container.partials, data, blockParams, depths);
	    }
	    main = executeDecorators(templateSpec.main, main, container, options.depths || [], data, blockParams);
	    return main(context, options);
	  }
	  ret.isTop = true;

	  ret._setup = function (options) {
	    if (!options.partial) {
	      container.helpers = container.merge(options.helpers, env.helpers);

	      if (templateSpec.usePartial) {
	        container.partials = container.merge(options.partials, env.partials);
	      }
	      if (templateSpec.usePartial || templateSpec.useDecorators) {
	        container.decorators = container.merge(options.decorators, env.decorators);
	      }
	    } else {
	      container.helpers = options.helpers;
	      container.partials = options.partials;
	      container.decorators = options.decorators;
	    }
	  };

	  ret._child = function (i, data, blockParams, depths) {
	    if (templateSpec.useBlockParams && !blockParams) {
	      throw new _exception2['default']('must pass block params');
	    }
	    if (templateSpec.useDepths && !depths) {
	      throw new _exception2['default']('must pass parent depths');
	    }

	    return wrapProgram(container, i, templateSpec[i], data, 0, blockParams, depths);
	  };
	  return ret;
	}

	function wrapProgram(container, i, fn, data, declaredBlockParams, blockParams, depths) {
	  function prog(context) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    var currentDepths = depths;
	    if (depths && context != depths[0] && !(context === container.nullContext && depths[0] === null)) {
	      currentDepths = [context].concat(depths);
	    }

	    return fn(container, context, container.helpers, container.partials, options.data || data, blockParams && [options.blockParams].concat(blockParams), currentDepths);
	  }

	  prog = executeDecorators(fn, prog, container, depths, data, blockParams);

	  prog.program = i;
	  prog.depth = depths ? depths.length : 0;
	  prog.blockParams = declaredBlockParams || 0;
	  return prog;
	}

	function resolvePartial(partial, context, options) {
	  if (!partial) {
	    if (options.name === '@partial-block') {
	      partial = options.data['partial-block'];
	    } else {
	      partial = options.partials[options.name];
	    }
	  } else if (!partial.call && !options.name) {
	    // This is a dynamic partial that returned a string
	    options.name = partial;
	    partial = options.partials[partial];
	  }
	  return partial;
	}

	function invokePartial(partial, context, options) {
	  // Use the current closure context to save the partial-block if this partial
	  var currentPartialBlock = options.data && options.data['partial-block'];
	  options.partial = true;
	  if (options.ids) {
	    options.data.contextPath = options.ids[0] || options.data.contextPath;
	  }

	  var partialBlock = undefined;
	  if (options.fn && options.fn !== noop) {
	    (function () {
	      options.data = _base.createFrame(options.data);
	      // Wrapper function to get access to currentPartialBlock from the closure
	      var fn = options.fn;
	      partialBlock = options.data['partial-block'] = function partialBlockWrapper(context) {
	        var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	        // Restore the partial-block from the closure for the execution of the block
	        // i.e. the part inside the block of the partial call.
	        options.data = _base.createFrame(options.data);
	        options.data['partial-block'] = currentPartialBlock;
	        return fn(context, options);
	      };
	      if (fn.partials) {
	        options.partials = Utils.extend({}, options.partials, fn.partials);
	      }
	    })();
	  }

	  if (partial === undefined && partialBlock) {
	    partial = partialBlock;
	  }

	  if (partial === undefined) {
	    throw new _exception2['default']('The partial ' + options.name + ' could not be found');
	  } else if (partial instanceof Function) {
	    return partial(context, options);
	  }
	}

	function noop() {
	  return '';
	}

	function initData(context, data) {
	  if (!data || !('root' in data)) {
	    data = data ? _base.createFrame(data) : {};
	    data.root = context;
	  }
	  return data;
	}

	function executeDecorators(fn, prog, container, depths, data, blockParams) {
	  if (fn.decorator) {
	    var props = {};
	    prog = fn.decorator(prog, props, container, depths && depths[0], data, blockParams, depths);
	    Utils.extend(prog, props);
	  }
	  return prog;
	}

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(24), __esModule: true };

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(25);
	module.exports = __webpack_require__(30).Object.seal;

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.17 Object.seal(O)
	var isObject = __webpack_require__(26);

	__webpack_require__(27)('seal', function($seal){
	  return function seal(it){
	    return $seal && isObject(it) ? $seal(it) : it;
	  };
	});

/***/ }),
/* 26 */
/***/ (function(module, exports) {

	module.exports = function(it){
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(28)
	  , core    = __webpack_require__(30)
	  , fails   = __webpack_require__(33);
	module.exports = function(KEY, exec){
	  var fn  = (core.Object || {})[KEY] || Object[KEY]
	    , exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
	};

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(29)
	  , core      = __webpack_require__(30)
	  , ctx       = __webpack_require__(31)
	  , PROTOTYPE = 'prototype';

	var $export = function(type, name, source){
	  var IS_FORCED = type & $export.F
	    , IS_GLOBAL = type & $export.G
	    , IS_STATIC = type & $export.S
	    , IS_PROTO  = type & $export.P
	    , IS_BIND   = type & $export.B
	    , IS_WRAP   = type & $export.W
	    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
	    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]
	    , key, own, out;
	  if(IS_GLOBAL)source = name;
	  for(key in source){
	    // contains in native
	    own = !IS_FORCED && target && key in target;
	    if(own && key in exports)continue;
	    // export native or passed
	    out = own ? target[key] : source[key];
	    // prevent global pollution for namespaces
	    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
	    // bind timers to global for call from export context
	    : IS_BIND && own ? ctx(out, global)
	    // wrap global constructors for prevent change them in library
	    : IS_WRAP && target[key] == out ? (function(C){
	      var F = function(param){
	        return this instanceof C ? new C(param) : C(param);
	      };
	      F[PROTOTYPE] = C[PROTOTYPE];
	      return F;
	    // make static versions for prototype methods
	    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    if(IS_PROTO)(exports[PROTOTYPE] || (exports[PROTOTYPE] = {}))[key] = out;
	  }
	};
	// type bitmap
	$export.F = 1;  // forced
	$export.G = 2;  // global
	$export.S = 4;  // static
	$export.P = 8;  // proto
	$export.B = 16; // bind
	$export.W = 32; // wrap
	module.exports = $export;

/***/ }),
/* 29 */
/***/ (function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ }),
/* 30 */
/***/ (function(module, exports) {

	var core = module.exports = {version: '1.2.6'};
	if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(32);
	module.exports = function(fn, that, length){
	  aFunction(fn);
	  if(that === undefined)return fn;
	  switch(length){
	    case 1: return function(a){
	      return fn.call(that, a);
	    };
	    case 2: return function(a, b){
	      return fn.call(that, a, b);
	    };
	    case 3: return function(a, b, c){
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function(/* ...args */){
	    return fn.apply(that, arguments);
	  };
	};

/***/ }),
/* 32 */
/***/ (function(module, exports) {

	module.exports = function(it){
	  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
	  return it;
	};

/***/ }),
/* 33 */
/***/ (function(module, exports) {

	module.exports = function(exec){
	  try {
	    return !!exec();
	  } catch(e){
	    return true;
	  }
	};

/***/ }),
/* 34 */
/***/ (function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/* global window */
	'use strict';

	exports.__esModule = true;

	exports['default'] = function (Handlebars) {
	  /* istanbul ignore next */
	  var root = typeof global !== 'undefined' ? global : window,
	      $Handlebars = root.Handlebars;
	  /* istanbul ignore next */
	  Handlebars.noConflict = function () {
	    if (root.Handlebars === Handlebars) {
	      root.Handlebars = $Handlebars;
	    }
	    return Handlebars;
	  };
	};

	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 35 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var AST = {
	  // Public API used to evaluate derived attributes regarding AST nodes
	  helpers: {
	    // a mustache is definitely a helper if:
	    // * it is an eligible helper, and
	    // * it has at least one parameter or hash segment
	    helperExpression: function helperExpression(node) {
	      return node.type === 'SubExpression' || (node.type === 'MustacheStatement' || node.type === 'BlockStatement') && !!(node.params && node.params.length || node.hash);
	    },

	    scopedId: function scopedId(path) {
	      return (/^\.|this\b/.test(path.original)
	      );
	    },

	    // an ID is simple if it only has one part, and that part is not
	    // `..` or `this`.
	    simpleId: function simpleId(path) {
	      return path.parts.length === 1 && !AST.helpers.scopedId(path) && !path.depth;
	    }
	  }
	};

	// Must be exported as an object rather than the root of the module as the jison lexer
	// must modify the object to operate properly.
	exports['default'] = AST;
	module.exports = exports['default'];

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	var _interopRequireWildcard = __webpack_require__(3)['default'];

	exports.__esModule = true;
	exports.parse = parse;

	var _parser = __webpack_require__(37);

	var _parser2 = _interopRequireDefault(_parser);

	var _whitespaceControl = __webpack_require__(38);

	var _whitespaceControl2 = _interopRequireDefault(_whitespaceControl);

	var _helpers = __webpack_require__(40);

	var Helpers = _interopRequireWildcard(_helpers);

	var _utils = __webpack_require__(5);

	exports.parser = _parser2['default'];

	var yy = {};
	_utils.extend(yy, Helpers);

	function parse(input, options) {
	  // Just return if an already-compiled AST was passed in.
	  if (input.type === 'Program') {
	    return input;
	  }

	  _parser2['default'].yy = yy;

	  // Altering the shared object here, but this is ok as parser is a sync operation
	  yy.locInfo = function (locInfo) {
	    return new yy.SourceLocation(options && options.srcName, locInfo);
	  };

	  var strip = new _whitespaceControl2['default'](options);
	  return strip.accept(_parser2['default'].parse(input));
	}

/***/ }),
/* 37 */
/***/ (function(module, exports) {

	// File ignored in coverage tests via setting in .istanbul.yml
	/* Jison generated parser */
	"use strict";

	exports.__esModule = true;
	var handlebars = (function () {
	    var parser = { trace: function trace() {},
	        yy: {},
	        symbols_: { "error": 2, "root": 3, "program": 4, "EOF": 5, "program_repetition0": 6, "statement": 7, "mustache": 8, "block": 9, "rawBlock": 10, "partial": 11, "partialBlock": 12, "content": 13, "COMMENT": 14, "CONTENT": 15, "openRawBlock": 16, "rawBlock_repetition_plus0": 17, "END_RAW_BLOCK": 18, "OPEN_RAW_BLOCK": 19, "helperName": 20, "openRawBlock_repetition0": 21, "openRawBlock_option0": 22, "CLOSE_RAW_BLOCK": 23, "openBlock": 24, "block_option0": 25, "closeBlock": 26, "openInverse": 27, "block_option1": 28, "OPEN_BLOCK": 29, "openBlock_repetition0": 30, "openBlock_option0": 31, "openBlock_option1": 32, "CLOSE": 33, "OPEN_INVERSE": 34, "openInverse_repetition0": 35, "openInverse_option0": 36, "openInverse_option1": 37, "openInverseChain": 38, "OPEN_INVERSE_CHAIN": 39, "openInverseChain_repetition0": 40, "openInverseChain_option0": 41, "openInverseChain_option1": 42, "inverseAndProgram": 43, "INVERSE": 44, "inverseChain": 45, "inverseChain_option0": 46, "OPEN_ENDBLOCK": 47, "OPEN": 48, "mustache_repetition0": 49, "mustache_option0": 50, "OPEN_UNESCAPED": 51, "mustache_repetition1": 52, "mustache_option1": 53, "CLOSE_UNESCAPED": 54, "OPEN_PARTIAL": 55, "partialName": 56, "partial_repetition0": 57, "partial_option0": 58, "openPartialBlock": 59, "OPEN_PARTIAL_BLOCK": 60, "openPartialBlock_repetition0": 61, "openPartialBlock_option0": 62, "param": 63, "sexpr": 64, "OPEN_SEXPR": 65, "sexpr_repetition0": 66, "sexpr_option0": 67, "CLOSE_SEXPR": 68, "hash": 69, "hash_repetition_plus0": 70, "hashSegment": 71, "ID": 72, "EQUALS": 73, "blockParams": 74, "OPEN_BLOCK_PARAMS": 75, "blockParams_repetition_plus0": 76, "CLOSE_BLOCK_PARAMS": 77, "path": 78, "dataName": 79, "STRING": 80, "NUMBER": 81, "BOOLEAN": 82, "UNDEFINED": 83, "NULL": 84, "DATA": 85, "pathSegments": 86, "SEP": 87, "$accept": 0, "$end": 1 },
	        terminals_: { 2: "error", 5: "EOF", 14: "COMMENT", 15: "CONTENT", 18: "END_RAW_BLOCK", 19: "OPEN_RAW_BLOCK", 23: "CLOSE_RAW_BLOCK", 29: "OPEN_BLOCK", 33: "CLOSE", 34: "OPEN_INVERSE", 39: "OPEN_INVERSE_CHAIN", 44: "INVERSE", 47: "OPEN_ENDBLOCK", 48: "OPEN", 51: "OPEN_UNESCAPED", 54: "CLOSE_UNESCAPED", 55: "OPEN_PARTIAL", 60: "OPEN_PARTIAL_BLOCK", 65: "OPEN_SEXPR", 68: "CLOSE_SEXPR", 72: "ID", 73: "EQUALS", 75: "OPEN_BLOCK_PARAMS", 77: "CLOSE_BLOCK_PARAMS", 80: "STRING", 81: "NUMBER", 82: "BOOLEAN", 83: "UNDEFINED", 84: "NULL", 85: "DATA", 87: "SEP" },
	        productions_: [0, [3, 2], [4, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [13, 1], [10, 3], [16, 5], [9, 4], [9, 4], [24, 6], [27, 6], [38, 6], [43, 2], [45, 3], [45, 1], [26, 3], [8, 5], [8, 5], [11, 5], [12, 3], [59, 5], [63, 1], [63, 1], [64, 5], [69, 1], [71, 3], [74, 3], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [56, 1], [56, 1], [79, 2], [78, 1], [86, 3], [86, 1], [6, 0], [6, 2], [17, 1], [17, 2], [21, 0], [21, 2], [22, 0], [22, 1], [25, 0], [25, 1], [28, 0], [28, 1], [30, 0], [30, 2], [31, 0], [31, 1], [32, 0], [32, 1], [35, 0], [35, 2], [36, 0], [36, 1], [37, 0], [37, 1], [40, 0], [40, 2], [41, 0], [41, 1], [42, 0], [42, 1], [46, 0], [46, 1], [49, 0], [49, 2], [50, 0], [50, 1], [52, 0], [52, 2], [53, 0], [53, 1], [57, 0], [57, 2], [58, 0], [58, 1], [61, 0], [61, 2], [62, 0], [62, 1], [66, 0], [66, 2], [67, 0], [67, 1], [70, 1], [70, 2], [76, 1], [76, 2]],
	        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$
	        /**/) {

	            var $0 = $$.length - 1;
	            switch (yystate) {
	                case 1:
	                    return $$[$0 - 1];
	                    break;
	                case 2:
	                    this.$ = yy.prepareProgram($$[$0]);
	                    break;
	                case 3:
	                    this.$ = $$[$0];
	                    break;
	                case 4:
	                    this.$ = $$[$0];
	                    break;
	                case 5:
	                    this.$ = $$[$0];
	                    break;
	                case 6:
	                    this.$ = $$[$0];
	                    break;
	                case 7:
	                    this.$ = $$[$0];
	                    break;
	                case 8:
	                    this.$ = $$[$0];
	                    break;
	                case 9:
	                    this.$ = {
	                        type: 'CommentStatement',
	                        value: yy.stripComment($$[$0]),
	                        strip: yy.stripFlags($$[$0], $$[$0]),
	                        loc: yy.locInfo(this._$)
	                    };

	                    break;
	                case 10:
	                    this.$ = {
	                        type: 'ContentStatement',
	                        original: $$[$0],
	                        value: $$[$0],
	                        loc: yy.locInfo(this._$)
	                    };

	                    break;
	                case 11:
	                    this.$ = yy.prepareRawBlock($$[$0 - 2], $$[$0 - 1], $$[$0], this._$);
	                    break;
	                case 12:
	                    this.$ = { path: $$[$0 - 3], params: $$[$0 - 2], hash: $$[$0 - 1] };
	                    break;
	                case 13:
	                    this.$ = yy.prepareBlock($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0], false, this._$);
	                    break;
	                case 14:
	                    this.$ = yy.prepareBlock($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0], true, this._$);
	                    break;
	                case 15:
	                    this.$ = { open: $$[$0 - 5], path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };
	                    break;
	                case 16:
	                    this.$ = { path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };
	                    break;
	                case 17:
	                    this.$ = { path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };
	                    break;
	                case 18:
	                    this.$ = { strip: yy.stripFlags($$[$0 - 1], $$[$0 - 1]), program: $$[$0] };
	                    break;
	                case 19:
	                    var inverse = yy.prepareBlock($$[$0 - 2], $$[$0 - 1], $$[$0], $$[$0], false, this._$),
	                        program = yy.prepareProgram([inverse], $$[$0 - 1].loc);
	                    program.chained = true;

	                    this.$ = { strip: $$[$0 - 2].strip, program: program, chain: true };

	                    break;
	                case 20:
	                    this.$ = $$[$0];
	                    break;
	                case 21:
	                    this.$ = { path: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 2], $$[$0]) };
	                    break;
	                case 22:
	                    this.$ = yy.prepareMustache($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0 - 4], yy.stripFlags($$[$0 - 4], $$[$0]), this._$);
	                    break;
	                case 23:
	                    this.$ = yy.prepareMustache($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0 - 4], yy.stripFlags($$[$0 - 4], $$[$0]), this._$);
	                    break;
	                case 24:
	                    this.$ = {
	                        type: 'PartialStatement',
	                        name: $$[$0 - 3],
	                        params: $$[$0 - 2],
	                        hash: $$[$0 - 1],
	                        indent: '',
	                        strip: yy.stripFlags($$[$0 - 4], $$[$0]),
	                        loc: yy.locInfo(this._$)
	                    };

	                    break;
	                case 25:
	                    this.$ = yy.preparePartialBlock($$[$0 - 2], $$[$0 - 1], $$[$0], this._$);
	                    break;
	                case 26:
	                    this.$ = { path: $$[$0 - 3], params: $$[$0 - 2], hash: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 4], $$[$0]) };
	                    break;
	                case 27:
	                    this.$ = $$[$0];
	                    break;
	                case 28:
	                    this.$ = $$[$0];
	                    break;
	                case 29:
	                    this.$ = {
	                        type: 'SubExpression',
	                        path: $$[$0 - 3],
	                        params: $$[$0 - 2],
	                        hash: $$[$0 - 1],
	                        loc: yy.locInfo(this._$)
	                    };

	                    break;
	                case 30:
	                    this.$ = { type: 'Hash', pairs: $$[$0], loc: yy.locInfo(this._$) };
	                    break;
	                case 31:
	                    this.$ = { type: 'HashPair', key: yy.id($$[$0 - 2]), value: $$[$0], loc: yy.locInfo(this._$) };
	                    break;
	                case 32:
	                    this.$ = yy.id($$[$0 - 1]);
	                    break;
	                case 33:
	                    this.$ = $$[$0];
	                    break;
	                case 34:
	                    this.$ = $$[$0];
	                    break;
	                case 35:
	                    this.$ = { type: 'StringLiteral', value: $$[$0], original: $$[$0], loc: yy.locInfo(this._$) };
	                    break;
	                case 36:
	                    this.$ = { type: 'NumberLiteral', value: Number($$[$0]), original: Number($$[$0]), loc: yy.locInfo(this._$) };
	                    break;
	                case 37:
	                    this.$ = { type: 'BooleanLiteral', value: $$[$0] === 'true', original: $$[$0] === 'true', loc: yy.locInfo(this._$) };
	                    break;
	                case 38:
	                    this.$ = { type: 'UndefinedLiteral', original: undefined, value: undefined, loc: yy.locInfo(this._$) };
	                    break;
	                case 39:
	                    this.$ = { type: 'NullLiteral', original: null, value: null, loc: yy.locInfo(this._$) };
	                    break;
	                case 40:
	                    this.$ = $$[$0];
	                    break;
	                case 41:
	                    this.$ = $$[$0];
	                    break;
	                case 42:
	                    this.$ = yy.preparePath(true, $$[$0], this._$);
	                    break;
	                case 43:
	                    this.$ = yy.preparePath(false, $$[$0], this._$);
	                    break;
	                case 44:
	                    $$[$0 - 2].push({ part: yy.id($$[$0]), original: $$[$0], separator: $$[$0 - 1] });this.$ = $$[$0 - 2];
	                    break;
	                case 45:
	                    this.$ = [{ part: yy.id($$[$0]), original: $$[$0] }];
	                    break;
	                case 46:
	                    this.$ = [];
	                    break;
	                case 47:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 48:
	                    this.$ = [$$[$0]];
	                    break;
	                case 49:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 50:
	                    this.$ = [];
	                    break;
	                case 51:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 58:
	                    this.$ = [];
	                    break;
	                case 59:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 64:
	                    this.$ = [];
	                    break;
	                case 65:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 70:
	                    this.$ = [];
	                    break;
	                case 71:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 78:
	                    this.$ = [];
	                    break;
	                case 79:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 82:
	                    this.$ = [];
	                    break;
	                case 83:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 86:
	                    this.$ = [];
	                    break;
	                case 87:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 90:
	                    this.$ = [];
	                    break;
	                case 91:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 94:
	                    this.$ = [];
	                    break;
	                case 95:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 98:
	                    this.$ = [$$[$0]];
	                    break;
	                case 99:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 100:
	                    this.$ = [$$[$0]];
	                    break;
	                case 101:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	            }
	        },
	        table: [{ 3: 1, 4: 2, 5: [2, 46], 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 1: [3] }, { 5: [1, 4] }, { 5: [2, 2], 7: 5, 8: 6, 9: 7, 10: 8, 11: 9, 12: 10, 13: 11, 14: [1, 12], 15: [1, 20], 16: 17, 19: [1, 23], 24: 15, 27: 16, 29: [1, 21], 34: [1, 22], 39: [2, 2], 44: [2, 2], 47: [2, 2], 48: [1, 13], 51: [1, 14], 55: [1, 18], 59: 19, 60: [1, 24] }, { 1: [2, 1] }, { 5: [2, 47], 14: [2, 47], 15: [2, 47], 19: [2, 47], 29: [2, 47], 34: [2, 47], 39: [2, 47], 44: [2, 47], 47: [2, 47], 48: [2, 47], 51: [2, 47], 55: [2, 47], 60: [2, 47] }, { 5: [2, 3], 14: [2, 3], 15: [2, 3], 19: [2, 3], 29: [2, 3], 34: [2, 3], 39: [2, 3], 44: [2, 3], 47: [2, 3], 48: [2, 3], 51: [2, 3], 55: [2, 3], 60: [2, 3] }, { 5: [2, 4], 14: [2, 4], 15: [2, 4], 19: [2, 4], 29: [2, 4], 34: [2, 4], 39: [2, 4], 44: [2, 4], 47: [2, 4], 48: [2, 4], 51: [2, 4], 55: [2, 4], 60: [2, 4] }, { 5: [2, 5], 14: [2, 5], 15: [2, 5], 19: [2, 5], 29: [2, 5], 34: [2, 5], 39: [2, 5], 44: [2, 5], 47: [2, 5], 48: [2, 5], 51: [2, 5], 55: [2, 5], 60: [2, 5] }, { 5: [2, 6], 14: [2, 6], 15: [2, 6], 19: [2, 6], 29: [2, 6], 34: [2, 6], 39: [2, 6], 44: [2, 6], 47: [2, 6], 48: [2, 6], 51: [2, 6], 55: [2, 6], 60: [2, 6] }, { 5: [2, 7], 14: [2, 7], 15: [2, 7], 19: [2, 7], 29: [2, 7], 34: [2, 7], 39: [2, 7], 44: [2, 7], 47: [2, 7], 48: [2, 7], 51: [2, 7], 55: [2, 7], 60: [2, 7] }, { 5: [2, 8], 14: [2, 8], 15: [2, 8], 19: [2, 8], 29: [2, 8], 34: [2, 8], 39: [2, 8], 44: [2, 8], 47: [2, 8], 48: [2, 8], 51: [2, 8], 55: [2, 8], 60: [2, 8] }, { 5: [2, 9], 14: [2, 9], 15: [2, 9], 19: [2, 9], 29: [2, 9], 34: [2, 9], 39: [2, 9], 44: [2, 9], 47: [2, 9], 48: [2, 9], 51: [2, 9], 55: [2, 9], 60: [2, 9] }, { 20: 25, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 36, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 37, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 39: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 4: 38, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 13: 40, 15: [1, 20], 17: 39 }, { 20: 42, 56: 41, 64: 43, 65: [1, 44], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 45, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 5: [2, 10], 14: [2, 10], 15: [2, 10], 18: [2, 10], 19: [2, 10], 29: [2, 10], 34: [2, 10], 39: [2, 10], 44: [2, 10], 47: [2, 10], 48: [2, 10], 51: [2, 10], 55: [2, 10], 60: [2, 10] }, { 20: 46, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 47, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 48, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 42, 56: 49, 64: 43, 65: [1, 44], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [2, 78], 49: 50, 65: [2, 78], 72: [2, 78], 80: [2, 78], 81: [2, 78], 82: [2, 78], 83: [2, 78], 84: [2, 78], 85: [2, 78] }, { 23: [2, 33], 33: [2, 33], 54: [2, 33], 65: [2, 33], 68: [2, 33], 72: [2, 33], 75: [2, 33], 80: [2, 33], 81: [2, 33], 82: [2, 33], 83: [2, 33], 84: [2, 33], 85: [2, 33] }, { 23: [2, 34], 33: [2, 34], 54: [2, 34], 65: [2, 34], 68: [2, 34], 72: [2, 34], 75: [2, 34], 80: [2, 34], 81: [2, 34], 82: [2, 34], 83: [2, 34], 84: [2, 34], 85: [2, 34] }, { 23: [2, 35], 33: [2, 35], 54: [2, 35], 65: [2, 35], 68: [2, 35], 72: [2, 35], 75: [2, 35], 80: [2, 35], 81: [2, 35], 82: [2, 35], 83: [2, 35], 84: [2, 35], 85: [2, 35] }, { 23: [2, 36], 33: [2, 36], 54: [2, 36], 65: [2, 36], 68: [2, 36], 72: [2, 36], 75: [2, 36], 80: [2, 36], 81: [2, 36], 82: [2, 36], 83: [2, 36], 84: [2, 36], 85: [2, 36] }, { 23: [2, 37], 33: [2, 37], 54: [2, 37], 65: [2, 37], 68: [2, 37], 72: [2, 37], 75: [2, 37], 80: [2, 37], 81: [2, 37], 82: [2, 37], 83: [2, 37], 84: [2, 37], 85: [2, 37] }, { 23: [2, 38], 33: [2, 38], 54: [2, 38], 65: [2, 38], 68: [2, 38], 72: [2, 38], 75: [2, 38], 80: [2, 38], 81: [2, 38], 82: [2, 38], 83: [2, 38], 84: [2, 38], 85: [2, 38] }, { 23: [2, 39], 33: [2, 39], 54: [2, 39], 65: [2, 39], 68: [2, 39], 72: [2, 39], 75: [2, 39], 80: [2, 39], 81: [2, 39], 82: [2, 39], 83: [2, 39], 84: [2, 39], 85: [2, 39] }, { 23: [2, 43], 33: [2, 43], 54: [2, 43], 65: [2, 43], 68: [2, 43], 72: [2, 43], 75: [2, 43], 80: [2, 43], 81: [2, 43], 82: [2, 43], 83: [2, 43], 84: [2, 43], 85: [2, 43], 87: [1, 51] }, { 72: [1, 35], 86: 52 }, { 23: [2, 45], 33: [2, 45], 54: [2, 45], 65: [2, 45], 68: [2, 45], 72: [2, 45], 75: [2, 45], 80: [2, 45], 81: [2, 45], 82: [2, 45], 83: [2, 45], 84: [2, 45], 85: [2, 45], 87: [2, 45] }, { 52: 53, 54: [2, 82], 65: [2, 82], 72: [2, 82], 80: [2, 82], 81: [2, 82], 82: [2, 82], 83: [2, 82], 84: [2, 82], 85: [2, 82] }, { 25: 54, 38: 56, 39: [1, 58], 43: 57, 44: [1, 59], 45: 55, 47: [2, 54] }, { 28: 60, 43: 61, 44: [1, 59], 47: [2, 56] }, { 13: 63, 15: [1, 20], 18: [1, 62] }, { 15: [2, 48], 18: [2, 48] }, { 33: [2, 86], 57: 64, 65: [2, 86], 72: [2, 86], 80: [2, 86], 81: [2, 86], 82: [2, 86], 83: [2, 86], 84: [2, 86], 85: [2, 86] }, { 33: [2, 40], 65: [2, 40], 72: [2, 40], 80: [2, 40], 81: [2, 40], 82: [2, 40], 83: [2, 40], 84: [2, 40], 85: [2, 40] }, { 33: [2, 41], 65: [2, 41], 72: [2, 41], 80: [2, 41], 81: [2, 41], 82: [2, 41], 83: [2, 41], 84: [2, 41], 85: [2, 41] }, { 20: 65, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 26: 66, 47: [1, 67] }, { 30: 68, 33: [2, 58], 65: [2, 58], 72: [2, 58], 75: [2, 58], 80: [2, 58], 81: [2, 58], 82: [2, 58], 83: [2, 58], 84: [2, 58], 85: [2, 58] }, { 33: [2, 64], 35: 69, 65: [2, 64], 72: [2, 64], 75: [2, 64], 80: [2, 64], 81: [2, 64], 82: [2, 64], 83: [2, 64], 84: [2, 64], 85: [2, 64] }, { 21: 70, 23: [2, 50], 65: [2, 50], 72: [2, 50], 80: [2, 50], 81: [2, 50], 82: [2, 50], 83: [2, 50], 84: [2, 50], 85: [2, 50] }, { 33: [2, 90], 61: 71, 65: [2, 90], 72: [2, 90], 80: [2, 90], 81: [2, 90], 82: [2, 90], 83: [2, 90], 84: [2, 90], 85: [2, 90] }, { 20: 75, 33: [2, 80], 50: 72, 63: 73, 64: 76, 65: [1, 44], 69: 74, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 72: [1, 80] }, { 23: [2, 42], 33: [2, 42], 54: [2, 42], 65: [2, 42], 68: [2, 42], 72: [2, 42], 75: [2, 42], 80: [2, 42], 81: [2, 42], 82: [2, 42], 83: [2, 42], 84: [2, 42], 85: [2, 42], 87: [1, 51] }, { 20: 75, 53: 81, 54: [2, 84], 63: 82, 64: 76, 65: [1, 44], 69: 83, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 26: 84, 47: [1, 67] }, { 47: [2, 55] }, { 4: 85, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 39: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 47: [2, 20] }, { 20: 86, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 87, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 26: 88, 47: [1, 67] }, { 47: [2, 57] }, { 5: [2, 11], 14: [2, 11], 15: [2, 11], 19: [2, 11], 29: [2, 11], 34: [2, 11], 39: [2, 11], 44: [2, 11], 47: [2, 11], 48: [2, 11], 51: [2, 11], 55: [2, 11], 60: [2, 11] }, { 15: [2, 49], 18: [2, 49] }, { 20: 75, 33: [2, 88], 58: 89, 63: 90, 64: 76, 65: [1, 44], 69: 91, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 65: [2, 94], 66: 92, 68: [2, 94], 72: [2, 94], 80: [2, 94], 81: [2, 94], 82: [2, 94], 83: [2, 94], 84: [2, 94], 85: [2, 94] }, { 5: [2, 25], 14: [2, 25], 15: [2, 25], 19: [2, 25], 29: [2, 25], 34: [2, 25], 39: [2, 25], 44: [2, 25], 47: [2, 25], 48: [2, 25], 51: [2, 25], 55: [2, 25], 60: [2, 25] }, { 20: 93, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 31: 94, 33: [2, 60], 63: 95, 64: 76, 65: [1, 44], 69: 96, 70: 77, 71: 78, 72: [1, 79], 75: [2, 60], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 33: [2, 66], 36: 97, 63: 98, 64: 76, 65: [1, 44], 69: 99, 70: 77, 71: 78, 72: [1, 79], 75: [2, 66], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 22: 100, 23: [2, 52], 63: 101, 64: 76, 65: [1, 44], 69: 102, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 33: [2, 92], 62: 103, 63: 104, 64: 76, 65: [1, 44], 69: 105, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [1, 106] }, { 33: [2, 79], 65: [2, 79], 72: [2, 79], 80: [2, 79], 81: [2, 79], 82: [2, 79], 83: [2, 79], 84: [2, 79], 85: [2, 79] }, { 33: [2, 81] }, { 23: [2, 27], 33: [2, 27], 54: [2, 27], 65: [2, 27], 68: [2, 27], 72: [2, 27], 75: [2, 27], 80: [2, 27], 81: [2, 27], 82: [2, 27], 83: [2, 27], 84: [2, 27], 85: [2, 27] }, { 23: [2, 28], 33: [2, 28], 54: [2, 28], 65: [2, 28], 68: [2, 28], 72: [2, 28], 75: [2, 28], 80: [2, 28], 81: [2, 28], 82: [2, 28], 83: [2, 28], 84: [2, 28], 85: [2, 28] }, { 23: [2, 30], 33: [2, 30], 54: [2, 30], 68: [2, 30], 71: 107, 72: [1, 108], 75: [2, 30] }, { 23: [2, 98], 33: [2, 98], 54: [2, 98], 68: [2, 98], 72: [2, 98], 75: [2, 98] }, { 23: [2, 45], 33: [2, 45], 54: [2, 45], 65: [2, 45], 68: [2, 45], 72: [2, 45], 73: [1, 109], 75: [2, 45], 80: [2, 45], 81: [2, 45], 82: [2, 45], 83: [2, 45], 84: [2, 45], 85: [2, 45], 87: [2, 45] }, { 23: [2, 44], 33: [2, 44], 54: [2, 44], 65: [2, 44], 68: [2, 44], 72: [2, 44], 75: [2, 44], 80: [2, 44], 81: [2, 44], 82: [2, 44], 83: [2, 44], 84: [2, 44], 85: [2, 44], 87: [2, 44] }, { 54: [1, 110] }, { 54: [2, 83], 65: [2, 83], 72: [2, 83], 80: [2, 83], 81: [2, 83], 82: [2, 83], 83: [2, 83], 84: [2, 83], 85: [2, 83] }, { 54: [2, 85] }, { 5: [2, 13], 14: [2, 13], 15: [2, 13], 19: [2, 13], 29: [2, 13], 34: [2, 13], 39: [2, 13], 44: [2, 13], 47: [2, 13], 48: [2, 13], 51: [2, 13], 55: [2, 13], 60: [2, 13] }, { 38: 56, 39: [1, 58], 43: 57, 44: [1, 59], 45: 112, 46: 111, 47: [2, 76] }, { 33: [2, 70], 40: 113, 65: [2, 70], 72: [2, 70], 75: [2, 70], 80: [2, 70], 81: [2, 70], 82: [2, 70], 83: [2, 70], 84: [2, 70], 85: [2, 70] }, { 47: [2, 18] }, { 5: [2, 14], 14: [2, 14], 15: [2, 14], 19: [2, 14], 29: [2, 14], 34: [2, 14], 39: [2, 14], 44: [2, 14], 47: [2, 14], 48: [2, 14], 51: [2, 14], 55: [2, 14], 60: [2, 14] }, { 33: [1, 114] }, { 33: [2, 87], 65: [2, 87], 72: [2, 87], 80: [2, 87], 81: [2, 87], 82: [2, 87], 83: [2, 87], 84: [2, 87], 85: [2, 87] }, { 33: [2, 89] }, { 20: 75, 63: 116, 64: 76, 65: [1, 44], 67: 115, 68: [2, 96], 69: 117, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [1, 118] }, { 32: 119, 33: [2, 62], 74: 120, 75: [1, 121] }, { 33: [2, 59], 65: [2, 59], 72: [2, 59], 75: [2, 59], 80: [2, 59], 81: [2, 59], 82: [2, 59], 83: [2, 59], 84: [2, 59], 85: [2, 59] }, { 33: [2, 61], 75: [2, 61] }, { 33: [2, 68], 37: 122, 74: 123, 75: [1, 121] }, { 33: [2, 65], 65: [2, 65], 72: [2, 65], 75: [2, 65], 80: [2, 65], 81: [2, 65], 82: [2, 65], 83: [2, 65], 84: [2, 65], 85: [2, 65] }, { 33: [2, 67], 75: [2, 67] }, { 23: [1, 124] }, { 23: [2, 51], 65: [2, 51], 72: [2, 51], 80: [2, 51], 81: [2, 51], 82: [2, 51], 83: [2, 51], 84: [2, 51], 85: [2, 51] }, { 23: [2, 53] }, { 33: [1, 125] }, { 33: [2, 91], 65: [2, 91], 72: [2, 91], 80: [2, 91], 81: [2, 91], 82: [2, 91], 83: [2, 91], 84: [2, 91], 85: [2, 91] }, { 33: [2, 93] }, { 5: [2, 22], 14: [2, 22], 15: [2, 22], 19: [2, 22], 29: [2, 22], 34: [2, 22], 39: [2, 22], 44: [2, 22], 47: [2, 22], 48: [2, 22], 51: [2, 22], 55: [2, 22], 60: [2, 22] }, { 23: [2, 99], 33: [2, 99], 54: [2, 99], 68: [2, 99], 72: [2, 99], 75: [2, 99] }, { 73: [1, 109] }, { 20: 75, 63: 126, 64: 76, 65: [1, 44], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 5: [2, 23], 14: [2, 23], 15: [2, 23], 19: [2, 23], 29: [2, 23], 34: [2, 23], 39: [2, 23], 44: [2, 23], 47: [2, 23], 48: [2, 23], 51: [2, 23], 55: [2, 23], 60: [2, 23] }, { 47: [2, 19] }, { 47: [2, 77] }, { 20: 75, 33: [2, 72], 41: 127, 63: 128, 64: 76, 65: [1, 44], 69: 129, 70: 77, 71: 78, 72: [1, 79], 75: [2, 72], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 5: [2, 24], 14: [2, 24], 15: [2, 24], 19: [2, 24], 29: [2, 24], 34: [2, 24], 39: [2, 24], 44: [2, 24], 47: [2, 24], 48: [2, 24], 51: [2, 24], 55: [2, 24], 60: [2, 24] }, { 68: [1, 130] }, { 65: [2, 95], 68: [2, 95], 72: [2, 95], 80: [2, 95], 81: [2, 95], 82: [2, 95], 83: [2, 95], 84: [2, 95], 85: [2, 95] }, { 68: [2, 97] }, { 5: [2, 21], 14: [2, 21], 15: [2, 21], 19: [2, 21], 29: [2, 21], 34: [2, 21], 39: [2, 21], 44: [2, 21], 47: [2, 21], 48: [2, 21], 51: [2, 21], 55: [2, 21], 60: [2, 21] }, { 33: [1, 131] }, { 33: [2, 63] }, { 72: [1, 133], 76: 132 }, { 33: [1, 134] }, { 33: [2, 69] }, { 15: [2, 12] }, { 14: [2, 26], 15: [2, 26], 19: [2, 26], 29: [2, 26], 34: [2, 26], 47: [2, 26], 48: [2, 26], 51: [2, 26], 55: [2, 26], 60: [2, 26] }, { 23: [2, 31], 33: [2, 31], 54: [2, 31], 68: [2, 31], 72: [2, 31], 75: [2, 31] }, { 33: [2, 74], 42: 135, 74: 136, 75: [1, 121] }, { 33: [2, 71], 65: [2, 71], 72: [2, 71], 75: [2, 71], 80: [2, 71], 81: [2, 71], 82: [2, 71], 83: [2, 71], 84: [2, 71], 85: [2, 71] }, { 33: [2, 73], 75: [2, 73] }, { 23: [2, 29], 33: [2, 29], 54: [2, 29], 65: [2, 29], 68: [2, 29], 72: [2, 29], 75: [2, 29], 80: [2, 29], 81: [2, 29], 82: [2, 29], 83: [2, 29], 84: [2, 29], 85: [2, 29] }, { 14: [2, 15], 15: [2, 15], 19: [2, 15], 29: [2, 15], 34: [2, 15], 39: [2, 15], 44: [2, 15], 47: [2, 15], 48: [2, 15], 51: [2, 15], 55: [2, 15], 60: [2, 15] }, { 72: [1, 138], 77: [1, 137] }, { 72: [2, 100], 77: [2, 100] }, { 14: [2, 16], 15: [2, 16], 19: [2, 16], 29: [2, 16], 34: [2, 16], 44: [2, 16], 47: [2, 16], 48: [2, 16], 51: [2, 16], 55: [2, 16], 60: [2, 16] }, { 33: [1, 139] }, { 33: [2, 75] }, { 33: [2, 32] }, { 72: [2, 101], 77: [2, 101] }, { 14: [2, 17], 15: [2, 17], 19: [2, 17], 29: [2, 17], 34: [2, 17], 39: [2, 17], 44: [2, 17], 47: [2, 17], 48: [2, 17], 51: [2, 17], 55: [2, 17], 60: [2, 17] }],
	        defaultActions: { 4: [2, 1], 55: [2, 55], 57: [2, 20], 61: [2, 57], 74: [2, 81], 83: [2, 85], 87: [2, 18], 91: [2, 89], 102: [2, 53], 105: [2, 93], 111: [2, 19], 112: [2, 77], 117: [2, 97], 120: [2, 63], 123: [2, 69], 124: [2, 12], 136: [2, 75], 137: [2, 32] },
	        parseError: function parseError(str, hash) {
	            throw new Error(str);
	        },
	        parse: function parse(input) {
	            var self = this,
	                stack = [0],
	                vstack = [null],
	                lstack = [],
	                table = this.table,
	                yytext = "",
	                yylineno = 0,
	                yyleng = 0,
	                recovering = 0,
	                TERROR = 2,
	                EOF = 1;
	            this.lexer.setInput(input);
	            this.lexer.yy = this.yy;
	            this.yy.lexer = this.lexer;
	            this.yy.parser = this;
	            if (typeof this.lexer.yylloc == "undefined") this.lexer.yylloc = {};
	            var yyloc = this.lexer.yylloc;
	            lstack.push(yyloc);
	            var ranges = this.lexer.options && this.lexer.options.ranges;
	            if (typeof this.yy.parseError === "function") this.parseError = this.yy.parseError;
	            function popStack(n) {
	                stack.length = stack.length - 2 * n;
	                vstack.length = vstack.length - n;
	                lstack.length = lstack.length - n;
	            }
	            function lex() {
	                var token;
	                token = self.lexer.lex() || 1;
	                if (typeof token !== "number") {
	                    token = self.symbols_[token] || token;
	                }
	                return token;
	            }
	            var symbol,
	                preErrorSymbol,
	                state,
	                action,
	                a,
	                r,
	                yyval = {},
	                p,
	                len,
	                newState,
	                expected;
	            while (true) {
	                state = stack[stack.length - 1];
	                if (this.defaultActions[state]) {
	                    action = this.defaultActions[state];
	                } else {
	                    if (symbol === null || typeof symbol == "undefined") {
	                        symbol = lex();
	                    }
	                    action = table[state] && table[state][symbol];
	                }
	                if (typeof action === "undefined" || !action.length || !action[0]) {
	                    var errStr = "";
	                    if (!recovering) {
	                        expected = [];
	                        for (p in table[state]) if (this.terminals_[p] && p > 2) {
	                            expected.push("'" + this.terminals_[p] + "'");
	                        }
	                        if (this.lexer.showPosition) {
	                            errStr = "Parse error on line " + (yylineno + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + expected.join(", ") + ", got '" + (this.terminals_[symbol] || symbol) + "'";
	                        } else {
	                            errStr = "Parse error on line " + (yylineno + 1) + ": Unexpected " + (symbol == 1 ? "end of input" : "'" + (this.terminals_[symbol] || symbol) + "'");
	                        }
	                        this.parseError(errStr, { text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected });
	                    }
	                }
	                if (action[0] instanceof Array && action.length > 1) {
	                    throw new Error("Parse Error: multiple actions possible at state: " + state + ", token: " + symbol);
	                }
	                switch (action[0]) {
	                    case 1:
	                        stack.push(symbol);
	                        vstack.push(this.lexer.yytext);
	                        lstack.push(this.lexer.yylloc);
	                        stack.push(action[1]);
	                        symbol = null;
	                        if (!preErrorSymbol) {
	                            yyleng = this.lexer.yyleng;
	                            yytext = this.lexer.yytext;
	                            yylineno = this.lexer.yylineno;
	                            yyloc = this.lexer.yylloc;
	                            if (recovering > 0) recovering--;
	                        } else {
	                            symbol = preErrorSymbol;
	                            preErrorSymbol = null;
	                        }
	                        break;
	                    case 2:
	                        len = this.productions_[action[1]][1];
	                        yyval.$ = vstack[vstack.length - len];
	                        yyval._$ = { first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column };
	                        if (ranges) {
	                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];
	                        }
	                        r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);
	                        if (typeof r !== "undefined") {
	                            return r;
	                        }
	                        if (len) {
	                            stack = stack.slice(0, -1 * len * 2);
	                            vstack = vstack.slice(0, -1 * len);
	                            lstack = lstack.slice(0, -1 * len);
	                        }
	                        stack.push(this.productions_[action[1]][0]);
	                        vstack.push(yyval.$);
	                        lstack.push(yyval._$);
	                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
	                        stack.push(newState);
	                        break;
	                    case 3:
	                        return true;
	                }
	            }
	            return true;
	        }
	    };
	    /* Jison generated lexer */
	    var lexer = (function () {
	        var lexer = { EOF: 1,
	            parseError: function parseError(str, hash) {
	                if (this.yy.parser) {
	                    this.yy.parser.parseError(str, hash);
	                } else {
	                    throw new Error(str);
	                }
	            },
	            setInput: function setInput(input) {
	                this._input = input;
	                this._more = this._less = this.done = false;
	                this.yylineno = this.yyleng = 0;
	                this.yytext = this.matched = this.match = '';
	                this.conditionStack = ['INITIAL'];
	                this.yylloc = { first_line: 1, first_column: 0, last_line: 1, last_column: 0 };
	                if (this.options.ranges) this.yylloc.range = [0, 0];
	                this.offset = 0;
	                return this;
	            },
	            input: function input() {
	                var ch = this._input[0];
	                this.yytext += ch;
	                this.yyleng++;
	                this.offset++;
	                this.match += ch;
	                this.matched += ch;
	                var lines = ch.match(/(?:\r\n?|\n).*/g);
	                if (lines) {
	                    this.yylineno++;
	                    this.yylloc.last_line++;
	                } else {
	                    this.yylloc.last_column++;
	                }
	                if (this.options.ranges) this.yylloc.range[1]++;

	                this._input = this._input.slice(1);
	                return ch;
	            },
	            unput: function unput(ch) {
	                var len = ch.length;
	                var lines = ch.split(/(?:\r\n?|\n)/g);

	                this._input = ch + this._input;
	                this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);
	                //this.yyleng -= len;
	                this.offset -= len;
	                var oldLines = this.match.split(/(?:\r\n?|\n)/g);
	                this.match = this.match.substr(0, this.match.length - 1);
	                this.matched = this.matched.substr(0, this.matched.length - 1);

	                if (lines.length - 1) this.yylineno -= lines.length - 1;
	                var r = this.yylloc.range;

	                this.yylloc = { first_line: this.yylloc.first_line,
	                    last_line: this.yylineno + 1,
	                    first_column: this.yylloc.first_column,
	                    last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len
	                };

	                if (this.options.ranges) {
	                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];
	                }
	                return this;
	            },
	            more: function more() {
	                this._more = true;
	                return this;
	            },
	            less: function less(n) {
	                this.unput(this.match.slice(n));
	            },
	            pastInput: function pastInput() {
	                var past = this.matched.substr(0, this.matched.length - this.match.length);
	                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\n/g, "");
	            },
	            upcomingInput: function upcomingInput() {
	                var next = this.match;
	                if (next.length < 20) {
	                    next += this._input.substr(0, 20 - next.length);
	                }
	                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
	            },
	            showPosition: function showPosition() {
	                var pre = this.pastInput();
	                var c = new Array(pre.length + 1).join("-");
	                return pre + this.upcomingInput() + "\n" + c + "^";
	            },
	            next: function next() {
	                if (this.done) {
	                    return this.EOF;
	                }
	                if (!this._input) this.done = true;

	                var token, match, tempMatch, index, col, lines;
	                if (!this._more) {
	                    this.yytext = '';
	                    this.match = '';
	                }
	                var rules = this._currentRules();
	                for (var i = 0; i < rules.length; i++) {
	                    tempMatch = this._input.match(this.rules[rules[i]]);
	                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
	                        match = tempMatch;
	                        index = i;
	                        if (!this.options.flex) break;
	                    }
	                }
	                if (match) {
	                    lines = match[0].match(/(?:\r\n?|\n).*/g);
	                    if (lines) this.yylineno += lines.length;
	                    this.yylloc = { first_line: this.yylloc.last_line,
	                        last_line: this.yylineno + 1,
	                        first_column: this.yylloc.last_column,
	                        last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length : this.yylloc.last_column + match[0].length };
	                    this.yytext += match[0];
	                    this.match += match[0];
	                    this.matches = match;
	                    this.yyleng = this.yytext.length;
	                    if (this.options.ranges) {
	                        this.yylloc.range = [this.offset, this.offset += this.yyleng];
	                    }
	                    this._more = false;
	                    this._input = this._input.slice(match[0].length);
	                    this.matched += match[0];
	                    token = this.performAction.call(this, this.yy, this, rules[index], this.conditionStack[this.conditionStack.length - 1]);
	                    if (this.done && this._input) this.done = false;
	                    if (token) return token;else return;
	                }
	                if (this._input === "") {
	                    return this.EOF;
	                } else {
	                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), { text: "", token: null, line: this.yylineno });
	                }
	            },
	            lex: function lex() {
	                var r = this.next();
	                if (typeof r !== 'undefined') {
	                    return r;
	                } else {
	                    return this.lex();
	                }
	            },
	            begin: function begin(condition) {
	                this.conditionStack.push(condition);
	            },
	            popState: function popState() {
	                return this.conditionStack.pop();
	            },
	            _currentRules: function _currentRules() {
	                return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
	            },
	            topState: function topState() {
	                return this.conditionStack[this.conditionStack.length - 2];
	            },
	            pushState: function begin(condition) {
	                this.begin(condition);
	            } };
	        lexer.options = {};
	        lexer.performAction = function anonymous(yy, yy_, $avoiding_name_collisions, YY_START
	        /**/) {

	            function strip(start, end) {
	                return yy_.yytext = yy_.yytext.substr(start, yy_.yyleng - end);
	            }

	            var YYSTATE = YY_START;
	            switch ($avoiding_name_collisions) {
	                case 0:
	                    if (yy_.yytext.slice(-2) === "\\\\") {
	                        strip(0, 1);
	                        this.begin("mu");
	                    } else if (yy_.yytext.slice(-1) === "\\") {
	                        strip(0, 1);
	                        this.begin("emu");
	                    } else {
	                        this.begin("mu");
	                    }
	                    if (yy_.yytext) return 15;

	                    break;
	                case 1:
	                    return 15;
	                    break;
	                case 2:
	                    this.popState();
	                    return 15;

	                    break;
	                case 3:
	                    this.begin('raw');return 15;
	                    break;
	                case 4:
	                    this.popState();
	                    // Should be using `this.topState()` below, but it currently
	                    // returns the second top instead of the first top. Opened an
	                    // issue about it at https://github.com/zaach/jison/issues/291
	                    if (this.conditionStack[this.conditionStack.length - 1] === 'raw') {
	                        return 15;
	                    } else {
	                        yy_.yytext = yy_.yytext.substr(5, yy_.yyleng - 9);
	                        return 'END_RAW_BLOCK';
	                    }

	                    break;
	                case 5:
	                    return 15;
	                    break;
	                case 6:
	                    this.popState();
	                    return 14;

	                    break;
	                case 7:
	                    return 65;
	                    break;
	                case 8:
	                    return 68;
	                    break;
	                case 9:
	                    return 19;
	                    break;
	                case 10:
	                    this.popState();
	                    this.begin('raw');
	                    return 23;

	                    break;
	                case 11:
	                    return 55;
	                    break;
	                case 12:
	                    return 60;
	                    break;
	                case 13:
	                    return 29;
	                    break;
	                case 14:
	                    return 47;
	                    break;
	                case 15:
	                    this.popState();return 44;
	                    break;
	                case 16:
	                    this.popState();return 44;
	                    break;
	                case 17:
	                    return 34;
	                    break;
	                case 18:
	                    return 39;
	                    break;
	                case 19:
	                    return 51;
	                    break;
	                case 20:
	                    return 48;
	                    break;
	                case 21:
	                    this.unput(yy_.yytext);
	                    this.popState();
	                    this.begin('com');

	                    break;
	                case 22:
	                    this.popState();
	                    return 14;

	                    break;
	                case 23:
	                    return 48;
	                    break;
	                case 24:
	                    return 73;
	                    break;
	                case 25:
	                    return 72;
	                    break;
	                case 26:
	                    return 72;
	                    break;
	                case 27:
	                    return 87;
	                    break;
	                case 28:
	                    // ignore whitespace
	                    break;
	                case 29:
	                    this.popState();return 54;
	                    break;
	                case 30:
	                    this.popState();return 33;
	                    break;
	                case 31:
	                    yy_.yytext = strip(1, 2).replace(/\\"/g, '"');return 80;
	                    break;
	                case 32:
	                    yy_.yytext = strip(1, 2).replace(/\\'/g, "'");return 80;
	                    break;
	                case 33:
	                    return 85;
	                    break;
	                case 34:
	                    return 82;
	                    break;
	                case 35:
	                    return 82;
	                    break;
	                case 36:
	                    return 83;
	                    break;
	                case 37:
	                    return 84;
	                    break;
	                case 38:
	                    return 81;
	                    break;
	                case 39:
	                    return 75;
	                    break;
	                case 40:
	                    return 77;
	                    break;
	                case 41:
	                    return 72;
	                    break;
	                case 42:
	                    yy_.yytext = yy_.yytext.replace(/\\([\\\]])/g, '$1');return 72;
	                    break;
	                case 43:
	                    return 'INVALID';
	                    break;
	                case 44:
	                    return 5;
	                    break;
	            }
	        };
	        lexer.rules = [/^(?:[^\x00]*?(?=(\{\{)))/, /^(?:[^\x00]+)/, /^(?:[^\x00]{2,}?(?=(\{\{|\\\{\{|\\\\\{\{|$)))/, /^(?:\{\{\{\{(?=[^\/]))/, /^(?:\{\{\{\{\/[^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=[=}\s\/.])\}\}\}\})/, /^(?:[^\x00]*?(?=(\{\{\{\{)))/, /^(?:[\s\S]*?--(~)?\}\})/, /^(?:\()/, /^(?:\))/, /^(?:\{\{\{\{)/, /^(?:\}\}\}\})/, /^(?:\{\{(~)?>)/, /^(?:\{\{(~)?#>)/, /^(?:\{\{(~)?#\*?)/, /^(?:\{\{(~)?\/)/, /^(?:\{\{(~)?\^\s*(~)?\}\})/, /^(?:\{\{(~)?\s*else\s*(~)?\}\})/, /^(?:\{\{(~)?\^)/, /^(?:\{\{(~)?\s*else\b)/, /^(?:\{\{(~)?\{)/, /^(?:\{\{(~)?&)/, /^(?:\{\{(~)?!--)/, /^(?:\{\{(~)?![\s\S]*?\}\})/, /^(?:\{\{(~)?\*?)/, /^(?:=)/, /^(?:\.\.)/, /^(?:\.(?=([=~}\s\/.)|])))/, /^(?:[\/.])/, /^(?:\s+)/, /^(?:\}(~)?\}\})/, /^(?:(~)?\}\})/, /^(?:"(\\["]|[^"])*")/, /^(?:'(\\[']|[^'])*')/, /^(?:@)/, /^(?:true(?=([~}\s)])))/, /^(?:false(?=([~}\s)])))/, /^(?:undefined(?=([~}\s)])))/, /^(?:null(?=([~}\s)])))/, /^(?:-?[0-9]+(?:\.[0-9]+)?(?=([~}\s)])))/, /^(?:as\s+\|)/, /^(?:\|)/, /^(?:([^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=([=~}\s\/.)|]))))/, /^(?:\[(\\\]|[^\]])*\])/, /^(?:.)/, /^(?:$)/];
	        lexer.conditions = { "mu": { "rules": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], "inclusive": false }, "emu": { "rules": [2], "inclusive": false }, "com": { "rules": [6], "inclusive": false }, "raw": { "rules": [3, 4, 5], "inclusive": false }, "INITIAL": { "rules": [0, 1, 44], "inclusive": true } };
	        return lexer;
	    })();
	    parser.lexer = lexer;
	    function Parser() {
	        this.yy = {};
	    }Parser.prototype = parser;parser.Parser = Parser;
	    return new Parser();
	})();exports["default"] = handlebars;
	module.exports = exports["default"];

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;

	var _visitor = __webpack_require__(39);

	var _visitor2 = _interopRequireDefault(_visitor);

	function WhitespaceControl() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	  this.options = options;
	}
	WhitespaceControl.prototype = new _visitor2['default']();

	WhitespaceControl.prototype.Program = function (program) {
	  var doStandalone = !this.options.ignoreStandalone;

	  var isRoot = !this.isRootSeen;
	  this.isRootSeen = true;

	  var body = program.body;
	  for (var i = 0, l = body.length; i < l; i++) {
	    var current = body[i],
	        strip = this.accept(current);

	    if (!strip) {
	      continue;
	    }

	    var _isPrevWhitespace = isPrevWhitespace(body, i, isRoot),
	        _isNextWhitespace = isNextWhitespace(body, i, isRoot),
	        openStandalone = strip.openStandalone && _isPrevWhitespace,
	        closeStandalone = strip.closeStandalone && _isNextWhitespace,
	        inlineStandalone = strip.inlineStandalone && _isPrevWhitespace && _isNextWhitespace;

	    if (strip.close) {
	      omitRight(body, i, true);
	    }
	    if (strip.open) {
	      omitLeft(body, i, true);
	    }

	    if (doStandalone && inlineStandalone) {
	      omitRight(body, i);

	      if (omitLeft(body, i)) {
	        // If we are on a standalone node, save the indent info for partials
	        if (current.type === 'PartialStatement') {
	          // Pull out the whitespace from the final line
	          current.indent = /([ \t]+$)/.exec(body[i - 1].original)[1];
	        }
	      }
	    }
	    if (doStandalone && openStandalone) {
	      omitRight((current.program || current.inverse).body);

	      // Strip out the previous content node if it's whitespace only
	      omitLeft(body, i);
	    }
	    if (doStandalone && closeStandalone) {
	      // Always strip the next node
	      omitRight(body, i);

	      omitLeft((current.inverse || current.program).body);
	    }
	  }

	  return program;
	};

	WhitespaceControl.prototype.BlockStatement = WhitespaceControl.prototype.DecoratorBlock = WhitespaceControl.prototype.PartialBlockStatement = function (block) {
	  this.accept(block.program);
	  this.accept(block.inverse);

	  // Find the inverse program that is involed with whitespace stripping.
	  var program = block.program || block.inverse,
	      inverse = block.program && block.inverse,
	      firstInverse = inverse,
	      lastInverse = inverse;

	  if (inverse && inverse.chained) {
	    firstInverse = inverse.body[0].program;

	    // Walk the inverse chain to find the last inverse that is actually in the chain.
	    while (lastInverse.chained) {
	      lastInverse = lastInverse.body[lastInverse.body.length - 1].program;
	    }
	  }

	  var strip = {
	    open: block.openStrip.open,
	    close: block.closeStrip.close,

	    // Determine the standalone candiacy. Basically flag our content as being possibly standalone
	    // so our parent can determine if we actually are standalone
	    openStandalone: isNextWhitespace(program.body),
	    closeStandalone: isPrevWhitespace((firstInverse || program).body)
	  };

	  if (block.openStrip.close) {
	    omitRight(program.body, null, true);
	  }

	  if (inverse) {
	    var inverseStrip = block.inverseStrip;

	    if (inverseStrip.open) {
	      omitLeft(program.body, null, true);
	    }

	    if (inverseStrip.close) {
	      omitRight(firstInverse.body, null, true);
	    }
	    if (block.closeStrip.open) {
	      omitLeft(lastInverse.body, null, true);
	    }

	    // Find standalone else statments
	    if (!this.options.ignoreStandalone && isPrevWhitespace(program.body) && isNextWhitespace(firstInverse.body)) {
	      omitLeft(program.body);
	      omitRight(firstInverse.body);
	    }
	  } else if (block.closeStrip.open) {
	    omitLeft(program.body, null, true);
	  }

	  return strip;
	};

	WhitespaceControl.prototype.Decorator = WhitespaceControl.prototype.MustacheStatement = function (mustache) {
	  return mustache.strip;
	};

	WhitespaceControl.prototype.PartialStatement = WhitespaceControl.prototype.CommentStatement = function (node) {
	  /* istanbul ignore next */
	  var strip = node.strip || {};
	  return {
	    inlineStandalone: true,
	    open: strip.open,
	    close: strip.close
	  };
	};

	function isPrevWhitespace(body, i, isRoot) {
	  if (i === undefined) {
	    i = body.length;
	  }

	  // Nodes that end with newlines are considered whitespace (but are special
	  // cased for strip operations)
	  var prev = body[i - 1],
	      sibling = body[i - 2];
	  if (!prev) {
	    return isRoot;
	  }

	  if (prev.type === 'ContentStatement') {
	    return (sibling || !isRoot ? /\r?\n\s*?$/ : /(^|\r?\n)\s*?$/).test(prev.original);
	  }
	}
	function isNextWhitespace(body, i, isRoot) {
	  if (i === undefined) {
	    i = -1;
	  }

	  var next = body[i + 1],
	      sibling = body[i + 2];
	  if (!next) {
	    return isRoot;
	  }

	  if (next.type === 'ContentStatement') {
	    return (sibling || !isRoot ? /^\s*?\r?\n/ : /^\s*?(\r?\n|$)/).test(next.original);
	  }
	}

	// Marks the node to the right of the position as omitted.
	// I.e. {{foo}}' ' will mark the ' ' node as omitted.
	//
	// If i is undefined, then the first child will be marked as such.
	//
	// If mulitple is truthy then all whitespace will be stripped out until non-whitespace
	// content is met.
	function omitRight(body, i, multiple) {
	  var current = body[i == null ? 0 : i + 1];
	  if (!current || current.type !== 'ContentStatement' || !multiple && current.rightStripped) {
	    return;
	  }

	  var original = current.value;
	  current.value = current.value.replace(multiple ? /^\s+/ : /^[ \t]*\r?\n?/, '');
	  current.rightStripped = current.value !== original;
	}

	// Marks the node to the left of the position as omitted.
	// I.e. ' '{{foo}} will mark the ' ' node as omitted.
	//
	// If i is undefined then the last child will be marked as such.
	//
	// If mulitple is truthy then all whitespace will be stripped out until non-whitespace
	// content is met.
	function omitLeft(body, i, multiple) {
	  var current = body[i == null ? body.length - 1 : i - 1];
	  if (!current || current.type !== 'ContentStatement' || !multiple && current.leftStripped) {
	    return;
	  }

	  // We omit the last node if it's whitespace only and not preceeded by a non-content node.
	  var original = current.value;
	  current.value = current.value.replace(multiple ? /\s+$/ : /[ \t]+$/, '');
	  current.leftStripped = current.value !== original;
	  return current.leftStripped;
	}

	exports['default'] = WhitespaceControl;
	module.exports = exports['default'];

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;

	var _exception = __webpack_require__(6);

	var _exception2 = _interopRequireDefault(_exception);

	function Visitor() {
	  this.parents = [];
	}

	Visitor.prototype = {
	  constructor: Visitor,
	  mutating: false,

	  // Visits a given value. If mutating, will replace the value if necessary.
	  acceptKey: function acceptKey(node, name) {
	    var value = this.accept(node[name]);
	    if (this.mutating) {
	      // Hacky sanity check: This may have a few false positives for type for the helper
	      // methods but will generally do the right thing without a lot of overhead.
	      if (value && !Visitor.prototype[value.type]) {
	        throw new _exception2['default']('Unexpected node type "' + value.type + '" found when accepting ' + name + ' on ' + node.type);
	      }
	      node[name] = value;
	    }
	  },

	  // Performs an accept operation with added sanity check to ensure
	  // required keys are not removed.
	  acceptRequired: function acceptRequired(node, name) {
	    this.acceptKey(node, name);

	    if (!node[name]) {
	      throw new _exception2['default'](node.type + ' requires ' + name);
	    }
	  },

	  // Traverses a given array. If mutating, empty respnses will be removed
	  // for child elements.
	  acceptArray: function acceptArray(array) {
	    for (var i = 0, l = array.length; i < l; i++) {
	      this.acceptKey(array, i);

	      if (!array[i]) {
	        array.splice(i, 1);
	        i--;
	        l--;
	      }
	    }
	  },

	  accept: function accept(object) {
	    if (!object) {
	      return;
	    }

	    /* istanbul ignore next: Sanity code */
	    if (!this[object.type]) {
	      throw new _exception2['default']('Unknown type: ' + object.type, object);
	    }

	    if (this.current) {
	      this.parents.unshift(this.current);
	    }
	    this.current = object;

	    var ret = this[object.type](object);

	    this.current = this.parents.shift();

	    if (!this.mutating || ret) {
	      return ret;
	    } else if (ret !== false) {
	      return object;
	    }
	  },

	  Program: function Program(program) {
	    this.acceptArray(program.body);
	  },

	  MustacheStatement: visitSubExpression,
	  Decorator: visitSubExpression,

	  BlockStatement: visitBlock,
	  DecoratorBlock: visitBlock,

	  PartialStatement: visitPartial,
	  PartialBlockStatement: function PartialBlockStatement(partial) {
	    visitPartial.call(this, partial);

	    this.acceptKey(partial, 'program');
	  },

	  ContentStatement: function ContentStatement() /* content */{},
	  CommentStatement: function CommentStatement() /* comment */{},

	  SubExpression: visitSubExpression,

	  PathExpression: function PathExpression() /* path */{},

	  StringLiteral: function StringLiteral() /* string */{},
	  NumberLiteral: function NumberLiteral() /* number */{},
	  BooleanLiteral: function BooleanLiteral() /* bool */{},
	  UndefinedLiteral: function UndefinedLiteral() /* literal */{},
	  NullLiteral: function NullLiteral() /* literal */{},

	  Hash: function Hash(hash) {
	    this.acceptArray(hash.pairs);
	  },
	  HashPair: function HashPair(pair) {
	    this.acceptRequired(pair, 'value');
	  }
	};

	function visitSubExpression(mustache) {
	  this.acceptRequired(mustache, 'path');
	  this.acceptArray(mustache.params);
	  this.acceptKey(mustache, 'hash');
	}
	function visitBlock(block) {
	  visitSubExpression.call(this, block);

	  this.acceptKey(block, 'program');
	  this.acceptKey(block, 'inverse');
	}
	function visitPartial(partial) {
	  this.acceptRequired(partial, 'name');
	  this.acceptArray(partial.params);
	  this.acceptKey(partial, 'hash');
	}

	exports['default'] = Visitor;
	module.exports = exports['default'];

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;
	exports.SourceLocation = SourceLocation;
	exports.id = id;
	exports.stripFlags = stripFlags;
	exports.stripComment = stripComment;
	exports.preparePath = preparePath;
	exports.prepareMustache = prepareMustache;
	exports.prepareRawBlock = prepareRawBlock;
	exports.prepareBlock = prepareBlock;
	exports.prepareProgram = prepareProgram;
	exports.preparePartialBlock = preparePartialBlock;

	var _exception = __webpack_require__(6);

	var _exception2 = _interopRequireDefault(_exception);

	function validateClose(open, close) {
	  close = close.path ? close.path.original : close;

	  if (open.path.original !== close) {
	    var errorNode = { loc: open.path.loc };

	    throw new _exception2['default'](open.path.original + " doesn't match " + close, errorNode);
	  }
	}

	function SourceLocation(source, locInfo) {
	  this.source = source;
	  this.start = {
	    line: locInfo.first_line,
	    column: locInfo.first_column
	  };
	  this.end = {
	    line: locInfo.last_line,
	    column: locInfo.last_column
	  };
	}

	function id(token) {
	  if (/^\[.*\]$/.test(token)) {
	    return token.substr(1, token.length - 2);
	  } else {
	    return token;
	  }
	}

	function stripFlags(open, close) {
	  return {
	    open: open.charAt(2) === '~',
	    close: close.charAt(close.length - 3) === '~'
	  };
	}

	function stripComment(comment) {
	  return comment.replace(/^\{\{~?\!-?-?/, '').replace(/-?-?~?\}\}$/, '');
	}

	function preparePath(data, parts, loc) {
	  loc = this.locInfo(loc);

	  var original = data ? '@' : '',
	      dig = [],
	      depth = 0,
	      depthString = '';

	  for (var i = 0, l = parts.length; i < l; i++) {
	    var part = parts[i].part,

	    // If we have [] syntax then we do not treat path references as operators,
	    // i.e. foo.[this] resolves to approximately context.foo['this']
	    isLiteral = parts[i].original !== part;
	    original += (parts[i].separator || '') + part;

	    if (!isLiteral && (part === '..' || part === '.' || part === 'this')) {
	      if (dig.length > 0) {
	        throw new _exception2['default']('Invalid path: ' + original, { loc: loc });
	      } else if (part === '..') {
	        depth++;
	        depthString += '../';
	      }
	    } else {
	      dig.push(part);
	    }
	  }

	  return {
	    type: 'PathExpression',
	    data: data,
	    depth: depth,
	    parts: dig,
	    original: original,
	    loc: loc
	  };
	}

	function prepareMustache(path, params, hash, open, strip, locInfo) {
	  // Must use charAt to support IE pre-10
	  var escapeFlag = open.charAt(3) || open.charAt(2),
	      escaped = escapeFlag !== '{' && escapeFlag !== '&';

	  var decorator = /\*/.test(open);
	  return {
	    type: decorator ? 'Decorator' : 'MustacheStatement',
	    path: path,
	    params: params,
	    hash: hash,
	    escaped: escaped,
	    strip: strip,
	    loc: this.locInfo(locInfo)
	  };
	}

	function prepareRawBlock(openRawBlock, contents, close, locInfo) {
	  validateClose(openRawBlock, close);

	  locInfo = this.locInfo(locInfo);
	  var program = {
	    type: 'Program',
	    body: contents,
	    strip: {},
	    loc: locInfo
	  };

	  return {
	    type: 'BlockStatement',
	    path: openRawBlock.path,
	    params: openRawBlock.params,
	    hash: openRawBlock.hash,
	    program: program,
	    openStrip: {},
	    inverseStrip: {},
	    closeStrip: {},
	    loc: locInfo
	  };
	}

	function prepareBlock(openBlock, program, inverseAndProgram, close, inverted, locInfo) {
	  if (close && close.path) {
	    validateClose(openBlock, close);
	  }

	  var decorator = /\*/.test(openBlock.open);

	  program.blockParams = openBlock.blockParams;

	  var inverse = undefined,
	      inverseStrip = undefined;

	  if (inverseAndProgram) {
	    if (decorator) {
	      throw new _exception2['default']('Unexpected inverse block on decorator', inverseAndProgram);
	    }

	    if (inverseAndProgram.chain) {
	      inverseAndProgram.program.body[0].closeStrip = close.strip;
	    }

	    inverseStrip = inverseAndProgram.strip;
	    inverse = inverseAndProgram.program;
	  }

	  if (inverted) {
	    inverted = inverse;
	    inverse = program;
	    program = inverted;
	  }

	  return {
	    type: decorator ? 'DecoratorBlock' : 'BlockStatement',
	    path: openBlock.path,
	    params: openBlock.params,
	    hash: openBlock.hash,
	    program: program,
	    inverse: inverse,
	    openStrip: openBlock.strip,
	    inverseStrip: inverseStrip,
	    closeStrip: close && close.strip,
	    loc: this.locInfo(locInfo)
	  };
	}

	function prepareProgram(statements, loc) {
	  if (!loc && statements.length) {
	    var firstLoc = statements[0].loc,
	        lastLoc = statements[statements.length - 1].loc;

	    /* istanbul ignore else */
	    if (firstLoc && lastLoc) {
	      loc = {
	        source: firstLoc.source,
	        start: {
	          line: firstLoc.start.line,
	          column: firstLoc.start.column
	        },
	        end: {
	          line: lastLoc.end.line,
	          column: lastLoc.end.column
	        }
	      };
	    }
	  }

	  return {
	    type: 'Program',
	    body: statements,
	    strip: {},
	    loc: loc
	  };
	}

	function preparePartialBlock(open, program, close, locInfo) {
	  validateClose(open, close);

	  return {
	    type: 'PartialBlockStatement',
	    name: open.path,
	    params: open.params,
	    hash: open.hash,
	    program: program,
	    openStrip: open.strip,
	    closeStrip: close && close.strip,
	    loc: this.locInfo(locInfo)
	  };
	}

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

	/* eslint-disable new-cap */

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;
	exports.Compiler = Compiler;
	exports.precompile = precompile;
	exports.compile = compile;

	var _exception = __webpack_require__(6);

	var _exception2 = _interopRequireDefault(_exception);

	var _utils = __webpack_require__(5);

	var _ast = __webpack_require__(35);

	var _ast2 = _interopRequireDefault(_ast);

	var slice = [].slice;

	function Compiler() {}

	// the foundHelper register will disambiguate helper lookup from finding a
	// function in a context. This is necessary for mustache compatibility, which
	// requires that context functions in blocks are evaluated by blockHelperMissing,
	// and then proceed as if the resulting value was provided to blockHelperMissing.

	Compiler.prototype = {
	  compiler: Compiler,

	  equals: function equals(other) {
	    var len = this.opcodes.length;
	    if (other.opcodes.length !== len) {
	      return false;
	    }

	    for (var i = 0; i < len; i++) {
	      var opcode = this.opcodes[i],
	          otherOpcode = other.opcodes[i];
	      if (opcode.opcode !== otherOpcode.opcode || !argEquals(opcode.args, otherOpcode.args)) {
	        return false;
	      }
	    }

	    // We know that length is the same between the two arrays because they are directly tied
	    // to the opcode behavior above.
	    len = this.children.length;
	    for (var i = 0; i < len; i++) {
	      if (!this.children[i].equals(other.children[i])) {
	        return false;
	      }
	    }

	    return true;
	  },

	  guid: 0,

	  compile: function compile(program, options) {
	    this.sourceNode = [];
	    this.opcodes = [];
	    this.children = [];
	    this.options = options;
	    this.stringParams = options.stringParams;
	    this.trackIds = options.trackIds;

	    options.blockParams = options.blockParams || [];

	    // These changes will propagate to the other compiler components
	    var knownHelpers = options.knownHelpers;
	    options.knownHelpers = {
	      'helperMissing': true,
	      'blockHelperMissing': true,
	      'each': true,
	      'if': true,
	      'unless': true,
	      'with': true,
	      'log': true,
	      'lookup': true
	    };
	    if (knownHelpers) {
	      for (var _name in knownHelpers) {
	        /* istanbul ignore else */
	        if (_name in knownHelpers) {
	          this.options.knownHelpers[_name] = knownHelpers[_name];
	        }
	      }
	    }

	    return this.accept(program);
	  },

	  compileProgram: function compileProgram(program) {
	    var childCompiler = new this.compiler(),
	        // eslint-disable-line new-cap
	    result = childCompiler.compile(program, this.options),
	        guid = this.guid++;

	    this.usePartial = this.usePartial || result.usePartial;

	    this.children[guid] = result;
	    this.useDepths = this.useDepths || result.useDepths;

	    return guid;
	  },

	  accept: function accept(node) {
	    /* istanbul ignore next: Sanity code */
	    if (!this[node.type]) {
	      throw new _exception2['default']('Unknown type: ' + node.type, node);
	    }

	    this.sourceNode.unshift(node);
	    var ret = this[node.type](node);
	    this.sourceNode.shift();
	    return ret;
	  },

	  Program: function Program(program) {
	    this.options.blockParams.unshift(program.blockParams);

	    var body = program.body,
	        bodyLength = body.length;
	    for (var i = 0; i < bodyLength; i++) {
	      this.accept(body[i]);
	    }

	    this.options.blockParams.shift();

	    this.isSimple = bodyLength === 1;
	    this.blockParams = program.blockParams ? program.blockParams.length : 0;

	    return this;
	  },

	  BlockStatement: function BlockStatement(block) {
	    transformLiteralToPath(block);

	    var program = block.program,
	        inverse = block.inverse;

	    program = program && this.compileProgram(program);
	    inverse = inverse && this.compileProgram(inverse);

	    var type = this.classifySexpr(block);

	    if (type === 'helper') {
	      this.helperSexpr(block, program, inverse);
	    } else if (type === 'simple') {
	      this.simpleSexpr(block);

	      // now that the simple mustache is resolved, we need to
	      // evaluate it by executing `blockHelperMissing`
	      this.opcode('pushProgram', program);
	      this.opcode('pushProgram', inverse);
	      this.opcode('emptyHash');
	      this.opcode('blockValue', block.path.original);
	    } else {
	      this.ambiguousSexpr(block, program, inverse);

	      // now that the simple mustache is resolved, we need to
	      // evaluate it by executing `blockHelperMissing`
	      this.opcode('pushProgram', program);
	      this.opcode('pushProgram', inverse);
	      this.opcode('emptyHash');
	      this.opcode('ambiguousBlockValue');
	    }

	    this.opcode('append');
	  },

	  DecoratorBlock: function DecoratorBlock(decorator) {
	    var program = decorator.program && this.compileProgram(decorator.program);
	    var params = this.setupFullMustacheParams(decorator, program, undefined),
	        path = decorator.path;

	    this.useDecorators = true;
	    this.opcode('registerDecorator', params.length, path.original);
	  },

	  PartialStatement: function PartialStatement(partial) {
	    this.usePartial = true;

	    var program = partial.program;
	    if (program) {
	      program = this.compileProgram(partial.program);
	    }

	    var params = partial.params;
	    if (params.length > 1) {
	      throw new _exception2['default']('Unsupported number of partial arguments: ' + params.length, partial);
	    } else if (!params.length) {
	      if (this.options.explicitPartialContext) {
	        this.opcode('pushLiteral', 'undefined');
	      } else {
	        params.push({ type: 'PathExpression', parts: [], depth: 0 });
	      }
	    }

	    var partialName = partial.name.original,
	        isDynamic = partial.name.type === 'SubExpression';
	    if (isDynamic) {
	      this.accept(partial.name);
	    }

	    this.setupFullMustacheParams(partial, program, undefined, true);

	    var indent = partial.indent || '';
	    if (this.options.preventIndent && indent) {
	      this.opcode('appendContent', indent);
	      indent = '';
	    }

	    this.opcode('invokePartial', isDynamic, partialName, indent);
	    this.opcode('append');
	  },
	  PartialBlockStatement: function PartialBlockStatement(partialBlock) {
	    this.PartialStatement(partialBlock);
	  },

	  MustacheStatement: function MustacheStatement(mustache) {
	    this.SubExpression(mustache);

	    if (mustache.escaped && !this.options.noEscape) {
	      this.opcode('appendEscaped');
	    } else {
	      this.opcode('append');
	    }
	  },
	  Decorator: function Decorator(decorator) {
	    this.DecoratorBlock(decorator);
	  },

	  ContentStatement: function ContentStatement(content) {
	    if (content.value) {
	      this.opcode('appendContent', content.value);
	    }
	  },

	  CommentStatement: function CommentStatement() {},

	  SubExpression: function SubExpression(sexpr) {
	    transformLiteralToPath(sexpr);
	    var type = this.classifySexpr(sexpr);

	    if (type === 'simple') {
	      this.simpleSexpr(sexpr);
	    } else if (type === 'helper') {
	      this.helperSexpr(sexpr);
	    } else {
	      this.ambiguousSexpr(sexpr);
	    }
	  },
	  ambiguousSexpr: function ambiguousSexpr(sexpr, program, inverse) {
	    var path = sexpr.path,
	        name = path.parts[0],
	        isBlock = program != null || inverse != null;

	    this.opcode('getContext', path.depth);

	    this.opcode('pushProgram', program);
	    this.opcode('pushProgram', inverse);

	    path.strict = true;
	    this.accept(path);

	    this.opcode('invokeAmbiguous', name, isBlock);
	  },

	  simpleSexpr: function simpleSexpr(sexpr) {
	    var path = sexpr.path;
	    path.strict = true;
	    this.accept(path);
	    this.opcode('resolvePossibleLambda');
	  },

	  helperSexpr: function helperSexpr(sexpr, program, inverse) {
	    var params = this.setupFullMustacheParams(sexpr, program, inverse),
	        path = sexpr.path,
	        name = path.parts[0];

	    if (this.options.knownHelpers[name]) {
	      this.opcode('invokeKnownHelper', params.length, name);
	    } else if (this.options.knownHelpersOnly) {
	      throw new _exception2['default']('You specified knownHelpersOnly, but used the unknown helper ' + name, sexpr);
	    } else {
	      path.strict = true;
	      path.falsy = true;

	      this.accept(path);
	      this.opcode('invokeHelper', params.length, path.original, _ast2['default'].helpers.simpleId(path));
	    }
	  },

	  PathExpression: function PathExpression(path) {
	    this.addDepth(path.depth);
	    this.opcode('getContext', path.depth);

	    var name = path.parts[0],
	        scoped = _ast2['default'].helpers.scopedId(path),
	        blockParamId = !path.depth && !scoped && this.blockParamIndex(name);

	    if (blockParamId) {
	      this.opcode('lookupBlockParam', blockParamId, path.parts);
	    } else if (!name) {
	      // Context reference, i.e. `{{foo .}}` or `{{foo ..}}`
	      this.opcode('pushContext');
	    } else if (path.data) {
	      this.options.data = true;
	      this.opcode('lookupData', path.depth, path.parts, path.strict);
	    } else {
	      this.opcode('lookupOnContext', path.parts, path.falsy, path.strict, scoped);
	    }
	  },

	  StringLiteral: function StringLiteral(string) {
	    this.opcode('pushString', string.value);
	  },

	  NumberLiteral: function NumberLiteral(number) {
	    this.opcode('pushLiteral', number.value);
	  },

	  BooleanLiteral: function BooleanLiteral(bool) {
	    this.opcode('pushLiteral', bool.value);
	  },

	  UndefinedLiteral: function UndefinedLiteral() {
	    this.opcode('pushLiteral', 'undefined');
	  },

	  NullLiteral: function NullLiteral() {
	    this.opcode('pushLiteral', 'null');
	  },

	  Hash: function Hash(hash) {
	    var pairs = hash.pairs,
	        i = 0,
	        l = pairs.length;

	    this.opcode('pushHash');

	    for (; i < l; i++) {
	      this.pushParam(pairs[i].value);
	    }
	    while (i--) {
	      this.opcode('assignToHash', pairs[i].key);
	    }
	    this.opcode('popHash');
	  },

	  // HELPERS
	  opcode: function opcode(name) {
	    this.opcodes.push({ opcode: name, args: slice.call(arguments, 1), loc: this.sourceNode[0].loc });
	  },

	  addDepth: function addDepth(depth) {
	    if (!depth) {
	      return;
	    }

	    this.useDepths = true;
	  },

	  classifySexpr: function classifySexpr(sexpr) {
	    var isSimple = _ast2['default'].helpers.simpleId(sexpr.path);

	    var isBlockParam = isSimple && !!this.blockParamIndex(sexpr.path.parts[0]);

	    // a mustache is an eligible helper if:
	    // * its id is simple (a single part, not `this` or `..`)
	    var isHelper = !isBlockParam && _ast2['default'].helpers.helperExpression(sexpr);

	    // if a mustache is an eligible helper but not a definite
	    // helper, it is ambiguous, and will be resolved in a later
	    // pass or at runtime.
	    var isEligible = !isBlockParam && (isHelper || isSimple);

	    // if ambiguous, we can possibly resolve the ambiguity now
	    // An eligible helper is one that does not have a complex path, i.e. `this.foo`, `../foo` etc.
	    if (isEligible && !isHelper) {
	      var _name2 = sexpr.path.parts[0],
	          options = this.options;

	      if (options.knownHelpers[_name2]) {
	        isHelper = true;
	      } else if (options.knownHelpersOnly) {
	        isEligible = false;
	      }
	    }

	    if (isHelper) {
	      return 'helper';
	    } else if (isEligible) {
	      return 'ambiguous';
	    } else {
	      return 'simple';
	    }
	  },

	  pushParams: function pushParams(params) {
	    for (var i = 0, l = params.length; i < l; i++) {
	      this.pushParam(params[i]);
	    }
	  },

	  pushParam: function pushParam(val) {
	    var value = val.value != null ? val.value : val.original || '';

	    if (this.stringParams) {
	      if (value.replace) {
	        value = value.replace(/^(\.?\.\/)*/g, '').replace(/\//g, '.');
	      }

	      if (val.depth) {
	        this.addDepth(val.depth);
	      }
	      this.opcode('getContext', val.depth || 0);
	      this.opcode('pushStringParam', value, val.type);

	      if (val.type === 'SubExpression') {
	        // SubExpressions get evaluated and passed in
	        // in string params mode.
	        this.accept(val);
	      }
	    } else {
	      if (this.trackIds) {
	        var blockParamIndex = undefined;
	        if (val.parts && !_ast2['default'].helpers.scopedId(val) && !val.depth) {
	          blockParamIndex = this.blockParamIndex(val.parts[0]);
	        }
	        if (blockParamIndex) {
	          var blockParamChild = val.parts.slice(1).join('.');
	          this.opcode('pushId', 'BlockParam', blockParamIndex, blockParamChild);
	        } else {
	          value = val.original || value;
	          if (value.replace) {
	            value = value.replace(/^this(?:\.|$)/, '').replace(/^\.\//, '').replace(/^\.$/, '');
	          }

	          this.opcode('pushId', val.type, value);
	        }
	      }
	      this.accept(val);
	    }
	  },

	  setupFullMustacheParams: function setupFullMustacheParams(sexpr, program, inverse, omitEmpty) {
	    var params = sexpr.params;
	    this.pushParams(params);

	    this.opcode('pushProgram', program);
	    this.opcode('pushProgram', inverse);

	    if (sexpr.hash) {
	      this.accept(sexpr.hash);
	    } else {
	      this.opcode('emptyHash', omitEmpty);
	    }

	    return params;
	  },

	  blockParamIndex: function blockParamIndex(name) {
	    for (var depth = 0, len = this.options.blockParams.length; depth < len; depth++) {
	      var blockParams = this.options.blockParams[depth],
	          param = blockParams && _utils.indexOf(blockParams, name);
	      if (blockParams && param >= 0) {
	        return [depth, param];
	      }
	    }
	  }
	};

	function precompile(input, options, env) {
	  if (input == null || typeof input !== 'string' && input.type !== 'Program') {
	    throw new _exception2['default']('You must pass a string or Handlebars AST to Handlebars.precompile. You passed ' + input);
	  }

	  options = options || {};
	  if (!('data' in options)) {
	    options.data = true;
	  }
	  if (options.compat) {
	    options.useDepths = true;
	  }

	  var ast = env.parse(input, options),
	      environment = new env.Compiler().compile(ast, options);
	  return new env.JavaScriptCompiler().compile(environment, options);
	}

	function compile(input, options, env) {
	  if (options === undefined) options = {};

	  if (input == null || typeof input !== 'string' && input.type !== 'Program') {
	    throw new _exception2['default']('You must pass a string or Handlebars AST to Handlebars.compile. You passed ' + input);
	  }

	  options = _utils.extend({}, options);
	  if (!('data' in options)) {
	    options.data = true;
	  }
	  if (options.compat) {
	    options.useDepths = true;
	  }

	  var compiled = undefined;

	  function compileInput() {
	    var ast = env.parse(input, options),
	        environment = new env.Compiler().compile(ast, options),
	        templateSpec = new env.JavaScriptCompiler().compile(environment, options, undefined, true);
	    return env.template(templateSpec);
	  }

	  // Template is only compiled on first use and cached after that point.
	  function ret(context, execOptions) {
	    if (!compiled) {
	      compiled = compileInput();
	    }
	    return compiled.call(this, context, execOptions);
	  }
	  ret._setup = function (setupOptions) {
	    if (!compiled) {
	      compiled = compileInput();
	    }
	    return compiled._setup(setupOptions);
	  };
	  ret._child = function (i, data, blockParams, depths) {
	    if (!compiled) {
	      compiled = compileInput();
	    }
	    return compiled._child(i, data, blockParams, depths);
	  };
	  return ret;
	}

	function argEquals(a, b) {
	  if (a === b) {
	    return true;
	  }

	  if (_utils.isArray(a) && _utils.isArray(b) && a.length === b.length) {
	    for (var i = 0; i < a.length; i++) {
	      if (!argEquals(a[i], b[i])) {
	        return false;
	      }
	    }
	    return true;
	  }
	}

	function transformLiteralToPath(sexpr) {
	  if (!sexpr.path.parts) {
	    var literal = sexpr.path;
	    // Casting to string here to make false and 0 literal values play nicely with the rest
	    // of the system.
	    sexpr.path = {
	      type: 'PathExpression',
	      data: false,
	      depth: 0,
	      parts: [literal.original + ''],
	      original: literal.original + '',
	      loc: literal.loc
	    };
	  }
	}

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;

	var _base = __webpack_require__(4);

	var _exception = __webpack_require__(6);

	var _exception2 = _interopRequireDefault(_exception);

	var _utils = __webpack_require__(5);

	var _codeGen = __webpack_require__(43);

	var _codeGen2 = _interopRequireDefault(_codeGen);

	function Literal(value) {
	  this.value = value;
	}

	function JavaScriptCompiler() {}

	JavaScriptCompiler.prototype = {
	  // PUBLIC API: You can override these methods in a subclass to provide
	  // alternative compiled forms for name lookup and buffering semantics
	  nameLookup: function nameLookup(parent, name /* , type*/) {
	    if (JavaScriptCompiler.isValidJavaScriptVariableName(name)) {
	      return [parent, '.', name];
	    } else {
	      return [parent, '[', JSON.stringify(name), ']'];
	    }
	  },
	  depthedLookup: function depthedLookup(name) {
	    return [this.aliasable('container.lookup'), '(depths, "', name, '")'];
	  },

	  compilerInfo: function compilerInfo() {
	    var revision = _base.COMPILER_REVISION,
	        versions = _base.REVISION_CHANGES[revision];
	    return [revision, versions];
	  },

	  appendToBuffer: function appendToBuffer(source, location, explicit) {
	    // Force a source as this simplifies the merge logic.
	    if (!_utils.isArray(source)) {
	      source = [source];
	    }
	    source = this.source.wrap(source, location);

	    if (this.environment.isSimple) {
	      return ['return ', source, ';'];
	    } else if (explicit) {
	      // This is a case where the buffer operation occurs as a child of another
	      // construct, generally braces. We have to explicitly output these buffer
	      // operations to ensure that the emitted code goes in the correct location.
	      return ['buffer += ', source, ';'];
	    } else {
	      source.appendToBuffer = true;
	      return source;
	    }
	  },

	  initializeBuffer: function initializeBuffer() {
	    return this.quotedString('');
	  },
	  // END PUBLIC API

	  compile: function compile(environment, options, context, asObject) {
	    this.environment = environment;
	    this.options = options;
	    this.stringParams = this.options.stringParams;
	    this.trackIds = this.options.trackIds;
	    this.precompile = !asObject;

	    this.name = this.environment.name;
	    this.isChild = !!context;
	    this.context = context || {
	      decorators: [],
	      programs: [],
	      environments: []
	    };

	    this.preamble();

	    this.stackSlot = 0;
	    this.stackVars = [];
	    this.aliases = {};
	    this.registers = { list: [] };
	    this.hashes = [];
	    this.compileStack = [];
	    this.inlineStack = [];
	    this.blockParams = [];

	    this.compileChildren(environment, options);

	    this.useDepths = this.useDepths || environment.useDepths || environment.useDecorators || this.options.compat;
	    this.useBlockParams = this.useBlockParams || environment.useBlockParams;

	    var opcodes = environment.opcodes,
	        opcode = undefined,
	        firstLoc = undefined,
	        i = undefined,
	        l = undefined;

	    for (i = 0, l = opcodes.length; i < l; i++) {
	      opcode = opcodes[i];

	      this.source.currentLocation = opcode.loc;
	      firstLoc = firstLoc || opcode.loc;
	      this[opcode.opcode].apply(this, opcode.args);
	    }

	    // Flush any trailing content that might be pending.
	    this.source.currentLocation = firstLoc;
	    this.pushSource('');

	    /* istanbul ignore next */
	    if (this.stackSlot || this.inlineStack.length || this.compileStack.length) {
	      throw new _exception2['default']('Compile completed with content left on stack');
	    }

	    if (!this.decorators.isEmpty()) {
	      this.useDecorators = true;

	      this.decorators.prepend('var decorators = container.decorators;\n');
	      this.decorators.push('return fn;');

	      if (asObject) {
	        this.decorators = Function.apply(this, ['fn', 'props', 'container', 'depth0', 'data', 'blockParams', 'depths', this.decorators.merge()]);
	      } else {
	        this.decorators.prepend('function(fn, props, container, depth0, data, blockParams, depths) {\n');
	        this.decorators.push('}\n');
	        this.decorators = this.decorators.merge();
	      }
	    } else {
	      this.decorators = undefined;
	    }

	    var fn = this.createFunctionContext(asObject);
	    if (!this.isChild) {
	      var ret = {
	        compiler: this.compilerInfo(),
	        main: fn
	      };

	      if (this.decorators) {
	        ret.main_d = this.decorators; // eslint-disable-line camelcase
	        ret.useDecorators = true;
	      }

	      var _context = this.context;
	      var programs = _context.programs;
	      var decorators = _context.decorators;

	      for (i = 0, l = programs.length; i < l; i++) {
	        if (programs[i]) {
	          ret[i] = programs[i];
	          if (decorators[i]) {
	            ret[i + '_d'] = decorators[i];
	            ret.useDecorators = true;
	          }
	        }
	      }

	      if (this.environment.usePartial) {
	        ret.usePartial = true;
	      }
	      if (this.options.data) {
	        ret.useData = true;
	      }
	      if (this.useDepths) {
	        ret.useDepths = true;
	      }
	      if (this.useBlockParams) {
	        ret.useBlockParams = true;
	      }
	      if (this.options.compat) {
	        ret.compat = true;
	      }

	      if (!asObject) {
	        ret.compiler = JSON.stringify(ret.compiler);

	        this.source.currentLocation = { start: { line: 1, column: 0 } };
	        ret = this.objectLiteral(ret);

	        if (options.srcName) {
	          ret = ret.toStringWithSourceMap({ file: options.destName });
	          ret.map = ret.map && ret.map.toString();
	        } else {
	          ret = ret.toString();
	        }
	      } else {
	        ret.compilerOptions = this.options;
	      }

	      return ret;
	    } else {
	      return fn;
	    }
	  },

	  preamble: function preamble() {
	    // track the last context pushed into place to allow skipping the
	    // getContext opcode when it would be a noop
	    this.lastContext = 0;
	    this.source = new _codeGen2['default'](this.options.srcName);
	    this.decorators = new _codeGen2['default'](this.options.srcName);
	  },

	  createFunctionContext: function createFunctionContext(asObject) {
	    var varDeclarations = '';

	    var locals = this.stackVars.concat(this.registers.list);
	    if (locals.length > 0) {
	      varDeclarations += ', ' + locals.join(', ');
	    }

	    // Generate minimizer alias mappings
	    //
	    // When using true SourceNodes, this will update all references to the given alias
	    // as the source nodes are reused in situ. For the non-source node compilation mode,
	    // aliases will not be used, but this case is already being run on the client and
	    // we aren't concern about minimizing the template size.
	    var aliasCount = 0;
	    for (var alias in this.aliases) {
	      // eslint-disable-line guard-for-in
	      var node = this.aliases[alias];

	      if (this.aliases.hasOwnProperty(alias) && node.children && node.referenceCount > 1) {
	        varDeclarations += ', alias' + ++aliasCount + '=' + alias;
	        node.children[0] = 'alias' + aliasCount;
	      }
	    }

	    var params = ['container', 'depth0', 'helpers', 'partials', 'data'];

	    if (this.useBlockParams || this.useDepths) {
	      params.push('blockParams');
	    }
	    if (this.useDepths) {
	      params.push('depths');
	    }

	    // Perform a second pass over the output to merge content when possible
	    var source = this.mergeSource(varDeclarations);

	    if (asObject) {
	      params.push(source);

	      return Function.apply(this, params);
	    } else {
	      return this.source.wrap(['function(', params.join(','), ') {\n  ', source, '}']);
	    }
	  },
	  mergeSource: function mergeSource(varDeclarations) {
	    var isSimple = this.environment.isSimple,
	        appendOnly = !this.forceBuffer,
	        appendFirst = undefined,
	        sourceSeen = undefined,
	        bufferStart = undefined,
	        bufferEnd = undefined;
	    this.source.each(function (line) {
	      if (line.appendToBuffer) {
	        if (bufferStart) {
	          line.prepend('  + ');
	        } else {
	          bufferStart = line;
	        }
	        bufferEnd = line;
	      } else {
	        if (bufferStart) {
	          if (!sourceSeen) {
	            appendFirst = true;
	          } else {
	            bufferStart.prepend('buffer += ');
	          }
	          bufferEnd.add(';');
	          bufferStart = bufferEnd = undefined;
	        }

	        sourceSeen = true;
	        if (!isSimple) {
	          appendOnly = false;
	        }
	      }
	    });

	    if (appendOnly) {
	      if (bufferStart) {
	        bufferStart.prepend('return ');
	        bufferEnd.add(';');
	      } else if (!sourceSeen) {
	        this.source.push('return "";');
	      }
	    } else {
	      varDeclarations += ', buffer = ' + (appendFirst ? '' : this.initializeBuffer());

	      if (bufferStart) {
	        bufferStart.prepend('return buffer + ');
	        bufferEnd.add(';');
	      } else {
	        this.source.push('return buffer;');
	      }
	    }

	    if (varDeclarations) {
	      this.source.prepend('var ' + varDeclarations.substring(2) + (appendFirst ? '' : ';\n'));
	    }

	    return this.source.merge();
	  },

	  // [blockValue]
	  //
	  // On stack, before: hash, inverse, program, value
	  // On stack, after: return value of blockHelperMissing
	  //
	  // The purpose of this opcode is to take a block of the form
	  // `{{#this.foo}}...{{/this.foo}}`, resolve the value of `foo`, and
	  // replace it on the stack with the result of properly
	  // invoking blockHelperMissing.
	  blockValue: function blockValue(name) {
	    var blockHelperMissing = this.aliasable('helpers.blockHelperMissing'),
	        params = [this.contextName(0)];
	    this.setupHelperArgs(name, 0, params);

	    var blockName = this.popStack();
	    params.splice(1, 0, blockName);

	    this.push(this.source.functionCall(blockHelperMissing, 'call', params));
	  },

	  // [ambiguousBlockValue]
	  //
	  // On stack, before: hash, inverse, program, value
	  // Compiler value, before: lastHelper=value of last found helper, if any
	  // On stack, after, if no lastHelper: same as [blockValue]
	  // On stack, after, if lastHelper: value
	  ambiguousBlockValue: function ambiguousBlockValue() {
	    // We're being a bit cheeky and reusing the options value from the prior exec
	    var blockHelperMissing = this.aliasable('helpers.blockHelperMissing'),
	        params = [this.contextName(0)];
	    this.setupHelperArgs('', 0, params, true);

	    this.flushInline();

	    var current = this.topStack();
	    params.splice(1, 0, current);

	    this.pushSource(['if (!', this.lastHelper, ') { ', current, ' = ', this.source.functionCall(blockHelperMissing, 'call', params), '}']);
	  },

	  // [appendContent]
	  //
	  // On stack, before: ...
	  // On stack, after: ...
	  //
	  // Appends the string value of `content` to the current buffer
	  appendContent: function appendContent(content) {
	    if (this.pendingContent) {
	      content = this.pendingContent + content;
	    } else {
	      this.pendingLocation = this.source.currentLocation;
	    }

	    this.pendingContent = content;
	  },

	  // [append]
	  //
	  // On stack, before: value, ...
	  // On stack, after: ...
	  //
	  // Coerces `value` to a String and appends it to the current buffer.
	  //
	  // If `value` is truthy, or 0, it is coerced into a string and appended
	  // Otherwise, the empty string is appended
	  append: function append() {
	    if (this.isInline()) {
	      this.replaceStack(function (current) {
	        return [' != null ? ', current, ' : ""'];
	      });

	      this.pushSource(this.appendToBuffer(this.popStack()));
	    } else {
	      var local = this.popStack();
	      this.pushSource(['if (', local, ' != null) { ', this.appendToBuffer(local, undefined, true), ' }']);
	      if (this.environment.isSimple) {
	        this.pushSource(['else { ', this.appendToBuffer("''", undefined, true), ' }']);
	      }
	    }
	  },

	  // [appendEscaped]
	  //
	  // On stack, before: value, ...
	  // On stack, after: ...
	  //
	  // Escape `value` and append it to the buffer
	  appendEscaped: function appendEscaped() {
	    this.pushSource(this.appendToBuffer([this.aliasable('container.escapeExpression'), '(', this.popStack(), ')']));
	  },

	  // [getContext]
	  //
	  // On stack, before: ...
	  // On stack, after: ...
	  // Compiler value, after: lastContext=depth
	  //
	  // Set the value of the `lastContext` compiler value to the depth
	  getContext: function getContext(depth) {
	    this.lastContext = depth;
	  },

	  // [pushContext]
	  //
	  // On stack, before: ...
	  // On stack, after: currentContext, ...
	  //
	  // Pushes the value of the current context onto the stack.
	  pushContext: function pushContext() {
	    this.pushStackLiteral(this.contextName(this.lastContext));
	  },

	  // [lookupOnContext]
	  //
	  // On stack, before: ...
	  // On stack, after: currentContext[name], ...
	  //
	  // Looks up the value of `name` on the current context and pushes
	  // it onto the stack.
	  lookupOnContext: function lookupOnContext(parts, falsy, strict, scoped) {
	    var i = 0;

	    if (!scoped && this.options.compat && !this.lastContext) {
	      // The depthed query is expected to handle the undefined logic for the root level that
	      // is implemented below, so we evaluate that directly in compat mode
	      this.push(this.depthedLookup(parts[i++]));
	    } else {
	      this.pushContext();
	    }

	    this.resolvePath('context', parts, i, falsy, strict);
	  },

	  // [lookupBlockParam]
	  //
	  // On stack, before: ...
	  // On stack, after: blockParam[name], ...
	  //
	  // Looks up the value of `parts` on the given block param and pushes
	  // it onto the stack.
	  lookupBlockParam: function lookupBlockParam(blockParamId, parts) {
	    this.useBlockParams = true;

	    this.push(['blockParams[', blockParamId[0], '][', blockParamId[1], ']']);
	    this.resolvePath('context', parts, 1);
	  },

	  // [lookupData]
	  //
	  // On stack, before: ...
	  // On stack, after: data, ...
	  //
	  // Push the data lookup operator
	  lookupData: function lookupData(depth, parts, strict) {
	    if (!depth) {
	      this.pushStackLiteral('data');
	    } else {
	      this.pushStackLiteral('container.data(data, ' + depth + ')');
	    }

	    this.resolvePath('data', parts, 0, true, strict);
	  },

	  resolvePath: function resolvePath(type, parts, i, falsy, strict) {
	    // istanbul ignore next

	    var _this = this;

	    if (this.options.strict || this.options.assumeObjects) {
	      this.push(strictLookup(this.options.strict && strict, this, parts, type));
	      return;
	    }

	    var len = parts.length;
	    for (; i < len; i++) {
	      /* eslint-disable no-loop-func */
	      this.replaceStack(function (current) {
	        var lookup = _this.nameLookup(current, parts[i], type);
	        // We want to ensure that zero and false are handled properly if the context (falsy flag)
	        // needs to have the special handling for these values.
	        if (!falsy) {
	          return [' != null ? ', lookup, ' : ', current];
	        } else {
	          // Otherwise we can use generic falsy handling
	          return [' && ', lookup];
	        }
	      });
	      /* eslint-enable no-loop-func */
	    }
	  },

	  // [resolvePossibleLambda]
	  //
	  // On stack, before: value, ...
	  // On stack, after: resolved value, ...
	  //
	  // If the `value` is a lambda, replace it on the stack by
	  // the return value of the lambda
	  resolvePossibleLambda: function resolvePossibleLambda() {
	    this.push([this.aliasable('container.lambda'), '(', this.popStack(), ', ', this.contextName(0), ')']);
	  },

	  // [pushStringParam]
	  //
	  // On stack, before: ...
	  // On stack, after: string, currentContext, ...
	  //
	  // This opcode is designed for use in string mode, which
	  // provides the string value of a parameter along with its
	  // depth rather than resolving it immediately.
	  pushStringParam: function pushStringParam(string, type) {
	    this.pushContext();
	    this.pushString(type);

	    // If it's a subexpression, the string result
	    // will be pushed after this opcode.
	    if (type !== 'SubExpression') {
	      if (typeof string === 'string') {
	        this.pushString(string);
	      } else {
	        this.pushStackLiteral(string);
	      }
	    }
	  },

	  emptyHash: function emptyHash(omitEmpty) {
	    if (this.trackIds) {
	      this.push('{}'); // hashIds
	    }
	    if (this.stringParams) {
	      this.push('{}'); // hashContexts
	      this.push('{}'); // hashTypes
	    }
	    this.pushStackLiteral(omitEmpty ? 'undefined' : '{}');
	  },
	  pushHash: function pushHash() {
	    if (this.hash) {
	      this.hashes.push(this.hash);
	    }
	    this.hash = { values: [], types: [], contexts: [], ids: [] };
	  },
	  popHash: function popHash() {
	    var hash = this.hash;
	    this.hash = this.hashes.pop();

	    if (this.trackIds) {
	      this.push(this.objectLiteral(hash.ids));
	    }
	    if (this.stringParams) {
	      this.push(this.objectLiteral(hash.contexts));
	      this.push(this.objectLiteral(hash.types));
	    }

	    this.push(this.objectLiteral(hash.values));
	  },

	  // [pushString]
	  //
	  // On stack, before: ...
	  // On stack, after: quotedString(string), ...
	  //
	  // Push a quoted version of `string` onto the stack
	  pushString: function pushString(string) {
	    this.pushStackLiteral(this.quotedString(string));
	  },

	  // [pushLiteral]
	  //
	  // On stack, before: ...
	  // On stack, after: value, ...
	  //
	  // Pushes a value onto the stack. This operation prevents
	  // the compiler from creating a temporary variable to hold
	  // it.
	  pushLiteral: function pushLiteral(value) {
	    this.pushStackLiteral(value);
	  },

	  // [pushProgram]
	  //
	  // On stack, before: ...
	  // On stack, after: program(guid), ...
	  //
	  // Push a program expression onto the stack. This takes
	  // a compile-time guid and converts it into a runtime-accessible
	  // expression.
	  pushProgram: function pushProgram(guid) {
	    if (guid != null) {
	      this.pushStackLiteral(this.programExpression(guid));
	    } else {
	      this.pushStackLiteral(null);
	    }
	  },

	  // [registerDecorator]
	  //
	  // On stack, before: hash, program, params..., ...
	  // On stack, after: ...
	  //
	  // Pops off the decorator's parameters, invokes the decorator,
	  // and inserts the decorator into the decorators list.
	  registerDecorator: function registerDecorator(paramSize, name) {
	    var foundDecorator = this.nameLookup('decorators', name, 'decorator'),
	        options = this.setupHelperArgs(name, paramSize);

	    this.decorators.push(['fn = ', this.decorators.functionCall(foundDecorator, '', ['fn', 'props', 'container', options]), ' || fn;']);
	  },

	  // [invokeHelper]
	  //
	  // On stack, before: hash, inverse, program, params..., ...
	  // On stack, after: result of helper invocation
	  //
	  // Pops off the helper's parameters, invokes the helper,
	  // and pushes the helper's return value onto the stack.
	  //
	  // If the helper is not found, `helperMissing` is called.
	  invokeHelper: function invokeHelper(paramSize, name, isSimple) {
	    var nonHelper = this.popStack(),
	        helper = this.setupHelper(paramSize, name),
	        simple = isSimple ? [helper.name, ' || '] : '';

	    var lookup = ['('].concat(simple, nonHelper);
	    if (!this.options.strict) {
	      lookup.push(' || ', this.aliasable('helpers.helperMissing'));
	    }
	    lookup.push(')');

	    this.push(this.source.functionCall(lookup, 'call', helper.callParams));
	  },

	  // [invokeKnownHelper]
	  //
	  // On stack, before: hash, inverse, program, params..., ...
	  // On stack, after: result of helper invocation
	  //
	  // This operation is used when the helper is known to exist,
	  // so a `helperMissing` fallback is not required.
	  invokeKnownHelper: function invokeKnownHelper(paramSize, name) {
	    var helper = this.setupHelper(paramSize, name);
	    this.push(this.source.functionCall(helper.name, 'call', helper.callParams));
	  },

	  // [invokeAmbiguous]
	  //
	  // On stack, before: hash, inverse, program, params..., ...
	  // On stack, after: result of disambiguation
	  //
	  // This operation is used when an expression like `{{foo}}`
	  // is provided, but we don't know at compile-time whether it
	  // is a helper or a path.
	  //
	  // This operation emits more code than the other options,
	  // and can be avoided by passing the `knownHelpers` and
	  // `knownHelpersOnly` flags at compile-time.
	  invokeAmbiguous: function invokeAmbiguous(name, helperCall) {
	    this.useRegister('helper');

	    var nonHelper = this.popStack();

	    this.emptyHash();
	    var helper = this.setupHelper(0, name, helperCall);

	    var helperName = this.lastHelper = this.nameLookup('helpers', name, 'helper');

	    var lookup = ['(', '(helper = ', helperName, ' || ', nonHelper, ')'];
	    if (!this.options.strict) {
	      lookup[0] = '(helper = ';
	      lookup.push(' != null ? helper : ', this.aliasable('helpers.helperMissing'));
	    }

	    this.push(['(', lookup, helper.paramsInit ? ['),(', helper.paramsInit] : [], '),', '(typeof helper === ', this.aliasable('"function"'), ' ? ', this.source.functionCall('helper', 'call', helper.callParams), ' : helper))']);
	  },

	  // [invokePartial]
	  //
	  // On stack, before: context, ...
	  // On stack after: result of partial invocation
	  //
	  // This operation pops off a context, invokes a partial with that context,
	  // and pushes the result of the invocation back.
	  invokePartial: function invokePartial(isDynamic, name, indent) {
	    var params = [],
	        options = this.setupParams(name, 1, params);

	    if (isDynamic) {
	      name = this.popStack();
	      delete options.name;
	    }

	    if (indent) {
	      options.indent = JSON.stringify(indent);
	    }
	    options.helpers = 'helpers';
	    options.partials = 'partials';
	    options.decorators = 'container.decorators';

	    if (!isDynamic) {
	      params.unshift(this.nameLookup('partials', name, 'partial'));
	    } else {
	      params.unshift(name);
	    }

	    if (this.options.compat) {
	      options.depths = 'depths';
	    }
	    options = this.objectLiteral(options);
	    params.push(options);

	    this.push(this.source.functionCall('container.invokePartial', '', params));
	  },

	  // [assignToHash]
	  //
	  // On stack, before: value, ..., hash, ...
	  // On stack, after: ..., hash, ...
	  //
	  // Pops a value off the stack and assigns it to the current hash
	  assignToHash: function assignToHash(key) {
	    var value = this.popStack(),
	        context = undefined,
	        type = undefined,
	        id = undefined;

	    if (this.trackIds) {
	      id = this.popStack();
	    }
	    if (this.stringParams) {
	      type = this.popStack();
	      context = this.popStack();
	    }

	    var hash = this.hash;
	    if (context) {
	      hash.contexts[key] = context;
	    }
	    if (type) {
	      hash.types[key] = type;
	    }
	    if (id) {
	      hash.ids[key] = id;
	    }
	    hash.values[key] = value;
	  },

	  pushId: function pushId(type, name, child) {
	    if (type === 'BlockParam') {
	      this.pushStackLiteral('blockParams[' + name[0] + '].path[' + name[1] + ']' + (child ? ' + ' + JSON.stringify('.' + child) : ''));
	    } else if (type === 'PathExpression') {
	      this.pushString(name);
	    } else if (type === 'SubExpression') {
	      this.pushStackLiteral('true');
	    } else {
	      this.pushStackLiteral('null');
	    }
	  },

	  // HELPERS

	  compiler: JavaScriptCompiler,

	  compileChildren: function compileChildren(environment, options) {
	    var children = environment.children,
	        child = undefined,
	        compiler = undefined;

	    for (var i = 0, l = children.length; i < l; i++) {
	      child = children[i];
	      compiler = new this.compiler(); // eslint-disable-line new-cap

	      var existing = this.matchExistingProgram(child);

	      if (existing == null) {
	        this.context.programs.push(''); // Placeholder to prevent name conflicts for nested children
	        var index = this.context.programs.length;
	        child.index = index;
	        child.name = 'program' + index;
	        this.context.programs[index] = compiler.compile(child, options, this.context, !this.precompile);
	        this.context.decorators[index] = compiler.decorators;
	        this.context.environments[index] = child;

	        this.useDepths = this.useDepths || compiler.useDepths;
	        this.useBlockParams = this.useBlockParams || compiler.useBlockParams;
	        child.useDepths = this.useDepths;
	        child.useBlockParams = this.useBlockParams;
	      } else {
	        child.index = existing.index;
	        child.name = 'program' + existing.index;

	        this.useDepths = this.useDepths || existing.useDepths;
	        this.useBlockParams = this.useBlockParams || existing.useBlockParams;
	      }
	    }
	  },
	  matchExistingProgram: function matchExistingProgram(child) {
	    for (var i = 0, len = this.context.environments.length; i < len; i++) {
	      var environment = this.context.environments[i];
	      if (environment && environment.equals(child)) {
	        return environment;
	      }
	    }
	  },

	  programExpression: function programExpression(guid) {
	    var child = this.environment.children[guid],
	        programParams = [child.index, 'data', child.blockParams];

	    if (this.useBlockParams || this.useDepths) {
	      programParams.push('blockParams');
	    }
	    if (this.useDepths) {
	      programParams.push('depths');
	    }

	    return 'container.program(' + programParams.join(', ') + ')';
	  },

	  useRegister: function useRegister(name) {
	    if (!this.registers[name]) {
	      this.registers[name] = true;
	      this.registers.list.push(name);
	    }
	  },

	  push: function push(expr) {
	    if (!(expr instanceof Literal)) {
	      expr = this.source.wrap(expr);
	    }

	    this.inlineStack.push(expr);
	    return expr;
	  },

	  pushStackLiteral: function pushStackLiteral(item) {
	    this.push(new Literal(item));
	  },

	  pushSource: function pushSource(source) {
	    if (this.pendingContent) {
	      this.source.push(this.appendToBuffer(this.source.quotedString(this.pendingContent), this.pendingLocation));
	      this.pendingContent = undefined;
	    }

	    if (source) {
	      this.source.push(source);
	    }
	  },

	  replaceStack: function replaceStack(callback) {
	    var prefix = ['('],
	        stack = undefined,
	        createdStack = undefined,
	        usedLiteral = undefined;

	    /* istanbul ignore next */
	    if (!this.isInline()) {
	      throw new _exception2['default']('replaceStack on non-inline');
	    }

	    // We want to merge the inline statement into the replacement statement via ','
	    var top = this.popStack(true);

	    if (top instanceof Literal) {
	      // Literals do not need to be inlined
	      stack = [top.value];
	      prefix = ['(', stack];
	      usedLiteral = true;
	    } else {
	      // Get or create the current stack name for use by the inline
	      createdStack = true;
	      var _name = this.incrStack();

	      prefix = ['((', this.push(_name), ' = ', top, ')'];
	      stack = this.topStack();
	    }

	    var item = callback.call(this, stack);

	    if (!usedLiteral) {
	      this.popStack();
	    }
	    if (createdStack) {
	      this.stackSlot--;
	    }
	    this.push(prefix.concat(item, ')'));
	  },

	  incrStack: function incrStack() {
	    this.stackSlot++;
	    if (this.stackSlot > this.stackVars.length) {
	      this.stackVars.push('stack' + this.stackSlot);
	    }
	    return this.topStackName();
	  },
	  topStackName: function topStackName() {
	    return 'stack' + this.stackSlot;
	  },
	  flushInline: function flushInline() {
	    var inlineStack = this.inlineStack;
	    this.inlineStack = [];
	    for (var i = 0, len = inlineStack.length; i < len; i++) {
	      var entry = inlineStack[i];
	      /* istanbul ignore if */
	      if (entry instanceof Literal) {
	        this.compileStack.push(entry);
	      } else {
	        var stack = this.incrStack();
	        this.pushSource([stack, ' = ', entry, ';']);
	        this.compileStack.push(stack);
	      }
	    }
	  },
	  isInline: function isInline() {
	    return this.inlineStack.length;
	  },

	  popStack: function popStack(wrapped) {
	    var inline = this.isInline(),
	        item = (inline ? this.inlineStack : this.compileStack).pop();

	    if (!wrapped && item instanceof Literal) {
	      return item.value;
	    } else {
	      if (!inline) {
	        /* istanbul ignore next */
	        if (!this.stackSlot) {
	          throw new _exception2['default']('Invalid stack pop');
	        }
	        this.stackSlot--;
	      }
	      return item;
	    }
	  },

	  topStack: function topStack() {
	    var stack = this.isInline() ? this.inlineStack : this.compileStack,
	        item = stack[stack.length - 1];

	    /* istanbul ignore if */
	    if (item instanceof Literal) {
	      return item.value;
	    } else {
	      return item;
	    }
	  },

	  contextName: function contextName(context) {
	    if (this.useDepths && context) {
	      return 'depths[' + context + ']';
	    } else {
	      return 'depth' + context;
	    }
	  },

	  quotedString: function quotedString(str) {
	    return this.source.quotedString(str);
	  },

	  objectLiteral: function objectLiteral(obj) {
	    return this.source.objectLiteral(obj);
	  },

	  aliasable: function aliasable(name) {
	    var ret = this.aliases[name];
	    if (ret) {
	      ret.referenceCount++;
	      return ret;
	    }

	    ret = this.aliases[name] = this.source.wrap(name);
	    ret.aliasable = true;
	    ret.referenceCount = 1;

	    return ret;
	  },

	  setupHelper: function setupHelper(paramSize, name, blockHelper) {
	    var params = [],
	        paramsInit = this.setupHelperArgs(name, paramSize, params, blockHelper);
	    var foundHelper = this.nameLookup('helpers', name, 'helper'),
	        callContext = this.aliasable(this.contextName(0) + ' != null ? ' + this.contextName(0) + ' : (container.nullContext || {})');

	    return {
	      params: params,
	      paramsInit: paramsInit,
	      name: foundHelper,
	      callParams: [callContext].concat(params)
	    };
	  },

	  setupParams: function setupParams(helper, paramSize, params) {
	    var options = {},
	        contexts = [],
	        types = [],
	        ids = [],
	        objectArgs = !params,
	        param = undefined;

	    if (objectArgs) {
	      params = [];
	    }

	    options.name = this.quotedString(helper);
	    options.hash = this.popStack();

	    if (this.trackIds) {
	      options.hashIds = this.popStack();
	    }
	    if (this.stringParams) {
	      options.hashTypes = this.popStack();
	      options.hashContexts = this.popStack();
	    }

	    var inverse = this.popStack(),
	        program = this.popStack();

	    // Avoid setting fn and inverse if neither are set. This allows
	    // helpers to do a check for `if (options.fn)`
	    if (program || inverse) {
	      options.fn = program || 'container.noop';
	      options.inverse = inverse || 'container.noop';
	    }

	    // The parameters go on to the stack in order (making sure that they are evaluated in order)
	    // so we need to pop them off the stack in reverse order
	    var i = paramSize;
	    while (i--) {
	      param = this.popStack();
	      params[i] = param;

	      if (this.trackIds) {
	        ids[i] = this.popStack();
	      }
	      if (this.stringParams) {
	        types[i] = this.popStack();
	        contexts[i] = this.popStack();
	      }
	    }

	    if (objectArgs) {
	      options.args = this.source.generateArray(params);
	    }

	    if (this.trackIds) {
	      options.ids = this.source.generateArray(ids);
	    }
	    if (this.stringParams) {
	      options.types = this.source.generateArray(types);
	      options.contexts = this.source.generateArray(contexts);
	    }

	    if (this.options.data) {
	      options.data = 'data';
	    }
	    if (this.useBlockParams) {
	      options.blockParams = 'blockParams';
	    }
	    return options;
	  },

	  setupHelperArgs: function setupHelperArgs(helper, paramSize, params, useRegister) {
	    var options = this.setupParams(helper, paramSize, params);
	    options = this.objectLiteral(options);
	    if (useRegister) {
	      this.useRegister('options');
	      params.push('options');
	      return ['options=', options];
	    } else if (params) {
	      params.push(options);
	      return '';
	    } else {
	      return options;
	    }
	  }
	};

	(function () {
	  var reservedWords = ('break else new var' + ' case finally return void' + ' catch for switch while' + ' continue function this with' + ' default if throw' + ' delete in try' + ' do instanceof typeof' + ' abstract enum int short' + ' boolean export interface static' + ' byte extends long super' + ' char final native synchronized' + ' class float package throws' + ' const goto private transient' + ' debugger implements protected volatile' + ' double import public let yield await' + ' null true false').split(' ');

	  var compilerWords = JavaScriptCompiler.RESERVED_WORDS = {};

	  for (var i = 0, l = reservedWords.length; i < l; i++) {
	    compilerWords[reservedWords[i]] = true;
	  }
	})();

	JavaScriptCompiler.isValidJavaScriptVariableName = function (name) {
	  return !JavaScriptCompiler.RESERVED_WORDS[name] && /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(name);
	};

	function strictLookup(requireTerminal, compiler, parts, type) {
	  var stack = compiler.popStack(),
	      i = 0,
	      len = parts.length;
	  if (requireTerminal) {
	    len--;
	  }

	  for (; i < len; i++) {
	    stack = compiler.nameLookup(stack, parts[i], type);
	  }

	  if (requireTerminal) {
	    return [compiler.aliasable('container.strict'), '(', stack, ', ', compiler.quotedString(parts[i]), ')'];
	  } else {
	    return stack;
	  }
	}

	exports['default'] = JavaScriptCompiler;
	module.exports = exports['default'];

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

	/* global define */
	'use strict';

	exports.__esModule = true;

	var _utils = __webpack_require__(5);

	var SourceNode = undefined;

	try {
	  /* istanbul ignore next */
	  if (false) {
	    // We don't support this in AMD environments. For these environments, we asusme that
	    // they are running on the browser and thus have no need for the source-map library.
	    var SourceMap = require('source-map');
	    SourceNode = SourceMap.SourceNode;
	  }
	} catch (err) {}
	/* NOP */

	/* istanbul ignore if: tested but not covered in istanbul due to dist build  */
	if (!SourceNode) {
	  SourceNode = function (line, column, srcFile, chunks) {
	    this.src = '';
	    if (chunks) {
	      this.add(chunks);
	    }
	  };
	  /* istanbul ignore next */
	  SourceNode.prototype = {
	    add: function add(chunks) {
	      if (_utils.isArray(chunks)) {
	        chunks = chunks.join('');
	      }
	      this.src += chunks;
	    },
	    prepend: function prepend(chunks) {
	      if (_utils.isArray(chunks)) {
	        chunks = chunks.join('');
	      }
	      this.src = chunks + this.src;
	    },
	    toStringWithSourceMap: function toStringWithSourceMap() {
	      return { code: this.toString() };
	    },
	    toString: function toString() {
	      return this.src;
	    }
	  };
	}

	function castChunk(chunk, codeGen, loc) {
	  if (_utils.isArray(chunk)) {
	    var ret = [];

	    for (var i = 0, len = chunk.length; i < len; i++) {
	      ret.push(codeGen.wrap(chunk[i], loc));
	    }
	    return ret;
	  } else if (typeof chunk === 'boolean' || typeof chunk === 'number') {
	    // Handle primitives that the SourceNode will throw up on
	    return chunk + '';
	  }
	  return chunk;
	}

	function CodeGen(srcFile) {
	  this.srcFile = srcFile;
	  this.source = [];
	}

	CodeGen.prototype = {
	  isEmpty: function isEmpty() {
	    return !this.source.length;
	  },
	  prepend: function prepend(source, loc) {
	    this.source.unshift(this.wrap(source, loc));
	  },
	  push: function push(source, loc) {
	    this.source.push(this.wrap(source, loc));
	  },

	  merge: function merge() {
	    var source = this.empty();
	    this.each(function (line) {
	      source.add(['  ', line, '\n']);
	    });
	    return source;
	  },

	  each: function each(iter) {
	    for (var i = 0, len = this.source.length; i < len; i++) {
	      iter(this.source[i]);
	    }
	  },

	  empty: function empty() {
	    var loc = this.currentLocation || { start: {} };
	    return new SourceNode(loc.start.line, loc.start.column, this.srcFile);
	  },
	  wrap: function wrap(chunk) {
	    var loc = arguments.length <= 1 || arguments[1] === undefined ? this.currentLocation || { start: {} } : arguments[1];

	    if (chunk instanceof SourceNode) {
	      return chunk;
	    }

	    chunk = castChunk(chunk, this, loc);

	    return new SourceNode(loc.start.line, loc.start.column, this.srcFile, chunk);
	  },

	  functionCall: function functionCall(fn, type, params) {
	    params = this.generateList(params);
	    return this.wrap([fn, type ? '.' + type + '(' : '(', params, ')']);
	  },

	  quotedString: function quotedString(str) {
	    return '"' + (str + '').replace(/\\/g, '\\\\').replace(/"/g, '\\"').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/\u2028/g, '\\u2028') // Per Ecma-262 7.3 + 7.8.4
	    .replace(/\u2029/g, '\\u2029') + '"';
	  },

	  objectLiteral: function objectLiteral(obj) {
	    var pairs = [];

	    for (var key in obj) {
	      if (obj.hasOwnProperty(key)) {
	        var value = castChunk(obj[key], this);
	        if (value !== 'undefined') {
	          pairs.push([this.quotedString(key), ':', value]);
	        }
	      }
	    }

	    var ret = this.generateList(pairs);
	    ret.prepend('{');
	    ret.add('}');
	    return ret;
	  },

	  generateList: function generateList(entries) {
	    var ret = this.empty();

	    for (var i = 0, len = entries.length; i < len; i++) {
	      if (i) {
	        ret.add(',');
	      }

	      ret.add(castChunk(entries[i], this));
	    }

	    return ret;
	  },

	  generateArray: function generateArray(entries) {
	    var ret = this.generateList(entries);
	    ret.prepend('[');
	    ret.add(']');

	    return ret;
	  }
	};

	exports['default'] = CodeGen;
	module.exports = exports['default'];

/***/ })
/******/ ])
});
;
function formatTime(date, regex, additional) {
  var moment = window.moment;
  var offset = parseFloat(window.time_zone_offset) || moment().utcOffset();
  var time;

  //date = (new Date()).getTime();
  //date = (new Date('Wed Jun 30 2016 06:45:57 GMT+0300 (EEST)')).getTime();
  if (regex == 'unix') {
    time = moment(date).unix()
  } else if ((date + '').length < 13) {
    time = moment.utc(date * 1000).utcOffset(offset);
  } else {
    time = moment.utc(date).utcOffset(offset)
  }

  if (regex == 'calendar') {
    var sameElse = additional && additional['sameElse'] ? additional['sameElse'] : 'DD/MM/YYYY';
    return moment(time).calendar(null, {
      sameDay: '[' + I18n.t('global.Today') + ']',
      nextDay: '[' + I18n.t('global.Tomorrow') + ']',
      nextWeek: 'dddd',
      lastDay: '[' + I18n.t('global.Yesterday') + ']',
      lastWeek: '[Last] dddd',
      sameElse: sameElse
    }).capitalize()
  } else {
    return time.format(regex);
  }
}

Handlebars.registerHelper('formatTime', formatTime);
//! moment.js
//! version : 2.10.6
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com
!function(a,b){"object"==typeof exports&&"undefined"!=typeof module?module.exports=b():"function"==typeof define&&define.amd?define(b):a.moment=b()}(this,function(){"use strict";function a(){return Hc.apply(null,arguments)}function b(a){Hc=a}function c(a){return"[object Array]"===Object.prototype.toString.call(a)}function d(a){return a instanceof Date||"[object Date]"===Object.prototype.toString.call(a)}function e(a,b){var c,d=[];for(c=0;c<a.length;++c)d.push(b(a[c],c));return d}function f(a,b){return Object.prototype.hasOwnProperty.call(a,b)}function g(a,b){for(var c in b)f(b,c)&&(a[c]=b[c]);return f(b,"toString")&&(a.toString=b.toString),f(b,"valueOf")&&(a.valueOf=b.valueOf),a}function h(a,b,c,d){return Ca(a,b,c,d,!0).utc()}function i(){return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1}}function j(a){return null==a._pf&&(a._pf=i()),a._pf}function k(a){if(null==a._isValid){var b=j(a);a._isValid=!(isNaN(a._d.getTime())||!(b.overflow<0)||b.empty||b.invalidMonth||b.invalidWeekday||b.nullInput||b.invalidFormat||b.userInvalidated),a._strict&&(a._isValid=a._isValid&&0===b.charsLeftOver&&0===b.unusedTokens.length&&void 0===b.bigHour)}return a._isValid}function l(a){var b=h(NaN);return null!=a?g(j(b),a):j(b).userInvalidated=!0,b}function m(a,b){var c,d,e;if("undefined"!=typeof b._isAMomentObject&&(a._isAMomentObject=b._isAMomentObject),"undefined"!=typeof b._i&&(a._i=b._i),"undefined"!=typeof b._f&&(a._f=b._f),"undefined"!=typeof b._l&&(a._l=b._l),"undefined"!=typeof b._strict&&(a._strict=b._strict),"undefined"!=typeof b._tzm&&(a._tzm=b._tzm),"undefined"!=typeof b._isUTC&&(a._isUTC=b._isUTC),"undefined"!=typeof b._offset&&(a._offset=b._offset),"undefined"!=typeof b._pf&&(a._pf=j(b)),"undefined"!=typeof b._locale&&(a._locale=b._locale),Jc.length>0)for(c in Jc)d=Jc[c],e=b[d],"undefined"!=typeof e&&(a[d]=e);return a}function n(b){m(this,b),this._d=new Date(null!=b._d?b._d.getTime():NaN),Kc===!1&&(Kc=!0,a.updateOffset(this),Kc=!1)}function o(a){return a instanceof n||null!=a&&null!=a._isAMomentObject}function p(a){return 0>a?Math.ceil(a):Math.floor(a)}function q(a){var b=+a,c=0;return 0!==b&&isFinite(b)&&(c=p(b)),c}function r(a,b,c){var d,e=Math.min(a.length,b.length),f=Math.abs(a.length-b.length),g=0;for(d=0;e>d;d++)(c&&a[d]!==b[d]||!c&&q(a[d])!==q(b[d]))&&g++;return g+f}function s(){}function t(a){return a?a.toLowerCase().replace("_","-"):a}function u(a){for(var b,c,d,e,f=0;f<a.length;){for(e=t(a[f]).split("-"),b=e.length,c=t(a[f+1]),c=c?c.split("-"):null;b>0;){if(d=v(e.slice(0,b).join("-")))return d;if(c&&c.length>=b&&r(e,c,!0)>=b-1)break;b--}f++}return null}function v(a){var b=null;if(!Lc[a]&&"undefined"!=typeof module&&module&&module.exports)try{b=Ic._abbr,require("./locale/"+a),w(b)}catch(c){}return Lc[a]}function w(a,b){var c;return a&&(c="undefined"==typeof b?y(a):x(a,b),c&&(Ic=c)),Ic._abbr}function x(a,b){return null!==b?(b.abbr=a,Lc[a]=Lc[a]||new s,Lc[a].set(b),w(a),Lc[a]):(delete Lc[a],null)}function y(a){var b;if(a&&a._locale&&a._locale._abbr&&(a=a._locale._abbr),!a)return Ic;if(!c(a)){if(b=v(a))return b;a=[a]}return u(a)}function z(a,b){var c=a.toLowerCase();Mc[c]=Mc[c+"s"]=Mc[b]=a}function A(a){return"string"==typeof a?Mc[a]||Mc[a.toLowerCase()]:void 0}function B(a){var b,c,d={};for(c in a)f(a,c)&&(b=A(c),b&&(d[b]=a[c]));return d}function C(b,c){return function(d){return null!=d?(E(this,b,d),a.updateOffset(this,c),this):D(this,b)}}function D(a,b){return a._d["get"+(a._isUTC?"UTC":"")+b]()}function E(a,b,c){return a._d["set"+(a._isUTC?"UTC":"")+b](c)}function F(a,b){var c;if("object"==typeof a)for(c in a)this.set(c,a[c]);else if(a=A(a),"function"==typeof this[a])return this[a](b);return this}function G(a,b,c){var d=""+Math.abs(a),e=b-d.length,f=a>=0;return(f?c?"+":"":"-")+Math.pow(10,Math.max(0,e)).toString().substr(1)+d}function H(a,b,c,d){var e=d;"string"==typeof d&&(e=function(){return this[d]()}),a&&(Qc[a]=e),b&&(Qc[b[0]]=function(){return G(e.apply(this,arguments),b[1],b[2])}),c&&(Qc[c]=function(){return this.localeData().ordinal(e.apply(this,arguments),a)})}function I(a){return a.match(/\[[\s\S]/)?a.replace(/^\[|\]$/g,""):a.replace(/\\/g,"")}function J(a){var b,c,d=a.match(Nc);for(b=0,c=d.length;c>b;b++)Qc[d[b]]?d[b]=Qc[d[b]]:d[b]=I(d[b]);return function(e){var f="";for(b=0;c>b;b++)f+=d[b]instanceof Function?d[b].call(e,a):d[b];return f}}function K(a,b){return a.isValid()?(b=L(b,a.localeData()),Pc[b]=Pc[b]||J(b),Pc[b](a)):a.localeData().invalidDate()}function L(a,b){function c(a){return b.longDateFormat(a)||a}var d=5;for(Oc.lastIndex=0;d>=0&&Oc.test(a);)a=a.replace(Oc,c),Oc.lastIndex=0,d-=1;return a}function M(a){return"function"==typeof a&&"[object Function]"===Object.prototype.toString.call(a)}function N(a,b,c){dd[a]=M(b)?b:function(a){return a&&c?c:b}}function O(a,b){return f(dd,a)?dd[a](b._strict,b._locale):new RegExp(P(a))}function P(a){return a.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(a,b,c,d,e){return b||c||d||e}).replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function Q(a,b){var c,d=b;for("string"==typeof a&&(a=[a]),"number"==typeof b&&(d=function(a,c){c[b]=q(a)}),c=0;c<a.length;c++)ed[a[c]]=d}function R(a,b){Q(a,function(a,c,d,e){d._w=d._w||{},b(a,d._w,d,e)})}function S(a,b,c){null!=b&&f(ed,a)&&ed[a](b,c._a,c,a)}function T(a,b){return new Date(Date.UTC(a,b+1,0)).getUTCDate()}function U(a){return this._months[a.month()]}function V(a){return this._monthsShort[a.month()]}function W(a,b,c){var d,e,f;for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),d=0;12>d;d++){if(e=h([2e3,d]),c&&!this._longMonthsParse[d]&&(this._longMonthsParse[d]=new RegExp("^"+this.months(e,"").replace(".","")+"$","i"),this._shortMonthsParse[d]=new RegExp("^"+this.monthsShort(e,"").replace(".","")+"$","i")),c||this._monthsParse[d]||(f="^"+this.months(e,"")+"|^"+this.monthsShort(e,""),this._monthsParse[d]=new RegExp(f.replace(".",""),"i")),c&&"MMMM"===b&&this._longMonthsParse[d].test(a))return d;if(c&&"MMM"===b&&this._shortMonthsParse[d].test(a))return d;if(!c&&this._monthsParse[d].test(a))return d}}function X(a,b){var c;return"string"==typeof b&&(b=a.localeData().monthsParse(b),"number"!=typeof b)?a:(c=Math.min(a.date(),T(a.year(),b)),a._d["set"+(a._isUTC?"UTC":"")+"Month"](b,c),a)}function Y(b){return null!=b?(X(this,b),a.updateOffset(this,!0),this):D(this,"Month")}function Z(){return T(this.year(),this.month())}function $(a){var b,c=a._a;return c&&-2===j(a).overflow&&(b=c[gd]<0||c[gd]>11?gd:c[hd]<1||c[hd]>T(c[fd],c[gd])?hd:c[id]<0||c[id]>24||24===c[id]&&(0!==c[jd]||0!==c[kd]||0!==c[ld])?id:c[jd]<0||c[jd]>59?jd:c[kd]<0||c[kd]>59?kd:c[ld]<0||c[ld]>999?ld:-1,j(a)._overflowDayOfYear&&(fd>b||b>hd)&&(b=hd),j(a).overflow=b),a}function _(b){a.suppressDeprecationWarnings===!1&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+b)}function aa(a,b){var c=!0;return g(function(){return c&&(_(a+"\n"+(new Error).stack),c=!1),b.apply(this,arguments)},b)}function ba(a,b){od[a]||(_(b),od[a]=!0)}function ca(a){var b,c,d=a._i,e=pd.exec(d);if(e){for(j(a).iso=!0,b=0,c=qd.length;c>b;b++)if(qd[b][1].exec(d)){a._f=qd[b][0];break}for(b=0,c=rd.length;c>b;b++)if(rd[b][1].exec(d)){a._f+=(e[6]||" ")+rd[b][0];break}d.match(ad)&&(a._f+="Z"),va(a)}else a._isValid=!1}function da(b){var c=sd.exec(b._i);return null!==c?void(b._d=new Date(+c[1])):(ca(b),void(b._isValid===!1&&(delete b._isValid,a.createFromInputFallback(b))))}function ea(a,b,c,d,e,f,g){var h=new Date(a,b,c,d,e,f,g);return 1970>a&&h.setFullYear(a),h}function fa(a){var b=new Date(Date.UTC.apply(null,arguments));return 1970>a&&b.setUTCFullYear(a),b}function ga(a){return ha(a)?366:365}function ha(a){return a%4===0&&a%100!==0||a%400===0}function ia(){return ha(this.year())}function ja(a,b,c){var d,e=c-b,f=c-a.day();return f>e&&(f-=7),e-7>f&&(f+=7),d=Da(a).add(f,"d"),{week:Math.ceil(d.dayOfYear()/7),year:d.year()}}function ka(a){return ja(a,this._week.dow,this._week.doy).week}function la(){return this._week.dow}function ma(){return this._week.doy}function na(a){var b=this.localeData().week(this);return null==a?b:this.add(7*(a-b),"d")}function oa(a){var b=ja(this,1,4).week;return null==a?b:this.add(7*(a-b),"d")}function pa(a,b,c,d,e){var f,g=6+e-d,h=fa(a,0,1+g),i=h.getUTCDay();return e>i&&(i+=7),c=null!=c?1*c:e,f=1+g+7*(b-1)-i+c,{year:f>0?a:a-1,dayOfYear:f>0?f:ga(a-1)+f}}function qa(a){var b=Math.round((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==a?b:this.add(a-b,"d")}function ra(a,b,c){return null!=a?a:null!=b?b:c}function sa(a){var b=new Date;return a._useUTC?[b.getUTCFullYear(),b.getUTCMonth(),b.getUTCDate()]:[b.getFullYear(),b.getMonth(),b.getDate()]}function ta(a){var b,c,d,e,f=[];if(!a._d){for(d=sa(a),a._w&&null==a._a[hd]&&null==a._a[gd]&&ua(a),a._dayOfYear&&(e=ra(a._a[fd],d[fd]),a._dayOfYear>ga(e)&&(j(a)._overflowDayOfYear=!0),c=fa(e,0,a._dayOfYear),a._a[gd]=c.getUTCMonth(),a._a[hd]=c.getUTCDate()),b=0;3>b&&null==a._a[b];++b)a._a[b]=f[b]=d[b];for(;7>b;b++)a._a[b]=f[b]=null==a._a[b]?2===b?1:0:a._a[b];24===a._a[id]&&0===a._a[jd]&&0===a._a[kd]&&0===a._a[ld]&&(a._nextDay=!0,a._a[id]=0),a._d=(a._useUTC?fa:ea).apply(null,f),null!=a._tzm&&a._d.setUTCMinutes(a._d.getUTCMinutes()-a._tzm),a._nextDay&&(a._a[id]=24)}}function ua(a){var b,c,d,e,f,g,h;b=a._w,null!=b.GG||null!=b.W||null!=b.E?(f=1,g=4,c=ra(b.GG,a._a[fd],ja(Da(),1,4).year),d=ra(b.W,1),e=ra(b.E,1)):(f=a._locale._week.dow,g=a._locale._week.doy,c=ra(b.gg,a._a[fd],ja(Da(),f,g).year),d=ra(b.w,1),null!=b.d?(e=b.d,f>e&&++d):e=null!=b.e?b.e+f:f),h=pa(c,d,e,g,f),a._a[fd]=h.year,a._dayOfYear=h.dayOfYear}function va(b){if(b._f===a.ISO_8601)return void ca(b);b._a=[],j(b).empty=!0;var c,d,e,f,g,h=""+b._i,i=h.length,k=0;for(e=L(b._f,b._locale).match(Nc)||[],c=0;c<e.length;c++)f=e[c],d=(h.match(O(f,b))||[])[0],d&&(g=h.substr(0,h.indexOf(d)),g.length>0&&j(b).unusedInput.push(g),h=h.slice(h.indexOf(d)+d.length),k+=d.length),Qc[f]?(d?j(b).empty=!1:j(b).unusedTokens.push(f),S(f,d,b)):b._strict&&!d&&j(b).unusedTokens.push(f);j(b).charsLeftOver=i-k,h.length>0&&j(b).unusedInput.push(h),j(b).bigHour===!0&&b._a[id]<=12&&b._a[id]>0&&(j(b).bigHour=void 0),b._a[id]=wa(b._locale,b._a[id],b._meridiem),ta(b),$(b)}function wa(a,b,c){var d;return null==c?b:null!=a.meridiemHour?a.meridiemHour(b,c):null!=a.isPM?(d=a.isPM(c),d&&12>b&&(b+=12),d||12!==b||(b=0),b):b}function xa(a){var b,c,d,e,f;if(0===a._f.length)return j(a).invalidFormat=!0,void(a._d=new Date(NaN));for(e=0;e<a._f.length;e++)f=0,b=m({},a),null!=a._useUTC&&(b._useUTC=a._useUTC),b._f=a._f[e],va(b),k(b)&&(f+=j(b).charsLeftOver,f+=10*j(b).unusedTokens.length,j(b).score=f,(null==d||d>f)&&(d=f,c=b));g(a,c||b)}function ya(a){if(!a._d){var b=B(a._i);a._a=[b.year,b.month,b.day||b.date,b.hour,b.minute,b.second,b.millisecond],ta(a)}}function za(a){var b=new n($(Aa(a)));return b._nextDay&&(b.add(1,"d"),b._nextDay=void 0),b}function Aa(a){var b=a._i,e=a._f;return a._locale=a._locale||y(a._l),null===b||void 0===e&&""===b?l({nullInput:!0}):("string"==typeof b&&(a._i=b=a._locale.preparse(b)),o(b)?new n($(b)):(c(e)?xa(a):e?va(a):d(b)?a._d=b:Ba(a),a))}function Ba(b){var f=b._i;void 0===f?b._d=new Date:d(f)?b._d=new Date(+f):"string"==typeof f?da(b):c(f)?(b._a=e(f.slice(0),function(a){return parseInt(a,10)}),ta(b)):"object"==typeof f?ya(b):"number"==typeof f?b._d=new Date(f):a.createFromInputFallback(b)}function Ca(a,b,c,d,e){var f={};return"boolean"==typeof c&&(d=c,c=void 0),f._isAMomentObject=!0,f._useUTC=f._isUTC=e,f._l=c,f._i=a,f._f=b,f._strict=d,za(f)}function Da(a,b,c,d){return Ca(a,b,c,d,!1)}function Ea(a,b){var d,e;if(1===b.length&&c(b[0])&&(b=b[0]),!b.length)return Da();for(d=b[0],e=1;e<b.length;++e)(!b[e].isValid()||b[e][a](d))&&(d=b[e]);return d}function Fa(){var a=[].slice.call(arguments,0);return Ea("isBefore",a)}function Ga(){var a=[].slice.call(arguments,0);return Ea("isAfter",a)}function Ha(a){var b=B(a),c=b.year||0,d=b.quarter||0,e=b.month||0,f=b.week||0,g=b.day||0,h=b.hour||0,i=b.minute||0,j=b.second||0,k=b.millisecond||0;this._milliseconds=+k+1e3*j+6e4*i+36e5*h,this._days=+g+7*f,this._months=+e+3*d+12*c,this._data={},this._locale=y(),this._bubble()}function Ia(a){return a instanceof Ha}function Ja(a,b){H(a,0,0,function(){var a=this.utcOffset(),c="+";return 0>a&&(a=-a,c="-"),c+G(~~(a/60),2)+b+G(~~a%60,2)})}function Ka(a){var b=(a||"").match(ad)||[],c=b[b.length-1]||[],d=(c+"").match(xd)||["-",0,0],e=+(60*d[1])+q(d[2]);return"+"===d[0]?e:-e}function La(b,c){var e,f;return c._isUTC?(e=c.clone(),f=(o(b)||d(b)?+b:+Da(b))-+e,e._d.setTime(+e._d+f),a.updateOffset(e,!1),e):Da(b).local()}function Ma(a){return 15*-Math.round(a._d.getTimezoneOffset()/15)}function Na(b,c){var d,e=this._offset||0;return null!=b?("string"==typeof b&&(b=Ka(b)),Math.abs(b)<16&&(b=60*b),!this._isUTC&&c&&(d=Ma(this)),this._offset=b,this._isUTC=!0,null!=d&&this.add(d,"m"),e!==b&&(!c||this._changeInProgress?bb(this,Ya(b-e,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,a.updateOffset(this,!0),this._changeInProgress=null)),this):this._isUTC?e:Ma(this)}function Oa(a,b){return null!=a?("string"!=typeof a&&(a=-a),this.utcOffset(a,b),this):-this.utcOffset()}function Pa(a){return this.utcOffset(0,a)}function Qa(a){return this._isUTC&&(this.utcOffset(0,a),this._isUTC=!1,a&&this.subtract(Ma(this),"m")),this}function Ra(){return this._tzm?this.utcOffset(this._tzm):"string"==typeof this._i&&this.utcOffset(Ka(this._i)),this}function Sa(a){return a=a?Da(a).utcOffset():0,(this.utcOffset()-a)%60===0}function Ta(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()}function Ua(){if("undefined"!=typeof this._isDSTShifted)return this._isDSTShifted;var a={};if(m(a,this),a=Aa(a),a._a){var b=a._isUTC?h(a._a):Da(a._a);this._isDSTShifted=this.isValid()&&r(a._a,b.toArray())>0}else this._isDSTShifted=!1;return this._isDSTShifted}function Va(){return!this._isUTC}function Wa(){return this._isUTC}function Xa(){return this._isUTC&&0===this._offset}function Ya(a,b){var c,d,e,g=a,h=null;return Ia(a)?g={ms:a._milliseconds,d:a._days,M:a._months}:"number"==typeof a?(g={},b?g[b]=a:g.milliseconds=a):(h=yd.exec(a))?(c="-"===h[1]?-1:1,g={y:0,d:q(h[hd])*c,h:q(h[id])*c,m:q(h[jd])*c,s:q(h[kd])*c,ms:q(h[ld])*c}):(h=zd.exec(a))?(c="-"===h[1]?-1:1,g={y:Za(h[2],c),M:Za(h[3],c),d:Za(h[4],c),h:Za(h[5],c),m:Za(h[6],c),s:Za(h[7],c),w:Za(h[8],c)}):null==g?g={}:"object"==typeof g&&("from"in g||"to"in g)&&(e=_a(Da(g.from),Da(g.to)),g={},g.ms=e.milliseconds,g.M=e.months),d=new Ha(g),Ia(a)&&f(a,"_locale")&&(d._locale=a._locale),d}function Za(a,b){var c=a&&parseFloat(a.replace(",","."));return(isNaN(c)?0:c)*b}function $a(a,b){var c={milliseconds:0,months:0};return c.months=b.month()-a.month()+12*(b.year()-a.year()),a.clone().add(c.months,"M").isAfter(b)&&--c.months,c.milliseconds=+b-+a.clone().add(c.months,"M"),c}function _a(a,b){var c;return b=La(b,a),a.isBefore(b)?c=$a(a,b):(c=$a(b,a),c.milliseconds=-c.milliseconds,c.months=-c.months),c}function ab(a,b){return function(c,d){var e,f;return null===d||isNaN(+d)||(ba(b,"moment()."+b+"(period, number) is deprecated. Please use moment()."+b+"(number, period)."),f=c,c=d,d=f),c="string"==typeof c?+c:c,e=Ya(c,d),bb(this,e,a),this}}function bb(b,c,d,e){var f=c._milliseconds,g=c._days,h=c._months;e=null==e?!0:e,f&&b._d.setTime(+b._d+f*d),g&&E(b,"Date",D(b,"Date")+g*d),h&&X(b,D(b,"Month")+h*d),e&&a.updateOffset(b,g||h)}function cb(a,b){var c=a||Da(),d=La(c,this).startOf("day"),e=this.diff(d,"days",!0),f=-6>e?"sameElse":-1>e?"lastWeek":0>e?"lastDay":1>e?"sameDay":2>e?"nextDay":7>e?"nextWeek":"sameElse";return this.format(b&&b[f]||this.localeData().calendar(f,this,Da(c)))}function db(){return new n(this)}function eb(a,b){var c;return b=A("undefined"!=typeof b?b:"millisecond"),"millisecond"===b?(a=o(a)?a:Da(a),+this>+a):(c=o(a)?+a:+Da(a),c<+this.clone().startOf(b))}function fb(a,b){var c;return b=A("undefined"!=typeof b?b:"millisecond"),"millisecond"===b?(a=o(a)?a:Da(a),+a>+this):(c=o(a)?+a:+Da(a),+this.clone().endOf(b)<c)}function gb(a,b,c){return this.isAfter(a,c)&&this.isBefore(b,c)}function hb(a,b){var c;return b=A(b||"millisecond"),"millisecond"===b?(a=o(a)?a:Da(a),+this===+a):(c=+Da(a),+this.clone().startOf(b)<=c&&c<=+this.clone().endOf(b))}function ib(a,b,c){var d,e,f=La(a,this),g=6e4*(f.utcOffset()-this.utcOffset());return b=A(b),"year"===b||"month"===b||"quarter"===b?(e=jb(this,f),"quarter"===b?e/=3:"year"===b&&(e/=12)):(d=this-f,e="second"===b?d/1e3:"minute"===b?d/6e4:"hour"===b?d/36e5:"day"===b?(d-g)/864e5:"week"===b?(d-g)/6048e5:d),c?e:p(e)}function jb(a,b){var c,d,e=12*(b.year()-a.year())+(b.month()-a.month()),f=a.clone().add(e,"months");return 0>b-f?(c=a.clone().add(e-1,"months"),d=(b-f)/(f-c)):(c=a.clone().add(e+1,"months"),d=(b-f)/(c-f)),-(e+d)}function kb(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")}function lb(){var a=this.clone().utc();return 0<a.year()&&a.year()<=9999?"function"==typeof Date.prototype.toISOString?this.toDate().toISOString():K(a,"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]"):K(a,"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]")}function mb(b){var c=K(this,b||a.defaultFormat);return this.localeData().postformat(c)}function nb(a,b){return this.isValid()?Ya({to:this,from:a}).locale(this.locale()).humanize(!b):this.localeData().invalidDate()}function ob(a){return this.from(Da(),a)}function pb(a,b){return this.isValid()?Ya({from:this,to:a}).locale(this.locale()).humanize(!b):this.localeData().invalidDate()}function qb(a){return this.to(Da(),a)}function rb(a){var b;return void 0===a?this._locale._abbr:(b=y(a),null!=b&&(this._locale=b),this)}function sb(){return this._locale}function tb(a){switch(a=A(a)){case"year":this.month(0);case"quarter":case"month":this.date(1);case"week":case"isoWeek":case"day":this.hours(0);case"hour":this.minutes(0);case"minute":this.seconds(0);case"second":this.milliseconds(0)}return"week"===a&&this.weekday(0),"isoWeek"===a&&this.isoWeekday(1),"quarter"===a&&this.month(3*Math.floor(this.month()/3)),this}function ub(a){return a=A(a),void 0===a||"millisecond"===a?this:this.startOf(a).add(1,"isoWeek"===a?"week":a).subtract(1,"ms")}function vb(){return+this._d-6e4*(this._offset||0)}function wb(){return Math.floor(+this/1e3)}function xb(){return this._offset?new Date(+this):this._d}function yb(){var a=this;return[a.year(),a.month(),a.date(),a.hour(),a.minute(),a.second(),a.millisecond()]}function zb(){var a=this;return{years:a.year(),months:a.month(),date:a.date(),hours:a.hours(),minutes:a.minutes(),seconds:a.seconds(),milliseconds:a.milliseconds()}}function Ab(){return k(this)}function Bb(){return g({},j(this))}function Cb(){return j(this).overflow}function Db(a,b){H(0,[a,a.length],0,b)}function Eb(a,b,c){return ja(Da([a,11,31+b-c]),b,c).week}function Fb(a){var b=ja(this,this.localeData()._week.dow,this.localeData()._week.doy).year;return null==a?b:this.add(a-b,"y")}function Gb(a){var b=ja(this,1,4).year;return null==a?b:this.add(a-b,"y")}function Hb(){return Eb(this.year(),1,4)}function Ib(){var a=this.localeData()._week;return Eb(this.year(),a.dow,a.doy)}function Jb(a){return null==a?Math.ceil((this.month()+1)/3):this.month(3*(a-1)+this.month()%3)}function Kb(a,b){return"string"!=typeof a?a:isNaN(a)?(a=b.weekdaysParse(a),"number"==typeof a?a:null):parseInt(a,10)}function Lb(a){return this._weekdays[a.day()]}function Mb(a){return this._weekdaysShort[a.day()]}function Nb(a){return this._weekdaysMin[a.day()]}function Ob(a){var b,c,d;for(this._weekdaysParse=this._weekdaysParse||[],b=0;7>b;b++)if(this._weekdaysParse[b]||(c=Da([2e3,1]).day(b),d="^"+this.weekdays(c,"")+"|^"+this.weekdaysShort(c,"")+"|^"+this.weekdaysMin(c,""),this._weekdaysParse[b]=new RegExp(d.replace(".",""),"i")),this._weekdaysParse[b].test(a))return b}function Pb(a){var b=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=a?(a=Kb(a,this.localeData()),this.add(a-b,"d")):b}function Qb(a){var b=(this.day()+7-this.localeData()._week.dow)%7;return null==a?b:this.add(a-b,"d")}function Rb(a){return null==a?this.day()||7:this.day(this.day()%7?a:a-7)}function Sb(a,b){H(a,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),b)})}function Tb(a,b){return b._meridiemParse}function Ub(a){return"p"===(a+"").toLowerCase().charAt(0)}function Vb(a,b,c){return a>11?c?"pm":"PM":c?"am":"AM"}function Wb(a,b){b[ld]=q(1e3*("0."+a))}function Xb(){return this._isUTC?"UTC":""}function Yb(){return this._isUTC?"Coordinated Universal Time":""}function Zb(a){return Da(1e3*a)}function $b(){return Da.apply(null,arguments).parseZone()}function _b(a,b,c){var d=this._calendar[a];return"function"==typeof d?d.call(b,c):d}function ac(a){var b=this._longDateFormat[a],c=this._longDateFormat[a.toUpperCase()];return b||!c?b:(this._longDateFormat[a]=c.replace(/MMMM|MM|DD|dddd/g,function(a){return a.slice(1)}),this._longDateFormat[a])}function bc(){return this._invalidDate}function cc(a){return this._ordinal.replace("%d",a)}function dc(a){return a}function ec(a,b,c,d){var e=this._relativeTime[c];return"function"==typeof e?e(a,b,c,d):e.replace(/%d/i,a)}function fc(a,b){var c=this._relativeTime[a>0?"future":"past"];return"function"==typeof c?c(b):c.replace(/%s/i,b)}function gc(a){var b,c;for(c in a)b=a[c],"function"==typeof b?this[c]=b:this["_"+c]=b;this._ordinalParseLenient=new RegExp(this._ordinalParse.source+"|"+/\d{1,2}/.source)}function hc(a,b,c,d){var e=y(),f=h().set(d,b);return e[c](f,a)}function ic(a,b,c,d,e){if("number"==typeof a&&(b=a,a=void 0),a=a||"",null!=b)return hc(a,b,c,e);var f,g=[];for(f=0;d>f;f++)g[f]=hc(a,f,c,e);return g}function jc(a,b){return ic(a,b,"months",12,"month")}function kc(a,b){return ic(a,b,"monthsShort",12,"month")}function lc(a,b){return ic(a,b,"weekdays",7,"day")}function mc(a,b){return ic(a,b,"weekdaysShort",7,"day")}function nc(a,b){return ic(a,b,"weekdaysMin",7,"day")}function oc(){var a=this._data;return this._milliseconds=Wd(this._milliseconds),this._days=Wd(this._days),this._months=Wd(this._months),a.milliseconds=Wd(a.milliseconds),a.seconds=Wd(a.seconds),a.minutes=Wd(a.minutes),a.hours=Wd(a.hours),a.months=Wd(a.months),a.years=Wd(a.years),this}function pc(a,b,c,d){var e=Ya(b,c);return a._milliseconds+=d*e._milliseconds,a._days+=d*e._days,a._months+=d*e._months,a._bubble()}function qc(a,b){return pc(this,a,b,1)}function rc(a,b){return pc(this,a,b,-1)}function sc(a){return 0>a?Math.floor(a):Math.ceil(a)}function tc(){var a,b,c,d,e,f=this._milliseconds,g=this._days,h=this._months,i=this._data;return f>=0&&g>=0&&h>=0||0>=f&&0>=g&&0>=h||(f+=864e5*sc(vc(h)+g),g=0,h=0),i.milliseconds=f%1e3,a=p(f/1e3),i.seconds=a%60,b=p(a/60),i.minutes=b%60,c=p(b/60),i.hours=c%24,g+=p(c/24),e=p(uc(g)),h+=e,g-=sc(vc(e)),d=p(h/12),h%=12,i.days=g,i.months=h,i.years=d,this}function uc(a){return 4800*a/146097}function vc(a){return 146097*a/4800}function wc(a){var b,c,d=this._milliseconds;if(a=A(a),"month"===a||"year"===a)return b=this._days+d/864e5,c=this._months+uc(b),"month"===a?c:c/12;switch(b=this._days+Math.round(vc(this._months)),a){case"week":return b/7+d/6048e5;case"day":return b+d/864e5;case"hour":return 24*b+d/36e5;case"minute":return 1440*b+d/6e4;case"second":return 86400*b+d/1e3;case"millisecond":return Math.floor(864e5*b)+d;default:throw new Error("Unknown unit "+a)}}function xc(){return this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*q(this._months/12)}function yc(a){return function(){return this.as(a)}}function zc(a){return a=A(a),this[a+"s"]()}function Ac(a){return function(){return this._data[a]}}function Bc(){return p(this.days()/7)}function Cc(a,b,c,d,e){return e.relativeTime(b||1,!!c,a,d)}function Dc(a,b,c){var d=Ya(a).abs(),e=ke(d.as("s")),f=ke(d.as("m")),g=ke(d.as("h")),h=ke(d.as("d")),i=ke(d.as("M")),j=ke(d.as("y")),k=e<le.s&&["s",e]||1===f&&["m"]||f<le.m&&["mm",f]||1===g&&["h"]||g<le.h&&["hh",g]||1===h&&["d"]||h<le.d&&["dd",h]||1===i&&["M"]||i<le.M&&["MM",i]||1===j&&["y"]||["yy",j];return k[2]=b,k[3]=+a>0,k[4]=c,Cc.apply(null,k)}function Ec(a,b){return void 0===le[a]?!1:void 0===b?le[a]:(le[a]=b,!0)}function Fc(a){var b=this.localeData(),c=Dc(this,!a,b);return a&&(c=b.pastFuture(+this,c)),b.postformat(c)}function Gc(){var a,b,c,d=me(this._milliseconds)/1e3,e=me(this._days),f=me(this._months);a=p(d/60),b=p(a/60),d%=60,a%=60,c=p(f/12),f%=12;var g=c,h=f,i=e,j=b,k=a,l=d,m=this.asSeconds();return m?(0>m?"-":"")+"P"+(g?g+"Y":"")+(h?h+"M":"")+(i?i+"D":"")+(j||k||l?"T":"")+(j?j+"H":"")+(k?k+"M":"")+(l?l+"S":""):"P0D"}var Hc,Ic,Jc=a.momentProperties=[],Kc=!1,Lc={},Mc={},Nc=/(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,Oc=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,Pc={},Qc={},Rc=/\d/,Sc=/\d\d/,Tc=/\d{3}/,Uc=/\d{4}/,Vc=/[+-]?\d{6}/,Wc=/\d\d?/,Xc=/\d{1,3}/,Yc=/\d{1,4}/,Zc=/[+-]?\d{1,6}/,$c=/\d+/,_c=/[+-]?\d+/,ad=/Z|[+-]\d\d:?\d\d/gi,bd=/[+-]?\d+(\.\d{1,3})?/,cd=/[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,dd={},ed={},fd=0,gd=1,hd=2,id=3,jd=4,kd=5,ld=6;H("M",["MM",2],"Mo",function(){return this.month()+1}),H("MMM",0,0,function(a){return this.localeData().monthsShort(this,a)}),H("MMMM",0,0,function(a){return this.localeData().months(this,a)}),z("month","M"),N("M",Wc),N("MM",Wc,Sc),N("MMM",cd),N("MMMM",cd),Q(["M","MM"],function(a,b){b[gd]=q(a)-1}),Q(["MMM","MMMM"],function(a,b,c,d){var e=c._locale.monthsParse(a,d,c._strict);null!=e?b[gd]=e:j(c).invalidMonth=a});var md="January_February_March_April_May_June_July_August_September_October_November_December".split("_"),nd="Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),od={};a.suppressDeprecationWarnings=!1;var pd=/^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,qd=[["YYYYYY-MM-DD",/[+-]\d{6}-\d{2}-\d{2}/],["YYYY-MM-DD",/\d{4}-\d{2}-\d{2}/],["GGGG-[W]WW-E",/\d{4}-W\d{2}-\d/],["GGGG-[W]WW",/\d{4}-W\d{2}/],["YYYY-DDD",/\d{4}-\d{3}/]],rd=[["HH:mm:ss.SSSS",/(T| )\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss",/(T| )\d\d:\d\d:\d\d/],["HH:mm",/(T| )\d\d:\d\d/],["HH",/(T| )\d\d/]],sd=/^\/?Date\((\-?\d+)/i;a.createFromInputFallback=aa("moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to https://github.com/moment/moment/issues/1407 for more info.",function(a){a._d=new Date(a._i+(a._useUTC?" UTC":""))}),H(0,["YY",2],0,function(){return this.year()%100}),H(0,["YYYY",4],0,"year"),H(0,["YYYYY",5],0,"year"),H(0,["YYYYYY",6,!0],0,"year"),z("year","y"),N("Y",_c),N("YY",Wc,Sc),N("YYYY",Yc,Uc),N("YYYYY",Zc,Vc),N("YYYYYY",Zc,Vc),Q(["YYYYY","YYYYYY"],fd),Q("YYYY",function(b,c){c[fd]=2===b.length?a.parseTwoDigitYear(b):q(b)}),Q("YY",function(b,c){c[fd]=a.parseTwoDigitYear(b)}),a.parseTwoDigitYear=function(a){return q(a)+(q(a)>68?1900:2e3)};var td=C("FullYear",!1);H("w",["ww",2],"wo","week"),H("W",["WW",2],"Wo","isoWeek"),z("week","w"),z("isoWeek","W"),N("w",Wc),N("ww",Wc,Sc),N("W",Wc),N("WW",Wc,Sc),R(["w","ww","W","WW"],function(a,b,c,d){b[d.substr(0,1)]=q(a)});var ud={dow:0,doy:6};H("DDD",["DDDD",3],"DDDo","dayOfYear"),z("dayOfYear","DDD"),N("DDD",Xc),N("DDDD",Tc),Q(["DDD","DDDD"],function(a,b,c){c._dayOfYear=q(a)}),a.ISO_8601=function(){};var vd=aa("moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548",function(){var a=Da.apply(null,arguments);return this>a?this:a}),wd=aa("moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548",function(){var a=Da.apply(null,arguments);return a>this?this:a});Ja("Z",":"),Ja("ZZ",""),N("Z",ad),N("ZZ",ad),Q(["Z","ZZ"],function(a,b,c){c._useUTC=!0,c._tzm=Ka(a)});var xd=/([\+\-]|\d\d)/gi;a.updateOffset=function(){};var yd=/(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/,zd=/^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/;Ya.fn=Ha.prototype;var Ad=ab(1,"add"),Bd=ab(-1,"subtract");a.defaultFormat="YYYY-MM-DDTHH:mm:ssZ";var Cd=aa("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",function(a){return void 0===a?this.localeData():this.locale(a)});H(0,["gg",2],0,function(){return this.weekYear()%100}),H(0,["GG",2],0,function(){return this.isoWeekYear()%100}),Db("gggg","weekYear"),Db("ggggg","weekYear"),Db("GGGG","isoWeekYear"),Db("GGGGG","isoWeekYear"),z("weekYear","gg"),z("isoWeekYear","GG"),N("G",_c),N("g",_c),N("GG",Wc,Sc),N("gg",Wc,Sc),N("GGGG",Yc,Uc),N("gggg",Yc,Uc),N("GGGGG",Zc,Vc),N("ggggg",Zc,Vc),R(["gggg","ggggg","GGGG","GGGGG"],function(a,b,c,d){b[d.substr(0,2)]=q(a)}),R(["gg","GG"],function(b,c,d,e){c[e]=a.parseTwoDigitYear(b)}),H("Q",0,0,"quarter"),z("quarter","Q"),N("Q",Rc),Q("Q",function(a,b){b[gd]=3*(q(a)-1)}),H("D",["DD",2],"Do","date"),z("date","D"),N("D",Wc),N("DD",Wc,Sc),N("Do",function(a,b){return a?b._ordinalParse:b._ordinalParseLenient}),Q(["D","DD"],hd),Q("Do",function(a,b){b[hd]=q(a.match(Wc)[0],10)});var Dd=C("Date",!0);H("d",0,"do","day"),H("dd",0,0,function(a){return this.localeData().weekdaysMin(this,a)}),H("ddd",0,0,function(a){return this.localeData().weekdaysShort(this,a)}),H("dddd",0,0,function(a){return this.localeData().weekdays(this,a)}),H("e",0,0,"weekday"),H("E",0,0,"isoWeekday"),z("day","d"),z("weekday","e"),z("isoWeekday","E"),N("d",Wc),N("e",Wc),N("E",Wc),N("dd",cd),N("ddd",cd),N("dddd",cd),R(["dd","ddd","dddd"],function(a,b,c){var d=c._locale.weekdaysParse(a);null!=d?b.d=d:j(c).invalidWeekday=a}),R(["d","e","E"],function(a,b,c,d){b[d]=q(a)});var Ed="Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),Fd="Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),Gd="Su_Mo_Tu_We_Th_Fr_Sa".split("_");H("H",["HH",2],0,"hour"),H("h",["hh",2],0,function(){return this.hours()%12||12}),Sb("a",!0),Sb("A",!1),z("hour","h"),N("a",Tb),N("A",Tb),N("H",Wc),N("h",Wc),N("HH",Wc,Sc),N("hh",Wc,Sc),Q(["H","HH"],id),Q(["a","A"],function(a,b,c){c._isPm=c._locale.isPM(a),c._meridiem=a}),Q(["h","hh"],function(a,b,c){b[id]=q(a),j(c).bigHour=!0});var Hd=/[ap]\.?m?\.?/i,Id=C("Hours",!0);H("m",["mm",2],0,"minute"),z("minute","m"),N("m",Wc),N("mm",Wc,Sc),Q(["m","mm"],jd);var Jd=C("Minutes",!1);H("s",["ss",2],0,"second"),z("second","s"),N("s",Wc),N("ss",Wc,Sc),Q(["s","ss"],kd);var Kd=C("Seconds",!1);H("S",0,0,function(){return~~(this.millisecond()/100)}),H(0,["SS",2],0,function(){return~~(this.millisecond()/10)}),H(0,["SSS",3],0,"millisecond"),H(0,["SSSS",4],0,function(){return 10*this.millisecond()}),H(0,["SSSSS",5],0,function(){return 100*this.millisecond()}),H(0,["SSSSSS",6],0,function(){return 1e3*this.millisecond()}),H(0,["SSSSSSS",7],0,function(){return 1e4*this.millisecond()}),H(0,["SSSSSSSS",8],0,function(){return 1e5*this.millisecond()}),H(0,["SSSSSSSSS",9],0,function(){return 1e6*this.millisecond()}),z("millisecond","ms"),N("S",Xc,Rc),N("SS",Xc,Sc),N("SSS",Xc,Tc);var Ld;for(Ld="SSSS";Ld.length<=9;Ld+="S")N(Ld,$c);for(Ld="S";Ld.length<=9;Ld+="S")Q(Ld,Wb);var Md=C("Milliseconds",!1);H("z",0,0,"zoneAbbr"),H("zz",0,0,"zoneName");var Nd=n.prototype;Nd.add=Ad,Nd.calendar=cb,Nd.clone=db,Nd.diff=ib,Nd.endOf=ub,Nd.format=mb,Nd.from=nb,Nd.fromNow=ob,Nd.to=pb,Nd.toNow=qb,Nd.get=F,Nd.invalidAt=Cb,Nd.isAfter=eb,Nd.isBefore=fb,Nd.isBetween=gb,Nd.isSame=hb,Nd.isValid=Ab,Nd.lang=Cd,Nd.locale=rb,Nd.localeData=sb,Nd.max=wd,Nd.min=vd,Nd.parsingFlags=Bb,Nd.set=F,Nd.startOf=tb,Nd.subtract=Bd,Nd.toArray=yb,Nd.toObject=zb,Nd.toDate=xb,Nd.toISOString=lb,Nd.toJSON=lb,Nd.toString=kb,Nd.unix=wb,Nd.valueOf=vb,Nd.year=td,Nd.isLeapYear=ia,Nd.weekYear=Fb,Nd.isoWeekYear=Gb,Nd.quarter=Nd.quarters=Jb,Nd.month=Y,Nd.daysInMonth=Z,Nd.week=Nd.weeks=na,Nd.isoWeek=Nd.isoWeeks=oa,Nd.weeksInYear=Ib,Nd.isoWeeksInYear=Hb,Nd.date=Dd,Nd.day=Nd.days=Pb,Nd.weekday=Qb,Nd.isoWeekday=Rb,Nd.dayOfYear=qa,Nd.hour=Nd.hours=Id,Nd.minute=Nd.minutes=Jd,Nd.second=Nd.seconds=Kd,
Nd.millisecond=Nd.milliseconds=Md,Nd.utcOffset=Na,Nd.utc=Pa,Nd.local=Qa,Nd.parseZone=Ra,Nd.hasAlignedHourOffset=Sa,Nd.isDST=Ta,Nd.isDSTShifted=Ua,Nd.isLocal=Va,Nd.isUtcOffset=Wa,Nd.isUtc=Xa,Nd.isUTC=Xa,Nd.zoneAbbr=Xb,Nd.zoneName=Yb,Nd.dates=aa("dates accessor is deprecated. Use date instead.",Dd),Nd.months=aa("months accessor is deprecated. Use month instead",Y),Nd.years=aa("years accessor is deprecated. Use year instead",td),Nd.zone=aa("moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779",Oa);var Od=Nd,Pd={sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},Qd={LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},Rd="Invalid date",Sd="%d",Td=/\d{1,2}/,Ud={future:"in %s",past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},Vd=s.prototype;Vd._calendar=Pd,Vd.calendar=_b,Vd._longDateFormat=Qd,Vd.longDateFormat=ac,Vd._invalidDate=Rd,Vd.invalidDate=bc,Vd._ordinal=Sd,Vd.ordinal=cc,Vd._ordinalParse=Td,Vd.preparse=dc,Vd.postformat=dc,Vd._relativeTime=Ud,Vd.relativeTime=ec,Vd.pastFuture=fc,Vd.set=gc,Vd.months=U,Vd._months=md,Vd.monthsShort=V,Vd._monthsShort=nd,Vd.monthsParse=W,Vd.week=ka,Vd._week=ud,Vd.firstDayOfYear=ma,Vd.firstDayOfWeek=la,Vd.weekdays=Lb,Vd._weekdays=Ed,Vd.weekdaysMin=Nb,Vd._weekdaysMin=Gd,Vd.weekdaysShort=Mb,Vd._weekdaysShort=Fd,Vd.weekdaysParse=Ob,Vd.isPM=Ub,Vd._meridiemParse=Hd,Vd.meridiem=Vb,w("en",{ordinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(a){var b=a%10,c=1===q(a%100/10)?"th":1===b?"st":2===b?"nd":3===b?"rd":"th";return a+c}}),a.lang=aa("moment.lang is deprecated. Use moment.locale instead.",w),a.langData=aa("moment.langData is deprecated. Use moment.localeData instead.",y);var Wd=Math.abs,Xd=yc("ms"),Yd=yc("s"),Zd=yc("m"),$d=yc("h"),_d=yc("d"),ae=yc("w"),be=yc("M"),ce=yc("y"),de=Ac("milliseconds"),ee=Ac("seconds"),fe=Ac("minutes"),ge=Ac("hours"),he=Ac("days"),ie=Ac("months"),je=Ac("years"),ke=Math.round,le={s:45,m:45,h:22,d:26,M:11},me=Math.abs,ne=Ha.prototype;ne.abs=oc,ne.add=qc,ne.subtract=rc,ne.as=wc,ne.asMilliseconds=Xd,ne.asSeconds=Yd,ne.asMinutes=Zd,ne.asHours=$d,ne.asDays=_d,ne.asWeeks=ae,ne.asMonths=be,ne.asYears=ce,ne.valueOf=xc,ne._bubble=tc,ne.get=zc,ne.milliseconds=de,ne.seconds=ee,ne.minutes=fe,ne.hours=ge,ne.days=he,ne.weeks=Bc,ne.months=ie,ne.years=je,ne.humanize=Fc,ne.toISOString=Gc,ne.toString=Gc,ne.toJSON=Gc,ne.locale=rb,ne.localeData=sb,ne.toIsoString=aa("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",Gc),ne.lang=Cd,H("X",0,0,"unix"),H("x",0,0,"valueOf"),N("x",_c),N("X",bd),Q("X",function(a,b,c){c._d=new Date(1e3*parseFloat(a,10))}),Q("x",function(a,b,c){c._d=new Date(q(a))}),a.version="2.10.6",b(Da),a.fn=Od,a.min=Fa,a.max=Ga,a.utc=h,a.unix=Zb,a.months=jc,a.isDate=d,a.locale=w,a.invalid=l,a.duration=Ya,a.isMoment=o,a.weekdays=lc,a.parseZone=$b,a.localeData=y,a.isDuration=Ia,a.monthsShort=kc,a.weekdaysMin=nc,a.defineLocale=x,a.weekdaysShort=mc,a.normalizeUnits=A,a.relativeTimeThreshold=Ec;var oe=a;return oe});
/*!
 * Select2 4.0.3
 * https://select2.github.io
 *
 * Released under the MIT license
 * https://github.com/select2/select2/blob/master/LICENSE.md
 */
(function (factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['jquery'], factory);
  } else if (typeof exports === 'object') {
    // Node/CommonJS
    factory(require('jquery'));
  } else {
    // Browser globals
    factory(jQuery);
  }
}(function (jQuery) {
  // This is needed so we can catch the AMD loader configuration and use it
  // The inner file should be wrapped (by `banner.start.js`) in a function that
  // returns the AMD loader references.
  var S2 =
(function () {
  // Restore the Select2 AMD loader so it can be used
  // Needed mostly in the language files, where the loader is not inserted
  if (jQuery && jQuery.fn && jQuery.fn.select2 && jQuery.fn.select2.amd) {
    var S2 = jQuery.fn.select2.amd;
  }
var S2;(function () { if (!S2 || !S2.requirejs) {
if (!S2) { S2 = {}; } else { require = S2; }
/**
 * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/jrburke/almond for details
 */
//Going sloppy to avoid 'use strict' string cost, but strict practices should
//be followed.
/*jslint sloppy: true */
/*global setTimeout: false */

var requirejs, require, define;
(function (undef) {
    var main, req, makeMap, handlers,
        defined = {},
        waiting = {},
        config = {},
        defining = {},
        hasOwn = Object.prototype.hasOwnProperty,
        aps = [].slice,
        jsSuffixRegExp = /\.js$/;

    function hasProp(obj, prop) {
        return hasOwn.call(obj, prop);
    }

    /**
     * Given a relative module name, like ./something, normalize it to
     * a real name that can be mapped to a path.
     * @param {String} name the relative name
     * @param {String} baseName a real name that the name arg is relative
     * to.
     * @returns {String} normalized name
     */
    function normalize(name, baseName) {
        var nameParts, nameSegment, mapValue, foundMap, lastIndex,
            foundI, foundStarMap, starI, i, j, part,
            baseParts = baseName && baseName.split("/"),
            map = config.map,
            starMap = (map && map['*']) || {};

        //Adjust any relative paths.
        if (name && name.charAt(0) === ".") {
            //If have a base name, try to normalize against it,
            //otherwise, assume it is a top-level require that will
            //be relative to baseUrl in the end.
            if (baseName) {
                name = name.split('/');
                lastIndex = name.length - 1;

                // Node .js allowance:
                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {
                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');
                }

                //Lop off the last part of baseParts, so that . matches the
                //"directory" and not name of the baseName's module. For instance,
                //baseName of "one/two/three", maps to "one/two/three.js", but we
                //want the directory, "one/two" for this normalization.
                name = baseParts.slice(0, baseParts.length - 1).concat(name);

                //start trimDots
                for (i = 0; i < name.length; i += 1) {
                    part = name[i];
                    if (part === ".") {
                        name.splice(i, 1);
                        i -= 1;
                    } else if (part === "..") {
                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {
                            //End of the line. Keep at least one non-dot
                            //path segment at the front so it can be mapped
                            //correctly to disk. Otherwise, there is likely
                            //no path mapping for a path starting with '..'.
                            //This can still fail, but catches the most reasonable
                            //uses of ..
                            break;
                        } else if (i > 0) {
                            name.splice(i - 1, 2);
                            i -= 2;
                        }
                    }
                }
                //end trimDots

                name = name.join("/");
            } else if (name.indexOf('./') === 0) {
                // No baseName, so this is ID is resolved relative
                // to baseUrl, pull off the leading dot.
                name = name.substring(2);
            }
        }

        //Apply map config if available.
        if ((baseParts || starMap) && map) {
            nameParts = name.split('/');

            for (i = nameParts.length; i > 0; i -= 1) {
                nameSegment = nameParts.slice(0, i).join("/");

                if (baseParts) {
                    //Find the longest baseName segment match in the config.
                    //So, do joins on the biggest to smallest lengths of baseParts.
                    for (j = baseParts.length; j > 0; j -= 1) {
                        mapValue = map[baseParts.slice(0, j).join('/')];

                        //baseName segment has  config, find if it has one for
                        //this name.
                        if (mapValue) {
                            mapValue = mapValue[nameSegment];
                            if (mapValue) {
                                //Match, update name to the new value.
                                foundMap = mapValue;
                                foundI = i;
                                break;
                            }
                        }
                    }
                }

                if (foundMap) {
                    break;
                }

                //Check for a star map match, but just hold on to it,
                //if there is a shorter segment match later in a matching
                //config, then favor over this star map.
                if (!foundStarMap && starMap && starMap[nameSegment]) {
                    foundStarMap = starMap[nameSegment];
                    starI = i;
                }
            }

            if (!foundMap && foundStarMap) {
                foundMap = foundStarMap;
                foundI = starI;
            }

            if (foundMap) {
                nameParts.splice(0, foundI, foundMap);
                name = nameParts.join('/');
            }
        }

        return name;
    }

    function makeRequire(relName, forceSync) {
        return function () {
            //A version of a require function that passes a moduleName
            //value for items that may need to
            //look up paths relative to the moduleName
            var args = aps.call(arguments, 0);

            //If first arg is not require('string'), and there is only
            //one arg, it is the array form without a callback. Insert
            //a null so that the following concat is correct.
            if (typeof args[0] !== 'string' && args.length === 1) {
                args.push(null);
            }
            return req.apply(undef, args.concat([relName, forceSync]));
        };
    }

    function makeNormalize(relName) {
        return function (name) {
            return normalize(name, relName);
        };
    }

    function makeLoad(depName) {
        return function (value) {
            defined[depName] = value;
        };
    }

    function callDep(name) {
        if (hasProp(waiting, name)) {
            var args = waiting[name];
            delete waiting[name];
            defining[name] = true;
            main.apply(undef, args);
        }

        if (!hasProp(defined, name) && !hasProp(defining, name)) {
            throw new Error('No ' + name);
        }
        return defined[name];
    }

    //Turns a plugin!resource to [plugin, resource]
    //with the plugin being undefined if the name
    //did not have a plugin prefix.
    function splitPrefix(name) {
        var prefix,
            index = name ? name.indexOf('!') : -1;
        if (index > -1) {
            prefix = name.substring(0, index);
            name = name.substring(index + 1, name.length);
        }
        return [prefix, name];
    }

    /**
     * Makes a name map, normalizing the name, and using a plugin
     * for normalization if necessary. Grabs a ref to plugin
     * too, as an optimization.
     */
    makeMap = function (name, relName) {
        var plugin,
            parts = splitPrefix(name),
            prefix = parts[0];

        name = parts[1];

        if (prefix) {
            prefix = normalize(prefix, relName);
            plugin = callDep(prefix);
        }

        //Normalize according
        if (prefix) {
            if (plugin && plugin.normalize) {
                name = plugin.normalize(name, makeNormalize(relName));
            } else {
                name = normalize(name, relName);
            }
        } else {
            name = normalize(name, relName);
            parts = splitPrefix(name);
            prefix = parts[0];
            name = parts[1];
            if (prefix) {
                plugin = callDep(prefix);
            }
        }

        //Using ridiculous property names for space reasons
        return {
            f: prefix ? prefix + '!' + name : name, //fullName
            n: name,
            pr: prefix,
            p: plugin
        };
    };

    function makeConfig(name) {
        return function () {
            return (config && config.config && config.config[name]) || {};
        };
    }

    handlers = {
        require: function (name) {
            return makeRequire(name);
        },
        exports: function (name) {
            var e = defined[name];
            if (typeof e !== 'undefined') {
                return e;
            } else {
                return (defined[name] = {});
            }
        },
        module: function (name) {
            return {
                id: name,
                uri: '',
                exports: defined[name],
                config: makeConfig(name)
            };
        }
    };

    main = function (name, deps, callback, relName) {
        var cjsModule, depName, ret, map, i,
            args = [],
            callbackType = typeof callback,
            usingExports;

        //Use name if no relName
        relName = relName || name;

        //Call the callback to define the module, if necessary.
        if (callbackType === 'undefined' || callbackType === 'function') {
            //Pull out the defined dependencies and pass the ordered
            //values to the callback.
            //Default to [require, exports, module] if no deps
            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;
            for (i = 0; i < deps.length; i += 1) {
                map = makeMap(deps[i], relName);
                depName = map.f;

                //Fast path CommonJS standard dependencies.
                if (depName === "require") {
                    args[i] = handlers.require(name);
                } else if (depName === "exports") {
                    //CommonJS module spec 1.1
                    args[i] = handlers.exports(name);
                    usingExports = true;
                } else if (depName === "module") {
                    //CommonJS module spec 1.1
                    cjsModule = args[i] = handlers.module(name);
                } else if (hasProp(defined, depName) ||
                           hasProp(waiting, depName) ||
                           hasProp(defining, depName)) {
                    args[i] = callDep(depName);
                } else if (map.p) {
                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});
                    args[i] = defined[depName];
                } else {
                    throw new Error(name + ' missing ' + depName);
                }
            }

            ret = callback ? callback.apply(defined[name], args) : undefined;

            if (name) {
                //If setting exports via "module" is in play,
                //favor that over return value and exports. After that,
                //favor a non-undefined return value over exports use.
                if (cjsModule && cjsModule.exports !== undef &&
                        cjsModule.exports !== defined[name]) {
                    defined[name] = cjsModule.exports;
                } else if (ret !== undef || !usingExports) {
                    //Use the return value from the function.
                    defined[name] = ret;
                }
            }
        } else if (name) {
            //May just be an object definition for the module. Only
            //worry about defining if have a module name.
            defined[name] = callback;
        }
    };

    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {
        if (typeof deps === "string") {
            if (handlers[deps]) {
                //callback in this case is really relName
                return handlers[deps](callback);
            }
            //Just return the module wanted. In this scenario, the
            //deps arg is the module name, and second arg (if passed)
            //is just the relName.
            //Normalize module name, if it contains . or ..
            return callDep(makeMap(deps, callback).f);
        } else if (!deps.splice) {
            //deps is a config object, not an array.
            config = deps;
            if (config.deps) {
                req(config.deps, config.callback);
            }
            if (!callback) {
                return;
            }

            if (callback.splice) {
                //callback is an array, which means it is a dependency list.
                //Adjust args if there are dependencies
                deps = callback;
                callback = relName;
                relName = null;
            } else {
                deps = undef;
            }
        }

        //Support require(['a'])
        callback = callback || function () {};

        //If relName is a function, it is an errback handler,
        //so remove it.
        if (typeof relName === 'function') {
            relName = forceSync;
            forceSync = alt;
        }

        //Simulate async callback;
        if (forceSync) {
            main(undef, deps, callback, relName);
        } else {
            //Using a non-zero value because of concern for what old browsers
            //do, and latest browsers "upgrade" to 4 if lower value is used:
            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:
            //If want a value immediately, use require('id') instead -- something
            //that works in almond on the global level, but not guaranteed and
            //unlikely to work in other AMD implementations.
            setTimeout(function () {
                main(undef, deps, callback, relName);
            }, 4);
        }

        return req;
    };

    /**
     * Just drops the config on the floor, but returns req in case
     * the config return value is used.
     */
    req.config = function (cfg) {
        return req(cfg);
    };

    /**
     * Expose module registry for debugging and tooling
     */
    requirejs._defined = defined;

    define = function (name, deps, callback) {
        if (typeof name !== 'string') {
            throw new Error('See almond README: incorrect module build, no module name');
        }

        //This module may not have dependencies
        if (!deps.splice) {
            //deps is not an array, so probably means
            //an object literal or factory function for
            //the value. Adjust args.
            callback = deps;
            deps = [];
        }

        if (!hasProp(defined, name) && !hasProp(waiting, name)) {
            waiting[name] = [name, deps, callback];
        }
    };

    define.amd = {
        jQuery: true
    };
}());

S2.requirejs = requirejs;S2.require = require;S2.define = define;
}
}());
S2.define("almond", function(){});

/* global jQuery:false, $:false */
S2.define('jquery',[],function () {
  var _$ = jQuery || $;

  if (_$ == null && console && console.error) {
    console.error(
      'Select2: An instance of jQuery or a jQuery-compatible library was not ' +
      'found. Make sure that you are including jQuery before Select2 on your ' +
      'web page.'
    );
  }

  return _$;
});

S2.define('select2/utils',[
  'jquery'
], function ($) {
  var Utils = {};

  Utils.Extend = function (ChildClass, SuperClass) {
    var __hasProp = {}.hasOwnProperty;

    function BaseConstructor () {
      this.constructor = ChildClass;
    }

    for (var key in SuperClass) {
      if (__hasProp.call(SuperClass, key)) {
        ChildClass[key] = SuperClass[key];
      }
    }

    BaseConstructor.prototype = SuperClass.prototype;
    ChildClass.prototype = new BaseConstructor();
    ChildClass.__super__ = SuperClass.prototype;

    return ChildClass;
  };

  function getMethods (theClass) {
    var proto = theClass.prototype;

    var methods = [];

    for (var methodName in proto) {
      var m = proto[methodName];

      if (typeof m !== 'function') {
        continue;
      }

      if (methodName === 'constructor') {
        continue;
      }

      methods.push(methodName);
    }

    return methods;
  }

  Utils.Decorate = function (SuperClass, DecoratorClass) {
    var decoratedMethods = getMethods(DecoratorClass);
    var superMethods = getMethods(SuperClass);

    function DecoratedClass () {
      var unshift = Array.prototype.unshift;

      var argCount = DecoratorClass.prototype.constructor.length;

      var calledConstructor = SuperClass.prototype.constructor;

      if (argCount > 0) {
        unshift.call(arguments, SuperClass.prototype.constructor);

        calledConstructor = DecoratorClass.prototype.constructor;
      }

      calledConstructor.apply(this, arguments);
    }

    DecoratorClass.displayName = SuperClass.displayName;

    function ctr () {
      this.constructor = DecoratedClass;
    }

    DecoratedClass.prototype = new ctr();

    for (var m = 0; m < superMethods.length; m++) {
        var superMethod = superMethods[m];

        DecoratedClass.prototype[superMethod] =
          SuperClass.prototype[superMethod];
    }

    var calledMethod = function (methodName) {
      // Stub out the original method if it's not decorating an actual method
      var originalMethod = function () {};

      if (methodName in DecoratedClass.prototype) {
        originalMethod = DecoratedClass.prototype[methodName];
      }

      var decoratedMethod = DecoratorClass.prototype[methodName];

      return function () {
        var unshift = Array.prototype.unshift;

        unshift.call(arguments, originalMethod);

        return decoratedMethod.apply(this, arguments);
      };
    };

    for (var d = 0; d < decoratedMethods.length; d++) {
      var decoratedMethod = decoratedMethods[d];

      DecoratedClass.prototype[decoratedMethod] = calledMethod(decoratedMethod);
    }

    return DecoratedClass;
  };

  var Observable = function () {
    this.listeners = {};
  };

  Observable.prototype.on = function (event, callback) {
    this.listeners = this.listeners || {};

    if (event in this.listeners) {
      this.listeners[event].push(callback);
    } else {
      this.listeners[event] = [callback];
    }
  };

  Observable.prototype.trigger = function (event) {
    var slice = Array.prototype.slice;
    var params = slice.call(arguments, 1);

    this.listeners = this.listeners || {};

    // Params should always come in as an array
    if (params == null) {
      params = [];
    }

    // If there are no arguments to the event, use a temporary object
    if (params.length === 0) {
      params.push({});
    }

    // Set the `_type` of the first object to the event
    params[0]._type = event;

    if (event in this.listeners) {
      this.invoke(this.listeners[event], slice.call(arguments, 1));
    }

    if ('*' in this.listeners) {
      this.invoke(this.listeners['*'], arguments);
    }
  };

  Observable.prototype.invoke = function (listeners, params) {
    for (var i = 0, len = listeners.length; i < len; i++) {
      listeners[i].apply(this, params);
    }
  };

  Utils.Observable = Observable;

  Utils.generateChars = function (length) {
    var chars = '';

    for (var i = 0; i < length; i++) {
      var randomChar = Math.floor(Math.random() * 36);
      chars += randomChar.toString(36);
    }

    return chars;
  };

  Utils.bind = function (func, context) {
    return function () {
      func.apply(context, arguments);
    };
  };

  Utils._convertData = function (data) {
    for (var originalKey in data) {
      var keys = originalKey.split('-');

      var dataLevel = data;

      if (keys.length === 1) {
        continue;
      }

      for (var k = 0; k < keys.length; k++) {
        var key = keys[k];

        // Lowercase the first letter
        // By default, dash-separated becomes camelCase
        key = key.substring(0, 1).toLowerCase() + key.substring(1);

        if (!(key in dataLevel)) {
          dataLevel[key] = {};
        }

        if (k == keys.length - 1) {
          dataLevel[key] = data[originalKey];
        }

        dataLevel = dataLevel[key];
      }

      delete data[originalKey];
    }

    return data;
  };

  Utils.hasScroll = function (index, el) {
    // Adapted from the function created by @ShadowScripter
    // and adapted by @BillBarry on the Stack Exchange Code Review website.
    // The original code can be found at
    // http://codereview.stackexchange.com/q/13338
    // and was designed to be used with the Sizzle selector engine.

    var $el = $(el);
    var overflowX = el.style.overflowX;
    var overflowY = el.style.overflowY;

    //Check both x and y declarations
    if (overflowX === overflowY &&
        (overflowY === 'hidden' || overflowY === 'visible')) {
      return false;
    }

    if (overflowX === 'scroll' || overflowY === 'scroll') {
      return true;
    }

    return ($el.innerHeight() < el.scrollHeight ||
      $el.innerWidth() < el.scrollWidth);
  };

  Utils.escapeMarkup = function (markup) {
    var replaceMap = {
      '\\': '&#92;',
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      '\'': '&#39;',
      '/': '&#47;'
    };

    // Do not try to escape the markup if it's not a string
    if (typeof markup !== 'string') {
      return markup;
    }

    return String(markup).replace(/[&<>"'\/\\]/g, function (match) {
      return replaceMap[match];
    });
  };

  // Append an array of jQuery nodes to a given element.
  Utils.appendMany = function ($element, $nodes) {
    // jQuery 1.7.x does not support $.fn.append() with an array
    // Fall back to a jQuery object collection using $.fn.add()
    if ($.fn.jquery.substr(0, 3) === '1.7') {
      var $jqNodes = $();

      $.map($nodes, function (node) {
        $jqNodes = $jqNodes.add(node);
      });

      $nodes = $jqNodes;
    }

    $element.append($nodes);
  };

  return Utils;
});

S2.define('select2/results',[
  'jquery',
  './utils'
], function ($, Utils) {
  function Results ($element, options, dataAdapter) {
    this.$element = $element;
    this.data = dataAdapter;
    this.options = options;

    Results.__super__.constructor.call(this);
  }

  Utils.Extend(Results, Utils.Observable);

  Results.prototype.render = function () {
    var $results = $(
      '<ul class="select2-results__options" role="tree"></ul>'
    );

    if (this.options.get('multiple')) {
      $results.attr('aria-multiselectable', 'true');
    }

    this.$results = $results;

    return $results;
  };

  Results.prototype.clear = function () {
    this.$results.empty();
  };

  Results.prototype.displayMessage = function (params) {
    var escapeMarkup = this.options.get('escapeMarkup');

    this.clear();
    this.hideLoading();

    var $message = $(
      '<li role="treeitem" aria-live="assertive"' +
      ' class="select2-results__option"></li>'
    );

    var message = this.options.get('translations').get(params.message);

    $message.append(
      escapeMarkup(
        message(params.args)
      )
    );

    $message[0].className += ' select2-results__message';

    this.$results.append($message);
  };

  Results.prototype.hideMessages = function () {
    this.$results.find('.select2-results__message').remove();
  };

  Results.prototype.append = function (data) {
    this.hideLoading();

    var $options = [];

    if (data.results == null || data.results.length === 0) {
      if (this.$results.children().length === 0) {
        this.trigger('results:message', {
          message: 'noResults'
        });
      }

      return;
    }

    data.results = this.sort(data.results);

    for (var d = 0; d < data.results.length; d++) {
      var item = data.results[d];

      var $option = this.option(item);

      $options.push($option);
    }

    this.$results.append($options);
  };

  Results.prototype.position = function ($results, $dropdown) {
    var $resultsContainer = $dropdown.find('.select2-results');
    $resultsContainer.append($results);
  };

  Results.prototype.sort = function (data) {
    var sorter = this.options.get('sorter');

    return sorter(data);
  };

  Results.prototype.highlightFirstItem = function () {
    var $options = this.$results
      .find('.select2-results__option[aria-selected]');

    var $selected = $options.filter('[aria-selected=true]');

    // Check if there are any selected options
    if ($selected.length > 0) {
      // If there are selected options, highlight the first
      $selected.first().trigger('mouseenter');
    } else {
      // If there are no selected options, highlight the first option
      // in the dropdown
      $options.first().trigger('mouseenter');
    }

    this.ensureHighlightVisible();
  };

  Results.prototype.setClasses = function () {
    var self = this;

    this.data.current(function (selected) {
      var selectedIds = $.map(selected, function (s) {
        return s.id.toString();
      });

      var $options = self.$results
        .find('.select2-results__option[aria-selected]');

      $options.each(function () {
        var $option = $(this);

        var item = $.data(this, 'data');

        // id needs to be converted to a string when comparing
        var id = '' + item.id;

        if ((item.element != null && item.element.selected) ||
            (item.element == null && $.inArray(id, selectedIds) > -1)) {
          $option.attr('aria-selected', 'true');
        } else {
          $option.attr('aria-selected', 'false');
        }
      });

    });
  };

  Results.prototype.showLoading = function (params) {
    this.hideLoading();

    var loadingMore = this.options.get('translations').get('searching');

    var loading = {
      disabled: true,
      loading: true,
      text: loadingMore(params)
    };
    var $loading = this.option(loading);
    $loading.className += ' loading-results';

    this.$results.prepend($loading);
  };

  Results.prototype.hideLoading = function () {
    this.$results.find('.loading-results').remove();
  };

  Results.prototype.option = function (data) {
    var option = document.createElement('li');
    option.className = 'select2-results__option';

    var attrs = {
      'role': 'treeitem',
      'aria-selected': 'false'
    };

    if (data.disabled) {
      delete attrs['aria-selected'];
      attrs['aria-disabled'] = 'true';
    }

    if (data.id == null) {
      delete attrs['aria-selected'];
    }

    if (data._resultId != null) {
      option.id = data._resultId;
    }

    if (data.title) {
      option.title = data.title;
    }

    if (data.children) {
      attrs.role = 'group';
      attrs['aria-label'] = data.text;
      delete attrs['aria-selected'];
    }

    for (var attr in attrs) {
      var val = attrs[attr];

      option.setAttribute(attr, val);
    }

    if (data.children) {
      var $option = $(option);

      var label = document.createElement('strong');
      label.className = 'select2-results__group';

      var $label = $(label);
      this.template(data, label);

      var $children = [];

      for (var c = 0; c < data.children.length; c++) {
        var child = data.children[c];

        var $child = this.option(child);

        $children.push($child);
      }

      var $childrenContainer = $('<ul></ul>', {
        'class': 'select2-results__options select2-results__options--nested'
      });

      $childrenContainer.append($children);

      $option.append(label);
      $option.append($childrenContainer);
    } else {
      this.template(data, option);
    }

    $.data(option, 'data', data);

    return option;
  };

  Results.prototype.bind = function (container, $container) {
    var self = this;

    var id = container.id + '-results';

    this.$results.attr('id', id);

    container.on('results:all', function (params) {
      self.clear();
      self.append(params.data);

      if (container.isOpen()) {
        self.setClasses();
        self.highlightFirstItem();
      }
    });

    container.on('results:append', function (params) {
      self.append(params.data);

      if (container.isOpen()) {
        self.setClasses();
      }
    });

    container.on('query', function (params) {
      self.hideMessages();
      self.showLoading(params);
    });

    container.on('select', function () {
      if (!container.isOpen()) {
        return;
      }

      self.setClasses();
      self.highlightFirstItem();
    });

    container.on('unselect', function () {
      if (!container.isOpen()) {
        return;
      }

      self.setClasses();
      self.highlightFirstItem();
    });

    container.on('open', function () {
      // When the dropdown is open, aria-expended="true"
      self.$results.attr('aria-expanded', 'true');
      self.$results.attr('aria-hidden', 'false');

      self.setClasses();
      self.ensureHighlightVisible();
    });

    container.on('close', function () {
      // When the dropdown is closed, aria-expended="false"
      self.$results.attr('aria-expanded', 'false');
      self.$results.attr('aria-hidden', 'true');
      self.$results.removeAttr('aria-activedescendant');
    });

    container.on('results:toggle', function () {
      var $highlighted = self.getHighlightedResults();

      if ($highlighted.length === 0) {
        return;
      }

      $highlighted.trigger('mouseup');
    });

    container.on('results:select', function () {
      var $highlighted = self.getHighlightedResults();

      if ($highlighted.length === 0) {
        return;
      }

      var data = $highlighted.data('data');

      if ($highlighted.attr('aria-selected') == 'true') {
        self.trigger('close', {});
      } else {
        self.trigger('select', {
          data: data
        });
      }
    });

    container.on('results:previous', function () {
      var $highlighted = self.getHighlightedResults();

      var $options = self.$results.find('[aria-selected]');

      var currentIndex = $options.index($highlighted);

      // If we are already at te top, don't move further
      if (currentIndex === 0) {
        return;
      }

      var nextIndex = currentIndex - 1;

      // If none are highlighted, highlight the first
      if ($highlighted.length === 0) {
        nextIndex = 0;
      }

      var $next = $options.eq(nextIndex);

      $next.trigger('mouseenter');

      var currentOffset = self.$results.offset().top;
      var nextTop = $next.offset().top;
      var nextOffset = self.$results.scrollTop() + (nextTop - currentOffset);

      if (nextIndex === 0) {
        self.$results.scrollTop(0);
      } else if (nextTop - currentOffset < 0) {
        self.$results.scrollTop(nextOffset);
      }
    });

    container.on('results:next', function () {
      var $highlighted = self.getHighlightedResults();

      var $options = self.$results.find('[aria-selected]');

      var currentIndex = $options.index($highlighted);

      var nextIndex = currentIndex + 1;

      // If we are at the last option, stay there
      if (nextIndex >= $options.length) {
        return;
      }

      var $next = $options.eq(nextIndex);

      $next.trigger('mouseenter');

      var currentOffset = self.$results.offset().top +
        self.$results.outerHeight(false);
      var nextBottom = $next.offset().top + $next.outerHeight(false);
      var nextOffset = self.$results.scrollTop() + nextBottom - currentOffset;

      if (nextIndex === 0) {
        self.$results.scrollTop(0);
      } else if (nextBottom > currentOffset) {
        self.$results.scrollTop(nextOffset);
      }
    });

    container.on('results:focus', function (params) {
      params.element.addClass('select2-results__option--highlighted');
    });

    container.on('results:message', function (params) {
      self.displayMessage(params);
    });

    if ($.fn.mousewheel) {
      this.$results.on('mousewheel', function (e) {
        var top = self.$results.scrollTop();

        var bottom = self.$results.get(0).scrollHeight - top + e.deltaY;

        var isAtTop = e.deltaY > 0 && top - e.deltaY <= 0;
        var isAtBottom = e.deltaY < 0 && bottom <= self.$results.height();

        if (isAtTop) {
          self.$results.scrollTop(0);

          e.preventDefault();
          e.stopPropagation();
        } else if (isAtBottom) {
          self.$results.scrollTop(
            self.$results.get(0).scrollHeight - self.$results.height()
          );

          e.preventDefault();
          e.stopPropagation();
        }
      });
    }

    this.$results.on('mouseup', '.select2-results__option[aria-selected]',
      function (evt) {
      var $this = $(this);

      var data = $this.data('data');

      if ($this.attr('aria-selected') === 'true') {
        if (self.options.get('multiple')) {
          self.trigger('unselect', {
            originalEvent: evt,
            data: data
          });
        } else {
          self.trigger('close', {});
        }

        return;
      }

      self.trigger('select', {
        originalEvent: evt,
        data: data
      });
    });

    this.$results.on('mouseenter', '.select2-results__option[aria-selected]',
      function (evt) {
      var data = $(this).data('data');

      self.getHighlightedResults()
          .removeClass('select2-results__option--highlighted');

      self.trigger('results:focus', {
        data: data,
        element: $(this)
      });
    });
  };

  Results.prototype.getHighlightedResults = function () {
    var $highlighted = this.$results
    .find('.select2-results__option--highlighted');

    return $highlighted;
  };

  Results.prototype.destroy = function () {
    this.$results.remove();
  };

  Results.prototype.ensureHighlightVisible = function () {
    var $highlighted = this.getHighlightedResults();

    if ($highlighted.length === 0) {
      return;
    }

    var $options = this.$results.find('[aria-selected]');

    var currentIndex = $options.index($highlighted);

    var currentOffset = this.$results.offset().top;
    var nextTop = $highlighted.offset().top;
    var nextOffset = this.$results.scrollTop() + (nextTop - currentOffset);

    var offsetDelta = nextTop - currentOffset;
    nextOffset -= $highlighted.outerHeight(false) * 2;

    if (currentIndex <= 2) {
      this.$results.scrollTop(0);
    } else if (offsetDelta > this.$results.outerHeight() || offsetDelta < 0) {
      this.$results.scrollTop(nextOffset);
    }
  };

  Results.prototype.template = function (result, container) {
    var template = this.options.get('templateResult');
    var escapeMarkup = this.options.get('escapeMarkup');

    var content = template(result, container);

    if (content == null) {
      container.style.display = 'none';
    } else if (typeof content === 'string') {
      container.innerHTML = escapeMarkup(content);
    } else {
      $(container).append(content);
    }
  };

  return Results;
});

S2.define('select2/keys',[

], function () {
  var KEYS = {
    BACKSPACE: 8,
    TAB: 9,
    ENTER: 13,
    SHIFT: 16,
    CTRL: 17,
    ALT: 18,
    ESC: 27,
    SPACE: 32,
    PAGE_UP: 33,
    PAGE_DOWN: 34,
    END: 35,
    HOME: 36,
    LEFT: 37,
    UP: 38,
    RIGHT: 39,
    DOWN: 40,
    DELETE: 46
  };

  return KEYS;
});

S2.define('select2/selection/base',[
  'jquery',
  '../utils',
  '../keys'
], function ($, Utils, KEYS) {
  function BaseSelection ($element, options) {
    this.$element = $element;
    this.options = options;

    BaseSelection.__super__.constructor.call(this);
  }

  Utils.Extend(BaseSelection, Utils.Observable);

  BaseSelection.prototype.render = function () {
    var $selection = $(
      '<span class="select2-selection" role="combobox" ' +
      ' aria-haspopup="true" aria-expanded="false">' +
      '</span>'
    );

    this._tabindex = 0;

    if (this.$element.data('old-tabindex') != null) {
      this._tabindex = this.$element.data('old-tabindex');
    } else if (this.$element.attr('tabindex') != null) {
      this._tabindex = this.$element.attr('tabindex');
    }

    $selection.attr('title', this.$element.attr('title'));
    $selection.attr('tabindex', this._tabindex);

    this.$selection = $selection;

    return $selection;
  };

  BaseSelection.prototype.bind = function (container, $container) {
    var self = this;

    var id = container.id + '-container';
    var resultsId = container.id + '-results';

    this.container = container;

    this.$selection.on('focus', function (evt) {
      self.trigger('focus', evt);
    });

    this.$selection.on('blur', function (evt) {
      self._handleBlur(evt);
    });

    this.$selection.on('keydown', function (evt) {
      self.trigger('keypress', evt);

      if (evt.which === KEYS.SPACE) {
        evt.preventDefault();
      }
    });

    container.on('results:focus', function (params) {
      self.$selection.attr('aria-activedescendant', params.data._resultId);
    });

    container.on('selection:update', function (params) {
      self.update(params.data);
    });

    container.on('open', function () {
      // When the dropdown is open, aria-expanded="true"
      self.$selection.attr('aria-expanded', 'true');
      self.$selection.attr('aria-owns', resultsId);

      self._attachCloseHandler(container);
    });

    container.on('close', function () {
      // When the dropdown is closed, aria-expanded="false"
      self.$selection.attr('aria-expanded', 'false');
      self.$selection.removeAttr('aria-activedescendant');
      self.$selection.removeAttr('aria-owns');

      self.$selection.focus();

      self._detachCloseHandler(container);
    });

    container.on('enable', function () {
      self.$selection.attr('tabindex', self._tabindex);
    });

    container.on('disable', function () {
      self.$selection.attr('tabindex', '-1');
    });
  };

  BaseSelection.prototype._handleBlur = function (evt) {
    var self = this;

    // This needs to be delayed as the active element is the body when the tab
    // key is pressed, possibly along with others.
    window.setTimeout(function () {
      // Don't trigger `blur` if the focus is still in the selection
      if (
        (document.activeElement == self.$selection[0]) ||
        ($.contains(self.$selection[0], document.activeElement))
      ) {
        return;
      }

      self.trigger('blur', evt);
    }, 1);
  };

  BaseSelection.prototype._attachCloseHandler = function (container) {
    var self = this;

    $(document.body).on('mousedown.select2.' + container.id, function (e) {
      var $target = $(e.target);

      var $select = $target.closest('.select2');

      var $all = $('.select2.select2-container--open');

      $all.each(function () {
        var $this = $(this);

        if (this == $select[0]) {
          return;
        }

        var $element = $this.data('element');

        $element.select2('close');
      });
    });
  };

  BaseSelection.prototype._detachCloseHandler = function (container) {
    $(document.body).off('mousedown.select2.' + container.id);
  };

  BaseSelection.prototype.position = function ($selection, $container) {
    var $selectionContainer = $container.find('.selection');
    $selectionContainer.append($selection);
  };

  BaseSelection.prototype.destroy = function () {
    this._detachCloseHandler(this.container);
  };

  BaseSelection.prototype.update = function (data) {
    throw new Error('The `update` method must be defined in child classes.');
  };

  return BaseSelection;
});

S2.define('select2/selection/single',[
  'jquery',
  './base',
  '../utils',
  '../keys'
], function ($, BaseSelection, Utils, KEYS) {
  function SingleSelection () {
    SingleSelection.__super__.constructor.apply(this, arguments);
  }

  Utils.Extend(SingleSelection, BaseSelection);

  SingleSelection.prototype.render = function () {
    var $selection = SingleSelection.__super__.render.call(this);

    $selection.addClass('select2-selection--single');

    $selection.html(
      '<span class="select2-selection__rendered"></span>' +
      '<span class="select2-selection__arrow" role="presentation">' +
        '<b role="presentation"></b>' +
      '</span>'
    );

    return $selection;
  };

  SingleSelection.prototype.bind = function (container, $container) {
    var self = this;

    SingleSelection.__super__.bind.apply(this, arguments);

    var id = container.id + '-container';

    this.$selection.find('.select2-selection__rendered').attr('id', id);
    this.$selection.attr('aria-labelledby', id);

    this.$selection.on('mousedown', function (evt) {
      // Only respond to left clicks
      if (evt.which !== 1) {
        return;
      }

      self.trigger('toggle', {
        originalEvent: evt
      });
    });

    this.$selection.on('focus', function (evt) {
      // User focuses on the container
    });

    this.$selection.on('blur', function (evt) {
      // User exits the container
    });

    container.on('focus', function (evt) {
      if (!container.isOpen()) {
        self.$selection.focus();
      }
    });

    container.on('selection:update', function (params) {
      self.update(params.data);
    });
  };

  SingleSelection.prototype.clear = function () {
    this.$selection.find('.select2-selection__rendered').empty();
  };

  SingleSelection.prototype.display = function (data, container) {
    var template = this.options.get('templateSelection');
    var escapeMarkup = this.options.get('escapeMarkup');

    return escapeMarkup(template(data, container));
  };

  SingleSelection.prototype.selectionContainer = function () {
    return $('<span></span>');
  };

  SingleSelection.prototype.update = function (data) {
    if (data.length === 0) {
      this.clear();
      return;
    }

    var selection = data[0];

    var $rendered = this.$selection.find('.select2-selection__rendered');
    var formatted = this.display(selection, $rendered);

    $rendered.empty().append(formatted);
    $rendered.prop('title', selection.title || selection.text);
  };

  return SingleSelection;
});

S2.define('select2/selection/multiple',[
  'jquery',
  './base',
  '../utils'
], function ($, BaseSelection, Utils) {
  function MultipleSelection ($element, options) {
    MultipleSelection.__super__.constructor.apply(this, arguments);
  }

  Utils.Extend(MultipleSelection, BaseSelection);

  MultipleSelection.prototype.render = function () {
    var $selection = MultipleSelection.__super__.render.call(this);

    $selection.addClass('select2-selection--multiple');

    $selection.html(
      '<ul class="select2-selection__rendered"></ul>'
    );

    return $selection;
  };

  MultipleSelection.prototype.bind = function (container, $container) {
    var self = this;

    MultipleSelection.__super__.bind.apply(this, arguments);

    this.$selection.on('click', function (evt) {
      self.trigger('toggle', {
        originalEvent: evt
      });
    });

    this.$selection.on(
      'click',
      '.select2-selection__choice__remove',
      function (evt) {
        // Ignore the event if it is disabled
        if (self.options.get('disabled')) {
          return;
        }

        var $remove = $(this);
        var $selection = $remove.parent();

        var data = $selection.data('data');

        self.trigger('unselect', {
          originalEvent: evt,
          data: data
        });
      }
    );
  };

  MultipleSelection.prototype.clear = function () {
    this.$selection.find('.select2-selection__rendered').empty();
  };

  MultipleSelection.prototype.display = function (data, container) {
    var template = this.options.get('templateSelection');
    var escapeMarkup = this.options.get('escapeMarkup');

    return escapeMarkup(template(data, container));
  };

  MultipleSelection.prototype.selectionContainer = function () {
    var $container = $(
      '<li class="select2-selection__choice">' +
        '<span class="select2-selection__choice__remove" role="presentation">' +
          '&times;' +
        '</span>' +
      '</li>'
    );

    return $container;
  };

  MultipleSelection.prototype.update = function (data) {
    this.clear();

    if (data.length === 0) {
      return;
    }

    var $selections = [];

    for (var d = 0; d < data.length; d++) {
      var selection = data[d];

      var $selection = this.selectionContainer();
      var formatted = this.display(selection, $selection);

      $selection.append(formatted);
      $selection.prop('title', selection.title || selection.text);

      $selection.data('data', selection);

      $selections.push($selection);
    }

    var $rendered = this.$selection.find('.select2-selection__rendered');

    Utils.appendMany($rendered, $selections);
  };

  return MultipleSelection;
});

S2.define('select2/selection/placeholder',[
  '../utils'
], function (Utils) {
  function Placeholder (decorated, $element, options) {
    this.placeholder = this.normalizePlaceholder(options.get('placeholder'));

    decorated.call(this, $element, options);
  }

  Placeholder.prototype.normalizePlaceholder = function (_, placeholder) {
    if (typeof placeholder === 'string') {
      placeholder = {
        id: '',
        text: placeholder
      };
    }

    return placeholder;
  };

  Placeholder.prototype.createPlaceholder = function (decorated, placeholder) {
    var $placeholder = this.selectionContainer();

    $placeholder.html(this.display(placeholder));
    $placeholder.addClass('select2-selection__placeholder')
                .removeClass('select2-selection__choice');

    return $placeholder;
  };

  Placeholder.prototype.update = function (decorated, data) {
    var singlePlaceholder = (
      data.length == 1 && data[0].id != this.placeholder.id
    );
    var multipleSelections = data.length > 1;

    if (multipleSelections || singlePlaceholder) {
      return decorated.call(this, data);
    }

    this.clear();

    var $placeholder = this.createPlaceholder(this.placeholder);

    this.$selection.find('.select2-selection__rendered').append($placeholder);
  };

  return Placeholder;
});

S2.define('select2/selection/allowClear',[
  'jquery',
  '../keys'
], function ($, KEYS) {
  function AllowClear () { }

  AllowClear.prototype.bind = function (decorated, container, $container) {
    var self = this;

    decorated.call(this, container, $container);

    if (this.placeholder == null) {
      if (this.options.get('debug') && window.console && console.error) {
        console.error(
          'Select2: The `allowClear` option should be used in combination ' +
          'with the `placeholder` option.'
        );
      }
    }

    this.$selection.on('mousedown', '.select2-selection__clear',
      function (evt) {
        self._handleClear(evt);
    });

    container.on('keypress', function (evt) {
      self._handleKeyboardClear(evt, container);
    });
  };

  AllowClear.prototype._handleClear = function (_, evt) {
    // Ignore the event if it is disabled
    if (this.options.get('disabled')) {
      return;
    }

    var $clear = this.$selection.find('.select2-selection__clear');

    // Ignore the event if nothing has been selected
    if ($clear.length === 0) {
      return;
    }

    evt.stopPropagation();

    var data = $clear.data('data');

    for (var d = 0; d < data.length; d++) {
      var unselectData = {
        data: data[d]
      };

      // Trigger the `unselect` event, so people can prevent it from being
      // cleared.
      this.trigger('unselect', unselectData);

      // If the event was prevented, don't clear it out.
      if (unselectData.prevented) {
        return;
      }
    }

    this.$element.val(this.placeholder.id).trigger('change');

    this.trigger('toggle', {});
  };

  AllowClear.prototype._handleKeyboardClear = function (_, evt, container) {
    if (container.isOpen()) {
      return;
    }

    if (evt.which == KEYS.DELETE || evt.which == KEYS.BACKSPACE) {
      this._handleClear(evt);
    }
  };

  AllowClear.prototype.update = function (decorated, data) {
    decorated.call(this, data);

    if (this.$selection.find('.select2-selection__placeholder').length > 0 ||
        data.length === 0) {
      return;
    }

    var $remove = $(
      '<span class="select2-selection__clear">' +
        '&times;' +
      '</span>'
    );
    $remove.data('data', data);

    this.$selection.find('.select2-selection__rendered').prepend($remove);
  };

  return AllowClear;
});

S2.define('select2/selection/search',[
  'jquery',
  '../utils',
  '../keys'
], function ($, Utils, KEYS) {
  function Search (decorated, $element, options) {
    decorated.call(this, $element, options);
  }

  Search.prototype.render = function (decorated) {
    var $search = $(
      '<li class="select2-search select2-search--inline">' +
        '<input class="select2-search__field" type="search" tabindex="-1"' +
        ' autocomplete="off" autocorrect="off" autocapitalize="off"' +
        ' spellcheck="false" role="textbox" aria-autocomplete="list" placeholder="search" />' +
      '</li>'
    );

    this.$searchContainer = $search;
    this.$search = $search.find('input');

    var $rendered = decorated.call(this);

    this._transferTabIndex();

    return $rendered;
  };

  Search.prototype.bind = function (decorated, container, $container) {
    var self = this;

    decorated.call(this, container, $container);

    container.on('open', function () {
      self.$search.trigger('focus');
    });

    container.on('close', function () {
      self.$search.val('');
      self.$search.removeAttr('aria-activedescendant');
      self.$search.trigger('focus');
    });

    container.on('enable', function () {
      self.$search.prop('disabled', false);

      self._transferTabIndex();
    });

    container.on('disable', function () {
      self.$search.prop('disabled', true);
    });

    container.on('focus', function (evt) {
      self.$search.trigger('focus');
    });

    container.on('results:focus', function (params) {
      self.$search.attr('aria-activedescendant', params.id);
    });

    this.$selection.on('focusin', '.select2-search--inline', function (evt) {
      self.trigger('focus', evt);
    });

    this.$selection.on('focusout', '.select2-search--inline', function (evt) {
      self._handleBlur(evt);
    });

    this.$selection.on('keydown', '.select2-search--inline', function (evt) {
      evt.stopPropagation();

      self.trigger('keypress', evt);

      self._keyUpPrevented = evt.isDefaultPrevented();

      var key = evt.which;

      if (key === KEYS.BACKSPACE && self.$search.val() === '') {
        var $previousChoice = self.$searchContainer
          .prev('.select2-selection__choice');

        if ($previousChoice.length > 0) {
          var item = $previousChoice.data('data');

          self.searchRemoveChoice(item);

          evt.preventDefault();
        }
      }
    });

    // Try to detect the IE version should the `documentMode` property that
    // is stored on the document. This is only implemented in IE and is
    // slightly cleaner than doing a user agent check.
    // This property is not available in Edge, but Edge also doesn't have
    // this bug.
    var msie = document.documentMode;
    var disableInputEvents = msie && msie <= 11;

    // Workaround for browsers which do not support the `input` event
    // This will prevent double-triggering of events for browsers which support
    // both the `keyup` and `input` events.
    this.$selection.on(
      'input.searchcheck',
      '.select2-search--inline',
      function (evt) {
        // IE will trigger the `input` event when a placeholder is used on a
        // search box. To get around this issue, we are forced to ignore all
        // `input` events in IE and keep using `keyup`.
        if (disableInputEvents) {
          self.$selection.off('input.search input.searchcheck');
          return;
        }

        // Unbind the duplicated `keyup` event
        self.$selection.off('keyup.search');
      }
    );

    this.$selection.on(
      'keyup.search input.search',
      '.select2-search--inline',
      function (evt) {
        // IE will trigger the `input` event when a placeholder is used on a
        // search box. To get around this issue, we are forced to ignore all
        // `input` events in IE and keep using `keyup`.
        if (disableInputEvents && evt.type === 'input') {
          self.$selection.off('input.search input.searchcheck');
          return;
        }

        var key = evt.which;

        // We can freely ignore events from modifier keys
        if (key == KEYS.SHIFT || key == KEYS.CTRL || key == KEYS.ALT) {
          return;
        }

        // Tabbing will be handled during the `keydown` phase
        if (key == KEYS.TAB) {
          return;
        }

        self.handleSearch(evt);
      }
    );
  };

  /**
   * This method will transfer the tabindex attribute from the rendered
   * selection to the search box. This allows for the search box to be used as
   * the primary focus instead of the selection container.
   *
   * @private
   */
  Search.prototype._transferTabIndex = function (decorated) {
    this.$search.attr('tabindex', this.$selection.attr('tabindex'));
    this.$selection.attr('tabindex', '-1');
  };

  Search.prototype.createPlaceholder = function (decorated, placeholder) {
    this.$search.attr('placeholder', placeholder.text);
  };

  Search.prototype.update = function (decorated, data) {
    var searchHadFocus = this.$search[0] == document.activeElement;

    this.$search.attr('placeholder', '');

    decorated.call(this, data);

    this.$selection.find('.select2-selection__rendered')
                   .append(this.$searchContainer);

    this.resizeSearch();
    if (searchHadFocus) {
      this.$search.focus();
    }
  };

  Search.prototype.handleSearch = function () {
    this.resizeSearch();

    if (!this._keyUpPrevented) {
      var input = this.$search.val();

      this.trigger('query', {
        term: input
      });
    }

    this._keyUpPrevented = false;
  };

  Search.prototype.searchRemoveChoice = function (decorated, item) {
    this.trigger('unselect', {
      data: item
    });

    this.$search.val(item.text);
    this.handleSearch();
  };

  Search.prototype.resizeSearch = function () {
    this.$search.css('width', '25px');

    var width = '';

    if (this.$search.attr('placeholder') !== '') {
      width = this.$selection.find('.select2-selection__rendered').innerWidth();
    } else {
      var minimumWidth = this.$search.val().length + 1;

      width = (minimumWidth * 0.75) + 'em';
    }

    this.$search.css('width', width);
  };

  return Search;
});

S2.define('select2/selection/eventRelay',[
  'jquery'
], function ($) {
  function EventRelay () { }

  EventRelay.prototype.bind = function (decorated, container, $container) {
    var self = this;
    var relayEvents = [
      'open', 'opening',
      'close', 'closing',
      'select', 'selecting',
      'unselect', 'unselecting'
    ];

    var preventableEvents = ['opening', 'closing', 'selecting', 'unselecting'];

    decorated.call(this, container, $container);

    container.on('*', function (name, params) {
      // Ignore events that should not be relayed
      if ($.inArray(name, relayEvents) === -1) {
        return;
      }

      // The parameters should always be an object
      params = params || {};

      // Generate the jQuery event for the Select2 event
      var evt = $.Event('select2:' + name, {
        params: params
      });

      self.$element.trigger(evt);

      // Only handle preventable events if it was one
      if ($.inArray(name, preventableEvents) === -1) {
        return;
      }

      params.prevented = evt.isDefaultPrevented();
    });
  };

  return EventRelay;
});

S2.define('select2/translation',[
  'jquery',
  'require'
], function ($, require) {
  function Translation (dict) {
    this.dict = dict || {};
  }

  Translation.prototype.all = function () {
    return this.dict;
  };

  Translation.prototype.get = function (key) {
    return this.dict[key];
  };

  Translation.prototype.extend = function (translation) {
    this.dict = $.extend({}, translation.all(), this.dict);
  };

  // Static functions

  Translation._cache = {};

  Translation.loadPath = function (path) {
    if (!(path in Translation._cache)) {
      var translations = require(path);

      Translation._cache[path] = translations;
    }

    return new Translation(Translation._cache[path]);
  };

  return Translation;
});

S2.define('select2/diacritics',[

], function () {
  var diacritics = {
    '\u24B6': 'A',
    '\uFF21': 'A',
    '\u00C0': 'A',
    '\u00C1': 'A',
    '\u00C2': 'A',
    '\u1EA6': 'A',
    '\u1EA4': 'A',
    '\u1EAA': 'A',
    '\u1EA8': 'A',
    '\u00C3': 'A',
    '\u0100': 'A',
    '\u0102': 'A',
    '\u1EB0': 'A',
    '\u1EAE': 'A',
    '\u1EB4': 'A',
    '\u1EB2': 'A',
    '\u0226': 'A',
    '\u01E0': 'A',
    '\u00C4': 'A',
    '\u01DE': 'A',
    '\u1EA2': 'A',
    '\u00C5': 'A',
    '\u01FA': 'A',
    '\u01CD': 'A',
    '\u0200': 'A',
    '\u0202': 'A',
    '\u1EA0': 'A',
    '\u1EAC': 'A',
    '\u1EB6': 'A',
    '\u1E00': 'A',
    '\u0104': 'A',
    '\u023A': 'A',
    '\u2C6F': 'A',
    '\uA732': 'AA',
    '\u00C6': 'AE',
    '\u01FC': 'AE',
    '\u01E2': 'AE',
    '\uA734': 'AO',
    '\uA736': 'AU',
    '\uA738': 'AV',
    '\uA73A': 'AV',
    '\uA73C': 'AY',
    '\u24B7': 'B',
    '\uFF22': 'B',
    '\u1E02': 'B',
    '\u1E04': 'B',
    '\u1E06': 'B',
    '\u0243': 'B',
    '\u0182': 'B',
    '\u0181': 'B',
    '\u24B8': 'C',
    '\uFF23': 'C',
    '\u0106': 'C',
    '\u0108': 'C',
    '\u010A': 'C',
    '\u010C': 'C',
    '\u00C7': 'C',
    '\u1E08': 'C',
    '\u0187': 'C',
    '\u023B': 'C',
    '\uA73E': 'C',
    '\u24B9': 'D',
    '\uFF24': 'D',
    '\u1E0A': 'D',
    '\u010E': 'D',
    '\u1E0C': 'D',
    '\u1E10': 'D',
    '\u1E12': 'D',
    '\u1E0E': 'D',
    '\u0110': 'D',
    '\u018B': 'D',
    '\u018A': 'D',
    '\u0189': 'D',
    '\uA779': 'D',
    '\u01F1': 'DZ',
    '\u01C4': 'DZ',
    '\u01F2': 'Dz',
    '\u01C5': 'Dz',
    '\u24BA': 'E',
    '\uFF25': 'E',
    '\u00C8': 'E',
    '\u00C9': 'E',
    '\u00CA': 'E',
    '\u1EC0': 'E',
    '\u1EBE': 'E',
    '\u1EC4': 'E',
    '\u1EC2': 'E',
    '\u1EBC': 'E',
    '\u0112': 'E',
    '\u1E14': 'E',
    '\u1E16': 'E',
    '\u0114': 'E',
    '\u0116': 'E',
    '\u00CB': 'E',
    '\u1EBA': 'E',
    '\u011A': 'E',
    '\u0204': 'E',
    '\u0206': 'E',
    '\u1EB8': 'E',
    '\u1EC6': 'E',
    '\u0228': 'E',
    '\u1E1C': 'E',
    '\u0118': 'E',
    '\u1E18': 'E',
    '\u1E1A': 'E',
    '\u0190': 'E',
    '\u018E': 'E',
    '\u24BB': 'F',
    '\uFF26': 'F',
    '\u1E1E': 'F',
    '\u0191': 'F',
    '\uA77B': 'F',
    '\u24BC': 'G',
    '\uFF27': 'G',
    '\u01F4': 'G',
    '\u011C': 'G',
    '\u1E20': 'G',
    '\u011E': 'G',
    '\u0120': 'G',
    '\u01E6': 'G',
    '\u0122': 'G',
    '\u01E4': 'G',
    '\u0193': 'G',
    '\uA7A0': 'G',
    '\uA77D': 'G',
    '\uA77E': 'G',
    '\u24BD': 'H',
    '\uFF28': 'H',
    '\u0124': 'H',
    '\u1E22': 'H',
    '\u1E26': 'H',
    '\u021E': 'H',
    '\u1E24': 'H',
    '\u1E28': 'H',
    '\u1E2A': 'H',
    '\u0126': 'H',
    '\u2C67': 'H',
    '\u2C75': 'H',
    '\uA78D': 'H',
    '\u24BE': 'I',
    '\uFF29': 'I',
    '\u00CC': 'I',
    '\u00CD': 'I',
    '\u00CE': 'I',
    '\u0128': 'I',
    '\u012A': 'I',
    '\u012C': 'I',
    '\u0130': 'I',
    '\u00CF': 'I',
    '\u1E2E': 'I',
    '\u1EC8': 'I',
    '\u01CF': 'I',
    '\u0208': 'I',
    '\u020A': 'I',
    '\u1ECA': 'I',
    '\u012E': 'I',
    '\u1E2C': 'I',
    '\u0197': 'I',
    '\u24BF': 'J',
    '\uFF2A': 'J',
    '\u0134': 'J',
    '\u0248': 'J',
    '\u24C0': 'K',
    '\uFF2B': 'K',
    '\u1E30': 'K',
    '\u01E8': 'K',
    '\u1E32': 'K',
    '\u0136': 'K',
    '\u1E34': 'K',
    '\u0198': 'K',
    '\u2C69': 'K',
    '\uA740': 'K',
    '\uA742': 'K',
    '\uA744': 'K',
    '\uA7A2': 'K',
    '\u24C1': 'L',
    '\uFF2C': 'L',
    '\u013F': 'L',
    '\u0139': 'L',
    '\u013D': 'L',
    '\u1E36': 'L',
    '\u1E38': 'L',
    '\u013B': 'L',
    '\u1E3C': 'L',
    '\u1E3A': 'L',
    '\u0141': 'L',
    '\u023D': 'L',
    '\u2C62': 'L',
    '\u2C60': 'L',
    '\uA748': 'L',
    '\uA746': 'L',
    '\uA780': 'L',
    '\u01C7': 'LJ',
    '\u01C8': 'Lj',
    '\u24C2': 'M',
    '\uFF2D': 'M',
    '\u1E3E': 'M',
    '\u1E40': 'M',
    '\u1E42': 'M',
    '\u2C6E': 'M',
    '\u019C': 'M',
    '\u24C3': 'N',
    '\uFF2E': 'N',
    '\u01F8': 'N',
    '\u0143': 'N',
    '\u00D1': 'N',
    '\u1E44': 'N',
    '\u0147': 'N',
    '\u1E46': 'N',
    '\u0145': 'N',
    '\u1E4A': 'N',
    '\u1E48': 'N',
    '\u0220': 'N',
    '\u019D': 'N',
    '\uA790': 'N',
    '\uA7A4': 'N',
    '\u01CA': 'NJ',
    '\u01CB': 'Nj',
    '\u24C4': 'O',
    '\uFF2F': 'O',
    '\u00D2': 'O',
    '\u00D3': 'O',
    '\u00D4': 'O',
    '\u1ED2': 'O',
    '\u1ED0': 'O',
    '\u1ED6': 'O',
    '\u1ED4': 'O',
    '\u00D5': 'O',
    '\u1E4C': 'O',
    '\u022C': 'O',
    '\u1E4E': 'O',
    '\u014C': 'O',
    '\u1E50': 'O',
    '\u1E52': 'O',
    '\u014E': 'O',
    '\u022E': 'O',
    '\u0230': 'O',
    '\u00D6': 'O',
    '\u022A': 'O',
    '\u1ECE': 'O',
    '\u0150': 'O',
    '\u01D1': 'O',
    '\u020C': 'O',
    '\u020E': 'O',
    '\u01A0': 'O',
    '\u1EDC': 'O',
    '\u1EDA': 'O',
    '\u1EE0': 'O',
    '\u1EDE': 'O',
    '\u1EE2': 'O',
    '\u1ECC': 'O',
    '\u1ED8': 'O',
    '\u01EA': 'O',
    '\u01EC': 'O',
    '\u00D8': 'O',
    '\u01FE': 'O',
    '\u0186': 'O',
    '\u019F': 'O',
    '\uA74A': 'O',
    '\uA74C': 'O',
    '\u01A2': 'OI',
    '\uA74E': 'OO',
    '\u0222': 'OU',
    '\u24C5': 'P',
    '\uFF30': 'P',
    '\u1E54': 'P',
    '\u1E56': 'P',
    '\u01A4': 'P',
    '\u2C63': 'P',
    '\uA750': 'P',
    '\uA752': 'P',
    '\uA754': 'P',
    '\u24C6': 'Q',
    '\uFF31': 'Q',
    '\uA756': 'Q',
    '\uA758': 'Q',
    '\u024A': 'Q',
    '\u24C7': 'R',
    '\uFF32': 'R',
    '\u0154': 'R',
    '\u1E58': 'R',
    '\u0158': 'R',
    '\u0210': 'R',
    '\u0212': 'R',
    '\u1E5A': 'R',
    '\u1E5C': 'R',
    '\u0156': 'R',
    '\u1E5E': 'R',
    '\u024C': 'R',
    '\u2C64': 'R',
    '\uA75A': 'R',
    '\uA7A6': 'R',
    '\uA782': 'R',
    '\u24C8': 'S',
    '\uFF33': 'S',
    '\u1E9E': 'S',
    '\u015A': 'S',
    '\u1E64': 'S',
    '\u015C': 'S',
    '\u1E60': 'S',
    '\u0160': 'S',
    '\u1E66': 'S',
    '\u1E62': 'S',
    '\u1E68': 'S',
    '\u0218': 'S',
    '\u015E': 'S',
    '\u2C7E': 'S',
    '\uA7A8': 'S',
    '\uA784': 'S',
    '\u24C9': 'T',
    '\uFF34': 'T',
    '\u1E6A': 'T',
    '\u0164': 'T',
    '\u1E6C': 'T',
    '\u021A': 'T',
    '\u0162': 'T',
    '\u1E70': 'T',
    '\u1E6E': 'T',
    '\u0166': 'T',
    '\u01AC': 'T',
    '\u01AE': 'T',
    '\u023E': 'T',
    '\uA786': 'T',
    '\uA728': 'TZ',
    '\u24CA': 'U',
    '\uFF35': 'U',
    '\u00D9': 'U',
    '\u00DA': 'U',
    '\u00DB': 'U',
    '\u0168': 'U',
    '\u1E78': 'U',
    '\u016A': 'U',
    '\u1E7A': 'U',
    '\u016C': 'U',
    '\u00DC': 'U',
    '\u01DB': 'U',
    '\u01D7': 'U',
    '\u01D5': 'U',
    '\u01D9': 'U',
    '\u1EE6': 'U',
    '\u016E': 'U',
    '\u0170': 'U',
    '\u01D3': 'U',
    '\u0214': 'U',
    '\u0216': 'U',
    '\u01AF': 'U',
    '\u1EEA': 'U',
    '\u1EE8': 'U',
    '\u1EEE': 'U',
    '\u1EEC': 'U',
    '\u1EF0': 'U',
    '\u1EE4': 'U',
    '\u1E72': 'U',
    '\u0172': 'U',
    '\u1E76': 'U',
    '\u1E74': 'U',
    '\u0244': 'U',
    '\u24CB': 'V',
    '\uFF36': 'V',
    '\u1E7C': 'V',
    '\u1E7E': 'V',
    '\u01B2': 'V',
    '\uA75E': 'V',
    '\u0245': 'V',
    '\uA760': 'VY',
    '\u24CC': 'W',
    '\uFF37': 'W',
    '\u1E80': 'W',
    '\u1E82': 'W',
    '\u0174': 'W',
    '\u1E86': 'W',
    '\u1E84': 'W',
    '\u1E88': 'W',
    '\u2C72': 'W',
    '\u24CD': 'X',
    '\uFF38': 'X',
    '\u1E8A': 'X',
    '\u1E8C': 'X',
    '\u24CE': 'Y',
    '\uFF39': 'Y',
    '\u1EF2': 'Y',
    '\u00DD': 'Y',
    '\u0176': 'Y',
    '\u1EF8': 'Y',
    '\u0232': 'Y',
    '\u1E8E': 'Y',
    '\u0178': 'Y',
    '\u1EF6': 'Y',
    '\u1EF4': 'Y',
    '\u01B3': 'Y',
    '\u024E': 'Y',
    '\u1EFE': 'Y',
    '\u24CF': 'Z',
    '\uFF3A': 'Z',
    '\u0179': 'Z',
    '\u1E90': 'Z',
    '\u017B': 'Z',
    '\u017D': 'Z',
    '\u1E92': 'Z',
    '\u1E94': 'Z',
    '\u01B5': 'Z',
    '\u0224': 'Z',
    '\u2C7F': 'Z',
    '\u2C6B': 'Z',
    '\uA762': 'Z',
    '\u24D0': 'a',
    '\uFF41': 'a',
    '\u1E9A': 'a',
    '\u00E0': 'a',
    '\u00E1': 'a',
    '\u00E2': 'a',
    '\u1EA7': 'a',
    '\u1EA5': 'a',
    '\u1EAB': 'a',
    '\u1EA9': 'a',
    '\u00E3': 'a',
    '\u0101': 'a',
    '\u0103': 'a',
    '\u1EB1': 'a',
    '\u1EAF': 'a',
    '\u1EB5': 'a',
    '\u1EB3': 'a',
    '\u0227': 'a',
    '\u01E1': 'a',
    '\u00E4': 'a',
    '\u01DF': 'a',
    '\u1EA3': 'a',
    '\u00E5': 'a',
    '\u01FB': 'a',
    '\u01CE': 'a',
    '\u0201': 'a',
    '\u0203': 'a',
    '\u1EA1': 'a',
    '\u1EAD': 'a',
    '\u1EB7': 'a',
    '\u1E01': 'a',
    '\u0105': 'a',
    '\u2C65': 'a',
    '\u0250': 'a',
    '\uA733': 'aa',
    '\u00E6': 'ae',
    '\u01FD': 'ae',
    '\u01E3': 'ae',
    '\uA735': 'ao',
    '\uA737': 'au',
    '\uA739': 'av',
    '\uA73B': 'av',
    '\uA73D': 'ay',
    '\u24D1': 'b',
    '\uFF42': 'b',
    '\u1E03': 'b',
    '\u1E05': 'b',
    '\u1E07': 'b',
    '\u0180': 'b',
    '\u0183': 'b',
    '\u0253': 'b',
    '\u24D2': 'c',
    '\uFF43': 'c',
    '\u0107': 'c',
    '\u0109': 'c',
    '\u010B': 'c',
    '\u010D': 'c',
    '\u00E7': 'c',
    '\u1E09': 'c',
    '\u0188': 'c',
    '\u023C': 'c',
    '\uA73F': 'c',
    '\u2184': 'c',
    '\u24D3': 'd',
    '\uFF44': 'd',
    '\u1E0B': 'd',
    '\u010F': 'd',
    '\u1E0D': 'd',
    '\u1E11': 'd',
    '\u1E13': 'd',
    '\u1E0F': 'd',
    '\u0111': 'd',
    '\u018C': 'd',
    '\u0256': 'd',
    '\u0257': 'd',
    '\uA77A': 'd',
    '\u01F3': 'dz',
    '\u01C6': 'dz',
    '\u24D4': 'e',
    '\uFF45': 'e',
    '\u00E8': 'e',
    '\u00E9': 'e',
    '\u00EA': 'e',
    '\u1EC1': 'e',
    '\u1EBF': 'e',
    '\u1EC5': 'e',
    '\u1EC3': 'e',
    '\u1EBD': 'e',
    '\u0113': 'e',
    '\u1E15': 'e',
    '\u1E17': 'e',
    '\u0115': 'e',
    '\u0117': 'e',
    '\u00EB': 'e',
    '\u1EBB': 'e',
    '\u011B': 'e',
    '\u0205': 'e',
    '\u0207': 'e',
    '\u1EB9': 'e',
    '\u1EC7': 'e',
    '\u0229': 'e',
    '\u1E1D': 'e',
    '\u0119': 'e',
    '\u1E19': 'e',
    '\u1E1B': 'e',
    '\u0247': 'e',
    '\u025B': 'e',
    '\u01DD': 'e',
    '\u24D5': 'f',
    '\uFF46': 'f',
    '\u1E1F': 'f',
    '\u0192': 'f',
    '\uA77C': 'f',
    '\u24D6': 'g',
    '\uFF47': 'g',
    '\u01F5': 'g',
    '\u011D': 'g',
    '\u1E21': 'g',
    '\u011F': 'g',
    '\u0121': 'g',
    '\u01E7': 'g',
    '\u0123': 'g',
    '\u01E5': 'g',
    '\u0260': 'g',
    '\uA7A1': 'g',
    '\u1D79': 'g',
    '\uA77F': 'g',
    '\u24D7': 'h',
    '\uFF48': 'h',
    '\u0125': 'h',
    '\u1E23': 'h',
    '\u1E27': 'h',
    '\u021F': 'h',
    '\u1E25': 'h',
    '\u1E29': 'h',
    '\u1E2B': 'h',
    '\u1E96': 'h',
    '\u0127': 'h',
    '\u2C68': 'h',
    '\u2C76': 'h',
    '\u0265': 'h',
    '\u0195': 'hv',
    '\u24D8': 'i',
    '\uFF49': 'i',
    '\u00EC': 'i',
    '\u00ED': 'i',
    '\u00EE': 'i',
    '\u0129': 'i',
    '\u012B': 'i',
    '\u012D': 'i',
    '\u00EF': 'i',
    '\u1E2F': 'i',
    '\u1EC9': 'i',
    '\u01D0': 'i',
    '\u0209': 'i',
    '\u020B': 'i',
    '\u1ECB': 'i',
    '\u012F': 'i',
    '\u1E2D': 'i',
    '\u0268': 'i',
    '\u0131': 'i',
    '\u24D9': 'j',
    '\uFF4A': 'j',
    '\u0135': 'j',
    '\u01F0': 'j',
    '\u0249': 'j',
    '\u24DA': 'k',
    '\uFF4B': 'k',
    '\u1E31': 'k',
    '\u01E9': 'k',
    '\u1E33': 'k',
    '\u0137': 'k',
    '\u1E35': 'k',
    '\u0199': 'k',
    '\u2C6A': 'k',
    '\uA741': 'k',
    '\uA743': 'k',
    '\uA745': 'k',
    '\uA7A3': 'k',
    '\u24DB': 'l',
    '\uFF4C': 'l',
    '\u0140': 'l',
    '\u013A': 'l',
    '\u013E': 'l',
    '\u1E37': 'l',
    '\u1E39': 'l',
    '\u013C': 'l',
    '\u1E3D': 'l',
    '\u1E3B': 'l',
    '\u017F': 'l',
    '\u0142': 'l',
    '\u019A': 'l',
    '\u026B': 'l',
    '\u2C61': 'l',
    '\uA749': 'l',
    '\uA781': 'l',
    '\uA747': 'l',
    '\u01C9': 'lj',
    '\u24DC': 'm',
    '\uFF4D': 'm',
    '\u1E3F': 'm',
    '\u1E41': 'm',
    '\u1E43': 'm',
    '\u0271': 'm',
    '\u026F': 'm',
    '\u24DD': 'n',
    '\uFF4E': 'n',
    '\u01F9': 'n',
    '\u0144': 'n',
    '\u00F1': 'n',
    '\u1E45': 'n',
    '\u0148': 'n',
    '\u1E47': 'n',
    '\u0146': 'n',
    '\u1E4B': 'n',
    '\u1E49': 'n',
    '\u019E': 'n',
    '\u0272': 'n',
    '\u0149': 'n',
    '\uA791': 'n',
    '\uA7A5': 'n',
    '\u01CC': 'nj',
    '\u24DE': 'o',
    '\uFF4F': 'o',
    '\u00F2': 'o',
    '\u00F3': 'o',
    '\u00F4': 'o',
    '\u1ED3': 'o',
    '\u1ED1': 'o',
    '\u1ED7': 'o',
    '\u1ED5': 'o',
    '\u00F5': 'o',
    '\u1E4D': 'o',
    '\u022D': 'o',
    '\u1E4F': 'o',
    '\u014D': 'o',
    '\u1E51': 'o',
    '\u1E53': 'o',
    '\u014F': 'o',
    '\u022F': 'o',
    '\u0231': 'o',
    '\u00F6': 'o',
    '\u022B': 'o',
    '\u1ECF': 'o',
    '\u0151': 'o',
    '\u01D2': 'o',
    '\u020D': 'o',
    '\u020F': 'o',
    '\u01A1': 'o',
    '\u1EDD': 'o',
    '\u1EDB': 'o',
    '\u1EE1': 'o',
    '\u1EDF': 'o',
    '\u1EE3': 'o',
    '\u1ECD': 'o',
    '\u1ED9': 'o',
    '\u01EB': 'o',
    '\u01ED': 'o',
    '\u00F8': 'o',
    '\u01FF': 'o',
    '\u0254': 'o',
    '\uA74B': 'o',
    '\uA74D': 'o',
    '\u0275': 'o',
    '\u01A3': 'oi',
    '\u0223': 'ou',
    '\uA74F': 'oo',
    '\u24DF': 'p',
    '\uFF50': 'p',
    '\u1E55': 'p',
    '\u1E57': 'p',
    '\u01A5': 'p',
    '\u1D7D': 'p',
    '\uA751': 'p',
    '\uA753': 'p',
    '\uA755': 'p',
    '\u24E0': 'q',
    '\uFF51': 'q',
    '\u024B': 'q',
    '\uA757': 'q',
    '\uA759': 'q',
    '\u24E1': 'r',
    '\uFF52': 'r',
    '\u0155': 'r',
    '\u1E59': 'r',
    '\u0159': 'r',
    '\u0211': 'r',
    '\u0213': 'r',
    '\u1E5B': 'r',
    '\u1E5D': 'r',
    '\u0157': 'r',
    '\u1E5F': 'r',
    '\u024D': 'r',
    '\u027D': 'r',
    '\uA75B': 'r',
    '\uA7A7': 'r',
    '\uA783': 'r',
    '\u24E2': 's',
    '\uFF53': 's',
    '\u00DF': 's',
    '\u015B': 's',
    '\u1E65': 's',
    '\u015D': 's',
    '\u1E61': 's',
    '\u0161': 's',
    '\u1E67': 's',
    '\u1E63': 's',
    '\u1E69': 's',
    '\u0219': 's',
    '\u015F': 's',
    '\u023F': 's',
    '\uA7A9': 's',
    '\uA785': 's',
    '\u1E9B': 's',
    '\u24E3': 't',
    '\uFF54': 't',
    '\u1E6B': 't',
    '\u1E97': 't',
    '\u0165': 't',
    '\u1E6D': 't',
    '\u021B': 't',
    '\u0163': 't',
    '\u1E71': 't',
    '\u1E6F': 't',
    '\u0167': 't',
    '\u01AD': 't',
    '\u0288': 't',
    '\u2C66': 't',
    '\uA787': 't',
    '\uA729': 'tz',
    '\u24E4': 'u',
    '\uFF55': 'u',
    '\u00F9': 'u',
    '\u00FA': 'u',
    '\u00FB': 'u',
    '\u0169': 'u',
    '\u1E79': 'u',
    '\u016B': 'u',
    '\u1E7B': 'u',
    '\u016D': 'u',
    '\u00FC': 'u',
    '\u01DC': 'u',
    '\u01D8': 'u',
    '\u01D6': 'u',
    '\u01DA': 'u',
    '\u1EE7': 'u',
    '\u016F': 'u',
    '\u0171': 'u',
    '\u01D4': 'u',
    '\u0215': 'u',
    '\u0217': 'u',
    '\u01B0': 'u',
    '\u1EEB': 'u',
    '\u1EE9': 'u',
    '\u1EEF': 'u',
    '\u1EED': 'u',
    '\u1EF1': 'u',
    '\u1EE5': 'u',
    '\u1E73': 'u',
    '\u0173': 'u',
    '\u1E77': 'u',
    '\u1E75': 'u',
    '\u0289': 'u',
    '\u24E5': 'v',
    '\uFF56': 'v',
    '\u1E7D': 'v',
    '\u1E7F': 'v',
    '\u028B': 'v',
    '\uA75F': 'v',
    '\u028C': 'v',
    '\uA761': 'vy',
    '\u24E6': 'w',
    '\uFF57': 'w',
    '\u1E81': 'w',
    '\u1E83': 'w',
    '\u0175': 'w',
    '\u1E87': 'w',
    '\u1E85': 'w',
    '\u1E98': 'w',
    '\u1E89': 'w',
    '\u2C73': 'w',
    '\u24E7': 'x',
    '\uFF58': 'x',
    '\u1E8B': 'x',
    '\u1E8D': 'x',
    '\u24E8': 'y',
    '\uFF59': 'y',
    '\u1EF3': 'y',
    '\u00FD': 'y',
    '\u0177': 'y',
    '\u1EF9': 'y',
    '\u0233': 'y',
    '\u1E8F': 'y',
    '\u00FF': 'y',
    '\u1EF7': 'y',
    '\u1E99': 'y',
    '\u1EF5': 'y',
    '\u01B4': 'y',
    '\u024F': 'y',
    '\u1EFF': 'y',
    '\u24E9': 'z',
    '\uFF5A': 'z',
    '\u017A': 'z',
    '\u1E91': 'z',
    '\u017C': 'z',
    '\u017E': 'z',
    '\u1E93': 'z',
    '\u1E95': 'z',
    '\u01B6': 'z',
    '\u0225': 'z',
    '\u0240': 'z',
    '\u2C6C': 'z',
    '\uA763': 'z',
    '\u0386': '\u0391',
    '\u0388': '\u0395',
    '\u0389': '\u0397',
    '\u038A': '\u0399',
    '\u03AA': '\u0399',
    '\u038C': '\u039F',
    '\u038E': '\u03A5',
    '\u03AB': '\u03A5',
    '\u038F': '\u03A9',
    '\u03AC': '\u03B1',
    '\u03AD': '\u03B5',
    '\u03AE': '\u03B7',
    '\u03AF': '\u03B9',
    '\u03CA': '\u03B9',
    '\u0390': '\u03B9',
    '\u03CC': '\u03BF',
    '\u03CD': '\u03C5',
    '\u03CB': '\u03C5',
    '\u03B0': '\u03C5',
    '\u03C9': '\u03C9',
    '\u03C2': '\u03C3'
  };

  return diacritics;
});

S2.define('select2/data/base',[
  '../utils'
], function (Utils) {
  function BaseAdapter ($element, options) {
    BaseAdapter.__super__.constructor.call(this);
  }

  Utils.Extend(BaseAdapter, Utils.Observable);

  BaseAdapter.prototype.current = function (callback) {
    throw new Error('The `current` method must be defined in child classes.');
  };

  BaseAdapter.prototype.query = function (params, callback) {
    throw new Error('The `query` method must be defined in child classes.');
  };

  BaseAdapter.prototype.bind = function (container, $container) {
    // Can be implemented in subclasses
  };

  BaseAdapter.prototype.destroy = function () {
    // Can be implemented in subclasses
  };

  BaseAdapter.prototype.generateResultId = function (container, data) {
    var id = container.id + '-result-';

    id += Utils.generateChars(4);

    if (data.id != null) {
      id += '-' + data.id.toString();
    } else {
      id += '-' + Utils.generateChars(4);
    }
    return id;
  };

  return BaseAdapter;
});

S2.define('select2/data/select',[
  './base',
  '../utils',
  'jquery'
], function (BaseAdapter, Utils, $) {
  function SelectAdapter ($element, options) {
    this.$element = $element;
    this.options = options;

    SelectAdapter.__super__.constructor.call(this);
  }

  Utils.Extend(SelectAdapter, BaseAdapter);

  SelectAdapter.prototype.current = function (callback) {
    var data = [];
    var self = this;

    this.$element.find(':selected').each(function () {
      var $option = $(this);

      var option = self.item($option);

      data.push(option);
    });

    callback(data);
  };

  SelectAdapter.prototype.select = function (data) {
    var self = this;

    data.selected = true;

    // If data.element is a DOM node, use it instead
    if ($(data.element).is('option')) {
      data.element.selected = true;

      this.$element.trigger('change');

      return;
    }

    if (this.$element.prop('multiple')) {
      this.current(function (currentData) {
        var val = [];

        data = [data];
        data.push.apply(data, currentData);

        for (var d = 0; d < data.length; d++) {
          var id = data[d].id;

          if ($.inArray(id, val) === -1) {
            val.push(id);
          }
        }

        self.$element.val(val);
        self.$element.trigger('change');
      });
    } else {
      var val = data.id;

      this.$element.val(val);
      this.$element.trigger('change');
    }
  };

  SelectAdapter.prototype.unselect = function (data) {
    var self = this;

    if (!this.$element.prop('multiple')) {
      return;
    }

    data.selected = false;

    if ($(data.element).is('option')) {
      data.element.selected = false;

      this.$element.trigger('change');

      return;
    }

    this.current(function (currentData) {
      var val = [];

      for (var d = 0; d < currentData.length; d++) {
        var id = currentData[d].id;

        if (id !== data.id && $.inArray(id, val) === -1) {
          val.push(id);
        }
      }

      self.$element.val(val);

      self.$element.trigger('change');
    });
  };

  SelectAdapter.prototype.bind = function (container, $container) {
    var self = this;

    this.container = container;

    container.on('select', function (params) {
      self.select(params.data);
    });

    container.on('unselect', function (params) {
      self.unselect(params.data);
    });
  };

  SelectAdapter.prototype.destroy = function () {
    // Remove anything added to child elements
    this.$element.find('*').each(function () {
      // Remove any custom data set by Select2
      $.removeData(this, 'data');
    });
  };

  SelectAdapter.prototype.query = function (params, callback) {
    var data = [];
    var self = this;

    var $options = this.$element.children();

    $options.each(function () {
      var $option = $(this);

      if (!$option.is('option') && !$option.is('optgroup')) {
        return;
      }

      var option = self.item($option);

      var matches = self.matches(params, option);

      if (matches !== null) {
        data.push(matches);
      }
    });

    callback({
      results: data
    });
  };

  SelectAdapter.prototype.addOptions = function ($options) {
    Utils.appendMany(this.$element, $options);
  };

  SelectAdapter.prototype.option = function (data) {
    var option;

    if (data.children) {
      option = document.createElement('optgroup');
      option.label = data.text;
    } else {
      option = document.createElement('option');

      if (option.textContent !== undefined) {
        option.textContent = data.text;
      } else {
        option.innerText = data.text;
      }
    }

    if (data.id) {
      option.value = data.id;
    }

    if (data.disabled) {
      option.disabled = true;
    }

    if (data.selected) {
      option.selected = true;
    }

    if (data.title) {
      option.title = data.title;
    }

    var $option = $(option);

    var normalizedData = this._normalizeItem(data);
    normalizedData.element = option;

    // Override the option's data with the combined data
    $.data(option, 'data', normalizedData);

    return $option;
  };

  SelectAdapter.prototype.item = function ($option) {
    var data = {};

    data = $.data($option[0], 'data');

    if (data != null) {
      return data;
    }

    if ($option.is('option')) {
      data = {
        id: $option.val(),
        text: $option.text(),
        disabled: $option.prop('disabled'),
        selected: $option.prop('selected'),
        title: $option.prop('title')
      };
    } else if ($option.is('optgroup')) {
      data = {
        text: $option.prop('label'),
        children: [],
        title: $option.prop('title')
      };

      var $children = $option.children('option');
      var children = [];

      for (var c = 0; c < $children.length; c++) {
        var $child = $($children[c]);

        var child = this.item($child);

        children.push(child);
      }

      data.children = children;
    }

    data = this._normalizeItem(data);
    data.element = $option[0];

    $.data($option[0], 'data', data);

    return data;
  };

  SelectAdapter.prototype._normalizeItem = function (item) {
    if (!$.isPlainObject(item)) {
      item = {
        id: item,
        text: item
      };
    }

    item = $.extend({}, {
      text: ''
    }, item);

    var defaults = {
      selected: false,
      disabled: false
    };

    if (item.id != null) {
      item.id = item.id.toString();
    }

    if (item.text != null) {
      item.text = item.text.toString();
    }

    if (item._resultId == null && item.id && this.container != null) {
      item._resultId = this.generateResultId(this.container, item);
    }

    return $.extend({}, defaults, item);
  };

  SelectAdapter.prototype.matches = function (params, data) {
    var matcher = this.options.get('matcher');

    return matcher(params, data);
  };

  return SelectAdapter;
});

S2.define('select2/data/array',[
  './select',
  '../utils',
  'jquery'
], function (SelectAdapter, Utils, $) {
  function ArrayAdapter ($element, options) {
    var data = options.get('data') || [];

    ArrayAdapter.__super__.constructor.call(this, $element, options);

    this.addOptions(this.convertToOptions(data));
  }

  Utils.Extend(ArrayAdapter, SelectAdapter);

  ArrayAdapter.prototype.select = function (data) {
    var $option = this.$element.find('option').filter(function (i, elm) {
      return elm.value == data.id.toString();
    });

    if ($option.length === 0) {
      $option = this.option(data);

      this.addOptions($option);
    }

    ArrayAdapter.__super__.select.call(this, data);
  };

  ArrayAdapter.prototype.convertToOptions = function (data) {
    var self = this;

    var $existing = this.$element.find('option');
    var existingIds = $existing.map(function () {
      return self.item($(this)).id;
    }).get();

    var $options = [];

    // Filter out all items except for the one passed in the argument
    function onlyItem (item) {
      return function () {
        return $(this).val() == item.id;
      };
    }

    for (var d = 0; d < data.length; d++) {
      var item = this._normalizeItem(data[d]);

      // Skip items which were pre-loaded, only merge the data
      if ($.inArray(item.id, existingIds) >= 0) {
        var $existingOption = $existing.filter(onlyItem(item));

        var existingData = this.item($existingOption);
        var newData = $.extend(true, {}, item, existingData);

        var $newOption = this.option(newData);

        $existingOption.replaceWith($newOption);

        continue;
      }

      var $option = this.option(item);

      if (item.children) {
        var $children = this.convertToOptions(item.children);

        Utils.appendMany($option, $children);
      }

      $options.push($option);
    }

    return $options;
  };

  return ArrayAdapter;
});

S2.define('select2/data/ajax',[
  './array',
  '../utils',
  'jquery'
], function (ArrayAdapter, Utils, $) {
  function AjaxAdapter ($element, options) {
    this.ajaxOptions = this._applyDefaults(options.get('ajax'));

    if (this.ajaxOptions.processResults != null) {
      this.processResults = this.ajaxOptions.processResults;
    }

    AjaxAdapter.__super__.constructor.call(this, $element, options);
  }

  Utils.Extend(AjaxAdapter, ArrayAdapter);

  AjaxAdapter.prototype._applyDefaults = function (options) {
    var defaults = {
      data: function (params) {
        return $.extend({}, params, {
          q: params.term
        });
      },
      transport: function (params, success, failure) {
        var $request = $.ajax(params);

        $request.then(success);
        $request.fail(failure);

        return $request;
      }
    };

    return $.extend({}, defaults, options, true);
  };

  AjaxAdapter.prototype.processResults = function (results) {
    return results;
  };

  AjaxAdapter.prototype.query = function (params, callback) {
    var matches = [];
    var self = this;

    if (this._request != null) {
      // JSONP requests cannot always be aborted
      if ($.isFunction(this._request.abort)) {
        this._request.abort();
      }

      this._request = null;
    }

    var options = $.extend({
      type: 'GET'
    }, this.ajaxOptions);

    if (typeof options.url === 'function') {
      options.url = options.url.call(this.$element, params);
    }

    if (typeof options.data === 'function') {
      options.data = options.data.call(this.$element, params);
    }

    function request () {
      var $request = options.transport(options, function (data) {
        var results = self.processResults(data, params);

        if (self.options.get('debug') && window.console && console.error) {
          // Check to make sure that the response included a `results` key.
          if (!results || !results.results || !$.isArray(results.results)) {
            console.error(
              'Select2: The AJAX results did not return an array in the ' +
              '`results` key of the response.'
            );
          }
        }

        callback(results);
      }, function () {
        // Attempt to detect if a request was aborted
        // Only works if the transport exposes a status property
        if ($request.status && $request.status === '0') {
          return;
        }

        self.trigger('results:message', {
          message: 'errorLoading'
        });
      });

      self._request = $request;
    }

    if (this.ajaxOptions.delay && params.term != null) {
      if (this._queryTimeout) {
        window.clearTimeout(this._queryTimeout);
      }

      this._queryTimeout = window.setTimeout(request, this.ajaxOptions.delay);
    } else {
      request();
    }
  };

  return AjaxAdapter;
});

S2.define('select2/data/tags',[
  'jquery'
], function ($) {
  function Tags (decorated, $element, options) {
    var tags = options.get('tags');

    var createTag = options.get('createTag');

    if (createTag !== undefined) {
      this.createTag = createTag;
    }

    var insertTag = options.get('insertTag');

    if (insertTag !== undefined) {
        this.insertTag = insertTag;
    }

    decorated.call(this, $element, options);

    if ($.isArray(tags)) {
      for (var t = 0; t < tags.length; t++) {
        var tag = tags[t];
        var item = this._normalizeItem(tag);

        var $option = this.option(item);

        this.$element.append($option);
      }
    }
  }

  Tags.prototype.query = function (decorated, params, callback) {
    var self = this;

    this._removeOldTags();

    if (params.term == null || params.page != null) {
      decorated.call(this, params, callback);
      return;
    }

    function wrapper (obj, child) {
      var data = obj.results;

      for (var i = 0; i < data.length; i++) {
        var option = data[i];

        var checkChildren = (
          option.children != null &&
          !wrapper({
            results: option.children
          }, true)
        );

        var checkText = option.text === params.term;

        if (checkText || checkChildren) {
          if (child) {
            return false;
          }

          obj.data = data;
          callback(obj);

          return;
        }
      }

      if (child) {
        return true;
      }

      var tag = self.createTag(params);

      if (tag != null) {
        var $option = self.option(tag);
        $option.attr('data-select2-tag', true);

        self.addOptions([$option]);

        self.insertTag(data, tag);
      }

      obj.results = data;

      callback(obj);
    }

    decorated.call(this, params, wrapper);
  };

  Tags.prototype.createTag = function (decorated, params) {
    var term = $.trim(params.term);

    if (term === '') {
      return null;
    }

    return {
      id: term,
      text: term
    };
  };

  Tags.prototype.insertTag = function (_, data, tag) {
    data.unshift(tag);
  };

  Tags.prototype._removeOldTags = function (_) {
    var tag = this._lastTag;

    var $options = this.$element.find('option[data-select2-tag]');

    $options.each(function () {
      if (this.selected) {
        return;
      }

      $(this).remove();
    });
  };

  return Tags;
});

S2.define('select2/data/tokenizer',[
  'jquery'
], function ($) {
  function Tokenizer (decorated, $element, options) {
    var tokenizer = options.get('tokenizer');

    if (tokenizer !== undefined) {
      this.tokenizer = tokenizer;
    }

    decorated.call(this, $element, options);
  }

  Tokenizer.prototype.bind = function (decorated, container, $container) {
    decorated.call(this, container, $container);

    this.$search =  container.dropdown.$search || container.selection.$search ||
      $container.find('.select2-search__field');
  };

  Tokenizer.prototype.query = function (decorated, params, callback) {
    var self = this;

    function createAndSelect (data) {
      // Normalize the data object so we can use it for checks
      var item = self._normalizeItem(data);

      // Check if the data object already exists as a tag
      // Select it if it doesn't
      var $existingOptions = self.$element.find('option').filter(function () {
        return $(this).val() === item.id;
      });

      // If an existing option wasn't found for it, create the option
      if (!$existingOptions.length) {
        var $option = self.option(item);
        $option.attr('data-select2-tag', true);

        self._removeOldTags();
        self.addOptions([$option]);
      }

      // Select the item, now that we know there is an option for it
      select(item);
    }

    function select (data) {
      self.trigger('select', {
        data: data
      });
    }

    params.term = params.term || '';

    var tokenData = this.tokenizer(params, this.options, createAndSelect);

    if (tokenData.term !== params.term) {
      // Replace the search term if we have the search box
      if (this.$search.length) {
        this.$search.val(tokenData.term);
        this.$search.focus();
      }

      params.term = tokenData.term;
    }

    decorated.call(this, params, callback);
  };

  Tokenizer.prototype.tokenizer = function (_, params, options, callback) {
    var separators = options.get('tokenSeparators') || [];
    var term = params.term;
    var i = 0;

    var createTag = this.createTag || function (params) {
      return {
        id: params.term,
        text: params.term
      };
    };

    while (i < term.length) {
      var termChar = term[i];

      if ($.inArray(termChar, separators) === -1) {
        i++;

        continue;
      }

      var part = term.substr(0, i);
      var partParams = $.extend({}, params, {
        term: part
      });

      var data = createTag(partParams);

      if (data == null) {
        i++;
        continue;
      }

      callback(data);

      // Reset the term to not include the tokenized portion
      term = term.substr(i + 1) || '';
      i = 0;
    }

    return {
      term: term
    };
  };

  return Tokenizer;
});

S2.define('select2/data/minimumInputLength',[

], function () {
  function MinimumInputLength (decorated, $e, options) {
    this.minimumInputLength = options.get('minimumInputLength');

    decorated.call(this, $e, options);
  }

  MinimumInputLength.prototype.query = function (decorated, params, callback) {
    params.term = params.term || '';

    if (params.term.length < this.minimumInputLength) {
      this.trigger('results:message', {
        message: 'inputTooShort',
        args: {
          minimum: this.minimumInputLength,
          input: params.term,
          params: params
        }
      });

      return;
    }

    decorated.call(this, params, callback);
  };

  return MinimumInputLength;
});

S2.define('select2/data/maximumInputLength',[

], function () {
  function MaximumInputLength (decorated, $e, options) {
    this.maximumInputLength = options.get('maximumInputLength');

    decorated.call(this, $e, options);
  }

  MaximumInputLength.prototype.query = function (decorated, params, callback) {
    params.term = params.term || '';

    if (this.maximumInputLength > 0 &&
        params.term.length > this.maximumInputLength) {
      this.trigger('results:message', {
        message: 'inputTooLong',
        args: {
          maximum: this.maximumInputLength,
          input: params.term,
          params: params
        }
      });

      return;
    }

    decorated.call(this, params, callback);
  };

  return MaximumInputLength;
});

S2.define('select2/data/maximumSelectionLength',[

], function (){
  function MaximumSelectionLength (decorated, $e, options) {
    this.maximumSelectionLength = options.get('maximumSelectionLength');

    decorated.call(this, $e, options);
  }

  MaximumSelectionLength.prototype.query =
    function (decorated, params, callback) {
      var self = this;

      this.current(function (currentData) {
        var count = currentData != null ? currentData.length : 0;
        if (self.maximumSelectionLength > 0 &&
          count >= self.maximumSelectionLength) {
          self.trigger('results:message', {
            message: 'maximumSelected',
            args: {
              maximum: self.maximumSelectionLength
            }
          });
          return;
        }
        decorated.call(self, params, callback);
      });
  };

  return MaximumSelectionLength;
});

S2.define('select2/dropdown',[
  'jquery',
  './utils'
], function ($, Utils) {
  function Dropdown ($element, options) {
    this.$element = $element;
    this.options = options;

    Dropdown.__super__.constructor.call(this);
  }

  Utils.Extend(Dropdown, Utils.Observable);

  Dropdown.prototype.render = function () {
    var $dropdown = $(
      '<span class="select2-dropdown">' +
        '<span class="select2-results"></span>' +
      '</span>'
    );

    $dropdown.attr('dir', this.options.get('dir'));

    this.$dropdown = $dropdown;

    return $dropdown;
  };

  Dropdown.prototype.bind = function () {
    // Should be implemented in subclasses
  };

  Dropdown.prototype.position = function ($dropdown, $container) {
    // Should be implmented in subclasses
  };

  Dropdown.prototype.destroy = function () {
    // Remove the dropdown from the DOM
    this.$dropdown.remove();
  };

  return Dropdown;
});

S2.define('select2/dropdown/search',[
  'jquery',
  '../utils'
], function ($, Utils) {
  function Search () { }

  Search.prototype.render = function (decorated) {
    var $rendered = decorated.call(this);

    var $search = $(
      '<span class="select2-search select2-search--dropdown">' +
        '<input class="select2-search__field" type="search" tabindex="-1"' +
        ' autocomplete="off" autocorrect="off" autocapitalize="off"' +
        ' spellcheck="false" role="textbox" />' +
      '</span>'
    );

    this.$searchContainer = $search;
    this.$search = $search.find('input');

    $rendered.prepend($search);

    return $rendered;
  };

  Search.prototype.bind = function (decorated, container, $container) {
    var self = this;

    decorated.call(this, container, $container);

    this.$search.on('keydown', function (evt) {
      self.trigger('keypress', evt);

      self._keyUpPrevented = evt.isDefaultPrevented();
    });

    // Workaround for browsers which do not support the `input` event
    // This will prevent double-triggering of events for browsers which support
    // both the `keyup` and `input` events.
    this.$search.on('input', function (evt) {
      // Unbind the duplicated `keyup` event
      $(this).off('keyup');
    });

    this.$search.on('keyup input', function (evt) {
      self.handleSearch(evt);
    });

    container.on('open', function () {
      self.$search.attr('tabindex', 0);

      self.$search.focus();

      window.setTimeout(function () {
        self.$search.focus();
      }, 0);
    });

    container.on('close', function () {
      self.$search.attr('tabindex', -1);

      self.$search.val('');
    });

    container.on('focus', function () {
      if (container.isOpen()) {
        self.$search.focus();
      }
    });

    container.on('results:all', function (params) {
      if (params.query.term == null || params.query.term === '') {
        var showSearch = self.showSearch(params);

        if (showSearch) {
          self.$searchContainer.removeClass('select2-search--hide');
        } else {
          self.$searchContainer.addClass('select2-search--hide');
        }
      }
    });
  };

  Search.prototype.handleSearch = function (evt) {
    if (!this._keyUpPrevented) {
      var input = this.$search.val();

      this.trigger('query', {
        term: input
      });
    }

    this._keyUpPrevented = false;
  };

  Search.prototype.showSearch = function (_, params) {
    return true;
  };

  return Search;
});

S2.define('select2/dropdown/hidePlaceholder',[

], function () {
  function HidePlaceholder (decorated, $element, options, dataAdapter) {
    this.placeholder = this.normalizePlaceholder(options.get('placeholder'));

    decorated.call(this, $element, options, dataAdapter);
  }

  HidePlaceholder.prototype.append = function (decorated, data) {
    data.results = this.removePlaceholder(data.results);

    decorated.call(this, data);
  };

  HidePlaceholder.prototype.normalizePlaceholder = function (_, placeholder) {
    if (typeof placeholder === 'string') {
      placeholder = {
        id: '',
        text: placeholder
      };
    }

    return placeholder;
  };

  HidePlaceholder.prototype.removePlaceholder = function (_, data) {
    var modifiedData = data.slice(0);

    for (var d = data.length - 1; d >= 0; d--) {
      var item = data[d];

      if (this.placeholder.id === item.id) {
        modifiedData.splice(d, 1);
      }
    }

    return modifiedData;
  };

  return HidePlaceholder;
});

S2.define('select2/dropdown/infiniteScroll',[
  'jquery'
], function ($) {
  function InfiniteScroll (decorated, $element, options, dataAdapter) {
    this.lastParams = {};

    decorated.call(this, $element, options, dataAdapter);

    this.$loadingMore = this.createLoadingMore();
    this.loading = false;
  }

  InfiniteScroll.prototype.append = function (decorated, data) {
    this.$loadingMore.remove();
    this.loading = false;

    decorated.call(this, data);

    if (this.showLoadingMore(data)) {
      this.$results.append(this.$loadingMore);
    }
  };

  InfiniteScroll.prototype.bind = function (decorated, container, $container) {
    var self = this;

    decorated.call(this, container, $container);

    container.on('query', function (params) {
      self.lastParams = params;
      self.loading = true;
    });

    container.on('query:append', function (params) {
      self.lastParams = params;
      self.loading = true;
    });

    this.$results.on('scroll', function () {
      var isLoadMoreVisible = $.contains(
        document.documentElement,
        self.$loadingMore[0]
      );

      if (self.loading || !isLoadMoreVisible) {
        return;
      }

      var currentOffset = self.$results.offset().top +
        self.$results.outerHeight(false);
      var loadingMoreOffset = self.$loadingMore.offset().top +
        self.$loadingMore.outerHeight(false);

      if (currentOffset + 50 >= loadingMoreOffset) {
        self.loadMore();
      }
    });
  };

  InfiniteScroll.prototype.loadMore = function () {
    this.loading = true;

    var params = $.extend({}, {page: 1}, this.lastParams);

    params.page++;

    this.trigger('query:append', params);
  };

  InfiniteScroll.prototype.showLoadingMore = function (_, data) {
    return data.pagination && data.pagination.more;
  };

  InfiniteScroll.prototype.createLoadingMore = function () {
    var $option = $(
      '<li ' +
      'class="select2-results__option select2-results__option--load-more"' +
      'role="treeitem" aria-disabled="true"></li>'
    );

    var message = this.options.get('translations').get('loadingMore');

    $option.html(message(this.lastParams));

    return $option;
  };

  return InfiniteScroll;
});

S2.define('select2/dropdown/attachBody',[
  'jquery',
  '../utils'
], function ($, Utils) {
  function AttachBody (decorated, $element, options) {
    this.$dropdownParent = options.get('dropdownParent') || $(document.body);

    decorated.call(this, $element, options);
  }

  AttachBody.prototype.bind = function (decorated, container, $container) {
    var self = this;

    var setupResultsEvents = false;

    decorated.call(this, container, $container);

    container.on('open', function () {
      self._showDropdown();
      self._attachPositioningHandler(container);

      if (!setupResultsEvents) {
        setupResultsEvents = true;

        container.on('results:all', function () {
          self._positionDropdown();
          self._resizeDropdown();
        });

        container.on('results:append', function () {
          self._positionDropdown();
          self._resizeDropdown();
        });
      }
    });

    container.on('close', function () {
      self._hideDropdown();
      self._detachPositioningHandler(container);
    });

    this.$dropdownContainer.on('mousedown', function (evt) {
      evt.stopPropagation();
    });
  };

  AttachBody.prototype.destroy = function (decorated) {
    decorated.call(this);

    this.$dropdownContainer.remove();
  };

  AttachBody.prototype.position = function (decorated, $dropdown, $container) {
    // Clone all of the container classes
    $dropdown.attr('class', $container.attr('class'));

    $dropdown.removeClass('select2');
    $dropdown.addClass('select2-container--open');

    $dropdown.css({
      position: 'absolute',
      top: -999999
    });

    this.$container = $container;
  };

  AttachBody.prototype.render = function (decorated) {
    var $container = $('<span></span>');

    var $dropdown = decorated.call(this);
    $container.append($dropdown);

    this.$dropdownContainer = $container;

    return $container;
  };

  AttachBody.prototype._hideDropdown = function (decorated) {
    this.$dropdownContainer.detach();
  };

  AttachBody.prototype._attachPositioningHandler =
      function (decorated, container) {
    var self = this;

    var scrollEvent = 'scroll.select2.' + container.id;
    var resizeEvent = 'resize.select2.' + container.id;
    var orientationEvent = 'orientationchange.select2.' + container.id;

    var $watchers = this.$container.parents().filter(Utils.hasScroll);
    $watchers.each(function () {
      $(this).data('select2-scroll-position', {
        x: $(this).scrollLeft(),
        y: $(this).scrollTop()
      });
    });

    $watchers.on(scrollEvent, function (ev) {
      var position = $(this).data('select2-scroll-position');
      $(this).scrollTop(position.y);
    });

    $(window).on(scrollEvent + ' ' + resizeEvent + ' ' + orientationEvent,
      function (e) {
      self._positionDropdown();
      self._resizeDropdown();
    });
  };

  AttachBody.prototype._detachPositioningHandler =
      function (decorated, container) {
    var scrollEvent = 'scroll.select2.' + container.id;
    var resizeEvent = 'resize.select2.' + container.id;
    var orientationEvent = 'orientationchange.select2.' + container.id;

    var $watchers = this.$container.parents().filter(Utils.hasScroll);
    $watchers.off(scrollEvent);

    $(window).off(scrollEvent + ' ' + resizeEvent + ' ' + orientationEvent);
  };

  AttachBody.prototype._positionDropdown = function () {
    var $window = $(window);

    var isCurrentlyAbove = this.$dropdown.hasClass('select2-dropdown--above');
    var isCurrentlyBelow = this.$dropdown.hasClass('select2-dropdown--below');

    var newDirection = null;

    var offset = this.$container.offset();

    offset.bottom = offset.top + this.$container.outerHeight(false);

    var container = {
      height: this.$container.outerHeight(false)
    };

    container.top = offset.top;
    container.bottom = offset.top + container.height;

    var dropdown = {
      height: this.$dropdown.outerHeight(false)
    };

    var viewport = {
      top: $window.scrollTop(),
      bottom: $window.scrollTop() + $window.height()
    };

    var enoughRoomAbove = viewport.top < (offset.top - dropdown.height);
    var enoughRoomBelow = viewport.bottom > (offset.bottom + dropdown.height);

    var css = {
      left: offset.left,
      top: container.bottom
    };

    // Determine what the parent element is to use for calciulating the offset
    var $offsetParent = this.$dropdownParent;

    // For statically positoned elements, we need to get the element
    // that is determining the offset
    if ($offsetParent.css('position') === 'static') {
      $offsetParent = $offsetParent.offsetParent();
    }

    var parentOffset = $offsetParent.offset();

    css.top -= parentOffset.top;
    css.left -= parentOffset.left;

    if (!isCurrentlyAbove && !isCurrentlyBelow) {
      newDirection = 'below';
    }

    if (!enoughRoomBelow && enoughRoomAbove && !isCurrentlyAbove) {
      newDirection = 'above';
    } else if (!enoughRoomAbove && enoughRoomBelow && isCurrentlyAbove) {
      newDirection = 'below';
    }

    if (newDirection == 'above' ||
      (isCurrentlyAbove && newDirection !== 'below')) {
      css.top = container.top - parentOffset.top - dropdown.height;
    }

    if (newDirection != null) {
      this.$dropdown
        .removeClass('select2-dropdown--below select2-dropdown--above')
        .addClass('select2-dropdown--' + newDirection);
      this.$container
        .removeClass('select2-container--below select2-container--above')
        .addClass('select2-container--' + newDirection);
    }

    this.$dropdownContainer.css(css);
  };

  AttachBody.prototype._resizeDropdown = function () {
    var css = {
      width: this.$container.outerWidth(false) + 'px'
    };

    if (this.options.get('dropdownAutoWidth')) {
      css.minWidth = css.width;
      css.position = 'relative';
      css.width = 'auto';
    }

    this.$dropdown.css(css);
  };

  AttachBody.prototype._showDropdown = function (decorated) {
    this.$dropdownContainer.appendTo(this.$dropdownParent);

    this._positionDropdown();
    this._resizeDropdown();
  };

  return AttachBody;
});

S2.define('select2/dropdown/minimumResultsForSearch',[

], function () {
  function countResults (data) {
    var count = 0;

    for (var d = 0; d < data.length; d++) {
      var item = data[d];

      if (item.children) {
        count += countResults(item.children);
      } else {
        count++;
      }
    }

    return count;
  }

  function MinimumResultsForSearch (decorated, $element, options, dataAdapter) {
    this.minimumResultsForSearch = options.get('minimumResultsForSearch');

    if (this.minimumResultsForSearch < 0) {
      this.minimumResultsForSearch = Infinity;
    }

    decorated.call(this, $element, options, dataAdapter);
  }

  MinimumResultsForSearch.prototype.showSearch = function (decorated, params) {
    if (countResults(params.data.results) < this.minimumResultsForSearch) {
      return false;
    }

    return decorated.call(this, params);
  };

  return MinimumResultsForSearch;
});

S2.define('select2/dropdown/selectOnClose',[

], function () {
  function SelectOnClose () { }

  SelectOnClose.prototype.bind = function (decorated, container, $container) {
    var self = this;

    decorated.call(this, container, $container);

    container.on('close', function (params) {
      self._handleSelectOnClose(params);
    });
  };

  SelectOnClose.prototype._handleSelectOnClose = function (_, params) {
    if (params && params.originalSelect2Event != null) {
      var event = params.originalSelect2Event;

      // Don't select an item if the close event was triggered from a select or
      // unselect event
      if (event._type === 'select' || event._type === 'unselect') {
        return;
      }
    }

    var $highlightedResults = this.getHighlightedResults();

    // Only select highlighted results
    if ($highlightedResults.length < 1) {
      return;
    }

    var data = $highlightedResults.data('data');

    // Don't re-select already selected resulte
    if (
      (data.element != null && data.element.selected) ||
      (data.element == null && data.selected)
    ) {
      return;
    }

    this.trigger('select', {
        data: data
    });
  };

  return SelectOnClose;
});

S2.define('select2/dropdown/closeOnSelect',[

], function () {
  function CloseOnSelect () { }

  CloseOnSelect.prototype.bind = function (decorated, container, $container) {
    var self = this;

    decorated.call(this, container, $container);

    container.on('select', function (evt) {
      self._selectTriggered(evt);
    });

    container.on('unselect', function (evt) {
      self._selectTriggered(evt);
    });
  };

  CloseOnSelect.prototype._selectTriggered = function (_, evt) {
    var originalEvent = evt.originalEvent;

    // Don't close if the control key is being held
    if (originalEvent && originalEvent.ctrlKey) {
      return;
    }

    this.trigger('close', {
      originalEvent: originalEvent,
      originalSelect2Event: evt
    });
  };

  return CloseOnSelect;
});

S2.define('select2/i18n/ru',[],function () {
  // Russian
  function ending (count, one, couple, more) {
    if (count % 10 < 5 && count % 10 > 0 &&
        count % 100 < 5 || count % 100 > 20) {
      if (count % 10 > 1) {
        return couple;
      }
    } else {
      return more;
    }

    return one;
  }

  return {
    errorLoading: function () {
      return 'Невозможно загрузить результаты';
    },
    inputTooLong: function (args) {
      var overChars = args.input.length - args.maximum;

      var message = 'Пожалуйста, введите на ' + overChars + ' символ';

      message += ending(overChars, '', 'a', 'ов');

      message += ' меньше';

      return message;
    },
    inputTooShort: function (args) {
      var remainingChars = args.minimum - args.input.length;

      var message = 'Пожалуйста, введите еще хотя бы ' + remainingChars +
          ' символ';

      message += ending(remainingChars, '', 'a', 'ов');

      return message;
    },
    loadingMore: function () {
      return 'Загрузка данных…';
    },
    maximumSelected: function (args) {
      var message = 'Вы можете выбрать не более ' + args.maximum + ' элемент';

      message += ending(args.maximum, '', 'a', 'ов');

      return message;
    },
    noResults: function () {
      return 'Совпадений не найдено';
    },
    searching: function () {
      return 'Поиск…';
    }
  };
});

S2.define('select2/i18n/de',[],function () {
  // Russian
  function ending (count, one, couple, more) {
    if (count % 10 < 5 && count % 10 > 0 &&
        count % 100 < 5 || count % 100 > 20) {
      if (count % 10 > 1) {
        return couple;
      }
    } else {
      return more;
    }

    return one;
  }

  return {
    errorLoading: function () {
      return 'Die Ergebnisse konnten nicht geladen werden.';
    },
    inputTooLong: function (args) {
      var overChars = args.input.length - args.maximum;

      return 'Bitte ' + overChars + ' Zeichen weniger eingeben';
    },
    inputTooShort: function (args) {
      var remainingChars = args.minimum - args.input.length;

      return 'Bitte ' + remainingChars + ' Zeichen mehr eingeben';
    },
    loadingMore: function () {
      return 'Lade mehr Ergebnisse…';
    },
    maximumSelected: function (args) {
      var message = 'Sie können nur ' + args.maximum + ' Eintr';

      if (args.maximum === 1) {
        message += 'ag';
      } else {
        message += 'äge';
      }

      message += ' auswählen';

      return message;
    },
    noResults: function () {
      return 'Keine Übereinstimmungen gefunden';
    },
    searching: function () {
      return 'Suche…';
    }
  };
});

S2.define('select2/i18n/es',[],function () {
  // Russian
  function ending (count, one, couple, more) {
    if (count % 10 < 5 && count % 10 > 0 &&
        count % 100 < 5 || count % 100 > 20) {
      if (count % 10 > 1) {
        return couple;
      }
    } else {
      return more;
    }

    return one;
  }

  return {
    errorLoading: function () {
      return 'La carga falló';
    },
    inputTooLong: function (args) {
      var remainingChars = args.input.length - args.maximum;

      var message = 'Por favor, elimine ' + remainingChars + ' car';

      if (remainingChars == 1) {
        message += 'ácter';
      } else {
        message += 'acteres';
      }

      return message;
    },
    inputTooShort: function (args) {
      var remainingChars = args.minimum - args.input.length;

      var message = 'Por favor, introduzca ' + remainingChars + ' car';

      if (remainingChars == 1) {
        message += 'ácter';
      } else {
        message += 'acteres';
      }

      return message;
    },
    loadingMore: function () {
      return 'Cargando más resultados…';
    },
    maximumSelected: function (args) {
      var message = 'Sólo puede seleccionar ' + args.maximum + ' elemento';

      if (args.maximum != 1) {
        message += 's';
      }

      return message;
    },
    noResults: function () {
      return 'No se encontraron resultados';
    },
    searching: function () {
      return 'Buscando…';
    }
  };
});

S2.define('select2/i18n/it',[],function () {
  function ending (count, one, couple, more) {
    if (count % 10 < 5 && count % 10 > 0 &&
        count % 100 < 5 || count % 100 > 20) {
      if (count % 10 > 1) {
        return couple;
      }
    } else {
      return more;
    }

    return one;
  }

  return {
    errorLoading: function () {
      return 'I risultati non possono essere caricati.';
    },
    inputTooLong: function (args) {
      var overChars = args.input.length - args.maximum;

      var message = 'Per favore cancella ' + overChars + ' caratter';

      if (overChars !== 1) {
        message += 'i';
      } else {
        message += 'e';
      }

      return message;
    },
    inputTooShort: function (args) {
      var remainingChars = args.minimum - args.input.length;

      var message = 'Per favore inserisci ' +remainingChars+ ' o più caratteri';

      return message;
    },
    loadingMore: function () {
      return 'Caricando più risultati…';
    },
    maximumSelected: function (args) {
      var message = 'Puoi selezionare solo ' + args.maximum + ' element';

      if (args.maximum !== 1) {
        message += 'i';
      } else {
        message += 'o';
      }

      return message;
    },
    noResults: function () {
      return 'Nessun risultato trovato';
    },
    searching: function () {
      return 'Sto cercando…';
    }
  };
});

S2.define('select2/i18n/en',[],function () {
  // English
  return {
    errorLoading: function () {
      return 'The results could not be loaded.';
    },
    inputTooLong: function (args) {
      var overChars = args.input.length - args.maximum;

      var message = 'Please delete ' + overChars + ' character';

      if (overChars != 1) {
        message += 's';
      }

      return message;
    },
    inputTooShort: function (args) {
      var remainingChars = args.minimum - args.input.length;

      var message = 'Please enter ' + remainingChars + ' or more characters';

      return message;
    },
    loadingMore: function () {
      return 'Loading more results…';
    },
    maximumSelected: function (args) {
      var message = 'You can only select ' + args.maximum + ' item';

      if (args.maximum != 1) {
        message += 's';
      }

      return message;
    },
    noResults: function () {
      return 'No results found';
    },
    searching: function () {
      return 'Searching…';
    }
  };
});

S2.define('select2/defaults',[
  'jquery',
  'require',

  './results',

  './selection/single',
  './selection/multiple',
  './selection/placeholder',
  './selection/allowClear',
  './selection/search',
  './selection/eventRelay',

  './utils',
  './translation',
  './diacritics',

  './data/select',
  './data/array',
  './data/ajax',
  './data/tags',
  './data/tokenizer',
  './data/minimumInputLength',
  './data/maximumInputLength',
  './data/maximumSelectionLength',

  './dropdown',
  './dropdown/search',
  './dropdown/hidePlaceholder',
  './dropdown/infiniteScroll',
  './dropdown/attachBody',
  './dropdown/minimumResultsForSearch',
  './dropdown/selectOnClose',
  './dropdown/closeOnSelect',

  './i18n/en'
], function ($, require,

             ResultsList,

             SingleSelection, MultipleSelection, Placeholder, AllowClear,
             SelectionSearch, EventRelay,

             Utils, Translation, DIACRITICS,

             SelectData, ArrayData, AjaxData, Tags, Tokenizer,
             MinimumInputLength, MaximumInputLength, MaximumSelectionLength,

             Dropdown, DropdownSearch, HidePlaceholder, InfiniteScroll,
             AttachBody, MinimumResultsForSearch, SelectOnClose, CloseOnSelect,

             EnglishTranslation) {
  function Defaults () {
    this.reset();
  }

  Defaults.prototype.apply = function (options) {
    options = $.extend(true, {}, this.defaults, options);

    if (options.dataAdapter == null) {
      if (options.ajax != null) {
        options.dataAdapter = AjaxData;
      } else if (options.data != null) {
        options.dataAdapter = ArrayData;
      } else {
        options.dataAdapter = SelectData;
      }

      if (options.minimumInputLength > 0) {
        options.dataAdapter = Utils.Decorate(
          options.dataAdapter,
          MinimumInputLength
        );
      }

      if (options.maximumInputLength > 0) {
        options.dataAdapter = Utils.Decorate(
          options.dataAdapter,
          MaximumInputLength
        );
      }

      if (options.maximumSelectionLength > 0) {
        options.dataAdapter = Utils.Decorate(
          options.dataAdapter,
          MaximumSelectionLength
        );
      }

      if (options.tags) {
        options.dataAdapter = Utils.Decorate(options.dataAdapter, Tags);
      }

      if (options.tokenSeparators != null || options.tokenizer != null) {
        options.dataAdapter = Utils.Decorate(
          options.dataAdapter,
          Tokenizer
        );
      }

      if (options.query != null) {
        var Query = require(options.amdBase + 'compat/query');

        options.dataAdapter = Utils.Decorate(
          options.dataAdapter,
          Query
        );
      }

      if (options.initSelection != null) {
        var InitSelection = require(options.amdBase + 'compat/initSelection');

        options.dataAdapter = Utils.Decorate(
          options.dataAdapter,
          InitSelection
        );
      }
    }

    if (options.resultsAdapter == null) {
      options.resultsAdapter = ResultsList;

      if (options.ajax != null) {
        options.resultsAdapter = Utils.Decorate(
          options.resultsAdapter,
          InfiniteScroll
        );
      }

      if (options.placeholder != null) {
        options.resultsAdapter = Utils.Decorate(
          options.resultsAdapter,
          HidePlaceholder
        );
      }

      if (options.selectOnClose) {
        options.resultsAdapter = Utils.Decorate(
          options.resultsAdapter,
          SelectOnClose
        );
      }
    }

    if (options.dropdownAdapter == null) {
      if (options.multiple) {
        options.dropdownAdapter = Dropdown;
      } else {
        var SearchableDropdown = Utils.Decorate(Dropdown, DropdownSearch);

        options.dropdownAdapter = SearchableDropdown;
      }

      if (options.minimumResultsForSearch !== 0) {
        options.dropdownAdapter = Utils.Decorate(
          options.dropdownAdapter,
          MinimumResultsForSearch
        );
      }

      if (options.closeOnSelect) {
        options.dropdownAdapter = Utils.Decorate(
          options.dropdownAdapter,
          CloseOnSelect
        );
      }

      if (
        options.dropdownCssClass != null ||
        options.dropdownCss != null ||
        options.adaptDropdownCssClass != null
      ) {
        var DropdownCSS = require(options.amdBase + 'compat/dropdownCss');

        options.dropdownAdapter = Utils.Decorate(
          options.dropdownAdapter,
          DropdownCSS
        );
      }

      options.dropdownAdapter = Utils.Decorate(
        options.dropdownAdapter,
        AttachBody
      );
    }

    if (options.selectionAdapter == null) {
      if (options.multiple) {
        options.selectionAdapter = MultipleSelection;
      } else {
        options.selectionAdapter = SingleSelection;
      }

      // Add the placeholder mixin if a placeholder was specified
      if (options.placeholder != null) {
        options.selectionAdapter = Utils.Decorate(
          options.selectionAdapter,
          Placeholder
        );
      }

      if (options.allowClear) {
        options.selectionAdapter = Utils.Decorate(
          options.selectionAdapter,
          AllowClear
        );
      }

      if (options.multiple) {
        options.selectionAdapter = Utils.Decorate(
          options.selectionAdapter,
          SelectionSearch
        );
      }

      if (
        options.containerCssClass != null ||
        options.containerCss != null ||
        options.adaptContainerCssClass != null
      ) {
        var ContainerCSS = require(options.amdBase + 'compat/containerCss');

        options.selectionAdapter = Utils.Decorate(
          options.selectionAdapter,
          ContainerCSS
        );
      }

      options.selectionAdapter = Utils.Decorate(
        options.selectionAdapter,
        EventRelay
      );
    }

    if (typeof options.language === 'string') {
      // Check if the language is specified with a region
      if (options.language.indexOf('-') > 0) {
        // Extract the region information if it is included
        var languageParts = options.language.split('-');
        var baseLanguage = languageParts[0];

        options.language = [options.language, baseLanguage];
      } else {
        options.language = [options.language];
      }
    }

    if ($.isArray(options.language)) {
      var languages = new Translation();
      options.language.push('en');

      var languageNames = options.language;

      for (var l = 0; l < languageNames.length; l++) {
        var name = languageNames[l];
        var language = {};

        try {
          // Try to load it with the original name
          language = Translation.loadPath(name);
        } catch (e) {
          try {
            // If we couldn't load it, check if it wasn't the full path
            name = this.defaults.amdLanguageBase + name;
            language = Translation.loadPath(name);
          } catch (ex) {
            // The translation could not be loaded at all. Sometimes this is
            // because of a configuration problem, other times this can be
            // because of how Select2 helps load all possible translation files.
            if (options.debug && window.console && console.warn) {
              console.warn(
                'Select2: The language file for "' + name + '" could not be ' +
                'automatically loaded. A fallback will be used instead.'
              );
            }

            continue;
          }
        }

        languages.extend(language);
      }

      options.translations = languages;
    } else {
      var baseTranslation = Translation.loadPath(
        this.defaults.amdLanguageBase + 'en'
      );
      var customTranslation = new Translation(options.language);

      customTranslation.extend(baseTranslation);

      options.translations = customTranslation;
    }

    return options;
  };

  Defaults.prototype.reset = function () {
    function stripDiacritics (text) {
      // Used 'uni range + named function' from http://jsperf.com/diacritics/18
      function match(a) {
        return DIACRITICS[a] || a;
      }

      return text.replace(/[^\u0000-\u007E]/g, match);
    }

    function matcher (params, data) {
      // Always return the object if there is nothing to compare
      if ($.trim(params.term) === '') {
        return data;
      }

      // Do a recursive check for options with children
      if (data.children && data.children.length > 0) {
        // Clone the data object if there are children
        // This is required as we modify the object to remove any non-matches
        var match = $.extend(true, {}, data);

        // Check each child of the option
        for (var c = data.children.length - 1; c >= 0; c--) {
          var child = data.children[c];

          var matches = matcher(params, child);

          // If there wasn't a match, remove the object in the array
          if (matches == null) {
            match.children.splice(c, 1);
          }
        }

        // If any children matched, return the new object
        if (match.children.length > 0) {
          return match;
        }

        // If there were no matching children, check just the plain object
        return matcher(params, match);
      }

      var original = stripDiacritics(data.text).toUpperCase();
      var term = stripDiacritics(params.term).toUpperCase();

      // Check if the text contains the term
      if (original.indexOf(term) > -1) {
        return data;
      }

      // If it doesn't contain the term, don't return anything
      return null;
    }

    this.defaults = {
      amdBase: './',
      amdLanguageBase: './i18n/',
      closeOnSelect: true,
      debug: false,
      dropdownAutoWidth: false,
      escapeMarkup: Utils.escapeMarkup,
      language: EnglishTranslation,
      matcher: matcher,
      minimumInputLength: 0,
      maximumInputLength: 0,
      maximumSelectionLength: 0,
      minimumResultsForSearch: 0,
      selectOnClose: false,
      sorter: function (data) {
        return data;
      },
      templateResult: function (result) {
        return result.text;
      },
      templateSelection: function (selection) {
        return selection.text;
      },
      theme: 'default',
      width: 'resolve'
    };
  };

  Defaults.prototype.set = function (key, value) {
    var camelKey = $.camelCase(key);

    var data = {};
    data[camelKey] = value;

    var convertedData = Utils._convertData(data);

    $.extend(this.defaults, convertedData);
  };

  var defaults = new Defaults();

  return defaults;
});

S2.define('select2/options',[
  'require',
  'jquery',
  './defaults',
  './utils'
], function (require, $, Defaults, Utils) {
  function Options (options, $element) {
    this.options = options;

    if ($element != null) {
      this.fromElement($element);
    }

    this.options = Defaults.apply(this.options);

    if ($element && $element.is('input')) {
      var InputCompat = require(this.get('amdBase') + 'compat/inputData');

      this.options.dataAdapter = Utils.Decorate(
        this.options.dataAdapter,
        InputCompat
      );
    }
  }

  Options.prototype.fromElement = function ($e) {
    var excludedData = ['select2'];

    if (this.options.multiple == null) {
      this.options.multiple = $e.prop('multiple');
    }

    if (this.options.disabled == null) {
      this.options.disabled = $e.prop('disabled');
    }

    if (this.options.language == null) {
      if ($e.prop('lang')) {
        this.options.language = $e.prop('lang').toLowerCase();
      } else if ($e.closest('[lang]').prop('lang')) {
        this.options.language = $e.closest('[lang]').prop('lang');
      }
    }

    if (this.options.dir == null) {
      if ($e.prop('dir')) {
        this.options.dir = $e.prop('dir');
      } else if ($e.closest('[dir]').prop('dir')) {
        this.options.dir = $e.closest('[dir]').prop('dir');
      } else {
        this.options.dir = 'ltr';
      }
    }

    $e.prop('disabled', this.options.disabled);
    $e.prop('multiple', this.options.multiple);

    if ($e.data('select2Tags')) {
      if (this.options.debug && window.console && console.warn) {
        console.warn(
          'Select2: The `data-select2-tags` attribute has been changed to ' +
          'use the `data-data` and `data-tags="true"` attributes and will be ' +
          'removed in future versions of Select2.'
        );
      }

      $e.data('data', $e.data('select2Tags'));
      $e.data('tags', true);
    }

    if ($e.data('ajaxUrl')) {
      if (this.options.debug && window.console && console.warn) {
        console.warn(
          'Select2: The `data-ajax-url` attribute has been changed to ' +
          '`data-ajax--url` and support for the old attribute will be removed' +
          ' in future versions of Select2.'
        );
      }

      $e.attr('ajax--url', $e.data('ajaxUrl'));
      $e.data('ajax--url', $e.data('ajaxUrl'));
    }

    var dataset = {};

    // Prefer the element's `dataset` attribute if it exists
    // jQuery 1.x does not correctly handle data attributes with multiple dashes
    if ($.fn.jquery && $.fn.jquery.substr(0, 2) == '1.' && $e[0].dataset) {
      dataset = $.extend(true, {}, $e[0].dataset, $e.data());
    } else {
      dataset = $e.data();
    }

    var data = $.extend(true, {}, dataset);

    data = Utils._convertData(data);

    for (var key in data) {
      if ($.inArray(key, excludedData) > -1) {
        continue;
      }

      if ($.isPlainObject(this.options[key])) {
        $.extend(this.options[key], data[key]);
      } else {
        this.options[key] = data[key];
      }
    }

    return this;
  };

  Options.prototype.get = function (key) {
    return this.options[key];
  };

  Options.prototype.set = function (key, val) {
    this.options[key] = val;
  };

  return Options;
});

S2.define('select2/core',[
  'jquery',
  './options',
  './utils',
  './keys'
], function ($, Options, Utils, KEYS) {
  var Select2 = function ($element, options) {
    if ($element.data('select2') != null) {
      $element.data('select2').destroy();
    }

    this.$element = $element;

    this.id = this._generateId($element);

    options = options || {};

    this.options = new Options(options, $element);

    Select2.__super__.constructor.call(this);

    // Set up the tabindex

    var tabindex = $element.attr('tabindex') || 0;
    $element.data('old-tabindex', tabindex);
    $element.attr('tabindex', '-1');

    // Set up containers and adapters

    var DataAdapter = this.options.get('dataAdapter');
    this.dataAdapter = new DataAdapter($element, this.options);

    var $container = this.render();

    this._placeContainer($container);

    var SelectionAdapter = this.options.get('selectionAdapter');
    this.selection = new SelectionAdapter($element, this.options);
    this.$selection = this.selection.render();

    this.selection.position(this.$selection, $container);

    var DropdownAdapter = this.options.get('dropdownAdapter');
    this.dropdown = new DropdownAdapter($element, this.options);
    this.$dropdown = this.dropdown.render();

    this.dropdown.position(this.$dropdown, $container);

    var ResultsAdapter = this.options.get('resultsAdapter');
    this.results = new ResultsAdapter($element, this.options, this.dataAdapter);
    this.$results = this.results.render();

    this.results.position(this.$results, this.$dropdown);

    // Bind events

    var self = this;

    // Bind the container to all of the adapters
    this._bindAdapters();

    // Register any DOM event handlers
    this._registerDomEvents();

    // Register any internal event handlers
    this._registerDataEvents();
    this._registerSelectionEvents();
    this._registerDropdownEvents();
    this._registerResultsEvents();
    this._registerEvents();

    // Set the initial state
    this.dataAdapter.current(function (initialData) {
      self.trigger('selection:update', {
        data: initialData
      });
    });

    // Hide the original select
    $element.addClass('select2-hidden-accessible');
    $element.attr('aria-hidden', 'true');

    // Synchronize any monitored attributes
    this._syncAttributes();

    $element.data('select2', this);
  };

  Utils.Extend(Select2, Utils.Observable);

  Select2.prototype._generateId = function ($element) {
    var id = '';

    if ($element.attr('id') != null) {
      id = $element.attr('id');
    } else if ($element.attr('name') != null) {
      id = $element.attr('name') + '-' + Utils.generateChars(2);
    } else {
      id = Utils.generateChars(4);
    }

    id = id.replace(/(:|\.|\[|\]|,)/g, '');
    id = 'select2-' + id;

    return id;
  };

  Select2.prototype._placeContainer = function ($container) {
    $container.insertAfter(this.$element);

    var width = this._resolveWidth(this.$element, this.options.get('width'));

    if (width != null) {
      $container.css('width', width);
    }
  };

  Select2.prototype._resolveWidth = function ($element, method) {
    var WIDTH = /^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i;

    if (method == 'resolve') {
      var styleWidth = this._resolveWidth($element, 'style');

      if (styleWidth != null) {
        return styleWidth;
      }

      return this._resolveWidth($element, 'element');
    }

    if (method == 'element') {
      var elementWidth = $element.outerWidth(false);

      if (elementWidth <= 0) {
        return 'auto';
      }

      return elementWidth + 'px';
    }

    if (method == 'style') {
      var style = $element.attr('style');

      if (typeof(style) !== 'string') {
        return null;
      }

      var attrs = style.split(';');

      for (var i = 0, l = attrs.length; i < l; i = i + 1) {
        var attr = attrs[i].replace(/\s/g, '');
        var matches = attr.match(WIDTH);

        if (matches !== null && matches.length >= 1) {
          return matches[1];
        }
      }

      return null;
    }

    return method;
  };

  Select2.prototype._bindAdapters = function () {
    this.dataAdapter.bind(this, this.$container);
    this.selection.bind(this, this.$container);

    this.dropdown.bind(this, this.$container);
    this.results.bind(this, this.$container);
  };

  Select2.prototype._registerDomEvents = function () {
    var self = this;

    this.$element.on('change.select2', function () {
      self.dataAdapter.current(function (data) {
        self.trigger('selection:update', {
          data: data
        });
      });
    });

    this.$element.on('focus.select2', function (evt) {
      self.trigger('focus', evt);
    });

    this._syncA = Utils.bind(this._syncAttributes, this);
    this._syncS = Utils.bind(this._syncSubtree, this);

    if (this.$element[0].attachEvent) {
      this.$element[0].attachEvent('onpropertychange', this._syncA);
    }

    var observer = window.MutationObserver ||
      window.WebKitMutationObserver ||
      window.MozMutationObserver
    ;

    if (observer != null) {
      this._observer = new observer(function (mutations) {
        $.each(mutations, self._syncA);
        $.each(mutations, self._syncS);
      });
      this._observer.observe(this.$element[0], {
        attributes: true,
        childList: true,
        subtree: false
      });
    } else if (this.$element[0].addEventListener) {
      this.$element[0].addEventListener(
        'DOMAttrModified',
        self._syncA,
        false
      );
      this.$element[0].addEventListener(
        'DOMNodeInserted',
        self._syncS,
        false
      );
      this.$element[0].addEventListener(
        'DOMNodeRemoved',
        self._syncS,
        false
      );
    }
  };

  Select2.prototype._registerDataEvents = function () {
    var self = this;

    this.dataAdapter.on('*', function (name, params) {
      self.trigger(name, params);
    });
  };

  Select2.prototype._registerSelectionEvents = function () {
    var self = this;
    var nonRelayEvents = ['toggle', 'focus'];

    this.selection.on('toggle', function () {
      self.toggleDropdown();
    });

    this.selection.on('focus', function (params) {
      self.focus(params);
    });

    this.selection.on('*', function (name, params) {
      if ($.inArray(name, nonRelayEvents) !== -1) {
        return;
      }

      self.trigger(name, params);
    });
  };

  Select2.prototype._registerDropdownEvents = function () {
    var self = this;

    this.dropdown.on('*', function (name, params) {
      self.trigger(name, params);
    });
  };

  Select2.prototype._registerResultsEvents = function () {
    var self = this;

    this.results.on('*', function (name, params) {
      self.trigger(name, params);
    });
  };

  Select2.prototype._registerEvents = function () {
    var self = this;

    this.on('open', function () {
      self.$container.addClass('select2-container--open');
    });

    this.on('close', function () {
      self.$container.removeClass('select2-container--open');
    });

    this.on('enable', function () {
      self.$container.removeClass('select2-container--disabled');
    });

    this.on('disable', function () {
      self.$container.addClass('select2-container--disabled');
    });

    this.on('blur', function () {
      self.$container.removeClass('select2-container--focus');
    });

    this.on('query', function (params) {
      if (!self.isOpen()) {
        self.trigger('open', {});
      }

      this.dataAdapter.query(params, function (data) {
        self.trigger('results:all', {
          data: data,
          query: params
        });
      });
    });

    this.on('query:append', function (params) {
      this.dataAdapter.query(params, function (data) {
        self.trigger('results:append', {
          data: data,
          query: params
        });
      });
    });

    this.on('keypress', function (evt) {
      var key = evt.which;

      if (self.isOpen()) {
        if (key === KEYS.ESC || key === KEYS.TAB ||
            (key === KEYS.UP && evt.altKey)) {
          self.close();

          evt.preventDefault();
        } else if (key === KEYS.ENTER) {
          self.trigger('results:select', {});

          evt.preventDefault();
        } else if ((key === KEYS.SPACE && evt.ctrlKey)) {
          self.trigger('results:toggle', {});

          evt.preventDefault();
        } else if (key === KEYS.UP) {
          self.trigger('results:previous', {});

          evt.preventDefault();
        } else if (key === KEYS.DOWN) {
          self.trigger('results:next', {});

          evt.preventDefault();
        }
      } else {
        if (key === KEYS.ENTER || key === KEYS.SPACE ||
            (key === KEYS.DOWN && evt.altKey)) {
          self.open();

          evt.preventDefault();
        }
      }
    });
  };

  Select2.prototype._syncAttributes = function () {
    this.options.set('disabled', this.$element.prop('disabled'));

    if (this.options.get('disabled')) {
      if (this.isOpen()) {
        this.close();
      }

      this.trigger('disable', {});
    } else {
      this.trigger('enable', {});
    }
  };

  Select2.prototype._syncSubtree = function (evt, mutations) {
    var changed = false;
    var self = this;

    // Ignore any mutation events raised for elements that aren't options or
    // optgroups. This handles the case when the select element is destroyed
    if (
      evt && evt.target && (
        evt.target.nodeName !== 'OPTION' && evt.target.nodeName !== 'OPTGROUP'
      )
    ) {
      return;
    }

    if (!mutations) {
      // If mutation events aren't supported, then we can only assume that the
      // change affected the selections
      changed = true;
    } else if (mutations.addedNodes && mutations.addedNodes.length > 0) {
      for (var n = 0; n < mutations.addedNodes.length; n++) {
        var node = mutations.addedNodes[n];

        if (node.selected) {
          changed = true;
        }
      }
    } else if (mutations.removedNodes && mutations.removedNodes.length > 0) {
      changed = true;
    }

    // Only re-pull the data if we think there is a change
    if (changed) {
      this.dataAdapter.current(function (currentData) {
        self.trigger('selection:update', {
          data: currentData
        });
      });
    }
  };

  /**
   * Override the trigger method to automatically trigger pre-events when
   * there are events that can be prevented.
   */
  Select2.prototype.trigger = function (name, args) {
    var actualTrigger = Select2.__super__.trigger;
    var preTriggerMap = {
      'open': 'opening',
      'close': 'closing',
      'select': 'selecting',
      'unselect': 'unselecting'
    };

    if (args === undefined) {
      args = {};
    }

    if (name in preTriggerMap) {
      var preTriggerName = preTriggerMap[name];
      var preTriggerArgs = {
        prevented: false,
        name: name,
        args: args
      };

      actualTrigger.call(this, preTriggerName, preTriggerArgs);

      if (preTriggerArgs.prevented) {
        args.prevented = true;

        return;
      }
    }

    actualTrigger.call(this, name, args);
  };

  Select2.prototype.toggleDropdown = function () {
    if (this.options.get('disabled')) {
      return;
    }

    if (this.isOpen()) {
      this.close();
    } else {
      this.open();
    }
  };

  Select2.prototype.open = function () {
    if (this.isOpen()) {
      return;
    }

    this.trigger('query', {});
  };

  Select2.prototype.close = function () {
    if (!this.isOpen()) {
      return;
    }

    this.trigger('close', {});
  };

  Select2.prototype.isOpen = function () {
    return this.$container.hasClass('select2-container--open');
  };

  Select2.prototype.hasFocus = function () {
    return this.$container.hasClass('select2-container--focus');
  };

  Select2.prototype.focus = function (data) {
    // No need to re-trigger focus events if we are already focused
    if (this.hasFocus()) {
      return;
    }

    this.$container.addClass('select2-container--focus');
    this.trigger('focus', {});
  };

  Select2.prototype.enable = function (args) {
    if (this.options.get('debug') && window.console && console.warn) {
      console.warn(
        'Select2: The `select2("enable")` method has been deprecated and will' +
        ' be removed in later Select2 versions. Use $element.prop("disabled")' +
        ' instead.'
      );
    }

    if (args == null || args.length === 0) {
      args = [true];
    }

    var disabled = !args[0];

    this.$element.prop('disabled', disabled);
  };

  Select2.prototype.data = function () {
    if (this.options.get('debug') &&
        arguments.length > 0 && window.console && console.warn) {
      console.warn(
        'Select2: Data can no longer be set using `select2("data")`. You ' +
        'should consider setting the value instead using `$element.val()`.'
      );
    }

    var data = [];

    this.dataAdapter.current(function (currentData) {
      data = currentData;
    });

    return data;
  };

  Select2.prototype.val = function (args) {
    if (this.options.get('debug') && window.console && console.warn) {
      console.warn(
        'Select2: The `select2("val")` method has been deprecated and will be' +
        ' removed in later Select2 versions. Use $element.val() instead.'
      );
    }

    if (args == null || args.length === 0) {
      return this.$element.val();
    }

    var newVal = args[0];

    if ($.isArray(newVal)) {
      newVal = $.map(newVal, function (obj) {
        return obj.toString();
      });
    }

    this.$element.val(newVal).trigger('change');
  };

  Select2.prototype.destroy = function () {
    this.$container.remove();

    if (this.$element[0].detachEvent) {
      this.$element[0].detachEvent('onpropertychange', this._syncA);
    }

    if (this._observer != null) {
      this._observer.disconnect();
      this._observer = null;
    } else if (this.$element[0].removeEventListener) {
      this.$element[0]
        .removeEventListener('DOMAttrModified', this._syncA, false);
      this.$element[0]
        .removeEventListener('DOMNodeInserted', this._syncS, false);
      this.$element[0]
        .removeEventListener('DOMNodeRemoved', this._syncS, false);
    }

    this._syncA = null;
    this._syncS = null;

    this.$element.off('.select2');
    this.$element.attr('tabindex', this.$element.data('old-tabindex'));

    this.$element.removeClass('select2-hidden-accessible');
    this.$element.attr('aria-hidden', 'false');
    this.$element.removeData('select2');

    this.dataAdapter.destroy();
    this.selection.destroy();
    this.dropdown.destroy();
    this.results.destroy();

    this.dataAdapter = null;
    this.selection = null;
    this.dropdown = null;
    this.results = null;
  };

  Select2.prototype.render = function () {
    var $container = $(
      '<span class="select2 select2-container">' +
        '<span class="selection"></span>' +
        '<span class="dropdown-wrapper" aria-hidden="true"></span>' +
      '</span>'
    );

    $container.attr('dir', this.options.get('dir'));

    this.$container = $container;

    this.$container.addClass('select2-container--' + this.options.get('theme'));

    $container.data('element', this.$element);

    return $container;
  };

  return Select2;
});

S2.define('select2/compat/utils',[
  'jquery'
], function ($) {
  function syncCssClasses ($dest, $src, adapter) {
    var classes, replacements = [], adapted;

    classes = $.trim($dest.attr('class'));

    if (classes) {
      classes = '' + classes; // for IE which returns object

      $(classes.split(/\s+/)).each(function () {
        // Save all Select2 classes
        if (this.indexOf('select2-') === 0) {
          replacements.push(this);
        }
      });
    }

    classes = $.trim($src.attr('class'));

    if (classes) {
      classes = '' + classes; // for IE which returns object

      $(classes.split(/\s+/)).each(function () {
        // Only adapt non-Select2 classes
        if (this.indexOf('select2-') !== 0) {
          adapted = adapter(this);

          if (adapted != null) {
            replacements.push(adapted);
          }
        }
      });
    }

    $dest.attr('class', replacements.join(' '));
  }

  return {
    syncCssClasses: syncCssClasses
  };
});

S2.define('select2/compat/containerCss',[
  'jquery',
  './utils'
], function ($, CompatUtils) {
  // No-op CSS adapter that discards all classes by default
  function _containerAdapter (clazz) {
    return null;
  }

  function ContainerCSS () { }

  ContainerCSS.prototype.render = function (decorated) {
    var $container = decorated.call(this);

    var containerCssClass = this.options.get('containerCssClass') || '';

    if ($.isFunction(containerCssClass)) {
      containerCssClass = containerCssClass(this.$element);
    }

    var containerCssAdapter = this.options.get('adaptContainerCssClass');
    containerCssAdapter = containerCssAdapter || _containerAdapter;

    if (containerCssClass.indexOf(':all:') !== -1) {
      containerCssClass = containerCssClass.replace(':all:', '');

      var _cssAdapter = containerCssAdapter;

      containerCssAdapter = function (clazz) {
        var adapted = _cssAdapter(clazz);

        if (adapted != null) {
          // Append the old one along with the adapted one
          return adapted + ' ' + clazz;
        }

        return clazz;
      };
    }

    var containerCss = this.options.get('containerCss') || {};

    if ($.isFunction(containerCss)) {
      containerCss = containerCss(this.$element);
    }

    CompatUtils.syncCssClasses($container, this.$element, containerCssAdapter);

    $container.css(containerCss);
    $container.addClass(containerCssClass);

    return $container;
  };

  return ContainerCSS;
});

S2.define('select2/compat/dropdownCss',[
  'jquery',
  './utils'
], function ($, CompatUtils) {
  // No-op CSS adapter that discards all classes by default
  function _dropdownAdapter (clazz) {
    return null;
  }

  function DropdownCSS () { }

  DropdownCSS.prototype.render = function (decorated) {
    var $dropdown = decorated.call(this);

    var dropdownCssClass = this.options.get('dropdownCssClass') || '';

    if ($.isFunction(dropdownCssClass)) {
      dropdownCssClass = dropdownCssClass(this.$element);
    }

    var dropdownCssAdapter = this.options.get('adaptDropdownCssClass');
    dropdownCssAdapter = dropdownCssAdapter || _dropdownAdapter;

    if (dropdownCssClass.indexOf(':all:') !== -1) {
      dropdownCssClass = dropdownCssClass.replace(':all:', '');

      var _cssAdapter = dropdownCssAdapter;

      dropdownCssAdapter = function (clazz) {
        var adapted = _cssAdapter(clazz);

        if (adapted != null) {
          // Append the old one along with the adapted one
          return adapted + ' ' + clazz;
        }

        return clazz;
      };
    }

    var dropdownCss = this.options.get('dropdownCss') || {};

    if ($.isFunction(dropdownCss)) {
      dropdownCss = dropdownCss(this.$element);
    }

    CompatUtils.syncCssClasses($dropdown, this.$element, dropdownCssAdapter);

    $dropdown.css(dropdownCss);
    $dropdown.addClass(dropdownCssClass);

    return $dropdown;
  };

  return DropdownCSS;
});

S2.define('select2/compat/initSelection',[
  'jquery'
], function ($) {
  function InitSelection (decorated, $element, options) {
    if (options.get('debug') && window.console && console.warn) {
      console.warn(
        'Select2: The `initSelection` option has been deprecated in favor' +
        ' of a custom data adapter that overrides the `current` method. ' +
        'This method is now called multiple times instead of a single ' +
        'time when the instance is initialized. Support will be removed ' +
        'for the `initSelection` option in future versions of Select2'
      );
    }

    this.initSelection = options.get('initSelection');
    this._isInitialized = false;

    decorated.call(this, $element, options);
  }

  InitSelection.prototype.current = function (decorated, callback) {
    var self = this;

    if (this._isInitialized) {
      decorated.call(this, callback);

      return;
    }

    this.initSelection.call(null, this.$element, function (data) {
      self._isInitialized = true;

      if (!$.isArray(data)) {
        data = [data];
      }

      callback(data);
    });
  };

  return InitSelection;
});

S2.define('select2/compat/inputData',[
  'jquery'
], function ($) {
  function InputData (decorated, $element, options) {
    this._currentData = [];
    this._valueSeparator = options.get('valueSeparator') || ',';

    if ($element.prop('type') === 'hidden') {
      if (options.get('debug') && console && console.warn) {
        console.warn(
          'Select2: Using a hidden input with Select2 is no longer ' +
          'supported and may stop working in the future. It is recommended ' +
          'to use a `<select>` element instead.'
        );
      }
    }

    decorated.call(this, $element, options);
  }

  InputData.prototype.current = function (_, callback) {
    function getSelected (data, selectedIds) {
      var selected = [];

      if (data.selected || $.inArray(data.id, selectedIds) !== -1) {
        data.selected = true;
        selected.push(data);
      } else {
        data.selected = false;
      }

      if (data.children) {
        selected.push.apply(selected, getSelected(data.children, selectedIds));
      }

      return selected;
    }

    var selected = [];

    for (var d = 0; d < this._currentData.length; d++) {
      var data = this._currentData[d];

      selected.push.apply(
        selected,
        getSelected(
          data,
          this.$element.val().split(
            this._valueSeparator
          )
        )
      );
    }

    callback(selected);
  };

  InputData.prototype.select = function (_, data) {
    if (!this.options.get('multiple')) {
      this.current(function (allData) {
        $.map(allData, function (data) {
          data.selected = false;
        });
      });

      this.$element.val(data.id);
      this.$element.trigger('change');
    } else {
      var value = this.$element.val();
      value += this._valueSeparator + data.id;

      this.$element.val(value);
      this.$element.trigger('change');
    }
  };

  InputData.prototype.unselect = function (_, data) {
    var self = this;

    data.selected = false;

    this.current(function (allData) {
      var values = [];

      for (var d = 0; d < allData.length; d++) {
        var item = allData[d];

        if (data.id == item.id) {
          continue;
        }

        values.push(item.id);
      }

      self.$element.val(values.join(self._valueSeparator));
      self.$element.trigger('change');
    });
  };

  InputData.prototype.query = function (_, params, callback) {
    var results = [];

    for (var d = 0; d < this._currentData.length; d++) {
      var data = this._currentData[d];

      var matches = this.matches(params, data);

      if (matches !== null) {
        results.push(matches);
      }
    }

    callback({
      results: results
    });
  };

  InputData.prototype.addOptions = function (_, $options) {
    var options = $.map($options, function ($option) {
      return $.data($option[0], 'data');
    });

    this._currentData.push.apply(this._currentData, options);
  };

  return InputData;
});

S2.define('select2/compat/matcher',[
  'jquery'
], function ($) {
  function oldMatcher (matcher) {
    function wrappedMatcher (params, data) {
      var match = $.extend(true, {}, data);

      if (params.term == null || $.trim(params.term) === '') {
        return match;
      }

      if (data.children) {
        for (var c = data.children.length - 1; c >= 0; c--) {
          var child = data.children[c];

          // Check if the child object matches
          // The old matcher returned a boolean true or false
          var doesMatch = matcher(params.term, child.text, child);

          // If the child didn't match, pop it off
          if (!doesMatch) {
            match.children.splice(c, 1);
          }
        }

        if (match.children.length > 0) {
          return match;
        }
      }

      if (matcher(params.term, data.text, data)) {
        return match;
      }

      return null;
    }

    return wrappedMatcher;
  }

  return oldMatcher;
});

S2.define('select2/compat/query',[

], function () {
  function Query (decorated, $element, options) {
    if (options.get('debug') && window.console && console.warn) {
      console.warn(
        'Select2: The `query` option has been deprecated in favor of a ' +
        'custom data adapter that overrides the `query` method. Support ' +
        'will be removed for the `query` option in future versions of ' +
        'Select2.'
      );
    }

    decorated.call(this, $element, options);
  }

  Query.prototype.query = function (_, params, callback) {
    params.callback = callback;

    var query = this.options.get('query');

    query.call(null, params);
  };

  return Query;
});

S2.define('select2/dropdown/attachContainer',[

], function () {
  function AttachContainer (decorated, $element, options) {
    decorated.call(this, $element, options);
  }

  AttachContainer.prototype.position =
    function (decorated, $dropdown, $container) {
    var $dropdownContainer = $container.find('.dropdown-wrapper');
    $dropdownContainer.append($dropdown);

    $dropdown.addClass('select2-dropdown--below');
    $container.addClass('select2-container--below');
  };

  return AttachContainer;
});

S2.define('select2/dropdown/stopPropagation',[

], function () {
  function StopPropagation () { }

  StopPropagation.prototype.bind = function (decorated, container, $container) {
    decorated.call(this, container, $container);

    var stoppedEvents = [
    'blur',
    'change',
    'click',
    'dblclick',
    'focus',
    'focusin',
    'focusout',
    'input',
    'keydown',
    'keyup',
    'keypress',
    'mousedown',
    'mouseenter',
    'mouseleave',
    'mousemove',
    'mouseover',
    'mouseup',
    'search',
    'touchend',
    'touchstart'
    ];

    this.$dropdown.on(stoppedEvents.join(' '), function (evt) {
      evt.stopPropagation();
    });
  };

  return StopPropagation;
});

S2.define('select2/selection/stopPropagation',[

], function () {
  function StopPropagation () { }

  StopPropagation.prototype.bind = function (decorated, container, $container) {
    decorated.call(this, container, $container);

    var stoppedEvents = [
      'blur',
      'change',
      'click',
      'dblclick',
      'focus',
      'focusin',
      'focusout',
      'input',
      'keydown',
      'keyup',
      'keypress',
      'mousedown',
      'mouseenter',
      'mouseleave',
      'mousemove',
      'mouseover',
      'mouseup',
      'search',
      'touchend',
      'touchstart'
    ];

    this.$selection.on(stoppedEvents.join(' '), function (evt) {
      evt.stopPropagation();
    });
  };

  return StopPropagation;
});

/*!
 * jQuery Mousewheel 3.1.13
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 */

(function (factory) {
    if ( typeof S2.define === 'function' && S2.define.amd ) {
        // AMD. Register as an anonymous module.
        S2.define('jquery-mousewheel',['jquery'], factory);
    } else if (typeof exports === 'object') {
        // Node/CommonJS style for Browserify
        module.exports = factory;
    } else {
        // Browser globals
        factory(jQuery);
    }
}(function ($) {

    var toFix  = ['wheel', 'mousewheel', 'DOMMouseScroll', 'MozMousePixelScroll'],
        toBind = ( 'onwheel' in document || document.documentMode >= 9 ) ?
                    ['wheel'] : ['mousewheel', 'DomMouseScroll', 'MozMousePixelScroll'],
        slice  = Array.prototype.slice,
        nullLowestDeltaTimeout, lowestDelta;

    if ( $.event.fixHooks ) {
        for ( var i = toFix.length; i; ) {
            $.event.fixHooks[ toFix[--i] ] = $.event.mouseHooks;
        }
    }

    var special = $.event.special.mousewheel = {
        version: '3.1.12',

        setup: function() {
            if ( this.addEventListener ) {
                for ( var i = toBind.length; i; ) {
                    this.addEventListener( toBind[--i], handler, false );
                }
            } else {
                this.onmousewheel = handler;
            }
            // Store the line height and page height for this particular element
            $.data(this, 'mousewheel-line-height', special.getLineHeight(this));
            $.data(this, 'mousewheel-page-height', special.getPageHeight(this));
        },

        teardown: function() {
            if ( this.removeEventListener ) {
                for ( var i = toBind.length; i; ) {
                    this.removeEventListener( toBind[--i], handler, false );
                }
            } else {
                this.onmousewheel = null;
            }
            // Clean up the data we added to the element
            $.removeData(this, 'mousewheel-line-height');
            $.removeData(this, 'mousewheel-page-height');
        },

        getLineHeight: function(elem) {
            var $elem = $(elem),
                $parent = $elem['offsetParent' in $.fn ? 'offsetParent' : 'parent']();
            if (!$parent.length) {
                $parent = $('body');
            }
            return parseInt($parent.css('fontSize'), 10) || parseInt($elem.css('fontSize'), 10) || 16;
        },

        getPageHeight: function(elem) {
            return $(elem).height();
        },

        settings: {
            adjustOldDeltas: true, // see shouldAdjustOldDeltas() below
            normalizeOffset: true  // calls getBoundingClientRect for each event
        }
    };

    $.fn.extend({
        mousewheel: function(fn) {
            return fn ? this.bind('mousewheel', fn) : this.trigger('mousewheel');
        },

        unmousewheel: function(fn) {
            return this.unbind('mousewheel', fn);
        }
    });


    function handler(event) {
        var orgEvent   = event || window.event,
            args       = slice.call(arguments, 1),
            delta      = 0,
            deltaX     = 0,
            deltaY     = 0,
            absDelta   = 0,
            offsetX    = 0,
            offsetY    = 0;
        event = $.event.fix(orgEvent);
        event.type = 'mousewheel';

        // Old school scrollwheel delta
        if ( 'detail'      in orgEvent ) { deltaY = orgEvent.detail * -1;      }
        if ( 'wheelDelta'  in orgEvent ) { deltaY = orgEvent.wheelDelta;       }
        if ( 'wheelDeltaY' in orgEvent ) { deltaY = orgEvent.wheelDeltaY;      }
        if ( 'wheelDeltaX' in orgEvent ) { deltaX = orgEvent.wheelDeltaX * -1; }

        // Firefox < 17 horizontal scrolling related to DOMMouseScroll event
        if ( 'axis' in orgEvent && orgEvent.axis === orgEvent.HORIZONTAL_AXIS ) {
            deltaX = deltaY * -1;
            deltaY = 0;
        }

        // Set delta to be deltaY or deltaX if deltaY is 0 for backwards compatabilitiy
        delta = deltaY === 0 ? deltaX : deltaY;

        // New school wheel delta (wheel event)
        if ( 'deltaY' in orgEvent ) {
            deltaY = orgEvent.deltaY * -1;
            delta  = deltaY;
        }
        if ( 'deltaX' in orgEvent ) {
            deltaX = orgEvent.deltaX;
            if ( deltaY === 0 ) { delta  = deltaX * -1; }
        }

        // No change actually happened, no reason to go any further
        if ( deltaY === 0 && deltaX === 0 ) { return; }

        // Need to convert lines and pages to pixels if we aren't already in pixels
        // There are three delta modes:
        //   * deltaMode 0 is by pixels, nothing to do
        //   * deltaMode 1 is by lines
        //   * deltaMode 2 is by pages
        if ( orgEvent.deltaMode === 1 ) {
            var lineHeight = $.data(this, 'mousewheel-line-height');
            delta  *= lineHeight;
            deltaY *= lineHeight;
            deltaX *= lineHeight;
        } else if ( orgEvent.deltaMode === 2 ) {
            var pageHeight = $.data(this, 'mousewheel-page-height');
            delta  *= pageHeight;
            deltaY *= pageHeight;
            deltaX *= pageHeight;
        }

        // Store lowest absolute delta to normalize the delta values
        absDelta = Math.max( Math.abs(deltaY), Math.abs(deltaX) );

        if ( !lowestDelta || absDelta < lowestDelta ) {
            lowestDelta = absDelta;

            // Adjust older deltas if necessary
            if ( shouldAdjustOldDeltas(orgEvent, absDelta) ) {
                lowestDelta /= 40;
            }
        }

        // Adjust older deltas if necessary
        if ( shouldAdjustOldDeltas(orgEvent, absDelta) ) {
            // Divide all the things by 40!
            delta  /= 40;
            deltaX /= 40;
            deltaY /= 40;
        }

        // Get a whole, normalized value for the deltas
        delta  = Math[ delta  >= 1 ? 'floor' : 'ceil' ](delta  / lowestDelta);
        deltaX = Math[ deltaX >= 1 ? 'floor' : 'ceil' ](deltaX / lowestDelta);
        deltaY = Math[ deltaY >= 1 ? 'floor' : 'ceil' ](deltaY / lowestDelta);

        // Normalise offsetX and offsetY properties
        if ( special.settings.normalizeOffset && this.getBoundingClientRect ) {
            var boundingRect = this.getBoundingClientRect();
            offsetX = event.clientX - boundingRect.left;
            offsetY = event.clientY - boundingRect.top;
        }

        // Add information to the event object
        event.deltaX = deltaX;
        event.deltaY = deltaY;
        event.deltaFactor = lowestDelta;
        event.offsetX = offsetX;
        event.offsetY = offsetY;
        // Go ahead and set deltaMode to 0 since we converted to pixels
        // Although this is a little odd since we overwrite the deltaX/Y
        // properties with normalized deltas.
        event.deltaMode = 0;

        // Add event and delta to the front of the arguments
        args.unshift(event, delta, deltaX, deltaY);

        // Clearout lowestDelta after sometime to better
        // handle multiple device types that give different
        // a different lowestDelta
        // Ex: trackpad = 3 and mouse wheel = 120
        if (nullLowestDeltaTimeout) { clearTimeout(nullLowestDeltaTimeout); }
        nullLowestDeltaTimeout = setTimeout(nullLowestDelta, 200);

        return ($.event.dispatch || $.event.handle).apply(this, args);
    }

    function nullLowestDelta() {
        lowestDelta = null;
    }

    function shouldAdjustOldDeltas(orgEvent, absDelta) {
        // If this is an older event and the delta is divisable by 120,
        // then we are assuming that the browser is treating this as an
        // older mouse wheel event and that we should divide the deltas
        // by 40 to try and get a more usable deltaFactor.
        // Side note, this actually impacts the reported scroll distance
        // in older browsers and can cause scrolling to be slower than native.
        // Turn this off by setting $.event.special.mousewheel.settings.adjustOldDeltas to false.
        return special.settings.adjustOldDeltas && orgEvent.type === 'mousewheel' && absDelta % 120 === 0;
    }

}));

S2.define('jquery.select2',[
  'jquery',
  'jquery-mousewheel',

  './select2/core',
  './select2/defaults'
], function ($, _, Select2, Defaults) {
  if ($.fn.select2 == null) {
    // All methods that should return the element
    var thisMethods = ['open', 'close', 'destroy'];

    $.fn.select2 = function (options) {
      options = options || {};

      if (typeof options === 'object') {
        this.each(function () {
          var instanceOptions = $.extend(true, {}, options);

          var instance = new Select2($(this), instanceOptions);
        });

        return this;
      } else if (typeof options === 'string') {
        var ret;
        var args = Array.prototype.slice.call(arguments, 1);

        this.each(function () {
          var instance = $(this).data('select2');

          if (instance == null && window.console && console.error) {
            console.error(
              'The select2(\'' + options + '\') method was called on an ' +
              'element that is not using Select2.'
            );
          }

          ret = instance[options].apply(instance, args);
        });

        // Check if we should be returning `this`
        if ($.inArray(options, thisMethods) > -1) {
          return this;
        }

        return ret;
      } else {
        throw new Error('Invalid arguments for Select2: ' + options);
      }
    };
  }

  if ($.fn.select2.defaults == null) {
    $.fn.select2.defaults = Defaults;
  }

  return Select2;
});

  // Return the AMD loader configuration so it can be used outside of this file
  return {
    define: S2.define,
    require: S2.require
  };
}());

  // Autoload the jQuery bindings
  // We know that all of the modules exist above this, so we're safe
  var select2 = S2.require('jquery.select2');

  // Hold the AMD module references on the jQuery function that was just loaded
  // This allows Select2 to use the internal loader outside of this file, such
  // as in the language files.
  jQuery.fn.select2.amd = S2;

  // Return the Select2 instance for anyone who is importing it.
  return select2;
}));
// Spectrum Colorpicker v1.8.0
// https://github.com/bgrins/spectrum
// Author: Brian Grinstead
// License: MIT

(function (factory) {
    "use strict";

    if (typeof define === 'function' && define.amd) { // AMD
        define(['jquery'], factory);
    }
    else if (typeof exports == "object" && typeof module == "object") { // CommonJS
        module.exports = factory(require('jquery'));
    }
    else { // Browser
        factory(jQuery);
    }
})(function($, undefined) {
    "use strict";

    var defaultOpts = {

        // Callbacks
        beforeShow: noop,
        move: noop,
        change: noop,
        show: noop,
        hide: noop,

        // Options
        color: false,
        flat: false,
        showInput: false,
        allowEmpty: false,
        showButtons: true,
        clickoutFiresChange: true,
        showInitial: false,
        showPalette: false,
        showPaletteOnly: false,
        hideAfterPaletteSelect: false,
        togglePaletteOnly: false,
        showSelectionPalette: true,
        localStorageKey: false,
        appendTo: "body",
        maxSelectionSize: 7,
        cancelText: "cancel",
        chooseText: "choose",
        togglePaletteMoreText: "more",
        togglePaletteLessText: "less",
        clearText: "Clear Color Selection",
        noColorSelectedText: "No Color Selected",
        preferredFormat: false,
        className: "", // Deprecated - use containerClassName and replacerClassName instead.
        containerClassName: "",
        replacerClassName: "",
        showAlpha: false,
        theme: "sp-light",
        palette: [["#ffffff", "#000000", "#ff0000", "#ff8000", "#ffff00", "#008000", "#0000ff", "#4b0082", "#9400d3"]],
        selectionPalette: [],
        disabled: false,
        offset: null
    },
    spectrums = [],
    IE = !!/msie/i.exec( window.navigator.userAgent ),
    rgbaSupport = (function() {
        function contains( str, substr ) {
            return !!~('' + str).indexOf(substr);
        }

        var elem = document.createElement('div');
        var style = elem.style;
        style.cssText = 'background-color:rgba(0,0,0,.5)';
        return contains(style.backgroundColor, 'rgba') || contains(style.backgroundColor, 'hsla');
    })(),
    replaceInput = [
        "<div class='sp-replacer'>",
            "<div class='sp-preview'><div class='sp-preview-inner'></div></div>",
            "<div class='sp-dd'>&#9660;</div>",
        "</div>"
    ].join(''),
    markup = (function () {

        // IE does not support gradients with multiple stops, so we need to simulate
        //  that for the rainbow slider with 8 divs that each have a single gradient
        var gradientFix = "";
        if (IE) {
            for (var i = 1; i <= 6; i++) {
                gradientFix += "<div class='sp-" + i + "'></div>";
            }
        }

        return [
            "<div class='sp-container sp-hidden'>",
                "<div class='sp-palette-container'>",
                    "<div class='sp-palette sp-thumb sp-cf'></div>",
                    "<div class='sp-palette-button-container sp-cf'>",
                        "<button type='button' class='sp-palette-toggle'></button>",
                    "</div>",
                "</div>",
                "<div class='sp-picker-container'>",
                    "<div class='sp-top sp-cf'>",
                        "<div class='sp-fill'></div>",
                        "<div class='sp-top-inner'>",
                            "<div class='sp-color'>",
                                "<div class='sp-sat'>",
                                    "<div class='sp-val'>",
                                        "<div class='sp-dragger'></div>",
                                    "</div>",
                                "</div>",
                            "</div>",
                            "<div class='sp-clear sp-clear-display'>",
                            "</div>",
                            "<div class='sp-hue'>",
                                "<div class='sp-slider'></div>",
                                gradientFix,
                            "</div>",
                        "</div>",
                        "<div class='sp-alpha'><div class='sp-alpha-inner'><div class='sp-alpha-handle'></div></div></div>",
                    "</div>",
                    "<div class='sp-input-container sp-cf'>",
                        "<input class='sp-input' type='text' spellcheck='false'  />",
                    "</div>",
                    "<div class='sp-initial sp-thumb sp-cf'></div>",
                    "<div class='sp-button-container sp-cf'>",
                        "<a class='sp-cancel' href='#'></a>",
                        "<button type='button' class='sp-choose'></button>",
                    "</div>",
                "</div>",
            "</div>"
        ].join("");
    })();

    function paletteTemplate (p, color, className, opts) {
        var html = [];
        for (var i = 0; i < p.length; i++) {
            var current = p[i];
            if(current) {
                var tiny = tinycolor(current);
                var c = tiny.toHsl().l < 0.5 ? "sp-thumb-el sp-thumb-dark" : "sp-thumb-el sp-thumb-light";
                c += (tinycolor.equals(color, current)) ? " sp-thumb-active" : "";
                var formattedString = tiny.toString(opts.preferredFormat || "rgb");
                var swatchStyle = rgbaSupport ? ("background-color:" + tiny.toRgbString()) : "filter:" + tiny.toFilter();
                html.push('<span title="' + formattedString + '" data-color="' + tiny.toRgbString() + '" class="' + c + '"><span class="sp-thumb-inner" style="' + swatchStyle + ';" /></span>');
            } else {
                var cls = 'sp-clear-display';
                html.push($('<div />')
                    .append($('<span data-color="" style="background-color:transparent;" class="' + cls + '"></span>')
                        .attr('title', opts.noColorSelectedText)
                    )
                    .html()
                );
            }
        }
        return "<div class='sp-cf " + className + "'>" + html.join('') + "</div>";
    }

    function hideAll() {
        for (var i = 0; i < spectrums.length; i++) {
            if (spectrums[i]) {
                spectrums[i].hide();
            }
        }
    }

    function instanceOptions(o, callbackContext) {
        var opts = $.extend({}, defaultOpts, o);
        opts.callbacks = {
            'move': bind(opts.move, callbackContext),
            'change': bind(opts.change, callbackContext),
            'show': bind(opts.show, callbackContext),
            'hide': bind(opts.hide, callbackContext),
            'beforeShow': bind(opts.beforeShow, callbackContext)
        };

        return opts;
    }

    function spectrum(element, o) {

        var opts = instanceOptions(o, element),
            flat = opts.flat,
            showSelectionPalette = opts.showSelectionPalette,
            localStorageKey = opts.localStorageKey,
            theme = opts.theme,
            callbacks = opts.callbacks,
            resize = throttle(reflow, 10),
            visible = false,
            isDragging = false,
            dragWidth = 0,
            dragHeight = 0,
            dragHelperHeight = 0,
            slideHeight = 0,
            slideWidth = 0,
            alphaWidth = 0,
            alphaSlideHelperWidth = 0,
            slideHelperHeight = 0,
            currentHue = 0,
            currentSaturation = 0,
            currentValue = 0,
            currentAlpha = 1,
            palette = [],
            paletteArray = [],
            paletteLookup = {},
            selectionPalette = opts.selectionPalette.slice(0),
            maxSelectionSize = opts.maxSelectionSize,
            draggingClass = "sp-dragging",
            shiftMovementDirection = null;

        var doc = element.ownerDocument,
            body = doc.body,
            boundElement = $(element),
            disabled = false,
            container = $(markup, doc).addClass(theme),
            pickerContainer = container.find(".sp-picker-container"),
            dragger = container.find(".sp-color"),
            dragHelper = container.find(".sp-dragger"),
            slider = container.find(".sp-hue"),
            slideHelper = container.find(".sp-slider"),
            alphaSliderInner = container.find(".sp-alpha-inner"),
            alphaSlider = container.find(".sp-alpha"),
            alphaSlideHelper = container.find(".sp-alpha-handle"),
            textInput = container.find(".sp-input"),
            paletteContainer = container.find(".sp-palette"),
            initialColorContainer = container.find(".sp-initial"),
            cancelButton = container.find(".sp-cancel"),
            clearButton = container.find(".sp-clear"),
            chooseButton = container.find(".sp-choose"),
            toggleButton = container.find(".sp-palette-toggle"),
            isInput = boundElement.is("input"),
            isInputTypeColor = isInput && boundElement.attr("type") === "color" && inputTypeColorSupport(),
            shouldReplace = isInput && !flat,
            replacer = (shouldReplace) ? $(replaceInput).addClass(theme).addClass(opts.className).addClass(opts.replacerClassName) : $([]),
            offsetElement = (shouldReplace) ? replacer : boundElement,
            previewElement = replacer.find(".sp-preview-inner"),
            initialColor = opts.color || (isInput && boundElement.val()),
            colorOnShow = false,
            currentPreferredFormat = opts.preferredFormat,
            clickoutFiresChange = !opts.showButtons || opts.clickoutFiresChange,
            isEmpty = !initialColor,
            allowEmpty = opts.allowEmpty && !isInputTypeColor;

        function applyOptions() {

            if (opts.showPaletteOnly) {
                opts.showPalette = true;
            }

            toggleButton.text(opts.showPaletteOnly ? opts.togglePaletteMoreText : opts.togglePaletteLessText);

            if (opts.palette) {
                palette = opts.palette.slice(0);
                paletteArray = $.isArray(palette[0]) ? palette : [palette];
                paletteLookup = {};
                for (var i = 0; i < paletteArray.length; i++) {
                    for (var j = 0; j < paletteArray[i].length; j++) {
                        var rgb = tinycolor(paletteArray[i][j]).toRgbString();
                        paletteLookup[rgb] = true;
                    }
                }
            }

            container.toggleClass("sp-flat", flat);
            container.toggleClass("sp-input-disabled", !opts.showInput);
            container.toggleClass("sp-alpha-enabled", opts.showAlpha);
            container.toggleClass("sp-clear-enabled", allowEmpty);
            container.toggleClass("sp-buttons-disabled", !opts.showButtons);
            container.toggleClass("sp-palette-buttons-disabled", !opts.togglePaletteOnly);
            container.toggleClass("sp-palette-disabled", !opts.showPalette);
            container.toggleClass("sp-palette-only", opts.showPaletteOnly);
            container.toggleClass("sp-initial-disabled", !opts.showInitial);
            container.addClass(opts.className).addClass(opts.containerClassName);

            reflow();
        }

        function initialize() {

            if (IE) {
                container.find("*:not(input)").attr("unselectable", "on");
            }

            applyOptions();

            if (shouldReplace) {
                boundElement.after(replacer).hide();
            }

            if (!allowEmpty) {
                clearButton.hide();
            }

            if (flat) {
                boundElement.after(container).hide();
            }
            else {

                var appendTo = opts.appendTo === "parent" ? boundElement.parent() : $(opts.appendTo);
                if (appendTo.length !== 1) {
                    appendTo = $("body");
                }

                appendTo.append(container);
            }

            updateSelectionPaletteFromStorage();

            offsetElement.bind("click.spectrum touchstart.spectrum", function (e) {
                if (!disabled) {
                    toggle();
                }

                e.stopPropagation();

                if (!$(e.target).is("input")) {
                    e.preventDefault();
                }
            });

            if(boundElement.is(":disabled") || (opts.disabled === true)) {
                disable();
            }

            // Prevent clicks from bubbling up to document.  This would cause it to be hidden.
            container.click(stopPropagation);

            // Handle user typed input
            textInput.change(setFromTextInput);
            textInput.bind("paste", function () {
                setTimeout(setFromTextInput, 1);
            });
            textInput.keydown(function (e) { if (e.keyCode == 13) { setFromTextInput(); } });

            cancelButton.text(opts.cancelText);
            cancelButton.bind("click.spectrum", function (e) {
                e.stopPropagation();
                e.preventDefault();
                revert();
                hide();
            });

            clearButton.attr("title", opts.clearText);
            clearButton.bind("click.spectrum", function (e) {
                e.stopPropagation();
                e.preventDefault();
                isEmpty = true;
                move();

                if(flat) {
                    //for the flat style, this is a change event
                    updateOriginalInput(true);
                }
            });

            chooseButton.text(opts.chooseText);
            chooseButton.bind("click.spectrum", function (e) {
                e.stopPropagation();
                e.preventDefault();

                if (IE && textInput.is(":focus")) {
                    textInput.trigger('change');
                }

                if (isValid()) {
                    updateOriginalInput(true);
                    hide();
                }
            });

            toggleButton.text(opts.showPaletteOnly ? opts.togglePaletteMoreText : opts.togglePaletteLessText);
            toggleButton.bind("click.spectrum", function (e) {
                e.stopPropagation();
                e.preventDefault();

                opts.showPaletteOnly = !opts.showPaletteOnly;

                // To make sure the Picker area is drawn on the right, next to the
                // Palette area (and not below the palette), first move the Palette
                // to the left to make space for the picker, plus 5px extra.
                // The 'applyOptions' function puts the whole container back into place
                // and takes care of the button-text and the sp-palette-only CSS class.
                if (!opts.showPaletteOnly && !flat) {
                    container.css('left', '-=' + (pickerContainer.outerWidth(true) + 5));
                }
                applyOptions();
            });

            draggable(alphaSlider, function (dragX, dragY, e) {
                currentAlpha = (dragX / alphaWidth);
                isEmpty = false;
                if (e.shiftKey) {
                    currentAlpha = Math.round(currentAlpha * 10) / 10;
                }

                move();
            }, dragStart, dragStop);

            draggable(slider, function (dragX, dragY) {
                currentHue = parseFloat(dragY / slideHeight);
                isEmpty = false;
                if (!opts.showAlpha) {
                    currentAlpha = 1;
                }
                move();
            }, dragStart, dragStop);

            draggable(dragger, function (dragX, dragY, e) {

                // shift+drag should snap the movement to either the x or y axis.
                if (!e.shiftKey) {
                    shiftMovementDirection = null;
                }
                else if (!shiftMovementDirection) {
                    var oldDragX = currentSaturation * dragWidth;
                    var oldDragY = dragHeight - (currentValue * dragHeight);
                    var furtherFromX = Math.abs(dragX - oldDragX) > Math.abs(dragY - oldDragY);

                    shiftMovementDirection = furtherFromX ? "x" : "y";
                }

                var setSaturation = !shiftMovementDirection || shiftMovementDirection === "x";
                var setValue = !shiftMovementDirection || shiftMovementDirection === "y";

                if (setSaturation) {
                    currentSaturation = parseFloat(dragX / dragWidth);
                }
                if (setValue) {
                    currentValue = parseFloat((dragHeight - dragY) / dragHeight);
                }

                isEmpty = false;
                if (!opts.showAlpha) {
                    currentAlpha = 1;
                }

                move();

            }, dragStart, dragStop);

            if (!!initialColor) {
                set(initialColor);

                // In case color was black - update the preview UI and set the format
                // since the set function will not run (default color is black).
                updateUI();
                currentPreferredFormat = opts.preferredFormat || tinycolor(initialColor).format;

                addColorToSelectionPalette(initialColor);
            }
            else {
                updateUI();
            }

            if (flat) {
                show();
            }

            function paletteElementClick(e) {
                if (e.data && e.data.ignore) {
                    set($(e.target).closest(".sp-thumb-el").data("color"));
                    move();
                }
                else {
                    set($(e.target).closest(".sp-thumb-el").data("color"));
                    move();
                    updateOriginalInput(true);
                    if (opts.hideAfterPaletteSelect) {
                      hide();
                    }
                }

                return false;
            }

            var paletteEvent = IE ? "mousedown.spectrum" : "click.spectrum touchstart.spectrum";
            paletteContainer.delegate(".sp-thumb-el", paletteEvent, paletteElementClick);
            initialColorContainer.delegate(".sp-thumb-el:nth-child(1)", paletteEvent, { ignore: true }, paletteElementClick);
        }

        function updateSelectionPaletteFromStorage() {

            if (localStorageKey && window.localStorage) {

                // Migrate old palettes over to new format.  May want to remove this eventually.
                try {
                    var oldPalette = window.localStorage[localStorageKey].split(",#");
                    if (oldPalette.length > 1) {
                        delete window.localStorage[localStorageKey];
                        $.each(oldPalette, function(i, c) {
                             addColorToSelectionPalette(c);
                        });
                    }
                }
                catch(e) { }

                try {
                    selectionPalette = window.localStorage[localStorageKey].split(";");
                }
                catch (e) { }
            }
        }

        function addColorToSelectionPalette(color) {
            if (showSelectionPalette) {
                var rgb = tinycolor(color).toRgbString();
                if (!paletteLookup[rgb] && $.inArray(rgb, selectionPalette) === -1) {
                    selectionPalette.push(rgb);
                    while(selectionPalette.length > maxSelectionSize) {
                        selectionPalette.shift();
                    }
                }

                if (localStorageKey && window.localStorage) {
                    try {
                        window.localStorage[localStorageKey] = selectionPalette.join(";");
                    }
                    catch(e) { }
                }
            }
        }

        function getUniqueSelectionPalette() {
            var unique = [];
            if (opts.showPalette) {
                for (var i = 0; i < selectionPalette.length; i++) {
                    var rgb = tinycolor(selectionPalette[i]).toRgbString();

                    if (!paletteLookup[rgb]) {
                        unique.push(selectionPalette[i]);
                    }
                }
            }

            return unique.reverse().slice(0, opts.maxSelectionSize);
        }

        function drawPalette() {

            var currentColor = get();

            var html = $.map(paletteArray, function (palette, i) {
                return paletteTemplate(palette, currentColor, "sp-palette-row sp-palette-row-" + i, opts);
            });

            updateSelectionPaletteFromStorage();

            if (selectionPalette) {
                html.push(paletteTemplate(getUniqueSelectionPalette(), currentColor, "sp-palette-row sp-palette-row-selection", opts));
            }

            paletteContainer.html(html.join(""));
        }

        function drawInitial() {
            if (opts.showInitial) {
                var initial = colorOnShow;
                var current = get();
                initialColorContainer.html(paletteTemplate([initial, current], current, "sp-palette-row-initial", opts));
            }
        }

        function dragStart() {
            if (dragHeight <= 0 || dragWidth <= 0 || slideHeight <= 0) {
                reflow();
            }
            isDragging = true;
            container.addClass(draggingClass);
            shiftMovementDirection = null;
            boundElement.trigger('dragstart.spectrum', [ get() ]);
        }

        function dragStop() {
            isDragging = false;
            container.removeClass(draggingClass);
            boundElement.trigger('dragstop.spectrum', [ get() ]);
        }

        function setFromTextInput() {

            var value = textInput.val();

            if ((value === null || value === "") && allowEmpty) {
                set(null);
                updateOriginalInput(true);
            }
            else {
                var tiny = tinycolor(value);
                if (tiny.isValid()) {
                    set(tiny);
                    updateOriginalInput(true);
                }
                else {
                    textInput.addClass("sp-validation-error");
                }
            }
        }

        function toggle() {
            if (visible) {
                hide();
            }
            else {
                show();
            }
        }

        function show() {
            var event = $.Event('beforeShow.spectrum');

            if (visible) {
                reflow();
                return;
            }

            boundElement.trigger(event, [ get() ]);

            if (callbacks.beforeShow(get()) === false || event.isDefaultPrevented()) {
                return;
            }

            hideAll();
            visible = true;

            $(doc).bind("keydown.spectrum", onkeydown);
            $(doc).bind("click.spectrum", clickout);
            $(window).bind("resize.spectrum", resize);
            replacer.addClass("sp-active");
            container.removeClass("sp-hidden");

            reflow();
            updateUI();

            colorOnShow = get();

            drawInitial();
            callbacks.show(colorOnShow);
            boundElement.trigger('show.spectrum', [ colorOnShow ]);
        }

        function onkeydown(e) {
            // Close on ESC
            if (e.keyCode === 27) {
                hide();
            }
        }

        function clickout(e) {
            // Return on right click.
            if (e.button == 2) { return; }

            // If a drag event was happening during the mouseup, don't hide
            // on click.
            if (isDragging) { return; }

            if (clickoutFiresChange) {
                updateOriginalInput(true);
            }
            else {
                revert();
            }
            hide();
        }

        function hide() {
            // Return if hiding is unnecessary
            if (!visible || flat) { return; }
            visible = false;

            $(doc).unbind("keydown.spectrum", onkeydown);
            $(doc).unbind("click.spectrum", clickout);
            $(window).unbind("resize.spectrum", resize);

            replacer.removeClass("sp-active");
            container.addClass("sp-hidden");

            callbacks.hide(get());
            boundElement.trigger('hide.spectrum', [ get() ]);
        }

        function revert() {
            set(colorOnShow, true);
        }

        function set(color, ignoreFormatChange) {
            if (tinycolor.equals(color, get())) {
                // Update UI just in case a validation error needs
                // to be cleared.
                updateUI();
                return;
            }

            var newColor, newHsv;
            if (!color && allowEmpty) {
                isEmpty = true;
            } else {
                isEmpty = false;
                newColor = tinycolor(color);
                newHsv = newColor.toHsv();

                currentHue = (newHsv.h % 360) / 360;
                currentSaturation = newHsv.s;
                currentValue = newHsv.v;
                currentAlpha = newHsv.a;
            }
            updateUI();

            if (newColor && newColor.isValid() && !ignoreFormatChange) {
                currentPreferredFormat = opts.preferredFormat || newColor.getFormat();
            }
        }

        function get(opts) {
            opts = opts || { };

            if (allowEmpty && isEmpty) {
                return null;
            }

            return tinycolor.fromRatio({
                h: currentHue,
                s: currentSaturation,
                v: currentValue,
                a: Math.round(currentAlpha * 100) / 100
            }, { format: opts.format || currentPreferredFormat });
        }

        function isValid() {
            return !textInput.hasClass("sp-validation-error");
        }

        function move() {
            updateUI();

            callbacks.move(get());
            boundElement.trigger('move.spectrum', [ get() ]);
        }

        function updateUI() {

            textInput.removeClass("sp-validation-error");

            updateHelperLocations();

            // Update dragger background color (gradients take care of saturation and value).
            var flatColor = tinycolor.fromRatio({ h: currentHue, s: 1, v: 1 });
            dragger.css("background-color", flatColor.toHexString());

            // Get a format that alpha will be included in (hex and names ignore alpha)
            var format = currentPreferredFormat;
            if (currentAlpha < 1 && !(currentAlpha === 0 && format === "name")) {
                if (format === "hex" || format === "hex3" || format === "hex6" || format === "name") {
                    format = "rgb";
                }
            }

            var realColor = get({ format: format }),
                displayColor = '';

             //reset background info for preview element
            previewElement.removeClass("sp-clear-display");
            previewElement.css('background-color', 'transparent');

            if (!realColor && allowEmpty) {
                // Update the replaced elements background with icon indicating no color selection
                previewElement.addClass("sp-clear-display");
            }
            else {
                var realHex = realColor.toHexString(),
                    realRgb = realColor.toRgbString();

                // Update the replaced elements background color (with actual selected color)
                if (rgbaSupport || realColor.alpha === 1) {
                    previewElement.css("background-color", realRgb);
                }
                else {
                    previewElement.css("background-color", "transparent");
                    previewElement.css("filter", realColor.toFilter());
                }

                if (opts.showAlpha) {
                    var rgb = realColor.toRgb();
                    rgb.a = 0;
                    var realAlpha = tinycolor(rgb).toRgbString();
                    var gradient = "linear-gradient(left, " + realAlpha + ", " + realHex + ")";

                    if (IE) {
                        alphaSliderInner.css("filter", tinycolor(realAlpha).toFilter({ gradientType: 1 }, realHex));
                    }
                    else {
                        alphaSliderInner.css("background", "-webkit-" + gradient);
                        alphaSliderInner.css("background", "-moz-" + gradient);
                        alphaSliderInner.css("background", "-ms-" + gradient);
                        // Use current syntax gradient on unprefixed property.
                        alphaSliderInner.css("background",
                            "linear-gradient(to right, " + realAlpha + ", " + realHex + ")");
                    }
                }

                displayColor = realColor.toString(format);
            }

            // Update the text entry input as it changes happen
            if (opts.showInput) {
                textInput.val(displayColor);
            }

            if (opts.showPalette) {
                drawPalette();
            }

            drawInitial();
        }

        function updateHelperLocations() {
            var s = currentSaturation;
            var v = currentValue;

            if(allowEmpty && isEmpty) {
                //if selected color is empty, hide the helpers
                alphaSlideHelper.hide();
                slideHelper.hide();
                dragHelper.hide();
            }
            else {
                //make sure helpers are visible
                alphaSlideHelper.show();
                slideHelper.show();
                dragHelper.show();

                // Where to show the little circle in that displays your current selected color
                var dragX = s * dragWidth;
                var dragY = dragHeight - (v * dragHeight);
                dragX = Math.max(
                    -dragHelperHeight,
                    Math.min(dragWidth - dragHelperHeight, dragX - dragHelperHeight)
                );
                dragY = Math.max(
                    -dragHelperHeight,
                    Math.min(dragHeight - dragHelperHeight, dragY - dragHelperHeight)
                );
                dragHelper.css({
                    "top": dragY + "px",
                    "left": dragX + "px"
                });

                var alphaX = currentAlpha * alphaWidth;
                alphaSlideHelper.css({
                    "left": (alphaX - (alphaSlideHelperWidth / 2)) + "px"
                });

                // Where to show the bar that displays your current selected hue
                var slideY = (currentHue) * slideHeight;
                slideHelper.css({
                    "top": (slideY - slideHelperHeight) + "px"
                });
            }
        }

        function updateOriginalInput(fireCallback) {
            var color = get(),
                displayColor = '',
                hasChanged = !tinycolor.equals(color, colorOnShow);

            if (color) {
                displayColor = color.toString(currentPreferredFormat);
                // Update the selection palette with the current color
                addColorToSelectionPalette(color);
            }

            if (isInput) {
                boundElement.val(displayColor);
            }

            if (fireCallback && hasChanged) {
                callbacks.change(color);
                boundElement.trigger('change', [ color ]);
            }
        }

        function reflow() {
            if (!visible) {
                return; // Calculations would be useless and wouldn't be reliable anyways
            }
            dragWidth = dragger.width();
            dragHeight = dragger.height();
            dragHelperHeight = dragHelper.height();
            slideWidth = slider.width();
            slideHeight = slider.height();
            slideHelperHeight = slideHelper.height();
            alphaWidth = alphaSlider.width();
            alphaSlideHelperWidth = alphaSlideHelper.width();

            if (!flat) {
                container.css("position", "absolute");
                if (opts.offset) {
                    container.offset(opts.offset);
                } else {
                    container.offset(getOffset(container, offsetElement));
                }
            }

            updateHelperLocations();

            if (opts.showPalette) {
                drawPalette();
            }

            boundElement.trigger('reflow.spectrum');
        }

        function destroy() {
            boundElement.show();
            offsetElement.unbind("click.spectrum touchstart.spectrum");
            container.remove();
            replacer.remove();
            spectrums[spect.id] = null;
        }

        function option(optionName, optionValue) {
            if (optionName === undefined) {
                return $.extend({}, opts);
            }
            if (optionValue === undefined) {
                return opts[optionName];
            }

            opts[optionName] = optionValue;

            if (optionName === "preferredFormat") {
                currentPreferredFormat = opts.preferredFormat;
            }
            applyOptions();
        }

        function enable() {
            disabled = false;
            boundElement.attr("disabled", false);
            offsetElement.removeClass("sp-disabled");
        }

        function disable() {
            hide();
            disabled = true;
            boundElement.attr("disabled", true);
            offsetElement.addClass("sp-disabled");
        }

        function setOffset(coord) {
            opts.offset = coord;
            reflow();
        }

        initialize();

        var spect = {
            show: show,
            hide: hide,
            toggle: toggle,
            reflow: reflow,
            option: option,
            enable: enable,
            disable: disable,
            offset: setOffset,
            set: function (c) {
                set(c);
                updateOriginalInput();
            },
            get: get,
            destroy: destroy,
            container: container
        };

        spect.id = spectrums.push(spect) - 1;

        return spect;
    }

    /**
    * checkOffset - get the offset below/above and left/right element depending on screen position
    * Thanks https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.datepicker.js
    */
    function getOffset(picker, input) {
        var extraY = 0;
        var dpWidth = picker.outerWidth();
        var dpHeight = picker.outerHeight();
        var inputHeight = input.outerHeight();
        var doc = picker[0].ownerDocument;
        var docElem = doc.documentElement;
        var viewWidth = docElem.clientWidth + $(doc).scrollLeft();
        var viewHeight = docElem.clientHeight + $(doc).scrollTop();
        var offset = input.offset();
        offset.top += inputHeight;

        offset.left -=
            Math.min(offset.left, (offset.left + dpWidth > viewWidth && viewWidth > dpWidth) ?
            Math.abs(offset.left + dpWidth - viewWidth) : 0);

        offset.top -=
            Math.min(offset.top, ((offset.top + dpHeight > viewHeight && viewHeight > dpHeight) ?
            Math.abs(dpHeight + inputHeight - extraY) : extraY));

        return offset;
    }

    /**
    * noop - do nothing
    */
    function noop() {

    }

    /**
    * stopPropagation - makes the code only doing this a little easier to read in line
    */
    function stopPropagation(e) {
        e.stopPropagation();
    }

    /**
    * Create a function bound to a given object
    * Thanks to underscore.js
    */
    function bind(func, obj) {
        var slice = Array.prototype.slice;
        var args = slice.call(arguments, 2);
        return function () {
            return func.apply(obj, args.concat(slice.call(arguments)));
        };
    }

    /**
    * Lightweight drag helper.  Handles containment within the element, so that
    * when dragging, the x is within [0,element.width] and y is within [0,element.height]
    */
    function draggable(element, onmove, onstart, onstop) {
        onmove = onmove || function () { };
        onstart = onstart || function () { };
        onstop = onstop || function () { };
        var doc = document;
        var dragging = false;
        var offset = {};
        var maxHeight = 0;
        var maxWidth = 0;
        var hasTouch = ('ontouchstart' in window);

        var duringDragEvents = {};
        duringDragEvents["selectstart"] = prevent;
        duringDragEvents["dragstart"] = prevent;
        duringDragEvents["touchmove mousemove"] = move;
        duringDragEvents["touchend mouseup"] = stop;

        function prevent(e) {
            if (e.stopPropagation) {
                e.stopPropagation();
            }
            if (e.preventDefault) {
                e.preventDefault();
            }
            e.returnValue = false;
        }

        function move(e) {
            if (dragging) {
                // Mouseup happened outside of window
                if (IE && doc.documentMode < 9 && !e.button) {
                    return stop();
                }

                var t0 = e.originalEvent && e.originalEvent.touches && e.originalEvent.touches[0];
                var pageX = t0 && t0.pageX || e.pageX;
                var pageY = t0 && t0.pageY || e.pageY;

                var dragX = Math.max(0, Math.min(pageX - offset.left, maxWidth));
                var dragY = Math.max(0, Math.min(pageY - offset.top, maxHeight));

                if (hasTouch) {
                    // Stop scrolling in iOS
                    prevent(e);
                }

                onmove.apply(element, [dragX, dragY, e]);
            }
        }

        function start(e) {
            var rightclick = (e.which) ? (e.which == 3) : (e.button == 2);

            if (!rightclick && !dragging) {
                if (onstart.apply(element, arguments) !== false) {
                    dragging = true;
                    maxHeight = $(element).height();
                    maxWidth = $(element).width();
                    offset = $(element).offset();

                    $(doc).bind(duringDragEvents);
                    $(doc.body).addClass("sp-dragging");

                    move(e);

                    prevent(e);
                }
            }
        }

        function stop() {
            if (dragging) {
                $(doc).unbind(duringDragEvents);
                $(doc.body).removeClass("sp-dragging");

                // Wait a tick before notifying observers to allow the click event
                // to fire in Chrome.
                setTimeout(function() {
                    onstop.apply(element, arguments);
                }, 0);
            }
            dragging = false;
        }

        $(element).bind("touchstart mousedown", start);
    }

    function throttle(func, wait, debounce) {
        var timeout;
        return function () {
            var context = this, args = arguments;
            var throttler = function () {
                timeout = null;
                func.apply(context, args);
            };
            if (debounce) clearTimeout(timeout);
            if (debounce || !timeout) timeout = setTimeout(throttler, wait);
        };
    }

    function inputTypeColorSupport() {
        return $.fn.spectrum.inputTypeColorSupport();
    }

    /**
    * Define a jQuery plugin
    */
    var dataID = "spectrum.id";
    $.fn.spectrum = function (opts, extra) {

        if (typeof opts == "string") {

            var returnValue = this;
            var args = Array.prototype.slice.call( arguments, 1 );

            this.each(function () {
                var spect = spectrums[$(this).data(dataID)];
                if (spect) {
                    var method = spect[opts];
                    if (!method) {
                        throw new Error( "Spectrum: no such method: '" + opts + "'" );
                    }

                    if (opts == "get") {
                        returnValue = spect.get();
                    }
                    else if (opts == "container") {
                        returnValue = spect.container;
                    }
                    else if (opts == "option") {
                        returnValue = spect.option.apply(spect, args);
                    }
                    else if (opts == "destroy") {
                        spect.destroy();
                        $(this).removeData(dataID);
                    }
                    else {
                        method.apply(spect, args);
                    }
                }
            });

            return returnValue;
        }

        // Initializing a new instance of spectrum
        return this.spectrum("destroy").each(function () {
            var options = $.extend({}, opts, $(this).data());
            var spect = spectrum(this, options);
            $(this).data(dataID, spect.id);
        });
    };

    $.fn.spectrum.load = true;
    $.fn.spectrum.loadOpts = {};
    $.fn.spectrum.draggable = draggable;
    $.fn.spectrum.defaults = defaultOpts;
    $.fn.spectrum.inputTypeColorSupport = function inputTypeColorSupport() {
        if (typeof inputTypeColorSupport._cachedResult === "undefined") {
            var colorInput = $("<input type='color'/>")[0]; // if color element is supported, value will default to not null
            inputTypeColorSupport._cachedResult = colorInput.type === "color" && colorInput.value !== "";
        }
        return inputTypeColorSupport._cachedResult;
    };

    $.spectrum = { };
    $.spectrum.localization = { };
    $.spectrum.palettes = { };

    $.fn.spectrum.processNativeColorInputs = function () {
        var colorInputs = $("input[type=color]");
        if (colorInputs.length && !inputTypeColorSupport()) {
            colorInputs.spectrum({
                preferredFormat: "hex6"
            });
        }
    };

    // TinyColor v1.1.2
    // https://github.com/bgrins/TinyColor
    // Brian Grinstead, MIT License

    (function() {

    var trimLeft = /^[\s,#]+/,
        trimRight = /\s+$/,
        tinyCounter = 0,
        math = Math,
        mathRound = math.round,
        mathMin = math.min,
        mathMax = math.max,
        mathRandom = math.random;

    var tinycolor = function(color, opts) {

        color = (color) ? color : '';
        opts = opts || { };

        // If input is already a tinycolor, return itself
        if (color instanceof tinycolor) {
           return color;
        }
        // If we are called as a function, call using new instead
        if (!(this instanceof tinycolor)) {
            return new tinycolor(color, opts);
        }

        var rgb = inputToRGB(color);
        this._originalInput = color,
        this._r = rgb.r,
        this._g = rgb.g,
        this._b = rgb.b,
        this._a = rgb.a,
        this._roundA = mathRound(100*this._a) / 100,
        this._format = opts.format || rgb.format;
        this._gradientType = opts.gradientType;

        // Don't let the range of [0,255] come back in [0,1].
        // Potentially lose a little bit of precision here, but will fix issues where
        // .5 gets interpreted as half of the total, instead of half of 1
        // If it was supposed to be 128, this was already taken care of by `inputToRgb`
        if (this._r < 1) { this._r = mathRound(this._r); }
        if (this._g < 1) { this._g = mathRound(this._g); }
        if (this._b < 1) { this._b = mathRound(this._b); }

        this._ok = rgb.ok;
        this._tc_id = tinyCounter++;
    };

    tinycolor.prototype = {
        isDark: function() {
            return this.getBrightness() < 128;
        },
        isLight: function() {
            return !this.isDark();
        },
        isValid: function() {
            return this._ok;
        },
        getOriginalInput: function() {
          return this._originalInput;
        },
        getFormat: function() {
            return this._format;
        },
        getAlpha: function() {
            return this._a;
        },
        getBrightness: function() {
            var rgb = this.toRgb();
            return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;
        },
        setAlpha: function(value) {
            this._a = boundAlpha(value);
            this._roundA = mathRound(100*this._a) / 100;
            return this;
        },
        toHsv: function() {
            var hsv = rgbToHsv(this._r, this._g, this._b);
            return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };
        },
        toHsvString: function() {
            var hsv = rgbToHsv(this._r, this._g, this._b);
            var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);
            return (this._a == 1) ?
              "hsv("  + h + ", " + s + "%, " + v + "%)" :
              "hsva(" + h + ", " + s + "%, " + v + "%, "+ this._roundA + ")";
        },
        toHsl: function() {
            var hsl = rgbToHsl(this._r, this._g, this._b);
            return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };
        },
        toHslString: function() {
            var hsl = rgbToHsl(this._r, this._g, this._b);
            var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);
            return (this._a == 1) ?
              "hsl("  + h + ", " + s + "%, " + l + "%)" :
              "hsla(" + h + ", " + s + "%, " + l + "%, "+ this._roundA + ")";
        },
        toHex: function(allow3Char) {
            return rgbToHex(this._r, this._g, this._b, allow3Char);
        },
        toHexString: function(allow3Char) {
            return '#' + this.toHex(allow3Char);
        },
        toHex8: function() {
            return rgbaToHex(this._r, this._g, this._b, this._a);
        },
        toHex8String: function() {
            return '#' + this.toHex8();
        },
        toRgb: function() {
            return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };
        },
        toRgbString: function() {
            return (this._a == 1) ?
              "rgb("  + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ")" :
              "rgba(" + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ", " + this._roundA + ")";
        },
        toPercentageRgb: function() {
            return { r: mathRound(bound01(this._r, 255) * 100) + "%", g: mathRound(bound01(this._g, 255) * 100) + "%", b: mathRound(bound01(this._b, 255) * 100) + "%", a: this._a };
        },
        toPercentageRgbString: function() {
            return (this._a == 1) ?
              "rgb("  + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%)" :
              "rgba(" + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%, " + this._roundA + ")";
        },
        toName: function() {
            if (this._a === 0) {
                return "transparent";
            }

            if (this._a < 1) {
                return false;
            }

            return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;
        },
        toFilter: function(secondColor) {
            var hex8String = '#' + rgbaToHex(this._r, this._g, this._b, this._a);
            var secondHex8String = hex8String;
            var gradientType = this._gradientType ? "GradientType = 1, " : "";

            if (secondColor) {
                var s = tinycolor(secondColor);
                secondHex8String = s.toHex8String();
            }

            return "progid:DXImageTransform.Microsoft.gradient("+gradientType+"startColorstr="+hex8String+",endColorstr="+secondHex8String+")";
        },
        toString: function(format) {
            var formatSet = !!format;
            format = format || this._format;

            var formattedString = false;
            var hasAlpha = this._a < 1 && this._a >= 0;
            var needsAlphaFormat = !formatSet && hasAlpha && (format === "hex" || format === "hex6" || format === "hex3" || format === "name");

            if (needsAlphaFormat) {
                // Special case for "transparent", all other non-alpha formats
                // will return rgba when there is transparency.
                if (format === "name" && this._a === 0) {
                    return this.toName();
                }
                return this.toRgbString();
            }
            if (format === "rgb") {
                formattedString = this.toRgbString();
            }
            if (format === "prgb") {
                formattedString = this.toPercentageRgbString();
            }
            if (format === "hex" || format === "hex6") {
                formattedString = this.toHexString();
            }
            if (format === "hex3") {
                formattedString = this.toHexString(true);
            }
            if (format === "hex8") {
                formattedString = this.toHex8String();
            }
            if (format === "name") {
                formattedString = this.toName();
            }
            if (format === "hsl") {
                formattedString = this.toHslString();
            }
            if (format === "hsv") {
                formattedString = this.toHsvString();
            }

            return formattedString || this.toHexString();
        },

        _applyModification: function(fn, args) {
            var color = fn.apply(null, [this].concat([].slice.call(args)));
            this._r = color._r;
            this._g = color._g;
            this._b = color._b;
            this.setAlpha(color._a);
            return this;
        },
        lighten: function() {
            return this._applyModification(lighten, arguments);
        },
        brighten: function() {
            return this._applyModification(brighten, arguments);
        },
        darken: function() {
            return this._applyModification(darken, arguments);
        },
        desaturate: function() {
            return this._applyModification(desaturate, arguments);
        },
        saturate: function() {
            return this._applyModification(saturate, arguments);
        },
        greyscale: function() {
            return this._applyModification(greyscale, arguments);
        },
        spin: function() {
            return this._applyModification(spin, arguments);
        },

        _applyCombination: function(fn, args) {
            return fn.apply(null, [this].concat([].slice.call(args)));
        },
        analogous: function() {
            return this._applyCombination(analogous, arguments);
        },
        complement: function() {
            return this._applyCombination(complement, arguments);
        },
        monochromatic: function() {
            return this._applyCombination(monochromatic, arguments);
        },
        splitcomplement: function() {
            return this._applyCombination(splitcomplement, arguments);
        },
        triad: function() {
            return this._applyCombination(triad, arguments);
        },
        tetrad: function() {
            return this._applyCombination(tetrad, arguments);
        }
    };

    // If input is an object, force 1 into "1.0" to handle ratios properly
    // String input requires "1.0" as input, so 1 will be treated as 1
    tinycolor.fromRatio = function(color, opts) {
        if (typeof color == "object") {
            var newColor = {};
            for (var i in color) {
                if (color.hasOwnProperty(i)) {
                    if (i === "a") {
                        newColor[i] = color[i];
                    }
                    else {
                        newColor[i] = convertToPercentage(color[i]);
                    }
                }
            }
            color = newColor;
        }

        return tinycolor(color, opts);
    };

    // Given a string or object, convert that input to RGB
    // Possible string inputs:
    //
    //     "red"
    //     "#f00" or "f00"
    //     "#ff0000" or "ff0000"
    //     "#ff000000" or "ff000000"
    //     "rgb 255 0 0" or "rgb (255, 0, 0)"
    //     "rgb 1.0 0 0" or "rgb (1, 0, 0)"
    //     "rgba (255, 0, 0, 1)" or "rgba 255, 0, 0, 1"
    //     "rgba (1.0, 0, 0, 1)" or "rgba 1.0, 0, 0, 1"
    //     "hsl(0, 100%, 50%)" or "hsl 0 100% 50%"
    //     "hsla(0, 100%, 50%, 1)" or "hsla 0 100% 50%, 1"
    //     "hsv(0, 100%, 100%)" or "hsv 0 100% 100%"
    //
    function inputToRGB(color) {

        var rgb = { r: 0, g: 0, b: 0 };
        var a = 1;
        var ok = false;
        var format = false;

        if (typeof color == "string") {
            color = stringInputToObject(color);
        }

        if (typeof color == "object") {
            if (color.hasOwnProperty("r") && color.hasOwnProperty("g") && color.hasOwnProperty("b")) {
                rgb = rgbToRgb(color.r, color.g, color.b);
                ok = true;
                format = String(color.r).substr(-1) === "%" ? "prgb" : "rgb";
            }
            else if (color.hasOwnProperty("h") && color.hasOwnProperty("s") && color.hasOwnProperty("v")) {
                color.s = convertToPercentage(color.s);
                color.v = convertToPercentage(color.v);
                rgb = hsvToRgb(color.h, color.s, color.v);
                ok = true;
                format = "hsv";
            }
            else if (color.hasOwnProperty("h") && color.hasOwnProperty("s") && color.hasOwnProperty("l")) {
                color.s = convertToPercentage(color.s);
                color.l = convertToPercentage(color.l);
                rgb = hslToRgb(color.h, color.s, color.l);
                ok = true;
                format = "hsl";
            }

            if (color.hasOwnProperty("a")) {
                a = color.a;
            }
        }

        a = boundAlpha(a);

        return {
            ok: ok,
            format: color.format || format,
            r: mathMin(255, mathMax(rgb.r, 0)),
            g: mathMin(255, mathMax(rgb.g, 0)),
            b: mathMin(255, mathMax(rgb.b, 0)),
            a: a
        };
    }


    // Conversion Functions
    // --------------------

    // `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:
    // <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>

    // `rgbToRgb`
    // Handle bounds / percentage checking to conform to CSS color spec
    // <http://www.w3.org/TR/css3-color/>
    // *Assumes:* r, g, b in [0, 255] or [0, 1]
    // *Returns:* { r, g, b } in [0, 255]
    function rgbToRgb(r, g, b){
        return {
            r: bound01(r, 255) * 255,
            g: bound01(g, 255) * 255,
            b: bound01(b, 255) * 255
        };
    }

    // `rgbToHsl`
    // Converts an RGB color value to HSL.
    // *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]
    // *Returns:* { h, s, l } in [0,1]
    function rgbToHsl(r, g, b) {

        r = bound01(r, 255);
        g = bound01(g, 255);
        b = bound01(b, 255);

        var max = mathMax(r, g, b), min = mathMin(r, g, b);
        var h, s, l = (max + min) / 2;

        if(max == min) {
            h = s = 0; // achromatic
        }
        else {
            var d = max - min;
            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
            switch(max) {
                case r: h = (g - b) / d + (g < b ? 6 : 0); break;
                case g: h = (b - r) / d + 2; break;
                case b: h = (r - g) / d + 4; break;
            }

            h /= 6;
        }

        return { h: h, s: s, l: l };
    }

    // `hslToRgb`
    // Converts an HSL color value to RGB.
    // *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]
    // *Returns:* { r, g, b } in the set [0, 255]
    function hslToRgb(h, s, l) {
        var r, g, b;

        h = bound01(h, 360);
        s = bound01(s, 100);
        l = bound01(l, 100);

        function hue2rgb(p, q, t) {
            if(t < 0) t += 1;
            if(t > 1) t -= 1;
            if(t < 1/6) return p + (q - p) * 6 * t;
            if(t < 1/2) return q;
            if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;
            return p;
        }

        if(s === 0) {
            r = g = b = l; // achromatic
        }
        else {
            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
            var p = 2 * l - q;
            r = hue2rgb(p, q, h + 1/3);
            g = hue2rgb(p, q, h);
            b = hue2rgb(p, q, h - 1/3);
        }

        return { r: r * 255, g: g * 255, b: b * 255 };
    }

    // `rgbToHsv`
    // Converts an RGB color value to HSV
    // *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]
    // *Returns:* { h, s, v } in [0,1]
    function rgbToHsv(r, g, b) {

        r = bound01(r, 255);
        g = bound01(g, 255);
        b = bound01(b, 255);

        var max = mathMax(r, g, b), min = mathMin(r, g, b);
        var h, s, v = max;

        var d = max - min;
        s = max === 0 ? 0 : d / max;

        if(max == min) {
            h = 0; // achromatic
        }
        else {
            switch(max) {
                case r: h = (g - b) / d + (g < b ? 6 : 0); break;
                case g: h = (b - r) / d + 2; break;
                case b: h = (r - g) / d + 4; break;
            }
            h /= 6;
        }
        return { h: h, s: s, v: v };
    }

    // `hsvToRgb`
    // Converts an HSV color value to RGB.
    // *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]
    // *Returns:* { r, g, b } in the set [0, 255]
     function hsvToRgb(h, s, v) {

        h = bound01(h, 360) * 6;
        s = bound01(s, 100);
        v = bound01(v, 100);

        var i = math.floor(h),
            f = h - i,
            p = v * (1 - s),
            q = v * (1 - f * s),
            t = v * (1 - (1 - f) * s),
            mod = i % 6,
            r = [v, q, p, p, t, v][mod],
            g = [t, v, v, q, p, p][mod],
            b = [p, p, t, v, v, q][mod];

        return { r: r * 255, g: g * 255, b: b * 255 };
    }

    // `rgbToHex`
    // Converts an RGB color to hex
    // Assumes r, g, and b are contained in the set [0, 255]
    // Returns a 3 or 6 character hex
    function rgbToHex(r, g, b, allow3Char) {

        var hex = [
            pad2(mathRound(r).toString(16)),
            pad2(mathRound(g).toString(16)),
            pad2(mathRound(b).toString(16))
        ];

        // Return a 3 character hex if possible
        if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {
            return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);
        }

        return hex.join("");
    }
        // `rgbaToHex`
        // Converts an RGBA color plus alpha transparency to hex
        // Assumes r, g, b and a are contained in the set [0, 255]
        // Returns an 8 character hex
        function rgbaToHex(r, g, b, a) {

            var hex = [
                pad2(convertDecimalToHex(a)),
                pad2(mathRound(r).toString(16)),
                pad2(mathRound(g).toString(16)),
                pad2(mathRound(b).toString(16))
            ];

            return hex.join("");
        }

    // `equals`
    // Can be called with any tinycolor input
    tinycolor.equals = function (color1, color2) {
        if (!color1 || !color2) { return false; }
        return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();
    };
    tinycolor.random = function() {
        return tinycolor.fromRatio({
            r: mathRandom(),
            g: mathRandom(),
            b: mathRandom()
        });
    };


    // Modification Functions
    // ----------------------
    // Thanks to less.js for some of the basics here
    // <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>

    function desaturate(color, amount) {
        amount = (amount === 0) ? 0 : (amount || 10);
        var hsl = tinycolor(color).toHsl();
        hsl.s -= amount / 100;
        hsl.s = clamp01(hsl.s);
        return tinycolor(hsl);
    }

    function saturate(color, amount) {
        amount = (amount === 0) ? 0 : (amount || 10);
        var hsl = tinycolor(color).toHsl();
        hsl.s += amount / 100;
        hsl.s = clamp01(hsl.s);
        return tinycolor(hsl);
    }

    function greyscale(color) {
        return tinycolor(color).desaturate(100);
    }

    function lighten (color, amount) {
        amount = (amount === 0) ? 0 : (amount || 10);
        var hsl = tinycolor(color).toHsl();
        hsl.l += amount / 100;
        hsl.l = clamp01(hsl.l);
        return tinycolor(hsl);
    }

    function brighten(color, amount) {
        amount = (amount === 0) ? 0 : (amount || 10);
        var rgb = tinycolor(color).toRgb();
        rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));
        rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));
        rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));
        return tinycolor(rgb);
    }

    function darken (color, amount) {
        amount = (amount === 0) ? 0 : (amount || 10);
        var hsl = tinycolor(color).toHsl();
        hsl.l -= amount / 100;
        hsl.l = clamp01(hsl.l);
        return tinycolor(hsl);
    }

    // Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.
    // Values outside of this range will be wrapped into this range.
    function spin(color, amount) {
        var hsl = tinycolor(color).toHsl();
        var hue = (mathRound(hsl.h) + amount) % 360;
        hsl.h = hue < 0 ? 360 + hue : hue;
        return tinycolor(hsl);
    }

    // Combination Functions
    // ---------------------
    // Thanks to jQuery xColor for some of the ideas behind these
    // <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>

    function complement(color) {
        var hsl = tinycolor(color).toHsl();
        hsl.h = (hsl.h + 180) % 360;
        return tinycolor(hsl);
    }

    function triad(color) {
        var hsl = tinycolor(color).toHsl();
        var h = hsl.h;
        return [
            tinycolor(color),
            tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),
            tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })
        ];
    }

    function tetrad(color) {
        var hsl = tinycolor(color).toHsl();
        var h = hsl.h;
        return [
            tinycolor(color),
            tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),
            tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),
            tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })
        ];
    }

    function splitcomplement(color) {
        var hsl = tinycolor(color).toHsl();
        var h = hsl.h;
        return [
            tinycolor(color),
            tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),
            tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})
        ];
    }

    function analogous(color, results, slices) {
        results = results || 6;
        slices = slices || 30;

        var hsl = tinycolor(color).toHsl();
        var part = 360 / slices;
        var ret = [tinycolor(color)];

        for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {
            hsl.h = (hsl.h + part) % 360;
            ret.push(tinycolor(hsl));
        }
        return ret;
    }

    function monochromatic(color, results) {
        results = results || 6;
        var hsv = tinycolor(color).toHsv();
        var h = hsv.h, s = hsv.s, v = hsv.v;
        var ret = [];
        var modification = 1 / results;

        while (results--) {
            ret.push(tinycolor({ h: h, s: s, v: v}));
            v = (v + modification) % 1;
        }

        return ret;
    }

    // Utility Functions
    // ---------------------

    tinycolor.mix = function(color1, color2, amount) {
        amount = (amount === 0) ? 0 : (amount || 50);

        var rgb1 = tinycolor(color1).toRgb();
        var rgb2 = tinycolor(color2).toRgb();

        var p = amount / 100;
        var w = p * 2 - 1;
        var a = rgb2.a - rgb1.a;

        var w1;

        if (w * a == -1) {
            w1 = w;
        } else {
            w1 = (w + a) / (1 + w * a);
        }

        w1 = (w1 + 1) / 2;

        var w2 = 1 - w1;

        var rgba = {
            r: rgb2.r * w1 + rgb1.r * w2,
            g: rgb2.g * w1 + rgb1.g * w2,
            b: rgb2.b * w1 + rgb1.b * w2,
            a: rgb2.a * p  + rgb1.a * (1 - p)
        };

        return tinycolor(rgba);
    };


    // Readability Functions
    // ---------------------
    // <http://www.w3.org/TR/AERT#color-contrast>

    // `readability`
    // Analyze the 2 colors and returns an object with the following properties:
    //    `brightness`: difference in brightness between the two colors
    //    `color`: difference in color/hue between the two colors
    tinycolor.readability = function(color1, color2) {
        var c1 = tinycolor(color1);
        var c2 = tinycolor(color2);
        var rgb1 = c1.toRgb();
        var rgb2 = c2.toRgb();
        var brightnessA = c1.getBrightness();
        var brightnessB = c2.getBrightness();
        var colorDiff = (
            Math.max(rgb1.r, rgb2.r) - Math.min(rgb1.r, rgb2.r) +
            Math.max(rgb1.g, rgb2.g) - Math.min(rgb1.g, rgb2.g) +
            Math.max(rgb1.b, rgb2.b) - Math.min(rgb1.b, rgb2.b)
        );

        return {
            brightness: Math.abs(brightnessA - brightnessB),
            color: colorDiff
        };
    };

    // `readable`
    // http://www.w3.org/TR/AERT#color-contrast
    // Ensure that foreground and background color combinations provide sufficient contrast.
    // *Example*
    //    tinycolor.isReadable("#000", "#111") => false
    tinycolor.isReadable = function(color1, color2) {
        var readability = tinycolor.readability(color1, color2);
        return readability.brightness > 125 && readability.color > 500;
    };

    // `mostReadable`
    // Given a base color and a list of possible foreground or background
    // colors for that base, returns the most readable color.
    // *Example*
    //    tinycolor.mostReadable("#123", ["#fff", "#000"]) => "#000"
    tinycolor.mostReadable = function(baseColor, colorList) {
        var bestColor = null;
        var bestScore = 0;
        var bestIsReadable = false;
        for (var i=0; i < colorList.length; i++) {

            // We normalize both around the "acceptable" breaking point,
            // but rank brightness constrast higher than hue.

            var readability = tinycolor.readability(baseColor, colorList[i]);
            var readable = readability.brightness > 125 && readability.color > 500;
            var score = 3 * (readability.brightness / 125) + (readability.color / 500);

            if ((readable && ! bestIsReadable) ||
                (readable && bestIsReadable && score > bestScore) ||
                ((! readable) && (! bestIsReadable) && score > bestScore)) {
                bestIsReadable = readable;
                bestScore = score;
                bestColor = tinycolor(colorList[i]);
            }
        }
        return bestColor;
    };


    // Big List of Colors
    // ------------------
    // <http://www.w3.org/TR/css3-color/#svg-color>
    var names = tinycolor.names = {
        aliceblue: "f0f8ff",
        antiquewhite: "faebd7",
        aqua: "0ff",
        aquamarine: "7fffd4",
        azure: "f0ffff",
        beige: "f5f5dc",
        bisque: "ffe4c4",
        black: "000",
        blanchedalmond: "ffebcd",
        blue: "00f",
        blueviolet: "8a2be2",
        brown: "a52a2a",
        burlywood: "deb887",
        burntsienna: "ea7e5d",
        cadetblue: "5f9ea0",
        chartreuse: "7fff00",
        chocolate: "d2691e",
        coral: "ff7f50",
        cornflowerblue: "6495ed",
        cornsilk: "fff8dc",
        crimson: "dc143c",
        cyan: "0ff",
        darkblue: "00008b",
        darkcyan: "008b8b",
        darkgoldenrod: "b8860b",
        darkgray: "a9a9a9",
        darkgreen: "006400",
        darkgrey: "a9a9a9",
        darkkhaki: "bdb76b",
        darkmagenta: "8b008b",
        darkolivegreen: "556b2f",
        darkorange: "ff8c00",
        darkorchid: "9932cc",
        darkred: "8b0000",
        darksalmon: "e9967a",
        darkseagreen: "8fbc8f",
        darkslateblue: "483d8b",
        darkslategray: "2f4f4f",
        darkslategrey: "2f4f4f",
        darkturquoise: "00ced1",
        darkviolet: "9400d3",
        deeppink: "ff1493",
        deepskyblue: "00bfff",
        dimgray: "696969",
        dimgrey: "696969",
        dodgerblue: "1e90ff",
        firebrick: "b22222",
        floralwhite: "fffaf0",
        forestgreen: "228b22",
        fuchsia: "f0f",
        gainsboro: "dcdcdc",
        ghostwhite: "f8f8ff",
        gold: "ffd700",
        goldenrod: "daa520",
        gray: "808080",
        green: "008000",
        greenyellow: "adff2f",
        grey: "808080",
        honeydew: "f0fff0",
        hotpink: "ff69b4",
        indianred: "cd5c5c",
        indigo: "4b0082",
        ivory: "fffff0",
        khaki: "f0e68c",
        lavender: "e6e6fa",
        lavenderblush: "fff0f5",
        lawngreen: "7cfc00",
        lemonchiffon: "fffacd",
        lightblue: "add8e6",
        lightcoral: "f08080",
        lightcyan: "e0ffff",
        lightgoldenrodyellow: "fafad2",
        lightgray: "d3d3d3",
        lightgreen: "90ee90",
        lightgrey: "d3d3d3",
        lightpink: "ffb6c1",
        lightsalmon: "ffa07a",
        lightseagreen: "20b2aa",
        lightskyblue: "87cefa",
        lightslategray: "789",
        lightslategrey: "789",
        lightsteelblue: "b0c4de",
        lightyellow: "ffffe0",
        lime: "0f0",
        limegreen: "32cd32",
        linen: "faf0e6",
        magenta: "f0f",
        maroon: "800000",
        mediumaquamarine: "66cdaa",
        mediumblue: "0000cd",
        mediumorchid: "ba55d3",
        mediumpurple: "9370db",
        mediumseagreen: "3cb371",
        mediumslateblue: "7b68ee",
        mediumspringgreen: "00fa9a",
        mediumturquoise: "48d1cc",
        mediumvioletred: "c71585",
        midnightblue: "191970",
        mintcream: "f5fffa",
        mistyrose: "ffe4e1",
        moccasin: "ffe4b5",
        navajowhite: "ffdead",
        navy: "000080",
        oldlace: "fdf5e6",
        olive: "808000",
        olivedrab: "6b8e23",
        orange: "ffa500",
        orangered: "ff4500",
        orchid: "da70d6",
        palegoldenrod: "eee8aa",
        palegreen: "98fb98",
        paleturquoise: "afeeee",
        palevioletred: "db7093",
        papayawhip: "ffefd5",
        peachpuff: "ffdab9",
        peru: "cd853f",
        pink: "ffc0cb",
        plum: "dda0dd",
        powderblue: "b0e0e6",
        purple: "800080",
        rebeccapurple: "663399",
        red: "f00",
        rosybrown: "bc8f8f",
        royalblue: "4169e1",
        saddlebrown: "8b4513",
        salmon: "fa8072",
        sandybrown: "f4a460",
        seagreen: "2e8b57",
        seashell: "fff5ee",
        sienna: "a0522d",
        silver: "c0c0c0",
        skyblue: "87ceeb",
        slateblue: "6a5acd",
        slategray: "708090",
        slategrey: "708090",
        snow: "fffafa",
        springgreen: "00ff7f",
        steelblue: "4682b4",
        tan: "d2b48c",
        teal: "008080",
        thistle: "d8bfd8",
        tomato: "ff6347",
        turquoise: "40e0d0",
        violet: "ee82ee",
        wheat: "f5deb3",
        white: "fff",
        whitesmoke: "f5f5f5",
        yellow: "ff0",
        yellowgreen: "9acd32"
    };

    // Make it easy to access colors via `hexNames[hex]`
    var hexNames = tinycolor.hexNames = flip(names);


    // Utilities
    // ---------

    // `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`
    function flip(o) {
        var flipped = { };
        for (var i in o) {
            if (o.hasOwnProperty(i)) {
                flipped[o[i]] = i;
            }
        }
        return flipped;
    }

    // Return a valid alpha value [0,1] with all invalid values being set to 1
    function boundAlpha(a) {
        a = parseFloat(a);

        if (isNaN(a) || a < 0 || a > 1) {
            a = 1;
        }

        return a;
    }

    // Take input from [0, n] and return it as [0, 1]
    function bound01(n, max) {
        if (isOnePointZero(n)) { n = "100%"; }

        var processPercent = isPercentage(n);
        n = mathMin(max, mathMax(0, parseFloat(n)));

        // Automatically convert percentage into number
        if (processPercent) {
            n = parseInt(n * max, 10) / 100;
        }

        // Handle floating point rounding errors
        if ((math.abs(n - max) < 0.000001)) {
            return 1;
        }

        // Convert into [0, 1] range if it isn't already
        return (n % max) / parseFloat(max);
    }

    // Force a number between 0 and 1
    function clamp01(val) {
        return mathMin(1, mathMax(0, val));
    }

    // Parse a base-16 hex value into a base-10 integer
    function parseIntFromHex(val) {
        return parseInt(val, 16);
    }

    // Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1
    // <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>
    function isOnePointZero(n) {
        return typeof n == "string" && n.indexOf('.') != -1 && parseFloat(n) === 1;
    }

    // Check to see if string passed in is a percentage
    function isPercentage(n) {
        return typeof n === "string" && n.indexOf('%') != -1;
    }

    // Force a hex value to have 2 characters
    function pad2(c) {
        return c.length == 1 ? '0' + c : '' + c;
    }

    // Replace a decimal with it's percentage value
    function convertToPercentage(n) {
        if (n <= 1) {
            n = (n * 100) + "%";
        }

        return n;
    }

    // Converts a decimal to a hex value
    function convertDecimalToHex(d) {
        return Math.round(parseFloat(d) * 255).toString(16);
    }
    // Converts a hex value to a decimal
    function convertHexToDecimal(h) {
        return (parseIntFromHex(h) / 255);
    }

    var matchers = (function() {

        // <http://www.w3.org/TR/css3-values/#integers>
        var CSS_INTEGER = "[-\\+]?\\d+%?";

        // <http://www.w3.org/TR/css3-values/#number-value>
        var CSS_NUMBER = "[-\\+]?\\d*\\.\\d+%?";

        // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.
        var CSS_UNIT = "(?:" + CSS_NUMBER + ")|(?:" + CSS_INTEGER + ")";

        // Actual matching.
        // Parentheses and commas are optional, but not required.
        // Whitespace can take the place of commas or opening paren
        var PERMISSIVE_MATCH3 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
        var PERMISSIVE_MATCH4 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";

        return {
            rgb: new RegExp("rgb" + PERMISSIVE_MATCH3),
            rgba: new RegExp("rgba" + PERMISSIVE_MATCH4),
            hsl: new RegExp("hsl" + PERMISSIVE_MATCH3),
            hsla: new RegExp("hsla" + PERMISSIVE_MATCH4),
            hsv: new RegExp("hsv" + PERMISSIVE_MATCH3),
            hsva: new RegExp("hsva" + PERMISSIVE_MATCH4),
            hex3: /^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
            hex6: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
            hex8: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
        };
    })();

    // `stringInputToObject`
    // Permissive string parsing.  Take in a number of formats, and output an object
    // based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`
    function stringInputToObject(color) {

        color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();
        var named = false;
        if (names[color]) {
            color = names[color];
            named = true;
        }
        else if (color == 'transparent') {
            return { r: 0, g: 0, b: 0, a: 0, format: "name" };
        }

        // Try to match string input using regular expressions.
        // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]
        // Just return an object and let the conversion functions handle that.
        // This way the result will be the same whether the tinycolor is initialized with string or object.
        var match;
        if ((match = matchers.rgb.exec(color))) {
            return { r: match[1], g: match[2], b: match[3] };
        }
        if ((match = matchers.rgba.exec(color))) {
            return { r: match[1], g: match[2], b: match[3], a: match[4] };
        }
        if ((match = matchers.hsl.exec(color))) {
            return { h: match[1], s: match[2], l: match[3] };
        }
        if ((match = matchers.hsla.exec(color))) {
            return { h: match[1], s: match[2], l: match[3], a: match[4] };
        }
        if ((match = matchers.hsv.exec(color))) {
            return { h: match[1], s: match[2], v: match[3] };
        }
        if ((match = matchers.hsva.exec(color))) {
            return { h: match[1], s: match[2], v: match[3], a: match[4] };
        }
        if ((match = matchers.hex8.exec(color))) {
            return {
                a: convertHexToDecimal(match[1]),
                r: parseIntFromHex(match[2]),
                g: parseIntFromHex(match[3]),
                b: parseIntFromHex(match[4]),
                format: named ? "name" : "hex8"
            };
        }
        if ((match = matchers.hex6.exec(color))) {
            return {
                r: parseIntFromHex(match[1]),
                g: parseIntFromHex(match[2]),
                b: parseIntFromHex(match[3]),
                format: named ? "name" : "hex"
            };
        }
        if ((match = matchers.hex3.exec(color))) {
            return {
                r: parseIntFromHex(match[1] + '' + match[1]),
                g: parseIntFromHex(match[2] + '' + match[2]),
                b: parseIntFromHex(match[3] + '' + match[3]),
                format: named ? "name" : "hex"
            };
        }

        return false;
    }

    window.tinycolor = tinycolor;
    })();

    $(function () {
        if ($.fn.spectrum.load) {
            $.fn.spectrum.processNativeColorInputs();
        }
    });

});
(function() {
  var backToRegion, openCountryPopup;

  openCountryPopup = function(e) {
    var container, region, target;
    e.preventDefault();
    target = $(e.target);
    container = target.closest('.container-js');
    region = target.data('region');
    $.ajax({
      url: target.attr('href'),
      data: {},
      success: function(response) {
        container.find('a.collapse-country-link, ul#collapse_' + region).hide();
        container.prepend(response);
        return container.find('.back-to-regions').on('click', backToRegion);
      },
      dataType: 'html'
    });
    return false;
  };

  backToRegion = function(e) {
    var container, region, target;
    if (e.target.tagName === 'button') {
      target = $(e.target);
    } else {
      target = $(e.target).closest('button');
    }
    container = target.closest('.container-js');
    region = target.data('region');
    container.find('.container').remove();
    return container.find('a.collapse-country-link, ul#collapse_' + region).show();
  };

  $(function() {
    return $('.open-country-popup-js a').on('click', openCountryPopup);
  });

}).call(this);
// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, or any plugin's
// vendor/assets/javascripts directory can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// compiled file. JavaScript code in this file should be added after the last require_* statement.
//
// Read Sprockets README (https://github.com/rails/sprockets#sprockets-directives) for details
// about supported directives.
//

// require turbolinks












// set default time zone offset
$(function(){
  if (!Cookies.get('time_zone_offset')) {
    Cookies.set('time_zone_offset', moment().utcOffset()/60);
  }
});

// sidebar wrapper
$(function(){
  $('body').on('click', '.sidebar-toggle, .wc-btn', function(){
    $('.wrapper').toggleClass('toggled');
    return false;
  });
});

// light/dark theme switcher
$(function(){
  $('.nav.theme').on('click', 'a', function(){
    var new_theme = 'dark';
    var isLightClicked = $(this).hasClass('light-theme');

    if (isLightClicked) { new_theme = 'light'; }

    $('.nav.theme li').removeClass('active');
    $(this).parent('li').addClass('active');

    $('body').attr('class', new_theme);
    Cookies.set('current_theme', new_theme);

    return false;
  })
});






